<?php

namespace app\api\controller;

use Decode\Decode\Decode;
use phpmail\Phpmailer;
use think\Controller;
use think\Db;
use think\Session;
use think\Request;
use think\Exception;
use think\cache\driver\Redis;

use Aliyun\Core\Config;
use Aliyun\Core\Profile\DefaultProfile;
use Aliyun\Core\DefaultAcsClient;
use Aliyun\Api\Sms\Request\V20170525\SendSmsRequest;

class Wxapps extends Controller
{
    function GetRediscon()
    {
        return require(__DIR__ . '/../../rediscon.php');
    }

    public function doPageBdAppbase()
    {
        $uniacid = input('uniacid');
        $code = input('code');
        $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->find();
        $appkey = $app['baidu_appkey'];
        $appsecret = $app['baidu_appSecret'];
        $post_data = array(
            'code' => $code,
            'client_id' => $appkey,
            'sk' => $appsecret,
        );
        $url = "https://openapi.baidu.com/nalogin/getSessionKeyByCode";
        $weixin = $this->_requestPost($url, $post_data);
        $jsondecode = json_decode($weixin); //对JSON格式的字符串进行编码
        $array = get_object_vars($jsondecode);//转换成数组

        if (isset($array['errcode'])) {
            $data['res'] = 2;
            $result['data'] = $data;
            return json_encode($result);
            exit;
        }

        $openid = $array['openid'];//输出openid
        if ($openid) {
            $data = array(
                "uniacid" => $uniacid,
                "openid" => $openid,
                "createtime" => time()
            );
            //1.判断openid是否存在于数据库
            $user = Db::name('wd_xcx_baidu_user')->where('openid', $openid)->where('uniacid', $uniacid)->find();
            if (!$user) {
                Db::name('wd_xcx_baidu_user')->insert($data);
                $data['res'] = 1;
                $rdata = Db::name('wd_xcx_baidu_user')->where('openid', $openid)->where('uniacid', $uniacid)->find();
                $res['data'] = $rdata;
                return json_encode($res);
            } else {
                $adata['data'] = $user;
                return json_encode($adata);
            }
        } else {
            var_dump($weixin);
        }
    }

    public function dopageBaiDuUpdate()
    {
        $uniacid = input('uniacid');
        $openid = input('openid');
        $avatar = input('avatar');
        $nickName = input('nickName');
        $gender = input('gender');

        $data = [
            'avatar' => $avatar,
            'nickname' => $nickName,
            'gender' => $gender
        ];

        $res = Db::name('wd_xcx_baidu_user')->where('uniacid', $uniacid)->where('openid', $openid)->update($data);
        if ($res) {
            $rdata = Db::name('wd_xcx_baidu_user')->where('uniacid', $uniacid)->where('openid', $openid)->find();
            return json_encode($rdata);
        } else {
            $rdata = 0;
            return json_encode($rdata);
        }
    }
    // function isWxClient(){
    //     $user_agent = $_SERVER['HTTP_USER_AGENT'];
    //     if (strpos($user_agent, 'MicroMessenger') === false) {
    //         return false;
    //     }else{
    //         return true;
    //     }
    // }
    /*Diy方法开始*/
    public function doPagehomepage()
    {
        // $user_agent = $this->isWxClient();
        $uniacid = input("uniacid");
        $source = input('source');

        //判断项目有没有过期
        $end_time = Db::name('wd_xcx_applet')->where('id', $uniacid)->field('type')->find();
        if(time() > $end_time){
            $result['data'] = -1;
            return json_encode($result);
        }

        //include ROOT_PATH.'application/index/controller/Ordinary.php';
       // $or = new \Ordinary();
        //$license = $or ->checkPlat();
        //1微信 2支付宝 3H5 4百度 5头条 6QQ
//        if(($source == 2 && !$license['ali']) || ($source == 5 && !$license['byte']) || ($source == 6 && !$license['qq'])){
//           $result['data'] = -1;
//           return json_encode($result);
//        }
//
//        if($source == 3 && !$license['h5']){
//            $result['auth'] = -1;
//        }

        if($source == 2 || $source == 5 || $source == 6){
            $result['data'] = -1;
            return json_encode($result);
        }

        if($source == 3){
            $result['auth'] = -1;
        }

        //判断是否有权限使用
        $type = Db::name('wd_xcx_applet')->where('id', $uniacid)->field('type')->find();
        
        $type = unserialize($type['type']); //0微信 1百度 2支付宝 3PC 4H5 5字节跳动 6QQ

        if($source == 1){//1微信-0     6QQ
            if(!in_array(0, $type)){
                $result['data'] = -1;
                return json_encode($result);
            } 
        }else if($source == 2){ // 2支付宝-2
            if(!in_array(2, $type)){
                $result['data'] = -1;
                return json_encode($result);
            }
        }else if($source == 3){ //3H5 -4
            if(!in_array(4, $type)){
                $result['auth'] = -1;
            }
        }else if($source == 4){  // 4百度 -1
            if(!in_array(1, $type)){
                $result['data'] = -1;
                return json_encode($result);
            } 
        }else if($source == 5){ // 5字节跳动 -5
            if(!in_array(5, $type)){
                $result['data'] = -1;
                return json_encode($result);
            }
        }else if($source == 6){ // 6 QQ -6
            if(!in_array(6, $type)){
                $result['data'] = -1;
                return json_encode($result);
            }
        }


        $res = Db::name('wd_xcx_base')->where("uniacid", $uniacid)->field("homepage")->find();
        if (!$res) {
            $res['homepage'] = 1;
        }
        $prefix = config('database.prefix');
        Db::execute("UPDATE {$prefix}wd_xcx_base set visitnum = visitnum + 1 where uniacid = " . $uniacid);

        //找到使用的模板
        $tplinfo = Db::name('wd_xcx_diypagetpl')->where("uniacid", $uniacid)->where("status", 1)->find();
        $pageids = explode(",", $tplinfo['pageid']);
        if ($tplinfo) {
            $pageid = Db::name('wd_xcx_diypage')->where("uniacid", $uniacid)->where("id", "in", $pageids)->where("index", 1)->field("id")->find();
        } else {
            $pageid = Db::name('wd_xcx_diypage')->where("uniacid", $uniacid)->where("index", 1)->field("id")->find();
        }
        $foot = Db::name('wd_xcx_diypageset')->where("uniacid", $uniacid)->field("foot_is")->find();
        if ($pageid) {
            $res['pageid'] = $pageid['id'];
        } else {
            $res['pageid'] = 0;
        }
        $res['foot_is'] = $foot['foot_is'] ? $foot['foot_is'] : 1;
        // $res['user_agent'] = $user_agent;
        $result['data'] = $res;
        return json_encode($result);
    }

    private function emoji_encode($nickname)
    {
        $strEncode = '';
        $length = mb_strlen($nickname, 'utf-8');
        for ($i = 0; $i < $length; $i++) {
            $_tmpStr = mb_substr($nickname, $i, 1, 'utf-8');
            if (strlen($_tmpStr) >= 4) {
                $strEncode .= rawurlencode($_tmpStr);
            } else {
                $strEncode .= $_tmpStr;
            }
        }
        return $strEncode;
    }

    private function hex2rgb($hexColor){
        $color=str_replace('#','',$hexColor);
        if (strlen($color)> 3){
            $rgb=array(
                'r'=>hexdec(substr($color,0,2)),
                'g'=>hexdec(substr($color,2,2)),
                'b'=>hexdec(substr($color,4,2))
            );
        }else{
            $r=substr($color,0,1). substr($color,0,1);
            $g=substr($color,1,1). substr($color,1,1);
            $b=substr($color,2,1). substr($color,2,1);
            $rgb=array(
                'r'=>hexdec($r),
                'g'=>hexdec($g),
                'b'=>hexdec($b)
            );
        }
        return $rgb;
    }

    public function dopageGetitems()
    {
        $uniacid = input("uniacid");
        $pageid = input("pageid");
        $source = input("source");
        $foot = Db::name('wd_xcx_diypageset')->where("uniacid", $uniacid)->field("foot_is")->find();
        $tplinfo = Db::name('wd_xcx_diypagetpl')->where("uniacid", $uniacid)->where("status", 1)->find();
        $pageids = explode(",", $tplinfo['pageid']);
        if (!in_array($pageid, $pageids)) {
            $err = array();
            $err['data'] = 3;
            return json_encode($err);
            exit;
        }

        //include ROOT_PATH.'application/index/controller/Ordinary.php';
       // $or = new \Ordinary();
        //$license = $or ->checkPlat();
        //1微信 2支付宝 3H5 4百度 5头条 6QQ
        $auth = 1;
//        if($source == 3 && !$license['h5']){
//            $auth = -1;
//        }
        if($source == 3){
            $auth = -1;
        }

        //判断是否有权限使用
        $type = Db::name('wd_xcx_applet')->where('id', $uniacid)->field('type')->find();

        $type = unserialize($type['type']); //0微信 1百度 2支付宝 3PC 4H5 5字节跳动 6QQ

        if($source == 3){ //3H5 -4
            if(!in_array(4, $type)){
                $auth = -1;
            }
        }


        $data = Db::name('wd_xcx_diypage')->where("id", $pageid)->where("uniacid", $uniacid)->find();
        if($data['items']){
            $data['items'] = array_values(unserialize($data['items']));
            foreach ($data['items'] as $k => &$v) {
                if (isset($v['id'])) {
                    if ($v['id'] == 'title2' || $v['id'] == 'title' || $v['id'] == 'line' || $v['id'] == 'blank' || $v['id'] == 'anniu' || $v['id'] == 'notice' || $v['id'] == 'service' || $v['id'] == 'listmenu' || $v['id'] == 'joblist' || $v['id'] == 'personlist' || $v['id'] == 'msmk' || $v['id'] == 'multiple' || $v['id'] == 'mlist' || $v['id'] == 'goods' || $v['id'] == 'tabbar' || $v['id'] == 'cases' || $v['id'] == 'listdesc' || $v['id'] == 'pt' || $v['id'] == 'dt' || $v['id'] == 'ssk' || $v['id'] == 'yhq' || $v['id'] == 'dnfw' || $v['id'] == 'yuyin' || $v['id'] == 'feedback' || $v['id'] == 'reserve' || $v['id'] == 'bargain' || $v['id'] == 'yhqgoods' || $v['id'] == 'xnlf') {
                        if ($v['params']['backgroundimg'] != "") {
                            $v['params']['backgroundimg'] = remote($uniacid, $v['params']['backgroundimg'], 1);
                        }
                    } else if ($v['id'] == 'bigimg' || $v['id'] == 'classfit' || $v['id'] == 'banner' || $v['id'] == 'menu' || $v['id'] == 'picture' || $v['id'] == 'picturew') {

                        if ($v['params']['backgroundimg'] != "") {
                            $v['params']['backgroundimg'] = remote($uniacid, $v['params']['backgroundimg'], 1);
                        }

                        if ($v['data']) {
                            foreach ($v['data'] as $ki => $vi) {
                                if ($vi['imgurl'] != "") {
                                    if (strpos($vi['imgurl'], "diypage/resource") != false) {
                                        $v['data'][$ki]['imgurl'] = ROOT_HOST . $vi['imgurl'];
                                    } else {
                                        $v['data'][$ki]['imgurl'] = remote($uniacid, $vi['imgurl'], 1);
                                    }
                                }
                            }
                        }
                    } else if ($v['id'] == 'contact') {
                        if ($v['params']['backgroundimg'] != "") {
                            $v['params']['backgroundimg'] = remote($uniacid, $v['params']['backgroundimg'], 1);
                        }
                        if ($v['params']['src'] != "") {
                            if (strpos($v['params']['src'], "diypage/resource") !== false) {
                                $v['params']['src'] = ROOT_HOST . $v['params']['src'];
                            } else {
                                $v['params']['src'] = remote($uniacid, $v['params']['src'], 1);
                            }
                        }
                        if ($v['params']['ewm'] != "") {
                            if (strpos($v['params']['ewm'], "diypage/resource") !== false) {
                                $v['params']['ewm'] = ROOT_HOST . $v['params']['ewm'];
                            } else {
                                $v['params']['ewm'] = remote($uniacid, $v['params']['ewm'], 1);
                            }
                        }
                    } else if ($v['id'] == 'video') {
                        if (isset($v['params']['backgroundimg']) && $v['params']['backgroundimg'] != "") {
                            $v['params']['backgroundimg'] = remote($uniacid, $v['params']['backgroundimg'], 1);
                        }
                        if ($v['params']['poster'] != "") {
                            if (strpos($v['params']['poster'], "diypage/resource") !== false) {
                                $v['params']['poster'] = ROOT_HOST . $v['params']['poster'];
                            } else {
                                $v['params']['poster'] = remote($uniacid, $v['params']['poster'], 1);
                            }
                        }
                    } else if ($v['id'] == 'logo' || $v['id'] == 'dp') {
                        if ($v['params']['backgroundimg'] != "") {
                            $v['params']['backgroundimg'] = remote($uniacid, $v['params']['backgroundimg'], 1);
                        }
                        if ($v['params']['src'] != "") {
                            if (strpos($v['params']['src'], "diypage/resource") !== false) {
                                $v['params']['src'] = ROOT_HOST . $v['params']['src'];
                            } else {
                                $v['params']['src'] = remote($uniacid, $v['params']['src'], 1);
                            }
                        }
                        if (!$v['params']['phonenum']) {
                            $v['params']['phonenum'] = Db::name('wd_xcx_base')->where('uniacid', $uniacid)->field('tel')->find()['tel'];
                        }

                    }

                    if ($v['id'] == "banner") {
                        $v['data'] = array_values($v['data']);
                        if (!isset($v['params']['imgh'])) {
                            $v['params']['imgh'] = '200';
                        }
                        $baccolor = $this->hex2rgb($v['style']['background']);
                        $v['style']['background'] = $baccolor;
                    } else if ($v['id'] == "richtext") {
                        $v['richtext'] = base64_decode($v['params']['content']);
                        if (strpos($v['richtext'], '<img src="') !== false) {
                            if (strpos($v['richtext'], 'http') === false) {
                                $v['richtext'] = str_replace('<img src="', '<img src="' . ROOT_HOST, $v['richtext']);
                            }
                        }
                    } else if ($v['id'] == "menu") {
                        $menuInfo = [];
                        foreach ($v['data'] as $ky => $vy) {
                            if (isset($vy['linktype'])) {
                                if ($vy['linktype'] == 'mini') {
                                    if (strpos($vy['linkurl'], ",") !== false) {
                                        $link = explode(",", $vy['linkurl']);
                                        $v['data'][$ky]['linkurl'] = substr($link[0], 6);
                                        $v['data'][$ky]['pageurl'] = substr($link[1], 9);
                                    } else {
                                        $v['data'][$ky]['linkurl'] = substr($data['items'][$k]['data'][$ky]['linkurl'], 6);
                                        $v['data'][$ky]['pageurl'] = "";
                                    }
                                }
                            }
                            array_push($menuInfo, $v['data'][$ky]);

                        }
                        $v['menu_info'] = $menuInfo;
                    }else if ($v['id'] == "menu2") {
                        $count = count($v['data']);
                        $data['items'][$k]['count'] = $count;
                        $menu2Info = [];
                        foreach ($v['data'] as $ky => $vy) {
                            if (isset($vy['linktype'])) {
                                if ($vy['linktype'] == 'mini') {
                                    if (strpos($vy['linkurl'], ",") !== false) {
                                        $link = explode(",", $vy['linkurl']);
                                        $vy['linkurl'] = substr($link[0], 6);
                                        $vy['pageurl'] = substr($link[1], 9);
                                    } else {
                                        $vy['linkurl'] = substr($data['items'][$k]['data'][$ky]['linkurl'], 6);
                                        $vy['pageurl'] = "";
                                    }
                                }
                            }
                            array_push($menu2Info, $v['data'][$ky]);
                        }
                        $v['menu2_info'] = $menu2Info;
                    } else if ($v['id'] == "picturew") {
                        $count = count($v['data']);
                        $data['items'][$k]['count'] = $count;
                        if ($v['params']['row'] == 1) {
                            for ($i = 0; $i <= $count; $i++) {
                                $data['items'][$k]['data'] = array_values($v['data']);
                            }
                        } else {
                            $v['data'] = array_values($v['data']);
                        }
                    }else if ($v['id'] == "tabbar") {
                        $datas = array();
                        $i = 0;
                        foreach ($v['data'] as $kk => $vv) {
                            $data['items'][$k]['datas'][$i] = $vv;
                            $i++;
                        }
                        $count = count($v['data']);
                        $data['items'][$k]['count'] = $count;
                    }else if($v['id'] == "ddlb"){
                        $baccolor = $this->hex2rgb($v['style']['background']);
                        $v['style']['background'] = $baccolor;
                    }
                }
            }
        }

        $data['foot'] = $foot['foot_is'] ? $foot['foot_is'] : 1;
        if ($data['page'] != '') {
            $data['page'] = unserialize($data['page']);
            if (isset($data['page']['url']) && $data['page']['url'] != "") {
                $data['page']['url'] = remote($uniacid, $data['page']['url'], 1);
            }
        }

        $pageset = Db::name("wd_xcx_diypageset")->where("uniacid", $uniacid)->find();
        if ($pageset) {
            if (strpos($pageset['kp'], 'http') === false) {
                $pageset['kp'] = remote($uniacid, $pageset['kp'], 1);
            }
            if (strpos($pageset['tc'], 'http') === false) {
                $pageset['tc'] = remote($uniacid, $pageset['tc'], 1);
            }
        } else {
            $pageset['kp'] = "";
            $pageset['tc'] = "";
        }
        $data['auth'] = $auth;

        $data['pageset'] = $pageset;
        $result['data'] = $data;
        return json_encode($result);
    }


    public function doPageDiypage()
    {
        $uniacid = input("uniacid");
        $pageid = input("pageid");
        $source = input("source");
        $foot = Db::name('wd_xcx_diypageset')->where("uniacid", $uniacid)->field("foot_is")->find();
        $tplinfo = Db::name('wd_xcx_diypagetpl')->where("uniacid", $uniacid)->where("status", 1)->find();
        $pageids = explode(",", $tplinfo['pageid']);
        if (!in_array($pageid, $pageids)) {
            $err = array();
            $err['data'] = 3;
            return json_encode($err);
            exit;
        }
        $data = Db::name('wd_xcx_diypage')->where("id", $pageid)->where("uniacid", $uniacid)->find();
        $data['foot'] = $foot['foot_is'] ? $foot['foot_is'] : 1;
        if ($data['page'] != '') {
            $data['page'] = unserialize($data['page']);
            if (isset($data['page']['url']) && $data['page']['url'] != "") {
                $data['page']['url'] = remote($uniacid, $data['page']['url'], 1);
            }
        }
        if ($data['items'] != '') {
            $data['items'] = array_values(unserialize($data['items']));

            include 'videoInfo.php';
            $videoInfo = new videoInfo();
            foreach ($data['items'] as $k => &$v) {

                if (is_array($v)) {
                    if (isset($v['id'])) {

                        if ($v['id'] == 'title2' || $v['id'] == 'title' || $v['id'] == 'line' || $v['id'] == 'blank' || $v['id'] == 'anniu' || $v['id'] == 'notice' || $v['id'] == 'service' || $v['id'] == 'listmenu' || $v['id'] == 'joblist' || $v['id'] == 'personlist' || $v['id'] == 'msmk' || $v['id'] == 'multiple' || $v['id'] == 'mlist' || $v['id'] == 'goods' || $v['id'] == 'tabbar' || $v['id'] == 'cases' || $v['id'] == 'listdesc' || $v['id'] == 'pt' || $v['id'] == 'dt' || $v['id'] == 'ssk' || $v['id'] == 'yhq' || $v['id'] == 'dnfw' || $v['id'] == 'yuyin' || $v['id'] == 'feedback' || $v['id'] == 'reserve' || $v['id'] == 'bargain' || $v['id'] == 'yhqgoods') {
                            if ($v['params']['backgroundimg'] != "") {
                                $v['params']['backgroundimg'] = remote($uniacid, $v['params']['backgroundimg'], 1);
                            }
                        } else if ($v['id'] == 'xnlf') {
                            $num = Db::name('wd_xcx_base')->where("uniacid", $uniacid)->find();

                            $v['params']['fwl'] = $v['params']['fwl'] * 1 + $num['visitnum'] * 1;
                            if ($v['params']['backgroundimg'] != "") {
                                $v['params']['backgroundimg'] = remote($uniacid, $v['params']['backgroundimg'], 1);
                            }
                        } else if ($v['id'] == 'ddlb') {
                            $c = Db::name('wd_xcx_duo_products_order')->where("uniacid", $uniacid)->order('creattime', 'desc')->limit(5)->field('suid, creattime')->select();
                            foreach ($c as $key => $value) {
                                $wx = $this->getnameandavatar($source, $uniacid, $value['suid']);
                                $name1 = $wx['nickname'];
                                $c[$key]['wx_name'] = mb_substr($name1, 0, 1, 'utf-8') . "**";
                                $c[$key]['wx_avatar'] = $wx['avatar'];
                            }

                            $array2 = $c;
                            $date = array_column($array2, 'creattime');
                            array_multisort($date, SORT_ASC, $array2);
                            $v['count'] = $c;
                        } else if ($v['id'] == 'bigimg' || $v['id'] == 'classfit' || $v['id'] == 'banner' || $v['id'] == 'menu' || $v['id'] == 'picture' || $v['id'] == 'picturew') {

                            if ($v['params']['backgroundimg'] != "") {
                                $v['params']['backgroundimg'] = remote($uniacid, $v['params']['backgroundimg'], 1);
                            }

                            if ($v['data']) {
                                foreach ($v['data'] as $ki => $vi) {
                                    if ($vi['imgurl'] != "") {
                                        if (strpos($vi['imgurl'], "diypage/resource") != false) {
                                            $v['data'][$ki]['imgurl'] = ROOT_HOST . $vi['imgurl'];
                                        } else {
                                            $v['data'][$ki]['imgurl'] = remote($uniacid, $vi['imgurl'], 1);
                                        }
                                    }
                                }
                            }
                        } else if ($v['id'] == 'contact') {
                            if ($v['params']['backgroundimg'] != "") {
                                $v['params']['backgroundimg'] = remote($uniacid, $v['params']['backgroundimg'], 1);
                            }
                            if ($v['params']['src'] != "") {
                                if (strpos($v['params']['src'], "diypage/resource") !== false) {
                                    $v['params']['src'] = ROOT_HOST . $v['params']['src'];
                                } else {
                                    $v['params']['src'] = remote($uniacid, $v['params']['src'], 1);
                                }
                            }
                            if ($v['params']['ewm'] != "") {
                                if (strpos($v['params']['ewm'], "diypage/resource") !== false) {
                                    $v['params']['ewm'] = ROOT_HOST . $v['params']['ewm'];
                                } else {
                                    $v['params']['ewm'] = remote($uniacid, $v['params']['ewm'], 1);
                                }
                            }
                        } else if ($v['id'] == 'video') {
                            if (isset($v['params']['backgroundimg']) && $v['params']['backgroundimg'] != "") {
                                $v['params']['backgroundimg'] = remote($uniacid, $v['params']['backgroundimg'], 1);
                            }
                            if ($v['params']['poster'] != "") {
                                if (strpos($v['params']['poster'], "diypage/resource") !== false) {
                                    $v['params']['poster'] = ROOT_HOST . $v['params']['poster'];
                                } else {
                                    $v['params']['poster'] = remote($uniacid, $v['params']['poster'], 1);
                                }
                            }
                        } else if ($v['id'] == 'logo' || $v['id'] == 'dp') {
                            if ($v['params']['backgroundimg'] != "") {
                                $v['params']['backgroundimg'] = remote($uniacid, $v['params']['backgroundimg'], 1);
                            }
                            if ($v['params']['src'] != "") {
                                if (strpos($v['params']['src'], "diypage/resource") !== false) {
                                    $v['params']['src'] = ROOT_HOST . $v['params']['src'];
                                } else {
                                    $v['params']['src'] = remote($uniacid, $v['params']['src'], 1);
                                }
                            }
                            if (!$v['params']['phonenum']) {
                                $v['params']['phonenum'] = Db::name('wd_xcx_base')->where('uniacid', $uniacid)->field('tel')->find()['tel'];
                            }

                        } else if ($v['id'] == 'footmenu') {
                            if ($v['data']) {
                                foreach ($v['data'] as $ki => $vi) {
                                    if ($vi['imgurl'] != "") {
                                        if (strpos($vi['imgurl'], "diypage/resource") !== false) {
                                            $v['data'][$ki]['imgurl'] = ROOT_HOST . $vi['imgurl'];
                                        } else {
                                            $v['data'][$ki]['imgurl'] = remote($uniacid, $vi['imgurl'], 1);
                                        }
                                    }
                                }
                            }
                        }
                        if ($v['id'] == "banner") {
                            $v['data'] = array_values($v['data']);
                            if (!isset($v['params']['imgh'])) {
                                $v['params']['imgh'] = '200';
                            }
                        } else if ($v['id'] == "richtext") {
                            $v['richtext'] = base64_decode($v['params']['content']);
                            if (strpos($v['richtext'], '<img src="') !== false) {
                                if (strpos($v['richtext'], 'http') === false) {
                                    $v['richtext'] = str_replace('<img src="', '<img src="' . ROOT_HOST, $v['richtext']);
                                }
                            }
                        } else if ($v['id'] == "feedback") {
                            if (isset($v['params']['sourceid']) && $v['params']['sourceid'] != "") {
                                $sourceid = explode(':', $v['params']['sourceid'])[1];
                                $data['forminfo'] = Db::name('wd_xcx_formlist')->where("uniacid", $uniacid)->where("id", $sourceid)->find();
                                if ($data['forminfo']) {
                                    $data['forminfo']['tp_text'] = unserialize($data['forminfo']['tp_text']);
                                    $tp_text = [];
                                    if ($data['forminfo']['tp_text']) {
                                        if ($data['forminfo']['tp_text']) {
                                            foreach ($data['forminfo']['tp_text'] as $key => &$res) {
                                                if ($key > 0) {
                                                    $tp_key = $key - 1;
                                                    if ($res['required'] == true) {
                                                        $tp_text[$tp_key]['ismust'] = 1;
                                                    } else {
                                                        $tp_text[$tp_key]['ismust'] = 0;
                                                    }
                                                    $tp_text[$tp_key]['name'] = $res['label'];
                                                    if ($res['field_type'] == '单行文本') {
                                                        $tp_text[$tp_key]['type'] = 0;
                                                        $tp_text[$tp_key]['tp_text'][0]['yval'] = 0;
                                                    } else if ($res['field_type'] == '多行文本') {
                                                        $tp_text[$tp_key]['type'] = 1;
                                                        $tp_text[$tp_key]['tp_text'] = '';
                                                    } else if ($res['field_type'] == '多选' || $res['field_type'] == '单选') {
                                                        if ($res['field_type'] == '多选') {
                                                            $tp_text[$tp_key]['type'] = 3;
                                                        } else {
                                                            $tp_text[$tp_key]['type'] = 4;
                                                        }
                                                        foreach ($res['field_options']['options'] as $key1 => &$rec1) {
                                                            $rec1['yval'] = $rec1['label'];
                                                            unset($rec1['label']);
                                                        }
                                                        $tp_text[$tp_key]['tp_text'] = $res['field_options']['options'];
                                                    } else if ($res['field_type'] == '下拉选') {
                                                        $tp_text[$tp_key]['type'] = 2;
                                                        $tp_text[$tp_key]['tp_text'] = [];
                                                        foreach ($res['field_options']['options'] as $key2 => &$rec2) {
                                                            array_push($tp_text[$tp_key]['tp_text'], $rec2['label']);
                                                        }
                                                    } else if ($res['field_type'] == '日期') {
                                                        $tp_text[$tp_key]['type'] = 7;
                                                    } else if ($res['field_type'] == '时间') {
                                                        $tp_text[$tp_key]['type'] = 11;
                                                    } else if ($res['field_type'] == '图片') {
                                                        $tp_text[$tp_key]['type'] = 5;
                                                        $tp_text[$tp_key]['tp_text'] = $res['field_options']['maxpic'];
                                                        $tp_text[$tp_key]['z_val'] = array();
                                                    } else if ($res['field_type'] == '手机号') {
                                                        $tp_text[$tp_key]['type'] = 0;
                                                        $tp_text[$tp_key]['tp_text'][0]['yval'] = 1;
                                                    } else if ($res['field_type'] == '身份证') {
                                                        $tp_text[$tp_key]['type'] = 0;
                                                        $tp_text[$tp_key]['tp_text'][0]['yval'] = 7;
                                                    }
                                                    $tp_text[$tp_key]['val'] = '';
                                                }
                                            }
                                        }
                                    }
                                    $data['forminfo']['tp_text'] = $tp_text;
                                }
                            }
                        } else if ($v['id'] == "msmk") {
                            if (isset($v['params']['sourceid']) && $v['params']['sourceid'] != "") {
                                $sourceid = explode(':', $v['params']['sourceid'])[1];
                                $count = $v['params']['goodsnum'];
                                $con_type = $v['params']['con_type'];
                                $con_key = $v['params']['con_key'];
                                $where = "";
                                if ($con_type == 1 && $con_key == 1) {
                                    $where = 'ORDER BY id DESC';
                                }
                                if ($con_type == 2 && $con_key == 1) {
                                    $where = 'AND type_x=1 ORDER BY id DESC';
                                }
                                if ($con_type == 3 && $con_key == 1) {
                                    $where = 'AND type_y=1 ORDER BY id DESC';
                                }
                                if ($con_type == 4 && $con_key == 1) {
                                    $where = 'AND type_i=1 ORDER BY id DESC';
                                }
                                if ($con_type == 1 && $con_key == 2) {
                                    $where = 'ORDER BY hits DESC';
                                }
                                if ($con_type == 2 && $con_key == 2) {
                                    $where = 'AND type_x=1 ORDER BY hits DESC';
                                }
                                if ($con_type == 3 && $con_key == 2) {
                                    $where = 'AND type_y=1 ORDER BY hits DESC';
                                }
                                if ($con_type == 4 && $con_key == 2) {
                                    $where = 'AND type_i=1 ORDER BY hits DESC';
                                }
                                if ($con_type == 1 && $con_key == 3) {
                                    $where = 'ORDER BY num DESC';
                                }
                                if ($con_type == 2 && $con_key == 3) {
                                    $where = 'AND type_x=1 ORDER BY num DESC';
                                }
                                if ($con_type == 3 && $con_key == 3) {
                                    $where = 'AND type_y=1 ORDER BY num DESC';
                                }
                                if ($con_type == 4 && $con_key == 3) {
                                    $where = 'AND type_i=1 ORDER BY num DESC';
                                }
                                $prefix = config('database.prefix');
                                $list = Db::query("SELECT title,thumb,id,`desc`,price,market_price,sale_num,sale_tnum,sale_time,sale_end_time,pro_kc FROM {$prefix}wd_xcx_products WHERE `uniacid` = {$uniacid} AND `type` = 'showPro' AND `is_more` = 0 AND `flag` = 1 AND `is_sale`=0 AND  (`cid` = {$sourceid} or `pcid` = {$sourceid} ) " . $where . " LIMIT 0,{$count}");
                                if ($list) {
                                    foreach ($list as $kk => $vv) {
                                        $list[$kk]['linkurl'] = "/pagesFlashSale/showPro/showPro?id=" . $vv['id'];
                                        $list[$kk]['linktype'] = "page";
                                        $list[$kk]['sale_num'] = $vv['sale_num'] + $vv['sale_tnum'];
                                        if (strpos($vv['thumb'], 'http') === false && $vv['thumb'] != "") {
                                            $list[$kk]['thumb'] = remote($uniacid, $vv['thumb'], 1);
                                        }
                                    }
                                    $data['msmk'] = $list;
                                } else {
                                    $data['msmk'] = [];
                                }
                            }
                        } else if ($v['id'] == "pt") {
                            if (isset($v['params']['sourceid']) && $v['params']['sourceid'] != "") {
                                $sourceid = explode(':', $v['params']['sourceid'])[1];
                                $count = $v['params']['goodsnum'];
                                $con_type = $v['params']['con_type'];
                                $con_key = $v['params']['con_key'];
                                $where = "";
                                if ($con_type == 1 && $con_key == 1) {
                                    $where = 'ORDER BY id DESC';
                                }
                                if ($con_type == 2 && $con_key == 1) {
                                    $where = 'AND type_x=1 ORDER BY id DESC';
                                }
                                if ($con_type == 3 && $con_key == 1) {
                                    $where = 'AND type_y=1 ORDER BY id DESC';
                                }
                                if ($con_type == 4 && $con_key == 1) {
                                    $where = 'AND type_i=1 ORDER BY id DESC';
                                }
                                if ($con_type == 1 && $con_key == 2) {
                                    $where = 'ORDER BY hits DESC';
                                }
                                if ($con_type == 2 && $con_key == 2) {
                                    $where = 'AND type_x=1 ORDER BY hits DESC';
                                }
                                if ($con_type == 3 && $con_key == 2) {
                                    $where = 'AND type_y=1 ORDER BY hits DESC';
                                }
                                if ($con_type == 4 && $con_key == 2) {
                                    $where = 'AND type_i=1 ORDER BY hits DESC';
                                }
                                if ($con_type == 1 && $con_key == 3) {
                                    $where = 'ORDER BY num DESC';
                                }
                                if ($con_type == 2 && $con_key == 3) {
                                    $where = 'AND type_x=1 ORDER BY num DESC';
                                }
                                if ($con_type == 3 && $con_key == 3) {
                                    $where = 'AND type_y=1 ORDER BY num DESC';
                                }
                                if ($con_type == 4 && $con_key == 3) {
                                    $where = 'AND type_i=1 ORDER BY num DESC';
                                }
                                $prefix = config('database.prefix');

                                $list = Db::query("SELECT * FROM {$prefix}wd_xcx_pt_pro WHERE `uniacid` = {$uniacid} AND `show_pro`=0 AND `cid` = {$sourceid} " . $where . " LIMIT 0,{$count}");
                                if ($list) {
                                    foreach ($list as $kk => $vv) {
                                        $list[$kk]['linkurl'] = "/pagesPt/products/products?id=" . $vv['id'];
                                        $list[$kk]['linktype'] = "page";
                                        $team_user = Db::name('wd_xcx_pt_share')->where('uniacid', $uniacid)->where('pid', $vv['id'])->field('suid')->select();
                                        $list[$kk]['team_user'] = $team_user ? count($team_user) : 0;
                                        if ($team_user) {
                                            foreach ($team_user as &$vsi) {
                                                $vsi['avatar'] = $this->getnameandavatar($source, $uniacid, $vsi['suid'])['avatar'];
                                                unset($vsi['suid']);
                                            }
                                        }
                                        $list[$kk]['team_user_avatars'] = $team_user ? $team_user : [];
                                        $list[$kk]['tgr'] = Db::name('wd_xcx_pt_share')->where('uniacid', $uniacid)->where('pid', $vv['id'])->sum('join_count');
                                        $list[$kk]['tgr'] = $list[$kk]['tgr'] ? $list[$kk]['tgr'] : 0;
                                        if (strpos($vv['thumb'], 'http') === false && $vv['thumb'] != "") {
                                            $list[$kk]['thumb'] = remote($uniacid, $vv['thumb'], 1);
                                        }
                                    }
                                    $data['items'][$k]['data'] = $list;
                                } else {
                                    $data['items'][$k]['data'] = [];
                                }
                            }
                        } else if ($v['id'] == "cases") {
                            if (isset($v['params']['sourceid']) && $v['params']['sourceid'] != "") {
                                $sourceid = explode(':', $v['params']['sourceid'])[1];
                                $count = $v['params']['casenum'];
                                $con_type = $v['params']['con_type'];
                                $con_key = $v['params']['con_key'];
                                $where = "";
                                if ($con_type == 1 && $con_key == 1) {
                                    $where = 'ORDER BY id DESC';
                                }
                                if ($con_type == 2 && $con_key == 1) {
                                    $where = 'AND type_x=1 ORDER BY id DESC';
                                }
                                if ($con_type == 3 && $con_key == 1) {
                                    $where = 'AND type_y=1 ORDER BY id DESC';
                                }
                                if ($con_type == 4 && $con_key == 1) {
                                    $where = 'AND type_i=1 ORDER BY id DESC';
                                }
                                if ($con_type == 1 && $con_key == 2) {
                                    $where = 'ORDER BY hits DESC';
                                }
                                if ($con_type == 2 && $con_key == 2) {
                                    $where = 'AND type_x=1 ORDER BY hits DESC';
                                }
                                if ($con_type == 3 && $con_key == 2) {
                                    $where = 'AND type_y=1 ORDER BY hits DESC';
                                }
                                if ($con_type == 4 && $con_key == 2) {
                                    $where = 'AND type_i=1 ORDER BY hits DESC';
                                }
                                if ($con_type == 1 && $con_key == 3) {
                                    $where = 'ORDER BY num DESC';
                                }
                                if ($con_type == 2 && $con_key == 3) {
                                    $where = 'AND type_x=1 ORDER BY num DESC';
                                }
                                if ($con_type == 3 && $con_key == 3) {
                                    $where = 'AND type_y=1 ORDER BY num DESC';
                                }
                                if ($con_type == 4 && $con_key == 3) {
                                    $where = 'AND type_i=1 ORDER BY num DESC';
                                }
                                $prefix = config('database.prefix');
                                if($v['params']['showtype'] == 1){
                                    $list = Db::query("SELECT id,title,thumb,type FROM {$prefix}wd_xcx_products WHERE (`type` = 'showPic' or `type` = 'showArt') AND `uniacid` = {$uniacid} AND `flag` = 1 AND `is_sale`=0 AND (`cid` = {$sourceid} or `pcid` = {$sourceid} ) " . $where);
                                }else{
                                    $list = Db::query("SELECT id,title,thumb,type FROM {$prefix}wd_xcx_products WHERE (`type` = 'showPic' or `type` = 'showArt') AND `uniacid` = {$uniacid} AND `flag` = 1 AND `is_sale`=0 AND (`cid` = {$sourceid} or `pcid` = {$sourceid} ) " . $where . " LIMIT 0,{$count}");
                                }
                                if ($list) {
                                    foreach ($list as $kk => $vv) {
                                        $list[$kk]['linkurl'] = "/pages/" . $vv['type'] . "/" . $vv['type'] . "?id=" . $vv['id'];
                                        if (strpos($vv['thumb'], 'http') === false && $vv['thumb'] != "") {
                                            $list[$kk]['thumb'] = remote($uniacid, $vv['thumb'], 1);
                                        }
                                    }
                                    $data['items'][$k]['data'] = $list;
                                } else {
                                    $data['items'][$k]['data'] = [];
                                }
                            }
                        } else if ($v['id'] == "listdesc") {
                            if (isset($v['params']['sourceid']) && $v['params']['sourceid'] != "") {
                                $sourceid = explode(':', $v['params']['sourceid'])[1];
                                $count = $v['params']['newsnum'];
                                $con_type = $v['params']['con_type'];
                                $con_key = $v['params']['con_key'];
                                $where = "";
                                if ($con_type == 1 && $con_key == 1) {
                                    $where = 'ORDER BY id DESC';
                                }
                                if ($con_type == 2 && $con_key == 1) {
                                    $where = 'AND type_x=1 ORDER BY id DESC';
                                }
                                if ($con_type == 3 && $con_key == 1) {
                                    $where = 'AND type_y=1 ORDER BY id DESC';
                                }
                                if ($con_type == 4 && $con_key == 1) {
                                    $where = 'AND type_i=1 ORDER BY id DESC';
                                }
                                if ($con_type == 1 && $con_key == 2) {
                                    $where = 'ORDER BY hits DESC';
                                }
                                if ($con_type == 2 && $con_key == 2) {
                                    $where = 'AND type_x=1 ORDER BY hits DESC';
                                }
                                if ($con_type == 3 && $con_key == 2) {
                                    $where = 'AND type_y=1 ORDER BY hits DESC';
                                }
                                if ($con_type == 4 && $con_key == 2) {
                                    $where = 'AND type_i=1 ORDER BY hits DESC';
                                }
                                if ($con_type == 1 && $con_key == 3) {
                                    $where = 'ORDER BY num DESC';
                                }
                                if ($con_type == 2 && $con_key == 3) {
                                    $where = 'AND type_x=1 ORDER BY num DESC';
                                }
                                if ($con_type == 3 && $con_key == 3) {
                                    $where = 'AND type_y=1 ORDER BY num DESC';
                                }
                                if ($con_type == 4 && $con_key == 3) {
                                    $where = 'AND type_i=1 ORDER BY num DESC';
                                }
                                $prefix = config('database.prefix');
                                $list = Db::query("SELECT * FROM {$prefix}wd_xcx_products WHERE `type` = 'showArt' AND `is_sale`=0 AND  `uniacid` = {$uniacid} AND `flag` = 1 AND (`cid` = {$sourceid} or `pcid` = {$sourceid} ) " . $where . " LIMIT 0,{$count}");
                                if ($list) {
                                    foreach ($list as $kk => $vv) {
                                        $list[$kk]['linktype'] = 'page';
                                        if ($vv['music_art_info'] != "") {
                                            $music_art_info = unserialize($vv['music_art_info']);
                                            if ($music_art_info['art_price'] == "") {
                                                $list[$kk]['art_price'] = 0;
                                            } else {
                                                $list[$kk]['art_price'] = $music_art_info['art_price'];
                                            }
                                            if ($music_art_info['music_price'] == "") {
                                                $list[$kk]['music_price'] = 0;
                                            } else {
                                                $list[$kk]['music_price'] = $music_art_info['music_price'];
                                            }
                                        }
                                        $count = Db::name("wd_xcx_comment")->where("uniacid", $uniacid)->where("aid", $vv['id'])->count();
                                        $list[$kk]['comments'] = $count;
                                        $list[$kk]['linkurl'] = "/pages/showArt/showArt?id=" . $vv['id'];
                                        if (strpos($vv['thumb'], 'http') === false && $vv['thumb'] != "") {
                                            $list[$kk]['thumb'] = remote($uniacid, $vv['thumb'], 1);
                                        }
                                        $list[$kk]['ctime'] = date('Y年m月d日', $vv['ctime']);
                                        $list[$kk]['likes'] = Db::name('wd_xcx_likes') ->where('uniacid', $uniacid) ->where('cid', $vv['id']) ->where('type', 'showArt') ->count();
                                    }
                                    $data['items'][$k]['data'] = $list;
                                } else {
                                    $data['items'][$k]['data'] = [];
                                }
                            }
                        } else if (isset($v['params']['noticedata']) && intval($v['params']['noticedata']) == 0) {
                            /*读取系统公告*/
                            if (isset($v['params']['sourceid']) && $v['params']['sourceid'] != "") {
                                $sourceid = explode(':', $v['params']['sourceid'])[1];
                                $count = $v['params']['noticenum'];
                                $prefix = config('database.prefix');
                                $list = Db::query("SELECT id,title FROM {$prefix}wd_xcx_products WHERE `uniacid` = {$uniacid} AND `type` = 'showArt' AND `is_sale`=0 AND (`cid` = {$sourceid} or `pcid` = {$sourceid} ) ORDER BY id DESC LIMIT 0,{$count}");
                                if ($list) {
                                    foreach ($list as $kk => $vv) {
                                        if ($v['params']['noticedata'] == 0) {
                                            $list[$kk]['linktype'] = 'page';
                                        }
                                        $list[$kk]['linkurl'] = "/pages/showArt/showArt?id=" . $vv['id'];
                                    }
                                    $data['items'][$k]['data'] = $list;
                                } else {
                                    $data['items'][$k]['data'] = [];
                                }
                            }
                        } else if ($v['id'] == "kpgg" || $v['id'] == "tcgg") {
                            if (intval($v['params']['navstyle']) == 0) {
                                $data['sec'] = $v['params']['sec'];
                            }
                        } else if ($v['id'] == "goods") {
                            if (isset($v['params']['sourceid']) && $v['params']['sourceid'] != "") {
                                $sourceid = explode(':', $v['params']['sourceid'])[1];
                                $cate = Db::name('wd_xcx_cate')->where('uniacid', $uniacid)->where('id', $sourceid)->where('statue', 1)->find();
                                $pro_ids = [];
                                if ($cate) {
                                    if ($cate['cid'] == 0) {
                                        $cate_two = Db::name('wd_xcx_cate')->where([
                                            'uniacid' => $uniacid,
                                            'cid' => $sourceid,
                                            'statue' => 1
                                        ])->column('id');
                                        array_push($cate_two, $sourceid);
                                        $pro_ids = Db::name('wd_xcx_cate_pro')->where([
                                            'uniacid' => $uniacid,
                                            'cate_id' => ['in', $cate_two]
                                        ])->column('pid');
                                        $pro_ids = array_unique($pro_ids);
                                    } else {
                                        $pro_ids = Db::name('wd_xcx_cate_pro')->where([
                                            'uniacid' => $uniacid,
                                            'cate_id' => $sourceid
                                        ])->column('pid');
                                    }
                                } else {
                                    $data['items'][$k]['data'] = [];
                                    break;
                                }
                                $count = $v['params']['goodsnum'];
                                $con_type = $v['params']['con_type'];
                                $con_key = $v['params']['con_key'];
                                $where = "";
                                if ($con_type == 1 && $con_key == 1) {
                                    $where = 'ORDER BY id DESC';
                                }
                                if ($con_type == 2 && $con_key == 1) {
                                    $where = 'AND type_x=1 ORDER BY id DESC';
                                }
                                if ($con_type == 3 && $con_key == 1) {
                                    $where = 'AND type_y=1 ORDER BY id DESC';
                                }
                                if ($con_type == 4 && $con_key == 1) {
                                    $where = 'AND type_i=1 ORDER BY id DESC';
                                }
                                if ($con_type == 1 && $con_key == 2) {
                                    $where = 'ORDER BY hits DESC';
                                }
                                if ($con_type == 2 && $con_key == 2) {
                                    $where = 'AND type_x=1 ORDER BY hits DESC';
                                }
                                if ($con_type == 3 && $con_key == 2) {
                                    $where = 'AND type_y=1 ORDER BY hits DESC';
                                }
                                if ($con_type == 4 && $con_key == 2) {
                                    $where = 'AND type_i=1 ORDER BY hits DESC';
                                }
                                if ($con_type == 1 && $con_key == 3) {
                                    $where = 'ORDER BY num DESC';
                                }
                                if ($con_type == 2 && $con_key == 3) {
                                    $where = 'AND type_x=1 ORDER BY num DESC';
                                }
                                if ($con_type == 3 && $con_key == 3) {
                                    $where = 'AND type_y=1 ORDER BY num DESC';
                                }
                                if ($con_type == 4 && $con_key == 3) {
                                    $where = 'AND type_i=1 ORDER BY num DESC';
                                }
                                $prefix = config('database.prefix');
                                $pro_ids = implode(',', $pro_ids);
                                if(!$pro_ids){
                                    $data['items'][$k]['data'] = [];
                                }else{
                                    $sql = "SELECT * FROM {$prefix}wd_xcx_products WHERE uniacid = " . $uniacid . " and type = 'showProMore' and is_sale = 0 and id in (" . $pro_ids . ") " . $where . " limit 0, " . $count;
                                    $list = Db::query($sql);
                                    if ($list) {
                                        foreach ($list as $kk => $vv) {
                                            if ($vv['type'] == "showPro" && $vv['is_more'] == 0) {
                                                $list[$kk]['linkurl'] = "/pages/showPro/showPro?id=" . $vv['id'];

                                                $items_orders = Db::name('wd_xcx_order')->where('pid', $vv['id'])->where('uniacid', $uniacid)->select();
                                                $items_pro_num = 0;
                                                if ($items_orders) {
                                                    foreach ($items_orders as $rec) {
                                                        $items_pro_num += $rec['num'];
                                                    }
                                                }
                                                $list[$kk]['sale_num'] = $list[$kk]['sale_num'] + $items_pro_num;
                                            } else if ($vv['is_more'] == 1) {
                                                $list[$kk]['linkurl'] = "/pages/showPro_lv/showPro_lv?id=" . $vv['id'];
                                                $list[$kk]['sale_num'] = $list[$kk]['sale_num'] + $list[$kk]['sale_tnum'];
                                            } else {
                                                if ($vv['use_more'] == 1) {
                                                    $values = Db::name("wd_xcx_duo_products_type_value")->where("pid", $vv['id'])->select();
                                                    foreach ($values as $ks => $vs) {
                                                        $list[$kk]['sale_num'] = $list[$kk]['sale_num'] + $vs['salenum'] + $vs['vsalenum'];
                                                    }
                                                } else {
                                                    $list[$kk]['sale_num'] = $list[$kk]['sale_num'] + $list[$kk]['sale_tnum'];
                                                }

                                                $list[$kk]['linkurl'] = "/pages/showProMore/showProMore?id=" . $vv['id'];
                                            }
                                            if (strpos($vv['thumb'], 'http') === false && $vv['thumb'] != "") {
                                                $list[$kk]['thumb'] = remote($uniacid, $vv['thumb'], 1);
                                            }
                                        }
                                        $data['items'][$k]['data'] = $list;
                                    } else {
                                        $data['items'][$k]['data'] = [];
                                    }
                                }
                            }
                        } else if ($v['id'] == "reserve") {
                            if (isset($v['params']['sourceid']) && $v['params']['sourceid'] != "") {
                                $sourceid = explode(':', $v['params']['sourceid'])[1];
                                $count = $v['params']['goodsnum'];
                                $con_type = $v['params']['con_type'];
                                $con_key = $v['params']['con_key'];
                                $where = "";
                                if ($con_type == 1 && $con_key == 1) {
                                    $where = 'ORDER BY id DESC';
                                }
                                if ($con_type == 4 && $con_key == 1) {
                                    $where = 'AND type_i=1 ORDER BY id DESC';
                                }
                                if ($con_type == 1 && $con_key == 2) {
                                    $where = 'ORDER BY hits DESC';
                                }
                                if ($con_type == 4 && $con_key == 2) {
                                    $where = 'AND type_i=1 ORDER BY hits DESC';
                                }
                                if ($con_type == 1 && $con_key == 3) {
                                    $where = 'ORDER BY num DESC';
                                }
                                if ($con_type == 4 && $con_key == 3) {
                                    $where = 'AND type_i=1 ORDER BY num DESC';
                                }

                                $prefix = config('database.prefix');
                                $list = Db::query("SELECT * FROM {$prefix}wd_xcx_products WHERE `uniacid` = {$uniacid}  AND `is_sale`= 0 and `is_more` = 1 AND (`cid` = {$sourceid} or `pcid` = {$sourceid} ) " . $where . " LIMIT 0,{$count}");
                                if ($list) {
                                    foreach ($list as $kk => $vv) {
                                        $list[$kk]['linkurl'] = "/pagesReserve/proDetail/proDetail?id=" . $vv['id'];
                                        $list[$kk]['sale_num'] = ($list[$kk]['sale_num'] + $list[$kk]['sale_tnum']) < 0 ? 0 : ($list[$kk]['sale_num'] + $list[$kk]['sale_tnum']);
                                        if (strpos($vv['thumb'], 'http') === false && $vv['thumb'] != "") {
                                            $list[$kk]['thumb'] = remote($uniacid, $vv['thumb'], 1);
                                        }
                                    }
                                    $data['items'][$k]['data'] = $list;
                                } else {
                                    $data['items'][$k]['data'] = [];
                                }
                            }
                        } else if ($v['id'] == "anniu") {
                            if (isset($v['params']['linktype'])) {
                                if ($v['params']['linktype'] == 'mini') {
                                    if (strpos($v['params']['link'], ",") !== false) {
                                        $link = explode(",", $v['params']['link']);
                                        $data['items'][$k]['params']['link'] = substr($link[0], 6);
                                        $data['items'][$k]['params']['pageurl'] = substr($link[1], 9);
                                    } else {
                                        $data['items'][$k]['params']['link'] = substr($data['items'][$k]['params']['link'], 6);
                                        $data['items'][$k]['params']['pageurl'] = "";
                                    }
                                }
                            }

                        } else if ($v['id'] == "menu") {
                            $menuInfo = [];
                            foreach ($v['data'] as $ky => $vy) {
                                if (isset($vy['linktype'])) {
                                    if ($vy['linktype'] == 'mini') {
                                        if (strpos($vy['linkurl'], ",") !== false) {
                                            $link = explode(",", $vy['linkurl']);
                                            $v['data'][$ky]['linkurl'] = substr($link[0], 6);
                                            $v['data'][$ky]['pageurl'] = substr($link[1], 9);
                                        } else {
                                            $v['data'][$ky]['linkurl'] = substr($data['items'][$k]['data'][$ky]['linkurl'], 6);
                                            $v['data'][$ky]['pageurl'] = "";
                                        }
                                    }
                                }
                                array_push($menuInfo, $v['data'][$ky]);

                            }
                            $v['menu_info'] = $menuInfo;
                        } else if ($v['id'] == "menu2") {
                            $count = count($v['data']);
                            $data['items'][$k]['count'] = $count;
                            $menu2Info = [];
                            foreach ($v['data'] as $ky => $vy) {
                                if (isset($vy['linktype'])) {
                                    if ($vy['linktype'] == 'mini') {
                                        if (strpos($vy['linkurl'], ",") !== false) {
                                            $link = explode(",", $vy['linkurl']);
                                            $vy['linkurl'] = substr($link[0], 6);
                                            $vy['pageurl'] = substr($link[1], 9);
                                        } else {
                                            $vy['linkurl'] = substr($data['items'][$k]['data'][$ky]['linkurl'], 6);
                                            $vy['pageurl'] = "";
                                        }
                                    }
                                }
                                array_push($menu2Info, $v['data'][$ky]);
                            }
                            $v['menu2_info'] = $menu2Info;
                        } else if ($v['id'] == "picturew") {
                            $count = count($v['data']);
                            $data['items'][$k]['count'] = $count;
                            if ($v['params']['row'] == 1) {
                                for ($i = 0; $i <= $count; $i++) {
                                    $data['items'][$k]['data'] = array_values($v['data']);
                                }
                            } else {
                                $v['data'] = array_values($v['data']);
                            }
                        } else if ($v['id'] == "tabbar") {
                            $datas = array();
                            $i = 0;
                            foreach ($v['data'] as $kk => $vv) {
                                $data['items'][$k]['datas'][$i] = $vv;
                                $i++;
                            }
                            $count = count($v['data']);
                            $data['items'][$k]['count'] = $count;
                        } else if ($v['id'] == "xxk") {
                            $datas = array();
                            $i = 0;
                            foreach ($v['data'] as $kk => $vv) {
                                $data['items'][$k]['datas'][$i] = $vv;
                                $i++;
                            }
                            $count = count($v['data']);
                            $data['items'][$k]['count'] = $count;
                        } else if ($v['id'] == "video") {
                            $videourl = $v['params']['videourl'];
                            if ($videourl) {
                                if (strpos($videourl, ".mp4") !== false || strpos($videourl, ".MP4") !== false) {
                                    $v['params']['videourl'] = $videourl;
                                } else {
                                    if (preg_match("/^(http:\/\/|https:\/\/).*$/", $videourl)) {
                                        $videodata = $videoInfo->getVideoInfo($videourl);
                                        $v['params']['videourl'] = $videodata['url'];
                                    } else {
                                        $v['params']['videourl'] = '';
                                    }
                                }
                            }

                        } else if ($v['id'] == "yhq") {
                            $counts_yhq = $v['style']['counts'];
                            $v['coupon'] = Db::name("wd_xcx_coupon")->where("flag", 1)->where("uniacid", $uniacid)->order('num desc')->limit(0, $counts_yhq)->select();
                            foreach ($v['coupon'] as $kz => $vz) {
                                $v['coupon'][$kz]['linktype'] = 'page';
                            }
                        } else if ($v['id'] == "xnlf") {
                            $avatars = [];
                            $user_arr = Db::name("wd_xcx_superuser")->where("uniacid", $uniacid)->order("id desc")->field('id')->select();
                            $iii = 0;
                            foreach ($user_arr as $key => $value) {
                                if ($iii < 5) {
                                    $userinfo = $this->getnameandavatar($source, $uniacid, $value['id']);
                                    if ($userinfo['avatar']) {
                                        array_push($avatars, $userinfo['avatar']);
                                        $iii++;
                                    }
                                } else {
                                    break;
                                }
                            }
                            $v['avatars'] = $avatars;
                        } else if ($v['id'] == "multiple") {
                            if (!isset($v['style']['showtype'])) {
                                $data['items'][$k]['style']['showtype'] = 0;
                            }
                            $tjnum = $v['params']['counts'];
                            $content_type = $v['params']['content_type'];
                            $content_type = $v['params']['content_type'];
                            if ($content_type == 1) {
                                $orderby = " createtime desc ";
                            }
                            if ($content_type == 2) {
                                $orderby = " star desc ";
                            }
                            $prefix = config('database.prefix');
                            $store['storeHot'] = Db::query("SELECT id,uniacid,name,logo,hot FROM {$prefix}wd_xcx_shops_shop WHERE `status` = 1 and `flag` = 1 AND `uniacid` = {$uniacid} AND `hot` = 1 ORDER BY " . $orderby . " LIMIT 0," . $tjnum);
                            $num2 = count($store['storeHot']);
                            for ($i = 0; $i < $num2; $i++) {
                                if (stristr($store['storeHot'][$i]['logo'], 'http')) {
                                    $store['storeHot'][$i]['logo'] = $store['storeHot'][$i]['logo'];
                                } else {
                                    $store['storeHot'][$i]['logo'] = remote($uniacid, $store['storeHot'][$i]['logo'], 1);
                                }
                            }
                            $data['items'][$k]['data'] = $store;
                        } else if ($v['id'] == "mlist") {
                            $store['catelist'] = Db::name("wd_xcx_shops_cate")->where("uniacid", $uniacid)->where('flag', 1)->field("id,num,name")->order("num desc")->select();
                            if (isset($v['style']['viewcount'])) {
                                $tjnum = $v['style']['viewcount'];
                            } else {
                                $tjnum = 4;
                            }

                            if (isset($v['params']['content_type'])) {
                                $content_type = $v['params']['content_type'];
                            } else {
                                $content_type = 1;
                            }

                            if ($content_type == 1) {
                                $orderby = " createtime desc ";
                            }
                            if ($content_type == 2) {
                                $orderby = " star desc ";
                            }
                            $prefix = config('database.prefix');
                            $store['storeHot'] = Db::query("SELECT id,uniacid,name,logo,hot,tel,address FROM {$prefix}wd_xcx_shops_shop WHERE `status` = 1 and  `flag` = 1 AND `uniacid` = {$uniacid} AND `hot` = 1 ORDER BY " . $orderby . " LIMIT 0," . $tjnum);
                            $num2 = count($store['storeHot']);
                            for ($i = 0; $i < $num2; $i++) {
                                if (stristr($store['storeHot'][$i]['logo'], 'http')) {
                                    $store['storeHot'][$i]['logo'] = $store['storeHot'][$i]['logo'];
                                } else {
                                    $store['storeHot'][$i]['logo'] = remote($uniacid, $store['storeHot'][$i]['logo'], 1);
                                }
                            }
                            $data['items'][$k]['data'] = $store;
                        } else if ($v['id'] == "bargain") {
                            if (isset($v['params']['sourceid']) && $v['params']['sourceid'] != "") {
                                $sourceid = explode(':', $v['params']['sourceid'])[1];
                                $count = $v['params']['goodsnum'];

                                $con_type = $v['params']['con_type'];
                                $con_key = $v['params']['con_key'];
                                if ($con_type == 1 && $con_key == 1) {
                                    $where = 'ORDER BY id DESC';
                                }
                                if ($con_type == 2 && $con_key == 1) {
                                    $where = 'AND hot=1 ORDER BY id DESC';
                                }
                                if ($con_type == 1 && $con_key == 3) {
                                    $where = 'ORDER BY num DESC';
                                }
                                if ($con_type == 2 && $con_key == 3) {
                                    $where = 'AND hot=1 ORDER BY num DESC';
                                }
                                $prefix = config('database.prefix');
                                $sql = "SELECT title,thumb,id,descs,price,miniPrice,virtualSaleVolume,realSaleVolume,activeBinTime,activeEndTime,kc FROM {$prefix}wd_xcx_bargain_pro WHERE `uniacid` = {$uniacid} AND activeBinTime <= " . time() . " AND activeEndTime >= " . time() . " AND status = 1 AND cateId = {$sourceid} " . $where . " LIMIT 0,{$count}";
                                $data['items'][$k]['data2'] = [];
                                $list = Db::query($sql);
                                if ($list) {
                                    foreach ($list as $kk => $vv) {
                                        $list[$kk]['saleVolume'] = intval($vv['virtualSaleVolume']) + intval($vv['realSaleVolume']);
                                        $list[$kk]['sale_end_time'] = $vv['activeEndTime'];
                                        if($list[$kk]['thumb']){
                                            $list[$kk]['thumb'] = remote($uniacid, $vv['thumb'], 1);
                                        }else{
                                            $list[$kk]['thumb'] = 'https://'.$_SERVER['HTTP_HOST'].'/diypage/resource/images/diypage/default/no_proimg.png';
                                        }
                                        $list[$kk]['linkurl'] = "/pagesBargain/bargain_pro/bargain_pro?id=" . $vv['id'];
                                        $list[$kk]['linktype'] = "page";
                                        if ($list[$kk]['saleVolume'] > 0 && $vv['kc'] > 0) {
                                            $list[$kk]['sale_percent'] = round($list[$kk]['saleVolume'] / intval($vv['kc']), 2) * 100;
                                        } else {
                                            $list[$kk]['sale_percent'] = 0;
                                        }

                                    }
                                    $data['items'][$k]['data2'] = $list;
                                    $data['items'][$k]['data'] = $list;
                                }
                            } else {
                                $data['items'][$k]['data2'] = [];
                                $data['items'][$k]['data'] = [];
                            }
                        } else if ($v['id'] == 'yhqgoods') {
                            $where = [];
                            $count = $v['params']['goodsnum'];
                            if ($v['params']['goodsdata'] == 2) {
                                $where['type'] = 'jd';
                            } elseif ($v['params']['goodsdata'] == 3) {
                                $where['type'] = 'pdd';
                            }
                            if ($v['params']['con_type'] == 4) {
                                $where['is_index'] = 1;
                            }
                            if ($v['params']['con_key'] == 1) {
                                $order = 'id desc';
                            } elseif ($v['params']['con_key'] == 2) {
                                $order = 'sold_quantity desc';
                            } elseif ($v['params']['con_key'] == 3) {
                                $order = 'goods_eval_score desc';
                            }

                            $goods = Db::name('wd_xcx_external_goods')->where('uniacid', $uniacid)->where('is_sale', 1)->where($where)->order($order)->limit($count)->select();
                            foreach ($goods as $key => $gv) {
                                $goods[$key]['price'] = round($gv['min_group_price'] - $gv['coupon_discount'], 2);
                            }
                            $data['items'][$k]['data'] = $goods;
                        }


                        if ($v['id'] == "footmenu") {
                            $count = count($v['data']);
                            $data['items'][$k]['count'] = $count;
                            foreach ($v['data'] as $ky => &$vy) {
                                if (isset($vy['linktype'])) {
                                    if ($vy['linktype'] == 'mini') {
                                        if (strpos($vy['linkurl'], ",") !== false) {
                                            $link = explode(",", $vy['linkurl']);
                                            $vy['linkurl'] = substr($link[0], 6);
                                            $vy['pageurl'] = substr($link[1], 9);
                                        } else {
                                            $vy['linkurl'] = substr($data['items'][$k]['data'][$ky]['linkurl'], 6);
                                            $vy['pageurl'] = "";
                                        }
                                    }
                                }
                            }

                            $text_is = $v['params']['textshow'];

                            if ($text_is == 1) {
                                $data['footmenuh'] = $v['style']['paddingleft'] * 2 + $v['style']['textfont'] + $v['style']['paddingtop'] * 2 + $v['style']['iconfont'] + 1;
                                $data['foottext'] = 1;
                            } else {
                                $data['footmenuh'] = $v['style']['paddingtop'] * 2 + $v['style']['iconfont'] + 1;
                                $data['foottext'] = 0;
                            }
                            $data['footmenu'] = 1;
                        }

                        if ($v['id'] == "personlist") {
                            $count = $v['params']['goodsnum'];
                            $data['items'][$k]['data'] = Db::name('wd_xcx_staff')->where('uniacid', $uniacid)->order('sort desc')->limit($count)->select();
                            foreach ($data['items'][$k]['data'] as $kkk => $vvv) {
                                $data['items'][$k]['data'][$kkk]['linktype'] = 'page';
                                if (strpos($vvv['pic'], 'http') === false && $vvv['pic'] != "") {
                                    $data['items'][$k]['data'][$kkk]['pic'] = remote($uniacid, $data['items'][$k]['data'][$kkk]['pic'], 1);
                                }
                                $data['items'][$k]['data'][$kkk]['score'] = intval($vvv['score']);
                            }
                        }

                        if ($v['id'] == 'supply') {
                            $count = $v['params']['newsnum'];   //总数量
                            $data_type = $v['params']['data_types'];   // 数据类型
                            $supply = $v['params']['supply'];   //查询条件

                            if ($data_type == 1) {
                                $where_type = '';
                            } else if ($data_type == 2) {
                                $where_type = 'fid = 1';
                            } else if ($data_type == 3) {
                                $where_type = 'fid = 2';
                            }

                            if ($supply == 1) {
                                $where_from = '';
                            } else if ($supply == 2) {
                                $where_from = 'hot = 1';
                            } else if ($supply == 3) {
                                $where_from = 'stick = 1';
                            }

                            $supplydata = Db::name('wd_xcx_supply_release')->where('uniacid', $uniacid)->where($where_type)->where($where_from)->order('hot asc, stick asc, createtime desc')->where('shenhe', 1)->limit($count)->select();
                            foreach ($supplydata as $key => $svalue) {
                                $supplydata[$key]['linkurl'] = "/pagesPluginSupply/page/page?rid=" . $svalue['id'];
                                if ($svalue['img']) {
                                    $supplydata[$key]['thumb'] = remote($uniacid, unserialize($svalue['img'])[0], 1);
                                } else {
                                    $supplydata[$key]['thumb'] = remote($uniacid, '/image/nopic.jpg', 1);
                                }
                            }
                            $data['items'][$k]['data'] = $supplydata;
                        }

                    }
                }
            }
            unset($v);
        }

        $pageset = Db::name("wd_xcx_diypageset")->where("uniacid", $uniacid)->find();
        if ($pageset) {
            if (strpos($pageset['kp'], 'http') === false) {
                $pageset['kp'] = remote($uniacid, $pageset['kp'], 1);
            }
            if (strpos($pageset['tc'], 'http') === false) {
                $pageset['tc'] = remote($uniacid, $pageset['tc'], 1);
            }
        } else {
            $pageset['kp'] = "";
            $pageset['tc'] = "";
        }
        $arr = Db::name("wd_xcx_base")->where("uniacid", $uniacid)->field("diy_bg_music")->find();
        $pageset['diy_bg_music'] = $arr["diy_bg_music"];
        $data['pageset'] = $pageset;
        $result['data'] = $data;
        return json_encode($result);
    }

    // 过滤掉emoji表情
    function filterEmoji($str)
    {
        $str = preg_replace_callback(
            '/./u',
            function (array $match) {
                return strlen($match[0]) >= 4 ? '' : $match[0];
            },
            $str);
        return $str;
    }

    public function doPageDiyForms()
    {
        $uniacid = input("uniacid");
        $source = input("source");
        $forms = stripslashes(html_entity_decode(input('forminfo')));
        $forms = json_decode($forms, TRUE);
        foreach ($forms as $k => $f){
            if($f['name'] == '单行' || $f['name'] == '多行'){
                $forms[$k]['val'] = $this->filterEmoji($f['val']);
            }
        }

        $data['val'] = serialize($forms);

        $data['uniacid'] = $uniacid;
        //fid和cid
        $data['fid'] = input('formid');
        $data['creattime'] = time();
        $data['formid'] = input('form_id');
        $data['openid'] = input('openid');
        $data['suid'] = input('suid');
        $data['source'] = input('source');
        $data['type'] = 'diy';
        $result['data'] = Db::name('wd_xcx_formcon')->insert($data);
        foreach ($forms as $key5 => &$rem) {
            if ($rem['type'] == 14) {
                $addbarr = array(
                    "uniacid" => $uniacid,
                    "cid" => 0,
                    "types" => "diy",
                    "datys" => strtotime($rem['days']),
                    "pagedatekey" => $rem['indexkey'],
                    "arrkey" => $rem['xuanx'],
                    "creattime" => time()
                );
                Db::name('wd_xcx_form_dd')->insert($addbarr);
            }
        }
        $forms = Db::name('wd_xcx_formcon')->where('fid', $data['fid'])->where('creattime', $data['creattime'])->where('uniacid', $uniacid)->find();
        $formsConfig = Db::name('wd_xcx_forms_config')->where("uniacid", $uniacid)->find();

        $formsinfo = Db::name('wd_xcx_formlist')->where("id", $data['fid'])->find();


        $jsons = [
            "ftitle" => $formsinfo['formname'],
            "fmsg" => $formsinfo['descs']
        ];
        $jsons = serialize($jsons);
        // tpl_send($uniacid, 11, input('openid'), $source, input('form_id'), $jsons);


        $mail_sendto = array();
        $mail_sendto = explode(",", $formsConfig['mail_sendto']);
        $row_mail_user = $formsConfig['mail_user'];
        $row_mail_pass = $formsConfig['mail_password'];
        $row_mail_name = $formsConfig['mail_user_name'];

        if ($formsConfig['mail_sendto'] == "" || $row_mail_user == "" || $row_mail_pass == "" || $row_mail_name == "") {
            return json_encode($result);
            exit;
        }

        $row_oid = "表单信息<br/>编号：" . $forms['id'] . "<br />";

        $val = unserialize($forms['val']);
        $forms_con = "";
        foreach ($val as $key => $v) {
            if (is_array($v['val'])) {
                $forms_con .= $v['name'] . ":";
                $txt_s = "";
                foreach ($v['val'] as $key => $value) {
                    if (preg_match("/^http(s)?:\\/\\/.+/", $value)) {
                        $txt_s = $txt_s . "请登录电脑查看图片" . '<br />';
                    } else {
                        $txt_s = $txt_s . $value . "," . '<br />';
                    }
                }
                $forms_con .= $txt_s . "<br />";
            } else {
                $forms_con .= $v['name'] . ":" . $v['val'] . "<br />";
            }

        }
        $mail = new PHPMailer();
        $mail->CharSet = "utf-8";
        $mail->Encoding = "base64";
        $mail->SMTPSecure = "ssl";
        $mail->IsSMTP();
        $mail->Port = 465;
        $mail->Host = "smtp.qq.com";
        $mail->SMTPAuth = true;
        $mail->SMTPDebug = false;
        $mail->Username = $row_mail_user;
        $mail->Password = $row_mail_pass;
        $mail->setFrom($row_mail_user, $row_mail_name);
        foreach ($mail_sendto as $v) {
            $mail->AddAddress($v);
        }
        $mail->Subject = date("m-d", time()) . " - " . input('name');
        $mail->isHTML(true);
        $mail->Body = "<div style='height:40px;line-height:40px;font-size:16px;font-weight:bold;background:#7030A0;color:#fff;text-indent:10px;'>表单详情：</div><div style='line-height:30px;padding:15px;background:#f6f6f6'>" . $row_oid . $forms_con . "<div style='line-height:40px;margin-top:10px;text-align:center;color:#888;font-size:12px'>" . $row_mail_name . "</div></div>";
        if (!$mail->send()) {
            $result['data'] = "0";
        } else {
            $result['data'] = "1";
        }

        return json_encode($result);
    }

    public function doPageGetFoot()
    {
        $uniacid = input("uniacid");
        $foot = input('foot');
        if ($foot == 1) {
            $baseInfo = Db::name('wd_xcx_base')->where("uniacid", $uniacid)->find();
            if ($baseInfo['copyimg']) {
                $baseInfo['copyimg'] = remote($uniacid, $baseInfo['copyimg'], 1);
            }
            $baseInfo['tabbar'] = unserialize($baseInfo['tabbar_new']);
            $baseInfo['tabnum'] = $baseInfo['tabnum_new'];
            if ($baseInfo['tabnum'] > 0) {
                for ($i = 0; $i < 5; $i++) {
                    if (isset($baseInfo['tabbar'][$i])) {
                        $baseInfo['tabbar'][$i] = unserialize($baseInfo['tabbar'][$i]);
                        if ($baseInfo['tabbar'][$i]) {
                            if ($baseInfo['tabbar'][$i]['tabbar'] == 1) {
                                if (!empty($baseInfo['tabbar'][$i]['tabimginput_1'])) {
                                    $baseInfo['tabbar'][$i]['tabimginput_1'] = remote($uniacid, $baseInfo['tabbar'][$i]['tabimginput_1'], 1);
                                }
                                if (!empty($baseInfo['tabbar'][$i]['tabimginput_2'])) {
                                    $baseInfo['tabbar'][$i]['tabimginput_2'] = remote($uniacid, $baseInfo['tabbar'][$i]['tabimginput_2'], 1);
                                }
                            }

                            if ($baseInfo['tabbar'][$i]['tabbar_linktype'] == "tel") {
                                $baseInfo['tabbar'][$i]['tabbar_type'] = "tel";
                            } elseif ($baseInfo['tabbar'][$i]['tabbar_linktype'] == "map") {
                                $baseInfo['tabbar'][$i]['tabbar_type'] = "map";
                            } elseif ($baseInfo['tabbar'][$i]['tabbar_linktype'] == "web") {
                                $baseInfo['tabbar'][$i]['tabbar_type'] = "web";
                            } elseif ($baseInfo['tabbar'][$i]['tabbar_linktype'] == "server") {
                                $baseInfo['tabbar'][$i]['tabbar_type'] = "server";
                            } else {
                                $baseInfo['tabbar'][$i]['tabbar_type'] = "Article";
                            }
                        }
                    } else {
                        $baseInfo['tabbar'][$i] = "";
                    }
                }
            } else {
                $baseInfo['tabbar'][0] = "";
                $baseInfo['tabbar'][1] = "";
                $baseInfo['tabbar'][2] = "";
                $baseInfo['tabbar'][3] = "";
                $baseInfo['tabbar'][4] = "";
            }
            $baseInfo['color_bar'] = "1px solid " . $baseInfo['color_bar'];
            $result['data'] = $baseInfo;
            return json_encode($result);
        } else {
            $data = Db::name("wd_xcx_diypage")->where("index", 1)->where("uniacid", $uniacid)->find();
            if ($data['copyimg']) {
                $data['copyimg'] = remote($uniacid, $data['copyimg'], 1);
            }
            if ($data['items'] != '') {
                $data['items'] = unserialize($data['items']);
                foreach ($data['items'] as $k => &$v) {
                    if ($v['id'] == "footmenu") {
                        $count = count($v['data']);
                        $res['count'] = $count;
                        $res['params'] = $v['params'];
                        $res['style'] = $v['style'];
                        $res['data'] = $v['data'];
                        $text_is = $v['params']['textshow'];
                        if ($text_is == 1) {
                            $res['footmenuh'] = $v['style']['paddingleft'] * 2 + $v['style']['textfont'] + $v['style']['paddingtop'] * 2 + $v['style']['iconfont'] + 1;
                            $res['foottext'] = 1;
                        } else {
                            $res['footmenuh'] = $v['style']['paddingtop'] * 2 + $v['style']['iconfont'] + 1;
                            $res['foottext'] = 0;
                        }
                        $res['footmenu'] = 1;
                    }
                }
            }
            $result['data'] = $res;
            return json_encode($result);
        }
    }
    /*diy方法结束*/
    /*原默认方法*/
    public function doPageAppbase()
    {
        $uniacid = input("uniacid");
        $code = input("code");
        $app = Db::name('wd_xcx_applet')->where("id", $uniacid)->find();
        $appid = $app['appID'];
        $appsecret = $app['appSecret'];
        $url = "https://api.weixin.qq.com/sns/jscode2session?appid=" . $appid . "&secret=" . $appsecret . "&js_code=" . $code . "&grant_type=authorization_code";
        $weixin = file_get_contents($url);
        $jsondecode = json_decode($weixin); //对JSON格式的字符串进行编码
        $array = get_object_vars($jsondecode);//转换成数组
        if (isset($array['errcode'])) {
            $data['res'] = 2;
            $result['data'] = $data;
            return json_encode($result);
            exit;
        }
        $openid = $array['openid'];//输出openid
        if ($openid) {
            $data = array(
                "uniacid" => $uniacid,
                "openid" => $openid,
                "createtime" => time(),
            );
            $userinfo = Db::name('wd_xcx_user')->where("openid", $openid)->where("uniacid", $uniacid)->find();
            if (!$userinfo) {
                Db::name('wd_xcx_user')->insert($data);
                $data['res'] = 1;
                $adata['data'] = $data;
                return json_encode($adata);
            } else {
                $adata['data'] = $userinfo;
                return json_encode($adata);
            }
        }
    }

    //获取支付宝用户user_id
    public function dopagealipaylogin()
    {
        $uniacid = input("uniacid");
        $authCode = input("authCode");
        $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->find();
        $appid = $app['ali_appID'];
        include_once 'AopClient.php';

        $aop = new AopClient();

        $aop->gatewayUrl = 'https://openapi.alipay.com/gateway.do';
        $aop->appId = $appid;
        $aop->rsaPrivateKey = $app['ali_private_key'];
        $aop->alipayrsaPublicKey = $app['ali_public_key'];
        $aop->apiVersion = '1.0';
        $aop->signType = 'RSA2';
        $aop->postCharset = 'UTF-8';
        $aop->format = 'json';

        include_once 'AlipaySystemOauthTokenRequest.php';
        $request = new AlipaySystemOauthTokenRequest ();
        $request->setGrantType("authorization_code");
        $request->setCode($authCode);

        //var_dump($aop->alipayrsaPublicKey);
        // $request->setRefreshToken("201208134b203fe6c11548bcabd8da5bb087a83b");
        $result = $aop->execute($request);
        // var_dump(5555);
        // var_dump($result);
        // exit;

        $result = json_decode(json_encode($result), true);
        // dump($res['alipay_system_oauth_token_response']['user_id']);
        if ($result['alipay_system_oauth_token_response']['user_id']) {
            $user_id = $result['alipay_system_oauth_token_response']['user_id'];
            $res = Db::name('wd_xcx_ali_user')->where([
                'uniacid' => $uniacid,
                'user_id' => $user_id
            ])->find();
            if ($res) {
                return json_encode($res);
            } else {
                $data = [
                    'uniacid' => $uniacid,
                    'user_id' => $user_id
                ];
                Db::name('wd_xcx_ali_user')->insert($data);
                $res = Db::name('wd_xcx_ali_user')->where([
                    'uniacid' => $uniacid,
                    'user_id' => $user_id
                ])->find();
                return json_encode($res);
            }
        }

        //老版的获取个人信息
        //      $responseNode = str_replace(".", "_", $request->getApiMethodName()) . "_response";
        //      $resultCode = $result->$responseNode->code;

        //      include_once 'AlipayUserInfoShareRequest.php';
        //      $request2 = new AlipayUserInfoShareRequest ();
        //      $result2 = $aop->execute ( $request2 , $result->$responseNode->access_token );
        //      $responseNode2 = str_replace(".", "_", $request2->getApiMethodName()) . "_response";
        //      $userinfo = $result2->$responseNode2;

        //      if($userinfo->code == '10000'){
        // $ali_user = array(
        //  "uniacid" => $uniacid,
        //           "user_id" => $userinfo->user_id,
        //           "user_type" => intval($userinfo->user_type),
        //           "is_certified" => $userinfo->is_certified == 'T' ? 1 : 2,
        //           "is_student_certified" => $userinfo->is_student_certified == 'T' ? 1 : 2,
        //           "user_status" => $userinfo->user_status
        //       );

        //       if(property_exists($userinfo, 'nick_name'))
        //        $ali_user['nick_name'] = $userinfo->nick_name;

        //       if(property_exists($userinfo, 'avatar'))
        //        $ali_user['avatar'] = $userinfo->avatar;

        //       if(property_exists($userinfo, 'city'))
        //        $ali_user['city'] = $userinfo->city;

        //       if(property_exists($userinfo, 'province'))
        //        $ali_user['province'] = $userinfo->province;

        //       if($userinfo->is_certified == 'T'){
        //           if($userinfo->gender == 'm'){
        //               $ali_user['gender'] = 1;
        //           }else if($userinfo->gender == 'f'){
        //               $ali_user['gender'] = 2;
        //           }
        //       }

        //       $res = Db::name("wd_xcx_ali_user")->where('uniacid', $uniacid)->where('user_id', $userinfo->user_id)->find();
        //       if($res){
        //        Db::name('wd_xcx_ali_user')->where('uniacid', $uniacid)->where('id', $res['id'])->update($ali_user);
        //       }else{
        //        Db::name('wd_xcx_ali_user')->insert($ali_user);
        //       }

        //       $res = Db::name("wd_xcx_ali_user")->where('uniacid', $uniacid)->where('user_id', $userinfo->user_id)->find();
        //       return json_encode($res);
        //   }

    }
    //手机号自动获取时的sessionkey
    public function doPagegetNewSessionkey1()
    {
        $uniacid = input('uniacid');
        $code = input("code");
        $anonymous_code = input("anonymous_code");
        $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->find();
        $appid = $app['bdance_appID'];
        $appSecret = $app['bdance_appSecret'];
        $url = "https://developer.toutiao.com/api/apps/jscode2session?appid=" . $appid . "&secret=" . $appSecret . "&code=" . $code . "&anonymous_code=" . $anonymous_code;
        $array = $this->_requestGetcurl($url);
        $sessionKey = $array['session_key'];
        $result['data'] = $sessionKey;
        return json_encode($result);
    }
    //获取支付宝用户user_id
    public function dopagetoutiaologin()
    {
        $uniacid = input("uniacid");
        $code = input("code");
        $anonymous_code = input("anonymous_code");
        $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->find();
        $appid = $app['bdance_appID'];
        $appSecret = $app['bdance_appSecret'];
        $url = "https://developer.toutiao.com/api/apps/jscode2session?appid=" . $appid . "&secret=" . $appSecret . "&code=" . $code . "&anonymous_code=" . $anonymous_code;
        $weixin = $this->_requestGetcurl($url);
        if ($weixin['error'] != 0) {
            $data['res'] = 2;
            $result['data'] = $data;
            return json_encode($result);
            exit;
        }
        $openid = $weixin['openid'];//输出openid
        if ($openid) {
            $data = array(
                "uniacid" => $uniacid,
                "openid" => $openid,
                "createtime" => time()
            );
            //1.判断openid是否存在于数据库
            $user = Db::name('wd_xcx_toutiao_user')->where('openid', $openid)->where('uniacid', $uniacid)->find();
            if (!$user) {
                Db::name('wd_xcx_toutiao_user')->insert($data);
                $data['res'] = 1;
                $rdata = Db::name('wd_xcx_toutiao_user')->where('openid', $openid)->where('uniacid', $uniacid)->find();
                $res['data'] = $rdata;
                return json_encode($res);
            } else {
                $adata['data'] = $user;
                return json_encode($adata);
            }
        } else {
            var_dump($weixin);
        }
    }


    public function dopagealiUpdateNickname()
    {
        $uniacid = input("uniacid");
        $nick_name = input("nick_name");
        $id = input("id");
        $avatar = input('avatar');

        Db::name("wd_xcx_ali_user")->where('uniacid', $uniacid)->where('id', $id)->update(array('nick_name' => $nick_name, 'avatar' => $avatar));
    }

    public function dopagetoutiaoUpdateNickname()
    {
        $uniacid = input("uniacid");
        $nickname = input("nickname");
        $id = input("id");
        $avatar = input('avatar');
        Db::name("wd_xcx_toutiao_user")->where('uniacid', $uniacid)->where('id', $id)->update(array('nickname' => $nickname, 'avatar' => $avatar));
    }

    public function dopagebindPhone()
    {
        $uniacid = input("uniacid");
        $phone = input("phone");

        if (!preg_match("/^1[3456789]{1}\d{9}$/", $phone)) {
            return json_encode(array('data' => 2));  //手机格式错误
        }


        $rediscon = $this->GetRediscon();
        $redis = new Redis($rediscon);

        $time_phone = $redis->get('time_' . $phone);
        if ($time_phone && $time_phone + 60 > time()) {
            return json_encode(array('data' => 3));  //还没超过60s，不能再发
        }

        $phoneNumbers = [$phone];
        $code = rand(1000, 9999);

        $sms = "";
        $shortmsg_applet = Db::name("wd_xcx_base")->where("uniacid", $uniacid)->value("shortmsg_applet");//判断是全局系统配置还是单独设置
        if (!$shortmsg_applet) {
            $shortmsg_applet = 1; //全局系统设置
        }
        if ($shortmsg_applet == 1) { //全局系统设置
            $shortmsg = Db::name("wd_xcx_com_about")->where("id", 1)->value("shortmsg");
            if (!$shortmsg) {
                $shortmsg = 1; //启用全局腾讯云短信服务
            }
            if ($shortmsg == 1) { //启用全局腾讯云短信服务
                $sms = Db::name("wd_xcx_sms")->where("uniacid", -1)->where("type", 1)->find(); //全局腾讯云短信信息
            } else if ($shortmsg == 2) {
                $sms = Db::name("wd_xcx_sms")->where("uniacid", -1)->where("type", 2)->find(); //全局阿里云短信信息
            }
        } else if ($shortmsg_applet == 2) { //单独设置
            $shortmsg = Db::name("wd_xcx_base")->where("uniacid", $uniacid)->value("shortmsg");
            if (!$shortmsg) {
                $shortmsg = 1; //启用单独腾讯云短信服务
            }
            if ($shortmsg == 1) { //启用单独腾讯云短信服务
                $sms = Db::name("wd_xcx_sms")->where("uniacid", $uniacid)->where("type", 1)->find(); //单独腾讯云短信信息
            } else if ($shortmsg == 2) {
                $sms = Db::name("wd_xcx_sms")->where("uniacid", $uniacid)->where("type", 2)->find(); //单独阿里云短信信息
            }
        }
        if (empty($sms)) {
            return json_encode(array('data' => 1));  //参数错误
        }
        if ($shortmsg == 1) { //腾讯云短信服务
            include_once 'dxsrc/index.php';
            try {
                $msender = new SmsMultiSender($sms['tx_access_id'], $sms['tx_access_secret']);
                $params = [$code, 5];
                $result = $msender->sendWithParam("86", $phoneNumbers, $sms['tx_code_tpl'],
                    $params, $sms['tx_sign'], "", "");  // 签名参数未提供或者为空时，会使用默认签名发送短信

                $rsp = json_decode($result, true);

                if ($rsp['errmsg'] == 'OK') {
                    $redis->set('code_' . $phone, $code);
                    $redis->set('time_' . $phone, time());
                    return json_encode(array('data' => 0));  //发送成功
                } else {
                    return json_encode(array('data' => 1));  //参数错误
                }
            } catch (\Exception $e) {
                var_dump($e);
            }
        } else if ($shortmsg == 2) {
            $rsp = $this->send_sms($phoneNumbers[0], $code, $sms['tx_access_id'], $sms['tx_access_secret'], $sms['tx_sign'], $sms['tx_code_tpl']);
            if ($rsp != 505) {
                if ($rsp['Code'] == 'OK') {
                    $redis->set('code_' . $phone, $code);
                    $redis->set('time_' . $phone, time());
                    return json_encode(array('data' => 0));  //发送成功
                } else {
                    return json_encode(array('data' => 1));  //参数错误
                }
            } else {
                return json_encode(array('data' => 1));  //参数错误
            }
        }
    }
    function sendSms($uniacid, $pay)
    {
        $uniacid = input('uniacid');
        $base = Db::name('wd_xcx_base')->where('uniacid', $uniacid)->field('sms_is, sms_code, sms_tels, name, shortmsg_applet')->find();
        if($base['sms_is'] == 1 && $base['sms_tels'] != ''){ //开启新订单短信通知
            $sms = "";
            $shortmsg_applet = $base['shortmsg_applet'];//判断是全局系统配置还是单独设置
            if (!$shortmsg_applet) {
                $shortmsg_applet = 1; //全局系统设置
            }
            if ($shortmsg_applet == 1) { //全局系统设置
                $shortmsg = Db::name("wd_xcx_com_about")->where("id", 1)->value("shortmsg");
                if (!$shortmsg) {
                    $shortmsg = 1; //启用全局腾讯云短信服务
                }
                if ($shortmsg == 1) { //启用全局腾讯云短信服务
                    $sms = Db::name("wd_xcx_sms")->where("uniacid", -1)->where("type", 1)->find(); //全局腾讯云短信信息
                } else if ($shortmsg == 2) {
                    $sms = Db::name("wd_xcx_sms")->where("uniacid", -1)->where("type", 2)->find(); //全局阿里云短信信息
                }
            } else if ($shortmsg_applet == 2) { //单独设置
                $shortmsg = Db::name("wd_xcx_base")->where("uniacid", $uniacid)->value("shortmsg");
                if (!$shortmsg) {
                    $shortmsg = 1; //启用单独腾讯云短信服务
                }
                if ($shortmsg == 1) { //启用单独腾讯云短信服务
                    $sms = Db::name("wd_xcx_sms")->where("uniacid", $uniacid)->where("type", 1)->find(); //单独腾讯云短信信息
                } else if ($shortmsg == 2) {
                    $sms = Db::name("wd_xcx_sms")->where("uniacid", $uniacid)->where("type", 2)->find(); //单独阿里云短信信息
                }
            }
            if (!empty($sms)) {
                $sms_tels = explode(',', $base['sms_tels']);
                if ($shortmsg == 1) { //腾讯云短信服务
                    include_once 'dxsrc/index.php';
                    $msender = new SmsMultiSender($sms['tx_access_id'], $sms['tx_access_secret']);
                    $params = [$base['name'], $pay];
                    $msender->sendWithParam("86", $sms_tels, $base['sms_code'],
                            $params, $sms['tx_sign'], "", "");  // 签名参数未提供或者为空时，会使用默认签名发送短信
                } else if ($shortmsg == 2) {
                    foreach ($sms_tels as $k => $v) {
                        $this->send_sms2($v, $base['name'], $pay, $sms['tx_access_id'], $sms['tx_access_secret'], $sms['tx_sign'], $base['sms_code']);
                    }
                }
            }
        }
    }

    //新订单通知商家
    function send_sms2($to, $name = "", $pay = "", $accessKeyId, $accessKeySecret, $signName, $templateCode)
    {
        require_once dirname(__DIR__) . '/../../extend/api_sdk/vendor/autoload.php';
        Config::load(); //加载区域结点配置
        // $accessKeyId = '阿里云生成的accessKeyId';
        // $accessKeySecret = '阿里云生成的accessKeySecret';
        $templateParam = $name;
        //短信签名
        // $signName = "短信签名";
        //短信模板ID
        // $templateCode = "短信模板"; // 注册登录短信验证码模板
        //短信API产品名（短信产品名固定，无需修改）
        $product = "Dysmsapi";
        //短信API产品域名（接口地址固定，无需修改）
        $domain = "dysmsapi.aliyuncs.com";
        //暂时不支持多Region（目前仅支持cn-hangzhou请勿修改）
        $region = "cn-hangzhou";
        // 初始化用户Profile实例
        $profile = DefaultProfile::getProfile($region, $accessKeyId, $accessKeySecret);
        // 增加服务结点
        DefaultProfile::addEndpoint("cn-hangzhou", "cn-hangzhou", $product, $domain);
        // 初始化AcsClient用于发起请求
        $acsClient = new DefaultAcsClient($profile);
        // 初始化SendSmsRequest实例用于设置发送短信的参数
        $request = new SendSmsRequest();
        // 必填，设置雉短信接收号码
        $request->setPhoneNumbers($to);
        // 必填，设置签名名称
        $request->setSignName($signName);
        // 必填，设置模板CODE
        $request->setTemplateCode($templateCode);
        // 可选，设置模板参数
        if ($templateParam) {
            $request->setTemplateParam(json_encode(['name' => $templateParam, 'pay' => $pay]));
        }

        // 启动事务
        // Db::startTrans();
        //发起访问请求
        try {
            $acsResponse = $acsClient->getAcsResponse($request);
            // 更新成功 提交事务
            // Db::commit();
            // return true;
        } catch (\Exception $e) {
            // 更新失败 回滚事务
            // Db::rollback();
            return 505;
        }

        //返回请求结果
        $result = json_decode(json_encode($acsResponse), true);
        // 具体返回值参考文档：https://help.aliyun.com/document_detail/55451.html?spm=a2c4g.11186623.6.563.YSe8FK
        return $result;
    }
    function send_sms($to, $code = "", $accessKeyId, $accessKeySecret, $signName, $templateCode)
    {
        require_once dirname(__DIR__) . '/../../extend/api_sdk/vendor/autoload.php';
        Config::load(); //加载区域结点配置
        // $accessKeyId = '阿里云生成的accessKeyId';
        // $accessKeySecret = '阿里云生成的accessKeySecret';
        $templateParam = $code;
        //短信签名
        // $signName = "短信签名";
        //短信模板ID
        // $templateCode = "短信模板"; // 注册登录短信验证码模板
        //短信API产品名（短信产品名固定，无需修改）
        $product = "Dysmsapi";
        //短信API产品域名（接口地址固定，无需修改）
        $domain = "dysmsapi.aliyuncs.com";
        //暂时不支持多Region（目前仅支持cn-hangzhou请勿修改）
        $region = "cn-hangzhou";
        // 初始化用户Profile实例
        $profile = DefaultProfile::getProfile($region, $accessKeyId, $accessKeySecret);
        // 增加服务结点
        DefaultProfile::addEndpoint("cn-hangzhou", "cn-hangzhou", $product, $domain);
        // 初始化AcsClient用于发起请求
        $acsClient = new DefaultAcsClient($profile);
        // 初始化SendSmsRequest实例用于设置发送短信的参数
        $request = new SendSmsRequest();
        // 必填，设置雉短信接收号码
        $request->setPhoneNumbers($to);
        // 必填，设置签名名称
        $request->setSignName($signName);
        // 必填，设置模板CODE
        $request->setTemplateCode($templateCode);
        // 可选，设置模板参数
        if ($templateParam) {
            $request->setTemplateParam(json_encode(['code' => $templateParam]));
        }

        // 启动事务
        // Db::startTrans();
        //发起访问请求
        try {
            $acsResponse = $acsClient->getAcsResponse($request);
            // 更新成功 提交事务
            // Db::commit();
            // return true;
        } catch (\Exception $e) {
            // 更新失败 回滚事务
            // Db::rollback();
            return 505;
        }

        //返回请求结果
        $result = json_decode(json_encode($acsResponse), true);
        // 具体返回值参考文档：https://help.aliyun.com/document_detail/55451.html?spm=a2c4g.11186623.6.563.YSe8FK
        return $result;
    }

    // data == 0 绑定成功  1 验证码错误  2 H5端登陆成功
    public function dopageconfirmBind()
    {
        $uniacid = input("uniacid");
        $phone = input("phone");
        $code = input("code");
        $status = input("status");
        $identity = input("identity");
        $sms = input("sms"); //1验证码 2授权


        $superuser = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('phone', $phone)->field('id')->find();

        //微信小程序
        if ($status == '1' && $sms) {
            if($sms == 1){
                $rediscon = $this->GetRediscon();
                $redis = new Redis($rediscon);
                $send_code = $redis->get('code_' . $phone);
                if (intval($code) != intval($send_code)) {
                    return json_encode(array('data' => 1));
                }
            }
            if ($superuser) {
                Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $identity)->update(array('suid' => $superuser['id']));
                return json_encode(array('data' => 0, 'suid' => $superuser['id']));
            } else {
                $data = array(
                    'uniacid' => $uniacid,
                    'phone' => $phone,
                    'createtime' => time()
                );
                $suid = Db::name('wd_xcx_superuser')->insertGetId($data);
                Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $identity)->update(array('suid' => $suid));
                return json_encode(array('data' => 0, 'suid' => $suid));
            }
        } else if ($status == '2' && $sms) {    //支付宝小程序
            if($sms == 1){
                $rediscon = $this->GetRediscon();
                $redis = new Redis($rediscon);
                $send_code = $redis->get('code_' . $phone);
                if (intval($code) != intval($send_code)) {
                    return json_encode(array('data' => 1));
                }

            }
            if ($superuser) {
                Db::name('wd_xcx_ali_user')->where('uniacid', $uniacid)->where('user_id', $identity)->update(array('suid' => $superuser['id']));
                return json_encode(array('data' => 0, 'suid' => $superuser['id']));
            } else {
                $data = array(
                    'uniacid' => $uniacid,
                    'phone' => $phone,
                    'createtime' => time()
                );
                $suid = Db::name('wd_xcx_superuser')->insertGetId($data);
                Db::name('wd_xcx_ali_user')->where('uniacid', $uniacid)->where('user_id', $identity)->update(array('suid' => $suid));
                return json_encode(array('data' => 0, 'suid' => $suid));
            }
        } else if ($status == '3') {  //H5
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $send_code = $redis->get('code_' . $phone);
            if (intval($code) == intval($send_code)) {
                if (empty($superuser)) {
                    $data = array(
                        'uniacid' => $uniacid,
                        'phone' => $phone,
                        'createtime' => time()
                    );
                    $suid = Db::name('wd_xcx_superuser')->insertGetId($data);
                    return json_encode(array('data' => 0, 'suid' => $suid));
                } else {
                    return json_encode(array('data' => 2, 'suid' => $superuser['id']));
                }
            } else {
                return json_encode(array('data' => 1));
            }

        } else if ($status == 4) {  //百度
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $send_code = $redis->get('code_' . $phone);
            if (intval($code) == intval($send_code)) {
                if ($superuser) {
                    Db::name('wd_xcx_baidu_user')->where('uniacid', $uniacid)->where('openid', $identity)->update(array('suid' => $superuser['id']));
                    return json_encode(array('data' => 0, 'suid' => $superuser['id']));
                } else {
                    $data = array(
                        'uniacid' => $uniacid,
                        'phone' => $phone,
                        'createtime' => time()
                    );
                    $suid = Db::name('wd_xcx_superuser')->insertGetId($data);
                    Db::name('wd_xcx_baidu_user')->where('uniacid', $uniacid)->where('openid', $identity)->update(array('suid' => $suid));
                    return json_encode(array('data' => 0, 'suid' => $suid));
                }

            } else {
                return json_encode(array('data' => 1));
            }
        } else if ($status == 5) {  //头条
            if($sms == 1){
                $rediscon = $this->GetRediscon();
                $redis = new Redis($rediscon);
                $send_code = $redis->get('code_' . $phone);
                if (intval($code) != intval($send_code)) {
                    return json_encode(array('data' => 1));
                }
            }
            if ($superuser) {
                Db::name('wd_xcx_toutiao_user')->where('uniacid', $uniacid)->where('openid', $identity)->update(array('suid' => $superuser['id']));
                return json_encode(array('data' => 0, 'suid' => $superuser['id']));
            } else {
                $data = array(
                    'uniacid' => $uniacid,
                    'phone' => $phone,
                    'createtime' => time()
                );
                $suid = Db::name('wd_xcx_superuser')->insertGetId($data);
                Db::name('wd_xcx_toutiao_user')->where('uniacid', $uniacid)->where('openid', $identity)->update(array('suid' => $suid));
                return json_encode(array('data' => 0, 'suid' => $suid));
            }
        } else if ($status == 6) {  //QQ
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $send_code = $redis->get('code_' . $phone);
            if (intval($code) == intval($send_code)) {
                if ($superuser) {
                    Db::name('wd_xcx_qq_user')->where('uniacid', $uniacid)->where('openid', $identity)->update(array('suid' => $superuser['id']));
                    return json_encode(array('data' => 0, 'suid' => $superuser['id']));
                } else {
                    $data = array(
                        'uniacid' => $uniacid,
                        'phone' => $phone,
                        'createtime' => time()
                    );
                    $suid = Db::name('wd_xcx_superuser')->insertGetId($data);
                    Db::name('wd_xcx_qq_user')->where('uniacid', $uniacid)->where('openid', $identity)->update(array('suid' => $suid));
                    return json_encode(array('data' => 0, 'suid' => $suid));
                }

            } else {
                return json_encode(array('data' => 1));
            }
        }


    }

    public function dopagecheckuniacid()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");

        $res = Db::name("wd_xcx_superuser")->where("uniacid", $uniacid)->where("id", $suid)->find();
        if ($res)
            return json_encode(array('data' => 1));
        else
            return json_encode(array('data' => 0));
    }

    public function dopagehasBind()
    {
        $uniacid = input("uniacid");
        $identity = input("identity");
        $status = input("status");

        if ($status == '1') {
            $user = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $identity)->field('suid')->find();
            if ($user['suid'])
                return json_encode(array('data' => 1, 'suid' => $user['suid']));
            else
                return json_encode(array('data' => 2));
        }

        if ($status == '2') {
            $user = Db::name('wd_xcx_ali_user')->where('uniacid', $uniacid)->where('user_id', $identity)->field('suid')->find();
            if ($user['suid'])
                return json_encode(array('data' => 1, 'suid' => $user['suid']));
            else
                return json_encode(array('data' => 2));
        }

        if ($status == '4') {
            $user = Db::name('wd_xcx_baidu_user')->where('uniacid', $uniacid)->where('openid', $identity)->field('suid')->find();
            if ($user['suid'])
                return json_encode(array('data' => 1, 'suid' => $user['suid']));
            else
                return json_encode(array('data' => 2));
        }
        if ($status == '5') {
            $user = Db::name('wd_xcx_baidu_user')->where('uniacid', $uniacid)->where('openid', $identity)->field('suid')->find();
            if ($user['suid'])
                return json_encode(array('data' => 1, 'suid' => $user['suid']));
            else
                return json_encode(array('data' => 2));
        }
        if ($status == '6') {
            $user = Db::name('wd_xcx_qq_user')->where('uniacid', $uniacid)->where('openid', $identity)->field('suid')->find();
            if ($user['suid'])
                return json_encode(array('data' => 1, 'suid' => $user['suid']));
            else
                return json_encode(array('data' => 2));
        }

    }

    public function doPagebindfxs()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $fxsid = input("fxsid");
        // dump(88888);die;
        // 分销商的关系[1.绑定上下级关系 ]
        $userinfo = Db::name('wd_xcx_superuser')->where("id", $suid)->where("uniacid", $uniacid)->find();
        // 分销商的信息
        $fxsinfo = Db::name('wd_xcx_superuser')->where("id", $fxsid)->where("uniacid", $uniacid)->find();
        //获取该小程序的分销关系绑定规则
        $guiz = Db::name('wd_xcx_fx_gz')->where("uniacid", $uniacid)->field("fx_cj,sxj_gx,uniacid")->find();

        $uuser = false;
        // 1.先进行上下级关系绑定[判断是不是点击即成分销商]


        if ($guiz['fx_cj'] != 4 && $guiz['sxj_gx'] == 1 && $userinfo['parent_id'] == '0' && $fxsid != '0' && $userinfo['fxs'] != 2 && $fxsinfo['fxs'] == 2) {
            $p_fxs = $fxsinfo['parent_id'];  //分销商的上级
            $p_p_fxs = $fxsinfo['p_parent_id']; //分销商的上上级
            // 判断启用几级分销
            $fx_cj = $guiz['fx_cj'];
            // 分别做判断
            if ($fx_cj == 1) {
                $uuser = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->update(array("parent_id" => $fxsid));
            }
            if ($fx_cj == 2) {
                $uuser = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->update(array("parent_id" => $fxsid, "p_parent_id" => $p_fxs));
            }
            if ($fx_cj == 3) {
                $uuser = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->update(array("parent_id" => $fxsid, "p_parent_id" => $p_fxs, "p_p_parent_id" => $p_p_fxs));
            }
        }
        exit;

        //$adata['guiz'] = Db::name('wd_xcx_fx_gz')->where("uniacid", $uniacid)->field("one_bili,two_bili,three_bili,uniacid")->find();
        return json_encode(array('data' => $uuser));
        //return $this->result(0, 'success',$isbindfxs);
    }
    //付费视频  0521前端未查到
    // public function doPageglobaluserinfoget(){
    //  $uniacid = input("uniacid");
    //  $openid = input("openid");
    //  $newuserinfo['data'] = Db::name('wd_xcx_user')->where("openid",$openid)->where("uniacid",$uniacid)->find();
    //  return json_encode($newuserinfo);
    // }
    // 更改付费视频的相关信息
    public function dopagevideogeng()
    {
        $uniacid = input("uniacid");
        $order_id = input('orderid');
        $is = Db::name('wd_xcx_money')->where("orderid", $order_id)->find();
        if ($is) {
            return;
        }
        $openid = input("openid");
        $suid = input("suid");
        $money = input("money");
        $mykoumoney = input("mykoumoney");
        $id = input("id");
        $artType = input('artType');
        $userinfo = Db::name('wd_xcx_superuser')->where("id", $suid)->where("uniacid", $uniacid)->find();
        $newmoney = $userinfo['money'] * 1 - $mykoumoney * 1;
        Db::name('wd_xcx_superuser')->where("id", $suid)->where("uniacid", $uniacid)->update(array("money" => 0));
        $a = "";
        if ($artType == 1) {
            $a = "视频消费";
        } else if ($artType == 2) {
            $a = "音频消费";
        } else {
            $a = "文章内容消费";
        }
        // 创建视频消费记录
        $kdata = array(
            "uniacid" => $uniacid,
            "suid" => $suid,
            "pid" => $id,
            "orderid" => $order_id,
            "paymoney" => $mykoumoney + $money,
            "creattime" => time(),
            "type" => $artType
        );

        Db::name('wd_xcx_video_pay')->insert($kdata);

        // 创建消费流水个人账户
        $xfmoney1 = array(
            "uniacid" => $uniacid,
            "orderid" => $order_id,
            "suid" => $suid,
            "type" => "del",
            "score" => $mykoumoney,
            "message" => $a . "余额消费",
            "creattime" => time()
        );
        if ($mykoumoney > 0) {
            Db::name('wd_xcx_money')->insert($xfmoney1);
        }
        $xfmoney = array(
            "uniacid" => $uniacid,
            "orderid" => $order_id,
            "suid" => $suid,
            "type" => "del",
            "score" => $money,
            "message" => $a . "非余额消费",
            "creattime" => time()
        );
        if ($money > 0) {
            Db::name('wd_xcx_money')->insert($xfmoney);
        }
        $count = Db::name("wd_xcx_video_pay")->where("uniacid", $uniacid)->where("suid", $suid)->where("pid", $id)->count();
        $array = array("count" => $count, "order_id" => $order_id);
        return json_encode($array);
    }

// 付费视频操作
    public function doPagevideozhifu()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $money = input("money");
        $mykoumoney = input("mykoumoney");
        $types = input("types");
        $openid = input("openid");
        $id = input("id");
        $artType = input('artType');
        $pay_type = input('pay_type');
        $now = time();
        $order_id = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
        $userinfo = Db::name('wd_xcx_superuser')->where("id", $suid)->where("uniacid", $uniacid)->find();
        if ($types == 1) {  //直接扣除余额
            $newmoney = $userinfo['money'] * 1 - $mykoumoney * 1;
            Db::name('wd_xcx_superuser')->where("id", $suid)->where("uniacid", $uniacid)->update(array("money" => $newmoney));
            // 创建视频消费记录
            $kdata = array(
                "uniacid" => $uniacid,
                "suid" => $suid,
                "pid" => $id,
                "type" => $artType,
                "orderid" => $order_id,
                "paymoney" => $mykoumoney,
                "creattime" => time()
            );
            Db::name('wd_xcx_video_pay')->insert($kdata);
            // 创建消费流水
            $a = "";
            if ($artType == 1) {
                $a = "视频消费";
            } else if ($artType == 2) {
                $a = "音频消费";
            } else {
                $a = "文章内容消费";
            }
            $xfmoney = array(
                "uniacid" => $uniacid,
                "orderid" => $order_id,
                "suid" => $suid,
                "type" => "del",
                "score" => $mykoumoney,
                "message" => $a,
                "creattime" => time()
            );
            if ($mykoumoney > 0) {
                Db::name('wd_xcx_money')->insert($xfmoney);
            }
            $count = Db::name("wd_xcx_video_pay")->where("uniacid", $uniacid)->where("suid", $suid)->where("pid", $id)->count();
            $array = array("count" => $count, "order_id" => $order_id);
            return json_encode($array);
        } else {
            if ($pay_type == "weixin") {
                $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->find();
                include 'WeixinPay.php';
                $appid = $app['appID'];
                $mch_id = $app['mchid'];
                $key = $app['signkey'];
                $out_trade_no = $order_id; //订单号
                $body = "账户充值";
                $total_fee = $money * 100;
                if (isset($app['identity'])) {
                    $identity = $app['identity'];
                } else {
                    $identity = 1;
                }
                if (isset($app['sub_mchid'])) {
                    $sub_mchid = $app['sub_mchid'];
                } else {
                    $sub_mchid = 0;
                }
                $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, $identity, $sub_mchid);
                $return = $weixinpay->pay();
            } else if ($pay_type == 'h5' || $pay_type == 'toutiao') {
                $rediscon = $this->GetRediscon();
                $redis = new Redis($rediscon);
                $kdata = array(
                    "uniacid" => $uniacid,
                    "suid" => $suid,
                    "pid" => $id,
                    "type" => $artType,
                    "orderid" => $order_id,
                    "paymoney" => $money,
                    "creattime" => time()
                );
                $redis->set($order_id . 'artzf', json_encode($kdata));
            }

            $return['order_id'] = $order_id;
            $adata['data'] = $return;
            $adata['message'] = "success";
            return json_encode($adata);
        }
    }

    public function Comment()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $id = intval(input("id"));
        $pinglun_t = input("pinglun_t");
        $openid = input("openid");
        $data = array(
            'aid' => $id,
            'suid' => $suid,
            'text' => $pinglun_t,
            'openid' => $openid,
            'uniacid' => $uniacid,
            'createtime' => time()
        );
        $result = Db::name('wd_xcx_comment')->insert($data);
        if ($result == 1) {
            $res['data'] = array('result' => 1);
            return json_encode($res);
        } else {
            $res['data'] = array('result' => 2);
            return json_encode($res);
        }
    }

    public function getComment()
    {
        $uniacid = input("uniacid");
        $id = intval(input("id"));
        $flag = input("comms");
        $source = input('source');
        $suid = input('suid');
        if ($flag == 1) {
            // $comment = Db::name('wd_xcx_comment')->alias('a')->join('wd_xcx_superuser b', 'a.suid = b.id')->where("b.uniacid", $uniacid)->where('a.aid', $id)->where('a.flag', '1')->order('a.follow desc')->order('a.id desc')->field('a.id,a.text,a.createtime,a.follow,b.avatar,b.nickname')->select();
            $comment = Db::name('wd_xcx_comment')->alias('a')->join('wd_xcx_superuser b', 'a.suid = b.id and a.uniacid = b.uniacid', 'left')->where("a.uniacid", $uniacid)->where("a.aid", $id)->where("a.flag", 1)->order("a.follow desc,a.id desc")->field("a.id,a.text,a.createtime,a.follow,b.id as userid")->select();
        } else {
            // $comment = Db::name('wd_xcx_comment')->alias('a')->join('wd_xcx_user b', 'a.openid = b.openid')->where("b.uniacid", $uniacid)->where('a.aid', $id)->where('a.flag', 'neq', '2')->order('a.follow desc')->order('a.id desc')->field('a.id,a.text,a.createtime,a.follow,b.avatar,b.nickname')->select();
            $comment = Db::name('wd_xcx_comment')->alias('a')->join('wd_xcx_superuser b', 'a.suid = b.id and a.uniacid = b.uniacid', 'left')->where("a.uniacid", $uniacid)->where("a.aid", $id)->where("a.flag", 'neq', 2)->order("a.follow desc, a.id desc")->field("a.id,a.text,a.createtime,a.follow,b.id as userid")->select();
        }
        if ($comment) {
            foreach ($comment as $k => &$v) {
                $userinfo = $this->getnameandavatar($source, $uniacid, $v['userid']);
                $comment[$k]['avatar'] = $userinfo['avatar'];
                $comment[$k]['nickname'] = $userinfo['nickname'];
                $comment[$k]['ctime'] = date('Y-m-d H:i:s', $v['createtime']);
                //查询该评论下的点赞
                $zans = Db::name('wd_xcx_art_comment_zan')->where('uniacid', $uniacid)->where('comid', $v['id'])->field('zan, suid')->select();
                if ($zans) {
                    foreach ($zans as $key => $value) {
                        if ($value['suid'] == $suid && $value['zan'] == 1) {
                            $v['zan'] = 1;
                        } else {
                            $v['zan'] = 2;
                        }
                    }
                } else {
                    $v['zan'] = 2;
                }
            }
        }
        $result['data'] = $comment;
        return json_encode($result);
    }

    public function commentFollow()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $id = input("id");
        $zan = input('zan');
        $openid = input('openid');
        $follow = Db::name('wd_xcx_comment')->where("id", $id)->where("uniacid", $uniacid)->field('id,follow')->find();
        $zan_rec = Db::name('wd_xcx_art_comment_zan')->where('uniacid', $uniacid)->where('comid', $id)->where('openid', $openid)->find();
        if ($zan == 2) {
            if (!$zan_rec) {
                Db::name('wd_xcx_art_comment_zan')->insert(['uniacid' => $uniacid, 'comid' => $id, 'suid' => $suid, 'openid' => $openid, 'zan' => 1, 'createtime' => time()]);
            } else {
                Db::name('wd_xcx_art_comment_zan')->where('uniacid', $uniacid)->where('comid', $id)->where('openid', $openid)->update(['zan' => 1]);
            }
            $follow = intval($follow['follow']) + 1;
            $data = array(
                'id' => $id,
                'follow' => $follow,
            );
            $result = Db::name('wd_xcx_comment')->where("id", $id)->update($data);
            if ($result) {
                $res['data'] = array('result' => 1);
                return json_encode($res);
            }
        } else if ($zan == 1) {
            if (!$zan_rec) {
                Db::name('wd_xcx_art_comment_zan')->insert(['uniacid' => $uniacid, 'comid' => $id, 'suid' => $suid, 'openid' => $openid, 'zan' => 2, 'createtime' => time()]);
            } else {
                Db::name('wd_xcx_art_comment_zan')->where('uniacid', $uniacid)->where('comid', $id)->where('openid', $openid)->update(['zan' => 2]);
            }
            $follow = intval($follow['follow']) - 1;
            $data = array(
                'id' => $id,
                'follow' => $follow,
            );
            $result = Db::name('wd_xcx_comment')->where("id", $id)->update($data);
            if ($result) {
                $res['data'] = array('result' => 2);
                return json_encode($res);
            }
        }

    }

    public function doPageUseupdate()
    {
        $uniacid = input("uniacid");
        $openid = input("openid");
        $user = Db::name('wd_xcx_user')->where("openid", $openid)->where("uniacid", $uniacid)->find();

        $data = array(
            "uniacid" => $uniacid,
            "nickname" => $this->emoji_encode(input("nickname")),
            "openid" => $openid,
            "avatar" => input("avatarUrl"),
            "gender" => input("gender"),
            "resideprovince" => input("province"),
            "residecity" => input("city"),
            "nationality" => input("country"),
            "address" => input("address"),
            "company" => input("company"),
            "position" => input("position"),
        );
        if ($user) {
            $res = Db::name('wd_xcx_user')->where("openid", $openid)->where("uniacid", $uniacid)->update($data);
        } else {
            $res = Db::name('wd_xcx_user')->insert($data);
        }
        // 新增返回个人信息
        $newuserinfo = Db::name('wd_xcx_user')->where("openid", $openid)->where("uniacid", $uniacid)->find();
        $parent_id = $newuserinfo['parent_id'];
        if ($parent_id != '0') {
            $tjr = Db::name('wd_xcx_user')->where("openid", $parent_id)->where("uniacid", $uniacid)->find();
            if ($tjr['fxs'] == 2) {
                $newuserinfo['tjr'] = $tjr['realname'];
            } else {
                $newuserinfo['tjr'] = "您是由平台方推荐";
            }
        } else {
            $newuserinfo['tjr'] = "您是由平台方推荐";
        }
        $result['data'] = $newuserinfo;
        return json_encode($result);
    }

    //核销密码
    public function hxmm()
    {
        $uniacid = input("uniacid");
        $order_id = input("order_id");
        $hxmm = input("hxmm");
        $suid = input("suid");

        $hxuser_is = intval(input("hxuser_is"));  //0密码核销 1核销员核销 2多商户管理员核销
        $hxuser_name = '';
        if ($hxuser_is) {
            $hxuser_info = Db::name('wd_xcx_hx_user')->where('uniacid', $uniacid)->find(); //核销员
            $hxuser_info_con = $hxuser_info['hxuser'] ? unserialize($hxuser_info['hxuser']) : '';

            if (!$hxuser_info || !$hxuser_info_con) {
                return json_encode(array('data' => 3));
            }
            foreach ($hxuser_info_con as $vsi) {
                if ($vsi['suid'] == $suid) {
                    $hxuser_name = $vsi['name'];
                    break;
                }
            }
        }
        $array1 = array();//所有员工编号
        $hxmms = array();
        $hxinfo = array();
        $is_more = input("is_more");  //0秒杀 1预约预定 3拼团 2多商户订单 4砍价商品 5多规格订单新版
        //秒杀商品核销获取是否有所属门店
        if ($is_more == 0 || $is_more == 3 || $is_more == 1 || $is_more == 2 || $is_more == 4) {
            if ($is_more == 0 || $is_more == 1) {//0秒杀 1预约预定 3拼团 2多规格订单
                $proinfo = Db::name('wd_xcx_order')->alias("a")->join("wd_xcx_products b", "a.pid = b.id")->where("a.uniacid", $uniacid)->where("a.order_id", $order_id)->field("a.*")->find();
            } else if ($is_more == 2) {//0秒杀 1预约预定 3拼团 2多规格订单
                $duoorder = Db::name('wd_xcx_duo_products_order')->where('order_id', $order_id)->where("uniacid", $uniacid)->find();
                if ($duoorder['jsondata']) {
                    $jsondata = unserialize($duoorder['jsondata']);
                    $proinfo = Db::name('wd_xcx_products')->where('id', $jsondata[0]['baseinfo']['id'])->where("uniacid", $uniacid)->find();
                } else {
                    $proinfo = array();
                    $proinfo['stores'] = "";
                }
            } else if ($is_more == 3) {//0秒杀 1预约预定 3拼团 2多规格订单 4砍价商品
                $ptorder = Db::name('wd_xcx_pt_order')->where('order_id', $order_id)->where('uniacid', $uniacid)->find();
                if ($ptorder['jsondata']) {
                    $jsondata = unserialize($ptorder['jsondata']);
                    $proinfo = Db::name('wd_xcx_pt_pro')->where('id', $jsondata[0]['id'])->where('uniacid', $uniacid)->find();
                } else {
                    $proinfo = array();
                    $proinfo['stores'] = "";
                }
            } else if ($is_more == 4) {
                $proinfo = Db::name("wd_xcx_bargain_order")->where("order_id", $order_id)->where("uniacid", $uniacid)->find();
                $proinfo['stores'] = '';
            }

            // if(!empty($proinfo['stores'])){
            //     $stores = explode(",", $proinfo['stores']);
            //     foreach ($stores as $key => $value) {
            //           $staff = Db::name('wd_xcx_staff')->where("store",$value)->where("uniacid",$uniacid)->field("id,hxmm")->select();
            //           if(!empty($staff)){
            //             foreach ($staff as $k => $v) {
            //                 if($hxmm == $v['hxmm']){
            //                     $hxinfo[0] = 2;
            //                     $hxinfo[1] = $value;
            //                     $hxinfo[2] = $v['id'];
            //                     $data['custime'] = time();
            //                     $data['flag'] = 2;
            //                     $data['hxinfo'] = $hxinfo;
            //                     if($openid){ //拼团
            //                        Db::name('wd_xcx_pt_order')->where("uniacid", $uniacid)->where("order_id", $order_id)->update(array("hxinfo" => serialize($hxinfo),"flag" => 2, "hxtime" => time()));
            //                        $price = $proinfo['price'];
            //                     }else if(intval($is_more) == 2){
            //                         $upd['hxinfo'] = serialize($hxinfo);
            //                         $upd['flag'] = 2;
            //                         $upd['hxtime'] = time();
            //                         $price = $proinfo['price'];
            //                         Db::name('wd_xcx_duo_products_order')->where("order_id", $order_id)->where("uniacid", $uniacid)->update($upd);
            //                     }else{
            //                         $data['hxinfo'] = serialize($hxinfo);
            //                         Db::name('wd_xcx_order')->where("order_id", $order_id)->where("uniacid", $uniacid)->update($data);
            //                         $price = $proinfo['true_price'];
            //                     }
            //                     add_all_pay($uniacid, $price, $suid);
            //                     check_vip_grade($uniacid, $suid);
            //                     return json_encode(array('data' => 1));
            //                     exit;
            //                 }

            //             }
            //           }
            //     }
            // }
        }
        $hxmmarr = Db::name('wd_xcx_base')->where("uniacid", $uniacid)->find();
        if ($hxmmarr['hxmm'] != $hxmm && $hxuser_is == 0) {
            return json_encode(array('data' => 0));
        } else {
            if ($is_more == 0 || $is_more == 1) {
                $orderinfo = Db::name('wd_xcx_order')->where("order_id", $order_id)->where("uniacid", $uniacid)->find();
                if ($orderinfo['flag'] == 2) {
                    return json_encode(array('data' => 2));
                }
                if ($hxuser_is == 2) {
                    return json_encode(array('data' => 4));
                }
                if ($hxuser_is) {
                    $hxinfo[0] = "核销员核销";
                    $hxinfo[1] = $hxuser_name;
                    $hxinfo[2] = $suid;
                } else {
                    $hxinfo[0] = "密码核销";
                }
                $data['hxinfo'] = serialize($hxinfo);

                $fxsorder = Db::name('wd_xcx_fx_ls')->where('uniacid', $uniacid)->where('order_id', $order_id)->find();
                if ($fxsorder) {
                    $this->dopagegivemoney($uniacid, $suid, $order_id);
                }

            } else if ($is_more == 2) {
                $orderinfo = Db::name('wd_xcx_duo_products_order')->where("order_id", $order_id)->where("uniacid", $uniacid)->find();
                if ($orderinfo['flag'] == 2) {
                    return json_encode(array('data' => 2));
                }

                if ($orderinfo['sid'] > 0) {
                    $rate = Db::name('wd_xcx_shops_set')->where('uniacid', $uniacid)->field('jiesuan')->find()['jiesuan'];
                    $shopinfo = Db::name('wd_xcx_shops_shop')->where('uniacid', $uniacid)->where('id', $orderinfo['sid'])->field('tixian,suid')->find();
                    if ($shopinfo) {
                        $money = $shopinfo['tixian'];
                        if ($hxmm == '' && $hxuser_is < 2) {
                            return json_encode(array('data' => 4));
                        } else if ($hxmm == '' && $hxuser_is == 2) {
                            if ($suid != $shopinfo['suid']) {
                                return json_encode(array('data' => 3));
                            }
                        }
                    }
                    $add = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('id', $orderinfo['id'])->field('price')->find()['price'];
                    $money = $money + number_format($add - $add * $rate * 0.01, 2);
                    $result = Db::name('wd_xcx_shops_shop')->where('uniacid', $uniacid)->where('id', $orderinfo['sid'])->update(array('tixian' => $money));
                }
                if ($hxuser_is == 1) {
                    $hxinfo[0] = "核销员核销";
                    $hxinfo[1] = $hxuser_name;
                    $hxinfo[2] = $suid;
                } else if ($hxuser_is == 2) {
                    if ($orderinfo['sid'] > 0) {
                        $hxinfo[0] = "管理员核销";
                        $hxinfo[1] = $suid;
                    }
                } else {
                    $hxinfo[0] = "密码核销";
                }
                Db::name('wd_xcx_duo_products_order')->where("order_id", $order_id)->where("uniacid", $uniacid)->update(array("hxinfo" => serialize($hxinfo), "hxtime" => time(), "flag" => 2));
                //核销密码送积分

                $jsondata = unserialize($orderinfo['jsondata']);
                $total_num = 0;
                $total_price = 0;
                foreach ($jsondata as $key => &$value) {
                    $total_num += $value['num'];
                    $total_price += $value['proinfo']['price'] * $value['num'];
                }

                if ($jsondata) {
                    $hasscoreback = 0;
                    foreach ($jsondata as $key => $va) {
                        $a = Db::name("wd_xcx_products")->where("uniacid", $uniacid)->where("id", $va['baseinfo']['id'])->find();
                        $scoreback = $a['scoreback'];
                        if (!empty($scoreback)) {
                            if (strpos($scoreback, "%")) {
                                $scoreback = floatval(chop($scoreback, "%"));
                                $scoretomoney = Db::name("wd_xcx_rechargeconf")->where("uniacid", $uniacid)->find();
                                $scoreback = $va['proinfo']['price'] * $va['num'] * $scoreback / 100;

                                if ($orderinfo['score_flag'] == 0 && $orderinfo['score_bei'] > 0) {
                                    $scoreback = floor($scoreback * intval($scoretomoney['score']) * $orderinfo['score_bei'] / intval($scoretomoney['money']));
                                } else {
                                    $scoreback = floor($scoreback * intval($scoretomoney['score']) / intval($scoretomoney['money']));
                                }

                            } else {
                                if ($orderinfo['score_flag'] == 0 && $orderinfo['score_bei'] > 0) {
                                    $scoreback = floor($va['num'] * floatval($scoreback) * $orderinfo['score_bei']);
                                } else {
                                    $scoreback = floor($va['num'] * floatval($scoreback));
                                }
                            }

                            $hasscoreback = $hasscoreback + $scoreback * 1;

                        }
                    }
                    if ($hasscoreback > 0) {
                        $new_user = Db::name("wd_xcx_superuser")->where("uniacid", $uniacid)->where("id", $suid)->find();
                        $new_my_score = $new_user['score'] + $hasscoreback;
                        Db::name("wd_xcx_superuser")->where("uniacid", $uniacid)->where("id", $suid)->update(array("score" => $new_my_score));
                        $scoreback_data = array(
                            "uniacid" => $uniacid,
                            "orderid" => $orderinfo['order_id'],
                            "suid" => $new_user['id'],
                            "type" => "add",
                            "score" => $hasscoreback,
                            "message" => "买送积分",
                            "creattime" => time()
                        );
                        Db::name("wd_xcx_score")->insert($scoreback_data);
                    }
                }

                $addprice = $orderinfo['price'];
                add_all_pay($uniacid, $addprice, $suid);
                check_vip_grade($uniacid, $suid);

                if($orderinfo['source'] == 1){
                    $openid = Db::name('wd_xcx_user')->where('suid', $orderinfo['suid'])->value('openid');
                    $jsons = [
                        'fprice' => $orderinfo['price']
                    ];
                    $jsons = serialize($jsons);
                    sendSubscribe($uniacid, 2, $openid, $jsons);
                }

                $fxsorder = Db::name('wd_xcx_fx_ls')->where('uniacid', $uniacid)->where('order_id', $order_id)->find();
                if ($fxsorder) {
                    $this->dopagegivemoney($uniacid, $suid, $order_id);
                }

                return json_encode(array('data' => 1));
                exit;
            } else if ($is_more == 3) {
                $orderinfo = Db::name('wd_xcx_pt_order')->where("order_id", $order_id)->where("uniacid", $uniacid)->find();
                if ($orderinfo['flag'] == 2) {
                    return json_encode(array('data' => 2));
                }
                if ($hxuser_is == 2) {
                    return json_encode(array('data' => 4));
                }
                if ($hxuser_is) {
                    $hxinfo[0] = "核销员核销";
                    $hxinfo[1] = $hxuser_name;
                    $hxinfo[2] = $suid;
                } else {
                    $hxinfo[0] = "密码核销";
                }
                Db::name('wd_xcx_pt_order')->where("uniacid", $uniacid)->where("order_id", $order_id)->update(array("hxinfo" => serialize($hxinfo), "flag" => 2, "hxtime" => time()));
                $addprice = $ptorder['price'];
                add_all_pay($uniacid, $addprice, $suid);
                check_vip_grade($uniacid, $suid);

                if($orderinfo['source'] == 1){
                    $openid = Db::name('wd_xcx_user')->where('suid', $orderinfo['suid'])->value('openid');
                    $jsons = [
                        'fprice' => $orderinfo['price']
                    ];
                    $jsons = serialize($jsons);
                    sendSubscribe($uniacid, 2, $openid, $jsons);
                }

                $fxsorder = Db::name('wd_xcx_fx_ls')->where('uniacid', $uniacid)->where('order_id', $order_id)->find();
                if ($fxsorder) {
                    $this->dopagegivemoney($uniacid, $suid, $order_id);
                }
                return json_encode(array('data' => 1));
                exit;
            } else if ($is_more == 4) {
                $orderinfo = Db::name('wd_xcx_bargain_order')->where("order_id", $order_id)->where("uniacid", $uniacid)->find();
                if ($orderinfo['flag'] == 2) {
                    return json_encode(array('data' => 2));
                }
                if ($hxuser_is == 2) {
                    return json_encode(array('data' => 4));
                }
                if ($hxuser_is) {
                    $hxinfo[0] = "核销员核销";
                    $hxinfo[1] = $hxuser_name;
                    $hxinfo[2] = $suid;
                } else {
                    $hxinfo[0] = "密码核销";
                }
                $data['hxinfo'] = serialize($hxinfo);
                $data['hxtime'] = time();
                $data['flag'] = 2;

                Db::name('wd_xcx_bargain_order')->where("order_id", $order_id)->update($data);
                $addprice = $proinfo['true_price'];
                add_all_pay($uniacid, $addprice, $suid);
                check_vip_grade($uniacid, $suid);

                if($orderinfo['source'] == 1){
                    $openid = Db::name('wd_xcx_user')->where('suid', $orderinfo['suid'])->value('openid');
                    $jsons = [
                        'fprice' => $orderinfo['true_price']
                    ];
                    $jsons = serialize($jsons);
                    sendSubscribe($uniacid, 2, $openid, $jsons);
                }
                return json_encode(array('data' => 1));
                exit;
            } else if ($is_more == 5) {
                $orderinfo = Db::name('wd_xcx_main_shop_order')->where([
                    'uniacid' => $uniacid,
                    'order_id' => $order_id,
                    'suid' => $suid,
                    'status' => 2
                ])->find();
                if (!$orderinfo) {
                    return json_encode(array('data' => 2));
                }
                $order_items = Db::name('wd_xcx_main_shop_order_item')->where('order_id', $order_id)->select();
                if ($hxuser_is == 1) {
                    $hxinfo[0] = "核销员核销";
                    $hxinfo[1] = $hxuser_name;
                    $hxinfo[2] = $suid;
                } else if ($hxuser_is == 2) {
                    if ($orderinfo['sid'] > 0) {
                        $hxinfo[0] = "管理员核销";
                        $hxinfo[1] = $suid;
                    }
                } else {
                    $hxinfo[0] = "密码核销";
                }

                $check_info = serialize($hxinfo);

                //处理积分
                if ($orderinfo['score_sent'] > 0) {
                    $scoreback_data = array(
                        "uniacid" => $uniacid,
                        "orderid" => $orderinfo['order_id'],
                        "suid" => $suid,
                        "type" => "add",
                        "score" => $orderinfo['score_sent'],
                        "message" => "买送积分",
                        "creattime" => time()
                    );
                }

                Db::startTrans();
                try {
                    $services = Db::name('wd_xcx_main_shop_order_service')->where("uniacid", $uniacid)->where("order_item_id", "like", "%".$order_id."%")->where("status", 0)->select(); //查出进行中和同意中未退货的订单
                    foreach ($services as $k => $v) {
                        $service_data = [
                            'status' => -1,
                            'revoke_time' => time(),
                        ];
                        Db::name('wd_xcx_main_shop_order_service')->where("uniacid", $uniacid)->where("order_service_id", $v['order_service_id'])->update($service_data);
                    }

                    //更新订单状态
                    $order_data = [
                        'check_time' => time(),
                        'check_info' => $check_info,
                        'status' => 3,
                        'check_time' => time(),
                        'allow_all_refund' => 2
                    ];
                    $order_update = Db::name('wd_xcx_main_shop_order')->where('order_id', $order_id)->update($order_data);
                    if (!$order_update) {
                        throw new \Exception('订单状态改变失败');
                    }

                    //返还积分
                    if ($orderinfo['score_sent'] > 0) {
                        Db::name('wd_xcx_superuser')->where('id', $orderinfo['suid'])->setInc('score', $orderinfo['score_sent']);
                        $score = Db::name('wd_xcx_score')->insert($scoreback_data);
                        if (!$score) {
                            throw new \Exception('返还积分失败');
                        }
                    }

                    //处理子订单状态
                    foreach ($order_items as $item) {
                        $order_item_logs = unserialize($item['order_item_log']);
                        if ($hxuser_is == 1) {
                            $hxinfo[0] = $hxuser_name."核销";
                        }

                        $order_item_log = ['time'=>time(), 'log'=>'订单核销，'.$hxinfo[0]];
                        array_push($order_item_logs, $order_item_log);
                        Db::name('wd_xcx_main_shop_order_item')->where('id', $item['id'])->update(['status' => 3, 'order_item_log'=>serialize($order_item_logs), 'check_time' => time()]);
                    }
                    add_all_pay($uniacid, $orderinfo['total_can_tui_money'], $suid);
                    check_vip_grade($uniacid, $suid);

//                    $fxsorder = Db::name('wd_xcx_fx_ls')->where('uniacid', $uniacid)->where('order_id', $order_id)->find();
//                    if ($fxsorder) {
//                        $this->dopagegivemoney($uniacid, $suid, $order_id);
//                    }
                    if($orderinfo['source'] == 1){
                        $openid = Db::name('wd_xcx_user')->where('suid', $orderinfo['suid'])->value('openid');
                        $jsons = [
                            'fprice' => $orderinfo['pay_money']
                        ];
                        $jsons = serialize($jsons);
                        sendSubscribe($uniacid, 2, $openid, $jsons);
                    }
                    Db::commit();

                } catch (\Exception $e) {
                    Db::rollback();
                    return json_encode(['data' => 2]);
                }

                return json_encode(array('data' => 1));
            }
            $data['custime'] = time();
            $data['flag'] = 2;
            $res = Db::name('wd_xcx_order')->where("order_id", $order_id)->where("uniacid", $uniacid)->update($data);
            add_all_pay($uniacid, $proinfo['true_price'], $suid);
            check_vip_grade($uniacid, $suid);

            if($orderinfo['source'] == 1){
                $openid = Db::name('wd_xcx_user')->where('suid', $orderinfo['suid'])->value('openid');
                $jsons = [
                    'fprice' => $orderinfo['price']
                ];
                $jsons = serialize($jsons);
                sendSubscribe($uniacid, 2, $openid, $jsons);
            }

            return json_encode(array('data' => 1));
        }
    }
    // 0521前端未查到
    // public function doPageMyscore(){
    //  $uniacid = input("uniacid");
    //     $openid = input("openid");
    //     $userscore = Db::name('wd_xcx_user')->where("uniacid",$uniacid)->where("openid",$openid)->find();
    //     return json_encode($userscore);
    // }
    //上传图片
    public function wxupimg()
    {
        // $file = request()->file('file');
        // $info = $file->validate(['ext'=>'jpg,png,gif,jpeg'])->move(ROOT_PATH . 'public/upimages');
        // if ($info) {
        //     return ROOT_HOST . "/upimages/" . $info->getSaveName();
        //     die();
        // } else {
        //     echo $file->getError();
        //     die();
        // }
        $uniacid = input("uniacid");

        $remote_info = Db::name("wd_xcx_base")->where("uniacid", $uniacid)->field("remote, use_remote")->find();  //当前项目设置
        if (!$remote_info) {
            $use_remote = 1;
            $remote = 1;
        } else {
            $use_remote = $remote_info['use_remote'];
            $remote = $remote_info['remote'];
        }
        if ($use_remote == 1) {   //系统设置
            $global_remote = Db::name('wd_xcx_com_about')->where('id', 1)->field('globalremote')->find();
            if (!$global_remote) {
                $remote = 1;
            } else {
                $remote = $global_remote['globalremote'];
            }
            if ($remote == 2) {
                $qiniu_info = Db::name("wd_xcx_remote")->where("type", 2)->where("uniacid", -1)->find();
            } elseif ($remote == 3) {
                $ali_info = Db::name("wd_xcx_remote")->where("type", 3)->where("uniacid", -1)->find();
            }
        } elseif ($use_remote == 2) {  //自己的设置
            if ($remote == 2) {
                $qiniu_info = Db::name("wd_xcx_remote")->where("type", 2)->where("uniacid", $uniacid)->find();
            } elseif ($remote == 3) {
                $ali_info = Db::name("wd_xcx_remote")->where("type", 3)->where("uniacid", $uniacid)->find();
            }
        }

        if ($remote == 1) {
            $files = request()->file('');
            foreach ($files as $file) {
                // 移动到框架应用根目录/public/upimages/ 目录下
                $info = $file->validate(['ext' => 'jpg,png,gif,jpeg'])->move(ROOT_PATH . 'public' . DS . 'upimages');
                if ($info) {
                    $url = ROOT_HOST . "/upimages/" . date("Ymd", time()) . "/" . $info->getFilename();
                    return $url;
                } else {
                    // 上传失败获取错误信息
                    return $this->error($file->getError());
                }
            }
        } else if ($remote == 2) {
            $qiniu_info = Db::name("wd_xcx_remote")->where("type", 2)->where("uniacid", $uniacid)->find();
            $file = $_FILES['file']['tmp_name'];
            $is_img = getimagesize($file);
            if ($is_img) {

            }
            $oringal_name = $_FILES['file']['name'];

            $pathinfo = pathinfo($oringal_name);

            // var_dump($pathinfo);exit;
            // 要上传图片的本地路径
            $ext = $pathinfo['extension'];
            $key = 'upimages/' . date("Ymd", time()) . '/' . md5(uniqid(microtime(true), true)) . '.' . $ext;

            // 需要填写你的 Access Key 和 Secret Key
            $accessKey = $qiniu_info['ak'];
            $secretKey = $qiniu_info['sk'];
            // 构建鉴权对象
            vendor('Qiniu.autoload');
            // use Qiniu\Auth as Auth;
            // use Qiniu\Storage\BucketManager;
            // use Qiniu\Storage\UploadManager;
            $auth = new \Qiniu\Auth($accessKey, $secretKey);
            // 要上传的空间
            $bucket = $qiniu_info['bucket'];
            $domain = $qiniu_info['domain'];
            $token = $auth->uploadToken($bucket);
            // 初始化 UploadManager 对象并进行文件的上传
            $uploadMgr = new \Qiniu\Storage\UploadManager();
            // 调用 UploadManager 的 putFile 方法进行文件的上传
            list($ret, $err) = $uploadMgr->putFile($token, $key, $file);
            if ($err !== null) {
                echo ["err" => 1, "msg" => $err, "data" => ""];
            } else {
                //返回图片的完整URL
                return $qiniu_info['domain'] . '/' . $ret['key'];
            }
        } else if ($remote == 3) {
            $file = $_FILES['file']['tmp_name'];
            $oringal_name = $_FILES['file']['name'];
            $ali_info = Db::name("wd_xcx_remote")->where("type", 3)->where("uniacid", $uniacid)->find();
            $accessKeyId = $ali_info['ak'];
            $accessKeySecret = $ali_info['sk'];
            $endpoint = $ali_info['domain'];
            $bucket = $ali_info['bucket'];
            $object = $oringal_name;
            $pathinfo = pathinfo($oringal_name);
            $ext = $pathinfo['extension'];
            $key = 'upimages/' . date("Ymd", time()) . '/' . md5(uniqid(microtime(true), true)) . '.' . $ext;
            try {
                vendor('aliyun.autoload');
                $ossClient = new \OSS\OssClient($accessKeyId, $accessKeySecret, $endpoint);
                if (!$ossClient->doesBucketExist($bucket)) {  //bucket不存在则创建
                    $ossClient->createBucket($bucket);
                }
                $res = $ossClient->uploadFile($bucket, $key, $file);
                if ($res) {
                    //返回图片的完整URL
                    return $res['info']['url'];
                } else {
                    echo ["err" => 1, "msg" => '上传错误', "data" => ""];
                }
            } catch (OssException $e) {
                printf(__FUNCTION__ . ": FAILED\n");
                printf($e->getMessage() . "\n");
                return;
            }
        }
    }

    public function Hxyhq()
    {
        $uniacid = input("uniacid");
        $youhqid = input("youhqid");
        $hxmm = input("hxmm");
        $hxmmarr = Db::name('wd_xcx_base')->where("uniacid", $uniacid)->find();
        if ($hxmmarr['hxmm'] != $hxmm) {
            return json_encode(array('data' => 0));
        } else {
            $data['utime'] = time();
            $data['flag'] = 1;
            $res = Db::name('wd_xcx_coupon_user')->where("id", $youhqid)->where("uniacid", $uniacid)->update($data);
            if ($res) {
                return json_encode(array('data' => 1));
            } else {
                return json_encode(array('data' => 0));
            }
        }
    }

    /*多栏目开始*/
    public function doPagechangelist()
    {
        $uniacid = input('uniacid');
        $cid = input('cid') ? input('cid') : '0';
        $multi_id = input('multi_id');
        if ($cid == "0") {
            $data['pro_list'] = Db::name('wd_xcx_products')->where('multi', 1)->where('top_catas', 'neq', '')->where('mulitcataid', $multi_id)->select();
            $num = count($data['pro_list']);
            for ($i = 0; $i < $num; $i++) {
                if (stristr($data['pro_list'][$i]['thumb'], 'http')) {
                    $data['pro_list'][$i]['thumb'] = $data['pro_list'][$i]['thumb'];
                } else {
                    $data['pro_list'][$i]['thumb'] = remote($uniacid, $data['pro_list'][$i]['thumb'], 1);
                }
            }
            return json_encode($data);
            exit;
        } else {
            $cid = explode(',', $cid);
            $pid = input('pid') ? explode('-', input('pid')) : '';
            $prefix = config('database.prefix');
            $sql = "SELECT * FROM {$prefix}wd_xcx_products WHERE multi = 1 AND `mulitcataid` = " . $multi_id;
            foreach ($cid as $k => $v) {
                if ($v == 0) {
                    $sql .= " AND find_in_set('" . $pid[$k] . "',top_catas)";
                } else {
                    $sql .= " AND find_in_set('" . $v . "',sons_catas)";
                }
            }
            $sql .= " AND top_catas != ''";
            $data['pro_list'] = Db::query($sql);
            $num = count($data['pro_list']);
            for ($i = 0; $i < $num; $i++) {
                if (stristr($data['pro_list'][$i]['thumb'], 'http')) {
                    $data['pro_list'][$i]['thumb'] = $data['pro_list'][$i]['thumb'];
                } else {
                    $data['pro_list'][$i]['thumb'] = remote($uniacid, $data['pro_list'][$i]['thumb'], 1);
                }
            }
            return json_encode($data);
            exit;
        }
        return json_encode($data);
    }

    public function doPagelistArt_duo()
    {
        $uniacid = input('uniacid');
        $multi_id = input('multi_id');
        $cid = Db::name('wd_xcx_multicate')->where('id', $multi_id)->find();
        if ($cid) {
            $data['cate'] = $cid;
        }
        $topcate = unserialize($cid['cid']);
        $prefix = config('database.prefix');
        $sql = "SELECT * FROM {$prefix}wd_xcx_products WHERE multi = 1 AND top_catas != '' AND `mulitcataid` =" . $multi_id;
        $data['pro_list'] = Db::query($sql);
        $num = count($data['pro_list']);
        for ($i = 0; $i < $num; $i++) {
            if (stristr($data['pro_list'][$i]['thumb'], 'http')) {
                $data['pro_list'][$i]['thumb'] = $data['pro_list'][$i]['thumb'];
            } else {
                $data['pro_list'][$i]['thumb'] = remote($uniacid, $data['pro_list'][$i]['thumb'], 1);
            }
        }
        $mlid = input('multi_id');
        $top_catas = Db::name('wd_xcx_multicate')->where('id', $mlid)->field("top_catas")->find();
        if ($top_catas) {
            $top_one = Db::name('wd_xcx_multicates')->where('id', 'in', unserialize($top_catas['top_catas']))->select();
            foreach ($top_one as $k => $v) {
                $top_one[$k]['sons'] = Db::name('wd_xcx_multicates')->where('pid', $v['id'])->select();
            }
            $data['topcate'] = $top_one;
        }
        return json_encode($data);
    }

    public function doPagegetcate()
    {
        $cid = input('cid');
        $uniacid = input('uniacid');
        $subcate = Db::name('wd_xcx_shops_cate')->where('uniacid', $uniacid)->field('id,name')->select();
        $result['data'] = $subcate;
        return json_encode($result);
    }

    public function doPageBase()
    {
        $uniacid = input('uniacid');
        $fxsid = input('fxsid');
        $baseInfo = Db::name('wd_xcx_base')->where("uniacid", $uniacid)->find();
        $baseInfo['banner'] = remote($uniacid, $baseInfo['banner'], 1);
        // dump($baseInfo);die;
        $baseInfo['ot'] = Db::name('wd_xcx_forms_config')->where("uniacid", $uniacid)->field('forms_name')->find();
        if ($baseInfo['ot']['forms_name'] == "") {
            $baseInfo['ot']['forms_name'] = "在线预约";
        }
        //展开新版广告的配置参数
        $config = unserialize($baseInfo['config']);
        $baseInfo['bigadT'] = $config['bigadT'];
        $baseInfo['bigadC'] = $config['bigadC'];
        $baseInfo['bigadCTC'] = intval($config['bigadCTC']);
        $baseInfo['bigadCNN'] = $config['bigadCNN'];
        $baseInfo['miniadT'] = $config['miniadT'];
        $baseInfo['newhead'] = $config['newhead'];
        $baseInfo['search'] = $config['search'];
        $baseInfo['copT'] = $config['copT'];
        $baseInfo['userFood'] = $config['userFood'];
        if (isset($config['commA'])) {
            $baseInfo['commA'] = $config['commA'];
        } else {
            $baseInfo['commA'] = 0;
        }
        if (isset($config['commAs'])) {
            $baseInfo['commAs'] = $config['commAs'];
        } else {
            $baseInfo['commAs'] = 0;
        }
        if (isset($config['commP'])) {
            $baseInfo['commP'] = $config['commP'];
        } else {
            $baseInfo['commP'] = 0;
        }
        if (isset($config['commPs'])) {
            $baseInfo['commPs'] = $config['commPs'];
        } else {
            $baseInfo['commPs'] = 0;
        }
        if (isset($config['serverBtn'])) {
            $baseInfo['serverBtn'] = $config['serverBtn'];
        } else {
            $baseInfo['serverBtn'] = 1;
        }
        //幻灯片
        if ($baseInfo['index_style'] == "slide") {
            $slide = unserialize(Db::name('wd_xcx_base')->where("uniacid", $uniacid)->field('slide')->find()['slide']);
            if ($slide) {
                foreach ($slide as $key => $value) {
                    $slide[$key] = remote($uniacid, $value, 1);
                }
                $baseInfo['slide'] = $slide;
            } else {
                $baseInfo['slide'] = "";
            }
        }
        //新幻灯片
        if ($baseInfo['index_style'] == "newslide") {
            $slide = Db::name('wd_xcx_banner')->where("uniacid", $uniacid)->where("type", "banner")->where("flag", 1)->field("pic,url")->order('num desc,id desc')->select();
            $num = count($slide);
            $baseInfo['slide'] = array();
            if ($num > 0) {
                for ($i = 0; $i < $num; $i++) {
                    if ($slide[$i]['pic']) {
                        $baseInfo['slide'][$i]['pic'] = remote($uniacid, $slide[$i]['pic'], 1);
                    } else {
                        $baseInfo['slide'][$i]['pic'] = "";
                    }
                    $baseInfo['slide'][$i]['url'] = $slide[$i]['url'];
                }
            }
        }
        //开屏广告
        if ($config['bigadT'] == "1") {
            $slide = Db::name('wd_xcx_banner')->where("uniacid", $uniacid)->where("type", "bigad")->where('flag', 1)->field("pic")->order('num desc,id desc')->select();
            $num = count($slide);
            $baseInfo['bigad'] = array();
            for ($i = 0; $i < $num; $i++) {
                if ($slide[$i]['pic']) {
                    $slide[$i]['pic'] = remote($uniacid, $slide[$i]['pic'], 1);
                } else {
                    $slide[$i]['pic'] = "";
                }
                $baseInfo['bigad'][$i] = $slide[$i]['pic'];
            }
        }
        if ($config['bigadT'] == "2") {
            $slide = Db::name('wd_xcx_banner')->where("uniacid", $uniacid)->where("type", "bigad")->where('flag', 1)->field("pic,url")->order('num desc,id desc')->select();
            $num = count($slide);
            $baseInfo['bigad'] = array();
            for ($i = 0; $i < $num; $i++) {
                if ($slide[$i]['pic']) {
                    if (stristr($slide[$i]['pic'], 'http')) {
                        $baseInfo['bigad'][$i]['pic'] = $slide[$i]['pic'];
                    } else {
                        $baseInfo['bigad'][$i]['pic'] = remote($uniacid, $slide[$i]['pic'], 1);
                    }
                } else {
                    $baseInfo['bigad'][$i]['pic'] = "";
                }
                $baseInfo['bigad'][$i]['url'] = $slide[$i]['url'];
            }
        }
        //弹窗广告
        if ($config['miniadT'] == "1" || $config['miniadT'] == "2") {
//        if ($config['miniadT'] == "2") {
            $slide = Db::name('wd_xcx_banner')->where("uniacid", $uniacid)->where("type", "miniad")->where('flag', 1)->order('num desc,id desc')->select();
            $num = count($slide);
            $baseInfo['miniad'] = array();
            // dump($baseInfo);die;
            for ($i = 0; $i < $num; $i++) {
                $baseInfo['miniad'][$i] = array();
                if ($slide[$i]['pic']) {
                    if (stristr($slide[$i]['pic'], 'http')) {
                        $baseInfo['miniad'][$i]['pic'] = $slide[$i]['pic'];
                    } else {
                        $baseInfo['miniad'][$i]['pic'] = remote($uniacid, $slide[$i]['pic'], 1);
                    }
                } else {
                    $baseInfo['miniad'][$i]['pic'] = "";
                }
                $baseInfo['miniad'][$i]['descp'] = $slide[$i]['descp'];
                $baseInfo['miniad'][$i]['url'] = $slide[$i]['url'];
            }
            $baseInfo['miniadN'] = $config['miniadN'];
            $baseInfo['miniadB'] = $config['miniadB'];
        }
        $baseInfo['logo'] = remote($uniacid, $baseInfo['logo'], 1);
        $baseInfo['logo2'] = remote($uniacid, $baseInfo['logo2'], 1);
        if ($baseInfo['copyimg']) {
            $baseInfo['copyimg'] = remote($uniacid, $baseInfo['copyimg'], 1);
        }
        if ($baseInfo['video']) {
            if (strpos($baseInfo['video'], ".mp4") !== false || strpos($baseInfo['video'], ".MP4") !== false) {
                $baseInfo['video'] = $baseInfo['video'];
            } else {
                include 'videoInfo.php';
                $videoInfo = new videoInfo();
                if (preg_match("/^(http:\/\/|https:\/\/).*$/", $baseInfo['video'])) {
                    $videodata = $videoInfo->getVideoInfo($baseInfo['video']);
                    $baseInfo['video'] = $videodata['url'];
                } else {
                    $baseInfo['video'] = '';
                }
            }
        }
        if ($baseInfo['v_img']) {
            $baseInfo['v_img'] = remote($uniacid, $baseInfo['v_img'], 1);
        }
        if ($baseInfo['c_b_bg']) {
            $baseInfo['c_b_bg'] = remote($uniacid, $baseInfo['c_b_bg'], 1);
        }
        $vs1 = input('vs1');
        if ($vs1) {
            $baseInfo['tabbar'] = unserialize($baseInfo['tabbar_new']);
            $baseInfo['tabnum'] = $baseInfo['tabnum_new'];
            for ($i = 0; $i < 5; $i++) {
                if (isset($baseInfo['tabbar'][$i])) {
                    $baseInfo['tabbar'][$i] = unserialize($baseInfo['tabbar'][$i]);
                    if ($baseInfo['tabbar'][$i]) {
                        if ($baseInfo['tabbar'][$i]) {
                            if ($baseInfo['tabbar'][$i]['tabbar'] == 1) {
                                if (!empty($baseInfo['tabbar'][$i]['tabimginput_1'])) {
                                    $baseInfo['tabbar'][$i]['tabimginput_1'] = remote($uniacid, $baseInfo['tabbar'][$i]['tabimginput_1'], 1);
                                }
                                if (!empty($baseInfo['tabbar'][$i]['tabimginput_2'])) {
                                    $baseInfo['tabbar'][$i]['tabimginput_2'] = remote($uniacid, $baseInfo['tabbar'][$i]['tabimginput_2'], 1);
                                }
                            }
                            if ($baseInfo['tabbar'][$i]['tabbar_linktype'] == "tel") {
                                $baseInfo['tabbar'][$i]['tabbar_type'] = "tel";
                            } elseif ($baseInfo['tabbar'][$i]['tabbar_linktype'] == "map") {
                                $baseInfo['tabbar'][$i]['tabbar_type'] = "map";
                            } elseif ($baseInfo['tabbar'][$i]['tabbar_linktype'] == "web") {
                                $baseInfo['tabbar'][$i]['tabbar_type'] = "web";
                            } elseif ($baseInfo['tabbar'][$i]['tabbar_linktype'] == "server") {
                                $baseInfo['tabbar'][$i]['tabbar_type'] = "server";
                            } else {
                                $baseInfo['tabbar'][$i]['tabbar_type'] = "Article";
                            }
                        }
                    }
                } else {
                    $baseInfo['tabbar'][$i] = "";
                }
            }
        } else {
            $baseInfo['tabbar'] = unserialize($baseInfo['tabbar']);
            if ($baseInfo['tabbar']) {
                $arrcount = count($baseInfo['tabbar']);
                for ($i = 0; $i < 5; $i++) {
                    if (isset($baseInfo['tabbar'][$i])) {
                        $baseInfo['tabbar'][$i] = unserialize($baseInfo['tabbar'][$i]);
                        if (is_numeric($baseInfo['tabbar'][$i]['tabbar_l'])) {
                            $cate_type = Db::name('wd_xcx_cate')->where("uniacid", $uniacid)->where("id", $baseInfo['tabbar'][$i]['tabbar_l'])->find();
                            if ($cate_type['type'] == "page") {
                                $baseInfo['tabbar'][$i]['type'] = 'page';
                            }
                            if ($cate_type['type'] == "coupon") {
                                $baseInfo['tabbar'][$i]['type'] = 'coupon';
                            }
                            if ($cate_type['list_type'] == 0 && $cate_type['type'] != "page" && $cate_type['type'] != "coupon") {
                                $baseInfo['tabbar'][$i]['type'] = 'listCate';
                            } elseif ($cate_type['list_type'] == 1 && $cate_type['type'] != "page" && $cate_type['type'] != "coupon") {
                                $baseInfo['tabbar'][$i]['type'] = 'list' . substr($cate_type['type'], 4, strlen($cate_type['type']));
                            }
                        }
                        if (strpos($baseInfo['tabbar'][$i]['tabbar_p1'], "http") !== false) {
                            $baseInfo['tabbar'][$i]['tabbar_p1'] = $baseInfo['tabbar'][$i]['tabbar_p1'];
                        } else {
                            $baseInfo['tabbar'][$i]['tabbar_p1'] = remote($uniacid, $baseInfo['tabbar'][$i]['tabbar_p1'], 1);
                        }
                        if (strpos($baseInfo['tabbar'][$i]['tabbar_p2'], "http") !== false) {
                            $baseInfo['tabbar'][$i]['tabbar_p2'] = $baseInfo['tabbar'][$i]['tabbar_p2'];
                        } else {
                            $baseInfo['tabbar'][$i]['tabbar_p2'] = remote($uniacid, $baseInfo['tabbar'][$i]['tabbar_p2'], 1);
                        }
                    } else {
                        $baseInfo['tabbar'][$i] = "";
                    }
                }
            } else {
                $baseInfo['tabbar_t'] = 0;
            }
        }
        $userinfo = $this->dopageglobaluserinfo();
        $baseInfo['userinfo'] = $userinfo;
        $adata['data'] = $baseInfo;
        return json_encode($adata);
    }

    //小程序端流水页获取用户信息
    public function dopagealluserinfo()
    {
        $uniacid = input('uniacid');
        $suid = input('suid');
        $source = input('source');
        $newuserinfo = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->find();
        $res['data'] = $newuserinfo;
        return json_encode($res);
    }

    // 获取全局情况
    public function dopageglobaluserinfo()
    {
        $uniacid = input('uniacid');
        $openid = input('openid');
        $source = input('source');
        if ($source == 1) {
            $newuserinfo = Db::name('wd_xcx_user')->where("uniacid", $uniacid)->where("openid", $openid)->find();
            $parent_id = $newuserinfo['parent_id'];
            if ($parent_id != '0') {
                $tjr = Db::name('wd_xcx_user')->where("uniacid", $uniacid)->where("openid", $parent_id)->field("openid,fxs")->find();
                $tjrname = Db::name('wd_xcx_user')->where("uniacid", $uniacid)->where("openid", $tjr['openid'])->field("nickname")->find();
                if ($tjr['fxs'] == 2) {
                    $newuserinfo['tjr'] = rawurldecode($tjrname['nickname']);
                } else {
                    $newuserinfo['tjr'] = "您是由平台方推荐";
                }
            } else {
                $newuserinfo['tjr'] = "您是由平台方推荐";
            }
        } elseif ($source == 4) {
            $newuserinfo = Db::name('wd_xcx_baidu_user')->where("uniacid", $uniacid)->where("openid", $openid)->find();
            // $parent_id = $newuserinfo['parent_id'];
            // if ($parent_id != '0') {
            //     $tjr = Db::name('wd_xcx_baidu_user')->where("uniacid", $uniacid)->where("openid", $parent_id)->field("openid,fxs")->find();
            //     $tjrname = Db::name('wd_xcx_baidu_user')->where("uniacid", $uniacid)->where("openid", $tjr['openid'])->field("nickname")->find();
            //     if ($tjr['fxs'] == 2) {
            //         $newuserinfo['tjr'] = rawurldecode($tjrname['nickname']);
            //     } else {
            //         $newuserinfo['tjr'] = "您是由平台方推荐";
            //     }
            // } else {
            //     $newuserinfo['tjr'] = "您是由平台方推荐";
            // }
        }elseif($source == 6){
            $newuserinfo = Db::name('wd_xcx_qq_user')->where("uniacid", $uniacid)->where("openid", $openid)->find();
        }

        if (isset($newuserinfo['nickname'])) {
            $newuserinfo['nickname'] = rawurldecode($newuserinfo['nickname']);
        }

        $res['data'] = $newuserinfo;
        return json_encode($res);
    }

    // 获取全局情况
    public function dopagegetSuperUserInfo()
    {
        $uniacid = input('uniacid');
        $suid = input('suid');
        $source = input('source');
        $newuserinfo = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->find();
        $parent_id = $newuserinfo['parent_id'];
        if ($parent_id != '0') {
            $tjr = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $parent_id)->field("fxs, phone")->find();
            if ($tjr['fxs'] == 2) {
                if ($source == '1') {
                    $user = Db::name('wd_xcx_user')->where("uniacid", $uniacid)->where("suid", $parent_id)->field("nickname")->find();
                    $newuserinfo['tjr'] = rawurldecode($user['nickname']);
                } else if ($source == '2') {
                    $user = Db::name('wd_xcx_ali_user')->where("uniacid", $uniacid)->where("suid", $parent_id)->field("nick_name")->find();
                    $newuserinfo['tjr'] = rawurldecode($user['nick_name']);
                } else if ($source == '3') {
                    $newuserinfo['tjr'] = $tjr['phone'];
                }
            } else {
                $newuserinfo['tjr'] = "您是由平台方推荐";
            }
        } else {
            $newuserinfo['tjr'] = "您是由平台方推荐";
        }

        //if(isset($newuserinfo['nickname'])){
        // $newuserinfo['nickname'] = rawurldecode($newuserinfo['nickname']);
        //}

        // if($source == '1')
        //  $newuserinfo['avatar'] = Db::name('wd_xcx_user')->where("uniacid", $uniacid)->where("suid", $suid)->value("avatar");
        // else if($source == '2')
        //  $newuserinfo['avatar'] = Db::name('wd_xcx_ali_user')->where("uniacid", $uniacid)->where("suid", $suid)->value("avatar");
        // else if($source == '3')
        //  $newuserinfo['avatar'] = '';
        $userinfo = $this->getnameandavatar($source, $uniacid, $suid);
        $newuserinfo['avatar'] = $userinfo['avatar'];
        $newuserinfo['nickname'] = $userinfo['nickname'];

        $res['data'] = $newuserinfo;
        return json_encode($res);
    }

    public function doPageAbout()
    {
        $uniacid = input('uniacid');
        $aboutInfo = Db::name('wd_xcx_about')->where("uniacid", $uniacid)->find();
        //老幻灯片
        if ($aboutInfo['header'] == "2") {
            $slideAll = Db::name('wd_xcx_base')->where("uniacid", $uniacid)->field("slide")->find();
            $aboutInfo['slide'] = unserialize($slideAll['slide']);
            $num = count($aboutInfo['slide']);
            for ($i = 0; $i < $num; $i++) {
                $aboutInfo['slide'][$i] = remote($uniacid, $aboutInfo['slide'][$i], 1);
            }
        }
        //新幻灯片
        if ($aboutInfo['header'] == "3") {
            $slide = Db::name('wd_xcx_banner')->where("uniacid", $uniacid)->where("type", "banner")->where("flag", 1)->field("pic,url")->order('num desc,id desc')->select();
            $num = count($slide);
            $aboutInfo['slide'] = array();
            for ($i = 0; $i < $num; $i++) {
                $aboutInfo['slide'][$i]['pic'] = remote($uniacid, $slide[$i]['pic'], 1);
                $aboutInfo['slide'][$i]['url'] = $slide[$i]['url'];
            }
        }
        $adata['data'] = $aboutInfo;
        return json_encode($adata);
    }

    public function doPageCommon()
    {
        $uniacid = input('uniacid');
        $copyright = Db::name('wd_xcx_base')->where("uniacid", $uniacid)->field("copyright,tel,tel_b,latitude,longitude,name,address")->find();
        $adata['data'] = $copyright;
        return json_encode($adata);
    }

    public function doPageProducts()
    {
        $uniacid = input('uniacid');
        $products = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->field("id,type,num,title,thumb,`desc`,buy_type")->order('num desc,id desc')->select();
        foreach ($products as &$row) {
            $row['thumb'] = remote($uniacid, $row['thumb'], 1);
        }
        $adata['data'] = $products;
        return json_encode($adata);
    }

    public function doPageProductsList()
    {
        $uniacid = input('uniacid');
        $pindex = max(1, intval(input("page")));
        $psize = 10;
        $begin = ($pindex - 1) * $psize;
        $ProductsList = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->field("id,type,num,title,thumb,`desc`,buy_type")->order('num desc,id desc')->limit($begin, $psize)->select();
        foreach ($ProductsList as &$row) {
            $row['thumb'] = remote($uniacid, $row['thumb'], 1);
        }
        $adata['data'] = $ProductsList;
        return json_encode($adata);
    }

    public function doPageProductsDetail()
    {
        $uniacid = input('uniacid');
        $id = intval(input("id"));
        $suid = input("suid");
        $ProductsDetail = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where("id", $id)->find();
        $ProductsDetail['collects'] = Db::name('wd_xcx_collect')->where("uniacid", $uniacid)->where("cid", $id)->where('type', 'showArt')->count();
        $ProductsDetail['likes'] = Db::name('wd_xcx_likes')->where("uniacid", $uniacid)->where("cid", $id)->where('type', 'showArt')->count();
        $ProductsDetail['is_collect'] = Db::name('wd_xcx_collect')->where("uniacid", $uniacid)->where("cid", $id)->where("suid", $suid)->where('type', 'showArt')->count();
        $ProductsDetail['is_like'] = Db::name('wd_xcx_likes')->where("uniacid", $uniacid)->where("cid", $id)->where("suid", $suid)->where('type', 'showArt')->count();


        if ($ProductsDetail['music_art_info'] == "") {
            $ProductsDetail['music_art_info']['music'] = "";
            $ProductsDetail['music_art_info']['musicTitle'] = "";
            $ProductsDetail['music_art_info']['music_price'] = "";
            $ProductsDetail['music_art_info']['autoPlay'] = "";
            $ProductsDetail['music_art_info']['loopPlay'] = "";
            $ProductsDetail['music_art_info']['art_price'] = "";
            $ProductsDetail['music_art_info']['musictype'] = "";
        } else {
            $ProductsDetail['music_art_info'] = unserialize($ProductsDetail['music_art_info']);
            if ($ProductsDetail['music_art_info']['autoPlay'] == "true") {
                $ProductsDetail['music_art_info']['autoPlay'] = 1;
            } else {
                $ProductsDetail['music_art_info']['autoPlay'] = 2;
            }
            if ($ProductsDetail['music_art_info']['loopPlay'] == "true") {
                $ProductsDetail['music_art_info']['loopPlay'] = 1;
            } else {
                $ProductsDetail['music_art_info']['loopPlay'] = 2;
            }
        }
        $artpay = 0;
        if ($ProductsDetail['music_art_info']['art_price'] == 0 || $ProductsDetail['music_art_info']['art_price'] == "") {  //不需要付费直接可播放状态为1
            $artpay = 1;
        } else {  //需要付费去查有没有付费记录
            if ($suid) {
                $artpayflag = Db::name('wd_xcx_video_pay')->where('suid', $suid)->where('pid', $id)->where("type", 3)->where('uniacid', $uniacid)->find();
                //1.如果有支付的记录
                if ($artpayflag) {
                    $artpay = 1;
                }
            }

        }
        $ProductsDetail['artpay'] = $artpay;
        $musicpay = 0;
        if ($ProductsDetail['music_art_info']['music_price'] == 0 || $ProductsDetail['music_art_info']['music_price'] == "") {  //不需要付费直接可播放状态为1
            $musicpay = 1;
        } else {  //需要付费去查有没有付费记录
            if ($suid) {
                $musicpayflag = Db::name('wd_xcx_video_pay')->where('suid', $suid)->where('pid', $id)->where('uniacid', $uniacid)->where("type", 2)->find();
                //1.如果有支付的记录
                if ($musicpayflag) {
                    $musicpay = 1;
                }
            }

        }
        $ProductsDetail['musicpay'] = $musicpay;
        if ($ProductsDetail['shareimg']) {
            $ProductsDetail['thumbimg'] = remote($uniacid, $ProductsDetail['shareimg'], 1);
            // if (strpos($ProductsDetail['thumbimg'], 'https') === false) {
            //     $ProductsDetail['thumbimg'] = "https" . substr($ProductsDetail['thumbimg'], 4);
            // }
        } else {
            $ProductsDetail['thumbimg'] = remote($uniacid, $ProductsDetail['thumb'], 1);
            // if (strpos($ProductsDetail['thumbimg'], 'https') === false) {
            //     $ProductsDetail['thumbimg'] = "https" . substr($ProductsDetail['thumbimg'], 4);
            // }
        }
        if (!$ProductsDetail['price']) {
            $ProductsDetail['price'] = 0;
        }
        if (intval($ProductsDetail['pro_flag']) > 0) {
            $ProductsDetail['navlist'] = Db::name('wd_xcx_art_navlist')->where("uniacid", $uniacid)->where("cid", intval($ProductsDetail['pro_flag']))->where('flag', 1)->order('num desc')->select();
            $ProductsDetail['navlistnum'] = count($ProductsDetail['navlist']);
        }
        $hits = $ProductsDetail['hits'] + 1;
        $data = array(
            'hits' => $hits
        );
        Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where("id", $id)->update($data);
        if ($ProductsDetail['edittime']) {
            $ProductsDetail['edittime'] = date("Y-m-d H:i:s", $ProductsDetail['edittime']);
        }
        if ($ProductsDetail['etime']) {
            $ProductsDetail['etime'] = date("Y-m-d H:i:s", $ProductsDetail['etime']);
        } else {
            $ProductsDetail['etime'] = date("Y-m-d H:i:s", $ProductsDetail['ctime']);
        }
        $ProductsDetail['ctime'] = date("Y-m-d H:i:s", $ProductsDetail['ctime']);
        if ($ProductsDetail['video']) {
            include __DIR__ . '/videoInfo.php';
            $videoInfo = new videoInfo();
            if (strpos($ProductsDetail['video'], ".mp4") !== false || strpos($ProductsDetail['video'], ".MP4") !== false) {
                $ProductsDetail['video'] = $ProductsDetail['video'];
            } else {
                if (preg_match("/^(http:\/\/|https:\/\/).*$/", $ProductsDetail['video'])) {
                    $videodata = $videoInfo->getVideoInfo($ProductsDetail['video']);
                    $ProductsDetail['video'] = $videodata['url'];
                } else {
                    $ProductsDetail['video'] = '';
                }
            }
        }
        $videopay = 0;
        if ($ProductsDetail['price'] == 0) {  //不需要付费直接可播放状态为1
            $videopay = 1;
        } else {  //需要付费去查有没有付费记录
            if ($suid) {
                $videopayflag = Db::name('wd_xcx_video_pay')->where("uniacid", $uniacid)->where("pid", $id)->where("suid", $suid)->where("type", 1)->find();
                //1.如果有支付的记录
                if ($videopayflag) {
                    $videopay = 1;
                }
            }

        }
        $ProductsDetail['videopay'] = $videopay;
        if ($ProductsDetail['labels']) {
            if (strpos($ProductsDetail['labels'], "http") !== false) {
                $ProductsDetail['labels'] = $ProductsDetail['labels'];
            } else {
                $ProductsDetail['labels'] = remote($uniacid, $ProductsDetail['labels'], 1);
            }
        } else {
            if (strpos($ProductsDetail['thumb'], "http") !== false) {
                $ProductsDetail['thumb'] = $ProductsDetail['thumb'];
            } else {
                $ProductsDetail['thumb'] = remote($uniacid, $ProductsDetail['thumb'], 1);
            }
        }
        $ProductsDetail['btn'] = Db::name('wd_xcx_cate')->where("uniacid", $uniacid)->where("id", $ProductsDetail['cid'])->find();
        $cateConf = Db::name('wd_xcx_cate')->where("uniacid", $uniacid)->where("id", $ProductsDetail['cid'])->field('cateconf')->find();
        $cateConf = unserialize($cateConf['cateconf']);
        $ProductsDetail['pmarb'] = $cateConf['pmarb'];
        $ProductsDetail['ptit'] = $cateConf['ptit'];
        $formset = $ProductsDetail['formset'];
        if ($formset != 0 && $formset != "") {
            $forms = Db::name('wd_xcx_formlist')->where("id", $formset)->find();
            $forms2 = unserialize($forms['tp_text']);
            $ProductsDetail['formdescs'] = $forms['descs'];
            $tp_text = [];
            if ($forms2) {
                foreach ($forms2 as $key => &$res) {
                    if ($key > 0) {
                        $tp_key = $key - 1;
                        if ($res['required'] == true) {
                            $tp_text[$tp_key]['ismust'] = 1;
                        } else {
                            $tp_text[$tp_key]['ismust'] = 0;
                        }
                        $tp_text[$tp_key]['name'] = $res['label'];
                        if ($res['field_type'] == '单行文本') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0] = 0;
                        } else if ($res['field_type'] == '多行文本') {
                            $tp_text[$tp_key]['type'] = 1;
                            $tp_text[$tp_key]['tp_text'] = '';
                        } else if ($res['field_type'] == '多选' || $res['field_type'] == '单选') {
                            if ($res['field_type'] == '多选') {
                                $tp_text[$tp_key]['type'] = 3;
                            } else {
                                $tp_text[$tp_key]['type'] = 4;
                            }
                            $tp_text[$tp_key]['tp_text'] = [];
                            foreach ($res['field_options']['options'] as $key1 => &$rec1) {
                                array_push($tp_text[$tp_key]['tp_text'], $rec1['label']);
                            }
                        } else if ($res['field_type'] == '下拉选') {
                            $tp_text[$tp_key]['type'] = 2;
                            $tp_text[$tp_key]['tp_text'] = [];
                            foreach ($res['field_options']['options'] as $key2 => &$rec2) {
                                array_push($tp_text[$tp_key]['tp_text'], $rec2['label']);
                            }
                        } else if ($res['field_type'] == '日期') {
                            $tp_text[$tp_key]['type'] = 7;
                        } else if ($res['field_type'] == '时间') {
                            $tp_text[$tp_key]['type'] = 11;
                        } else if ($res['field_type'] == '图片') {
                            $tp_text[$tp_key]['type'] = 5;
                            $tp_text[$tp_key]['tp_text'] = $res['field_options']['maxpic'];
                            $tp_text[$tp_key]['z_val'] = array();
                        } else if ($res['field_type'] == '手机号') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0] = 1;
                        } else if ($res['field_type'] == '身份证') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0] = 7;
                        }
                        $tp_text[$tp_key]['val'] = '';
                    }
                }
            }
        } else {
            $tp_text = "NULL";
        }
        $ProductsDetail['forms'] = $tp_text;
        $likeArt = Db::name('wd_xcx_products')->where("id", $id)->find();
        $ProductsDetail['likeArtList'] = array();
        if ($likeArt['glnews']) {
            $likeArt = unserialize($likeArt['glnews']);
            foreach ($likeArt as $v) {
                $likeArtArr = Db::name('wd_xcx_products')->where("id", $v)->field("id,num,thumb,art_type,`desc`,title,price,music_art_info,hits,ctime")->find();
                if($likeArtArr){
                    $likeArtArr['ctime'] = date('Y-m-d', $likeArtArr['ctime']);
                    $music_art_info = unserialize($likeArtArr['music_art_info']);
                    if ($likeArtArr['art_type'] == 1) {
                        $likeArtArr['price'] = $music_art_info['art_price'] ? floatval($music_art_info['art_price']) : 0;
                    } else if ($likeArtArr['art_type'] == 2) {
                        $likeArtArr['price'] = $likeArtArr['price'] ? floatval($likeArtArr['price']) : 0;
                    } else if ($likeArtArr['art_type'] == 3) {
                        $likeArtArr['price'] = $music_art_info['music_price'] ? floatval($music_art_info['music_price']) : 0;
                    }
                    if ($likeArtArr['thumb']) {
                        $likeArtArr['thumb'] = remote($uniacid, $likeArtArr['thumb'], 1);
                    }
                    array_push($ProductsDetail['likeArtList'], $likeArtArr);
                }
            }
            
        }
        $result['data'] = $ProductsDetail;
        return json_encode($result);
    }

    //17.08.04 新增留言功能 sudu8//
    public function doPageFormsConfig()
    {
        $uniacid = input('uniacid');
        $formsConfig = Db::name('wd_xcx_forms_config')->where("uniacid", $uniacid)->find();
        $formsConfig['t5'] = unserialize($formsConfig['t5']);
        $formsConfig['t6'] = unserialize($formsConfig['t6']);
        $formsConfig['c2'] = unserialize($formsConfig['c2']);
        $formsConfig['s2'] = unserialize($formsConfig['s2']);
        $formsConfig['con2'] = unserialize($formsConfig['con2']);
        //老幻灯片
        if ($formsConfig['forms_head'] == "slide") {
            $slideAll = Db::name('wd_xcx_base')->where("uniacid", $uniacid)->field("slide")->find();
            $formsConfig['slide'] = unserialize($slideAll['slide']);
            $num = count($formsConfig['slide']);
            for ($i = 0; $i < $num; $i++) {
                $formsConfig['slide'][$i] = $formsConfig['slide'][$i];
            }
        }
        //新幻灯片
        if ($formsConfig['forms_head'] == "newslide") {
            $slide = Db::name('wd_xcx_banner')->where("uniacid", $uniacid)->where("type", "banner")->field("pic,url")->order('num desc,id desc')->select();
            $num = count($slide);
            $formsConfig['slide'] = array();
            for ($i = 0; $i < $num; $i++) {
                $formsConfig['slide'][$i]['pic'] = remote($uniacid, $slide[$i]['pic'], 1);
                $formsConfig['slide'][$i]['url'] = $slide[$i]['url'];
            }
        }
        //单选两个
        if (!empty($formsConfig['single_num']) and $formsConfig['single_num'] != 0) {
            $single_num = 100 / $formsConfig['single_num'];
            if ($single_num > 100 or $single_num < 20) {
                $formsConfig['single_num'] = 100;
            } else {
                $formsConfig['single_num'] = $single_num;
            }
        } else {
            $formsConfig['single_num'] = 100;
        }
        if (empty($formsConfig['single_v'])) {
            $formsConfig['single_v'] = "";
        }
        if (!empty($formsConfig['s2']['s2num']) and $formsConfig['s2']['s2num'] != 0) {
            $single_num2 = 100 / $formsConfig['s2']['s2num'];
            if ($single_num2 > 100 or $single_num2 < 20) {
                $formsConfig['s2']['s2num'] = 100;
            } else {
                $formsConfig['s2']['s2num'] = $single_num2;
            }
        } else {
            $formsConfig['s2']['s2num'] = 100;
        }
        //复选的
        if (!empty($formsConfig['checkbox_num']) and $formsConfig['checkbox_num'] != 0) {
            $checkbox_num = 100 / $formsConfig['checkbox_num'];
            if ($checkbox_num > 100 or $checkbox_num < 20) {
                $formsConfig['checkbox_num'] = 100;
            } else {
                $formsConfig['checkbox_num'] = $checkbox_num;
            }
        } else {
            $formsConfig['checkbox_num'] = 100;
        }
        if (!empty($formsConfig['c2']['c2num']) and $formsConfig['c2']['c2num'] != 0) {
            $checkbox_num2 = 100 / $formsConfig['c2']['c2num'];
            if ($checkbox_num2 > 100 or $checkbox_num2 < 20) {
                $formsConfig['c2']['c2num'] = 100;
            } else {
                $formsConfig['c2']['c2num'] = $checkbox_num2;
            }
        } else {
            $formsConfig['c2']['c2num'] = 100;
        }
        $adata['data'] = $formsConfig;
        return json_encode($adata);
    }
    //表单提交  -- 系统表单 已弃用
    // public function doPageAddForms()
    // {
    //     $uniacid = input('uniacid');
    //     $formsConfig = Db::name('wd_xcx_forms_config')->where("uniacid", $uniacid)->find();
    //     if ($formsConfig['t5']) {
    //         $formsConfig['t5'] = unserialize($formsConfig['t5']);
    //     }
    //     if ($formsConfig['t6']) {
    //         $formsConfig['t6'] = unserialize($formsConfig['t6']);
    //     }
    //     if ($formsConfig['c2']) {
    //         $formsConfig['c2'] = unserialize($formsConfig['c2']);
    //     }
    //     if ($formsConfig['s2']) {
    //         $formsConfig['s2'] = unserialize($formsConfig['s2']);
    //     }
    //     if ($formsConfig['con2']) {
    //         $formsConfig['con2'] = unserialize($formsConfig['con2']);
    //     }
    //     if (input('tel')) {
    //         $tel = input('tel');
    //     } else {
    //         $tel = "";
    //     }
    //     if (input('wechat')) {
    //         $wechat = input('wechat');
    //     } else {
    //         $wechat = "";
    //     }
    //     if (input('address')) {
    //         $address = input('address');
    //     } else {
    //         $address = "";
    //     }
    //     if (input('date')) {
    //         $date = input('date');
    //     } else {
    //         $date = "";
    //     }
    //     if (input('time')) {
    //         $time = input('time');
    //     } else {
    //         $time = "";
    //     }
    //     if (input('single')) {
    //         $single = input('single');
    //     } else {
    //         $single = "";
    //     }
    //     if (input('checkbox')) {
    //         $checkbox = input('checkbox');
    //     } else {
    //         $checkbox = "";
    //     }
    //     if (input('content')) {
    //         $content = input('content');
    //     } else {
    //         $content = "";
    //     }
    //     if (input('t5')) {
    //         $t5 = input('t5');
    //     } else {
    //         $t5 = "";
    //     }
    //     if (input('t6')) {
    //         $t6 = input('t6');
    //     } else {
    //         $t6 = "";
    //     }
    //     if (input('s2')) {
    //         $s2 = input('s2');
    //     } else {
    //         $s2 = "";
    //     }
    //     if (input('c2')) {
    //         $c2 = input('c2');
    //     } else {
    //         $c2 = "";
    //     }
    //     if (input('con2')) {
    //         $con2 = input('con2');
    //     } else {
    //         $con2 = "";
    //     }
    //     $data = array(
    //         'uniacid' => input('uniacid'),
    //         'name' => input('name'),
    //         'tel' => $tel,
    //         'wechat' => $wechat,
    //         'address' => $address,
    //         'date' => $date,
    //         'timef' => $time,
    //         'single' => $single,
    //         'checkbox' => $checkbox,
    //         'content' => $content,
    //         't5' => $t5,
    //         't6' => $t6,
    //         's2' => $s2,
    //         'c2' => $c2,
    //         'con2' => $con2,
    //         'time' => time()
    //     );
    //     $result = Db::name('wd_xcx_forms')->insert($data);
    //     if ($result !== false && $formsConfig['mail_user'] !== NULL) {
    //         $mail_sendto = array();
    //         $mail_sendto = explode(",", $formsConfig['mail_sendto']);
    //         $row_mail_user = $formsConfig['mail_user'];
    //         $row_mail_pass = $formsConfig['mail_password'];
    //         $row_mail_name = $formsConfig['mail_user_name'];
    //         $row_name = $formsConfig['name'] . "： " . input('name') . "<br />";
    //         if ($formsConfig['tel_use']) {
    //             $row_tel = $formsConfig['tel'] . "： " . input('tel') . "<br />";
    //         } else {
    //             $row_tel = "";
    //         }
    //         if ($formsConfig['wechat_use']) {
    //             $row_wechat = $formsConfig['wechat'] . "： " . input('wechat') . "<br />";
    //         } else {
    //             $row_wechat = "";
    //         }
    //         if ($formsConfig['address_use']) {
    //             $row_address = $formsConfig['address'] . "： " . input('address') . "<br />";
    //         } else {
    //             $row_address = "";
    //         }
    //         if ($formsConfig['t5']['t5u']) {
    //             if ($formsConfig['t5']['t5u']) {
    //                 $row_t5 = $formsConfig['t5']['t5n'] . "： " . input('t5') . "<br />";
    //             } else {
    //                 $row_t5 = "";
    //             }
    //         } else {
    //             $row_t5 = "";
    //         }
    //         if ($formsConfig['t6']) {
    //             if ($formsConfig['t6']['t6u']) {
    //                 $row_t6 = $formsConfig['t6']['t6n'] . "： " . input('t6') . "<br />";
    //             } else {
    //                 $row_t6 = "";
    //             }
    //         } else {
    //             $row_t6 = "";
    //         }
    //         if ($formsConfig['date_use']) {
    //             $row_date = $formsConfig['date'] . "： " . input('date') . "<br />";
    //         } else {
    //             $row_date = "";
    //         }
    //         if ($formsConfig['time_use']) {
    //             $row_time = $formsConfig['time'] . "： " . input('time') . "<br />";
    //         } else {
    //             $row_time = "";
    //         }
    //         if ($formsConfig['single_use']) {
    //             $row_single = $formsConfig['single_n'] . "： " . input('single') . "<br />";
    //         } else {
    //             $row_single = "";
    //         }
    //         if ($formsConfig['s2']) {
    //             if ($formsConfig['s2']['s2u']) {
    //                 $row_s2 = $formsConfig['s2']['s2n'] . "： " . input('s2') . "<br />";
    //             } else {
    //                 $row_s2 = "";
    //             }
    //         } else {
    //             $row_s2 = "";
    //         }
    //         if ($formsConfig['checkbox_use']) {
    //             $row_checkbox = $formsConfig['checkbox_n'] . "： " . input('checkbox') . "<br />";
    //         } else {
    //             $row_checkbox = "";
    //         }
    //         if ($formsConfig['c2']) {
    //             if ($formsConfig['c2']['c2u']) {
    //                 $row_c2 = $formsConfig['c2']['c2n'] . "： " . input('c2') . "<br />";
    //             } else {
    //                 $row_c2 = "";
    //             }
    //         } else {
    //             $row_c2 = "";
    //         }
    //         if ($formsConfig['content_use']) {
    //             $row_content = $formsConfig['content_n'] . "： " . input('content') . "<br />";
    //         } else {
    //             $row_content = "";
    //         }
    //         if ($formsConfig['con2']) {
    //             if ($formsConfig['con2']['con2u']) {
    //                 $row_con2 = $formsConfig['con2']['con2n'] . "： " . input('con2') . "<br />";
    //             } else {
    //                 $row_con2 = "";
    //             }
    //         } else {
    //             $row_con2 = "";
    //         }
    //         $mail = new PHPMailer();
    //         $mail->CharSet = "utf-8";
    //         $mail->Encoding = "base64";
    //         $mail->SMTPSecure = "ssl";
    //         $mail->IsSMTP();
    //         $mail->Port = 465;
    //         $mail->Host = "smtp.qq.com";
    //         $mail->SMTPAuth = true;
    //         $mail->SMTPDebug = false;
    //         $mail->Username = $row_mail_user;
    //         $mail->Password = $row_mail_pass;
    //         $mail->setFrom($row_mail_user, $row_mail_name);
    //         foreach ($mail_sendto as $v) {
    //             $mail->AddAddress($v);
    //         }
    //         $mail->Subject = date("m-d", time()) . " - " . input('name');
    //         $mail->isHTML(true);
    //         $mail->Body = "<div style='height:40px;line-height:40px;font-size:16px;font-weight:bold;background:#7030A0;color:#fff;text-indent:10px;'>详细内容：</div><div style='line-height:30px;padding:15px;background:#f6f6f6'>" . $row_name . $row_tel . $row_wechat . $row_address . $row_t5 . $row_t6 . $row_date . $row_time . $row_single . $row_s2 . $row_checkbox . $row_c2 . $row_content . $row_con2
    //             . "<div style='line-height:40px;margin-top:10px;text-align:center;color:#888;font-size:12px'>" . $row_mail_name . "</div></div>";
    //         if (!$mail->send()) {
    //             $result = "send_err";
    //         } else {
    //             $result = "send_ok";
    //         }
    //     } else {
    //         $result = "form_insert_ok";
    //         $applet = Db::name('wd_xcx_applet')->where("id", $uniacid)->field('appID,appSecret')->find();
    //         if ($applet) {
    //             $mid = Db::name('wd_xcx_message')->where("uniacid", $uniacid)->where('flag', 2)->find();
    //             if ($mid) {
    //                 if ($mid['mid'] != "") {
    //                     $mids = $mid['mid'];
    //                     $url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=" . $applet['appID'] . "&secret=" . $applet['appSecret'];
    //                     $a_token = $this->_requestGetcurl($url);
    //                     if ($a_token) {
    //                         $url_m = "https://api.weixin.qq.com/cgi-bin/message/wxopen/template/send?access_token=" . $a_token['access_token'];
    //                         $formId = input('formid');
    //                         $ftitle = $formsConfig['forms_name'];
    //                         $ftime = date('Y-m-d H:i:s', time());
    //                         $fmsg = $formsConfig['success'];
    //                         $openid = input('openid');
    //                         $furl = $mid['url'];
    //                         $post_info = '{
    //                                   "touser": "' . $openid . '",
    //                                   "template_id": "' . $mids . '",
    //                                   "page": "' . $furl . '",
    //                                   "form_id": "' . $formId . '",
    //                                   "data": {
    //                                       "keyword1": {
    //                                           "value": "' . $ftitle . '",
    //                                           "color": "#173177"
    //                                       },
    //                                       "keyword2": {
    //                                           "value": "' . $ftime . '",
    //                                           "color": "#173177"
    //                                       },
    //                                       "keyword3": {
    //                                           "value": "' . $fmsg . '",
    //                                           "color": "#173177"
    //                                       }
    //                                   },
    //                                   "emphasis_keyword": "keyword1.DATA"
    //                                 }';
    //                         $this->_requestPost($url_m, $post_info);
    //                     }
    //                 }
    //             }
    //         }
    //     }
    //     $adata['data'] = $result;
    //     return json_encode($adata);
    // }
    public function doPageNav()
    {
        $type = input('type');
        $uniacid = input('uniacid');
        $nav = Db::name('wd_xcx_nav')->where("uniacid", $uniacid)->where("type", $type)->find();
        if ($nav) {
            $nav['number'] = 100 / $nav['number'] - $nav['box_p_lr'] * 2;
            if ($nav['statue'] == 1) {
                $nav_list = explode(",", $nav['url']);
                $nav['url'] = array();
                foreach ($nav_list as $row) {
                    $cate_list = Db::name('wd_xcx_cate')->where("uniacid", $uniacid)->where("id", $row)->field("id,cid,catepic,name,type,list_type")->find();
                    if ($cate_list['type'] == 'page') {
                        $cate_list['list_type'] = 'page';
                    } else {
                        if ($cate_list['list_type'] == 0) {
                            $cate_list['list_type'] = 'listCate';
                        } else if ($cate_list['list_type'] == 1) {
                            if ($cate_list['type'] == 'showPro') {
                                $cate_list['list_type'] = 'listPro';
                            } else {
                                $cate_list['list_type'] = 'listPic';
                            }
                        }
                    }
                    if (empty($cate_list['name_n'])) {
                        $cate_list['name_n'] = $cate_list['name'];
                    }
                    $cate_list['catepic'] = $cate_list['catepic'];
                    array_push($nav['url'], $cate_list);
                }
            } elseif ($nav['statue'] == 2) {
                $nav['url'] = Db::name('wd_xcx_navlist')->where("uniacid", $uniacid)->where("flag", '1')->order('num desc,id desc')->select();
                foreach ($nav['url'] as &$row) {
                    if ($row['type'] == 5) {
                        $row['url'] = urlencode($row['url']);
                    }
                    $row['pic'] = remote($uniacid, $row['pic'], 1);
                }
            } else {
            }
        }
        $adata['data'] = $nav;
        return json_encode($adata);
    }

    public function doPageindexCop()
    {
        $type = input("type");
        $uniacid = input("uniacid");
        $now = time();
        $prefix = config('database.prefix');
        $indexCopAll = Db::query("SELECT * FROM {$prefix}wd_xcx_coupon WHERE uniacid = {$uniacid} and flag = 1 and (etime > {$now} or etime = 0) order by num desc,id desc");
        if ($indexCopAll) {
            $indexCopOne = $indexCopAll[0];
            if ($indexCopOne) {
                if ($indexCopOne['btime']) {
                    $indexCopOne['btime'] = date("Y-m-d", $indexCopOne['btime']);
                }
                if ($indexCopOne['etime']) {
                    $indexCopOne['etime'] = date("Y-m-d", $indexCopOne['etime']);
                }
            }
            return json_encode(array('data' => $indexCopOne));
        } else {
            return json_encode(array('data' => 1));
        }
    }

    //170820 首页推荐区块横排、竖排内容
    public function doPageIndex_hot()
    {
        $uniacid = input('uniacid');
        $list_x = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where("is_sale", 0)->where("type_x", 1)->field("id,type,num,title,thumb,`desc`,buy_type,is_more,uniacid")->order('num desc,id desc')->select();
        foreach ($list_x as &$row) {
            $row['thumb'] = remote($uniacid, $row['thumb'], 1);
            if ($row['type'] == "showPro" && $row['is_more'] == 1) {
                $row['type'] = "showPro_lv";
            }
        }
        // 获取最大推荐数
        $base = Db::name('wd_xcx_base')->where("uniacid", $uniacid)->find();
        $max_pt = $base['sptj_max'];
        $max_sp = $base['sptj_max_sp'];
        $prefix = config('database.prefix');
        $list_y = Db::query("SELECT id,type,num,title,thumb,ctime,hits,`desc`,price,market_price,sale_num,buy_type,is_more FROM {$prefix}wd_xcx_products WHERE type_y=1 and flag = 1 and is_sale=0 and uniacid = " . $uniacid . " and (type = 'showArt' or type = 'showPic') ORDER BY num DESC,id DESC LIMIT 0,{$max_pt}");
        foreach ($list_y as &$row) {
            $row['thumb'] = remote($uniacid, $row['thumb'], 1);
            $row['ctime'] = date("y-m-d H:i:s", $row['ctime']);
            if ($row['type'] == "showPro" && $row['is_more'] == 1) {
                $row['type'] = "showPro_lv";
            }
        }
        $list_y_sp = Db::query("SELECT id,type,num,title,thumb,ctime,hits,`desc`,price,market_price,sale_num,buy_type,is_more,uniacid FROM {$prefix}wd_xcx_products WHERE type_y=1 and is_sale=0 and flag = 1 and uniacid = " . $uniacid . " and (type = 'showPro' or type = 'showProMore') ORDER BY num DESC,id DESC LIMIT 0,{$max_sp}");
        foreach ($list_y_sp as &$row) {
            $row['thumb'] = remote($uniacid, $row['thumb'], 1);
            $row['ctime'] = date("y-m-d H:i:s", $row['ctime']);
            if ($row['type'] == "showPro" && $row['is_more'] == 1) {
                $row['type'] = "showPro_lv";
            }
        }
        $Index_hot = array();
        $Index_hot['list_x'] = $list_x;
        $Index_hot['list_y'] = $list_y;
        $Index_hot['list_y_sp'] = $list_y_sp;
        $result['data'] = $Index_hot;
        return json_encode($result);
    }

    //首页推荐栏目
    public function doPageIndex_cate()
    {
        $uniacid = input('uniacid');
        $index_cate = Db::name('wd_xcx_cate')->where("uniacid", $uniacid)->where("cid", 0)->where("show_i", 1)->where("statue", 1)->field("id,cid,num,name,ename,type,list_type,list_style,list_tstyle,list_stylet,catepic")->order('num desc,id desc')->select();
        //一级分类循环
        foreach ($index_cate as $key => $row) {
            $id = $row['id'];//一级栏目ID
            $index_cate[$key]['catepic'] = remote($uniacid, $row['catepic'], 1);
            if ($row['type'] == 'showPic' or $row['type'] == 'showArt' or $row['type'] == 'showPro') {
                if ($row['list_type'] == 0) {//展示子栏目，获取子栏目的内容 栏目标题等
                    $index_cate[$key]['l_type'] = 'listCate';
                    $index_cate[$key]['list'] = array();//一级栏目list数组
                    $index_cate[$key]['list'] = Db::name('wd_xcx_cate')->where("uniacid", $uniacid)->where("cid", $id)->where("statue", 1)->field("id,cid,num,name,ename,catepic,cdesc,list_style,list_tstyle,type")->order('num desc,id desc')->select();//写入一级栏目list数组
                    foreach ($index_cate[$key]['list'] as $key2 => $row2) {
                        if ($index_cate[$key]['list'][$key2]['type'] == 'showPro') {
                            $index_cate[$key]['list'][$key2]['type'] = 'listPro';
                        } else {
                            $index_cate[$key]['list'][$key2]['type'] = 'listPic';
                        }
                        $index_cate[$key]['list'][$key2]['catepic'] = remote($uniacid, $row2['catepic'], 1);
                    }
                } else if ($row['list_type'] == 1) {//展示栏目内容，获取文章标题等
                    if ($index_cate[$key]['type'] == 'showPro') {
                        $index_cate[$key]['l_type'] = 'listPro';
                    } else {
                        $index_cate[$key]['l_type'] = 'listPic';
                    }
                    $index_cate[$key]['list'] = array();//一级栏目list数组
                    $index_cate[$key]['list'] = Db::name('wd_xcx_products')->where("is_sale", 0)->where("uniacid", $uniacid)->where("pcid", $id)->where("flag", 1)->where("type_i", 1)->field("id,num,type_i,title,thumb,hits,type,ctime,edittime,`desc`,price,market_price,sale_num,sale_tnum,is_more,buy_type")->order('num desc,id desc')->select();//写入一级栏目list数组
                    foreach ($index_cate[$key]['list'] as $key2 => $row2) {
                        $index_cate[$key]['list'][$key2]['ctime'] = date("y-m-d H:i:s", $index_cate[$key]['list'][$key2]['ctime']);
                        if ($index_cate[$key]['list'][$key2]['edittime'] > 0) {
                            $index_cate[$key]['list'][$key2]['edittime'] = date("y-m-d H:i:s", $index_cate[$key]['list'][$key2]['edittime']);
                        } else {
                            $index_cate[$key]['list'][$key2]['edittime'] = 0;
                        }
                        $index_cate[$key]['list'][$key2]['thumb'] = remote($uniacid, $row2['thumb'], 1);
                        $index_cate[$key]['list'][$key2]['sale_num'] = intval($index_cate[$key]['list'][$key2]['sale_num']) + intval($index_cate[$key]['list'][$key2]['sale_tnum']);
                        if ($row2['is_more'] == 1 && $row2['type'] == 'showPro') {
                            $index_cate[$key]['list'][$key2]['type'] = 'showPro_lv';
                        }
                    }
                }
            } else if ($row['type'] == 'showWxapps') {
                if ($row['list_type'] == 0) {//展示子栏目，获取子栏目的内容 栏目标题等
                    $index_cate[$key]['l_type'] = 'listCate';
                    $index_cate[$key]['list'] = array();//一级栏目list数组
                    $index_cate[$key]['list'] = Db::name('wd_xcx_cate')->where("uniacid", $uniacid)->where("cid", $id)->where("statue", 1)->field("id,cid,num,name,ename,catepic,cdesc,list_style,list_tstyle")->order('num desc,id desc')->select();//写入一级栏目list数组
                    foreach ($index_cate[$key]['list'] as $key2 => $row2) {
                        $index_cate[$key]['list'][$key2]['catepic'] = $row2['catepic'];
                    }
                } else if ($row['list_type'] == 1) {//展示栏目内容，获取文章标题等
                    $index_cate[$key]['l_type'] = 'listPic';
                    $index_cate[$key]['list'] = array();//一级栏目list数组
                    $index_cate[$key]['list'] = Db::name('wd_xcx_wxapps')->where("uniacid", $uniacid)->where("pcid", $id)->where("type_i", 1)->field("id,num,title,type,thumb,appId,path,`desc`")->order('num desc,id desc')->select();//写入一级栏目list数组
                    foreach ($index_cate[$key]['list'] as $key2 => $row2) {
                        $index_cate[$key]['list'][$key2]['thumb'] = remote($uniacid, $row2['thumb'], 1);
                    }
                    // var_dump($index_cate[$key]['list']);
                }
            } else if ($row['type'] == 'page') {
                if ($row['list_type'] == 0) {//展示子栏目，获取子栏目的内容 栏目标题等
                    $index_cate[$key]['l_type'] = 'page';
                    $index_cate[$key]['list'] = array();//一级栏目list数组
                    $index_cate[$key]['list'] = Db::name('wd_xcx_cate')->where("uniacid", $uniacid)->where("cid", $id)->where("statue", 1)->field("id,cid,num,name,ename,catepic,cdesc,list_style,list_tstyle,type")->order('num desc,id desc')->select();//写入一级栏目list数组
                    //var_dump($index_cate[$key]['list']);
                    foreach ($index_cate[$key]['list'] as $key2 => $row2) {
                        $index_cate[$key]['list'][$key2]['catepic'] = $row2['catepic'];
                    }
                    //var_dump($index_cate[$key]['list']);
                    //var_dump("aaaa");
                } else if ($row['list_type'] == 1) {//展示栏目内容，获取文章标题等
                    $index_cate[$key]['l_type'] = 'page';
                    $index_cate[$key]['list'] = array();//一级栏目list数组
                    $index_cate[$key]['list'] = Db::name('wd_xcx_cate')->where("uniacid", $uniacid)->where("id", $id)->where("statue", 1)->field("id,cid,num,name,ename,catepic,cdesc,list_style,list_tstyle")->order('num desc,id desc')->select();//写入一级栏目list数组
                    foreach ($index_cate[$key]['list'] as $key2 => $row2) {
                        $index_cate[$key]['list'][$key2]['catepic'] = $row2['catepic'];
                        $index_cate[$key]['list'][$key2]['type'] = "page";
                    }
                    //var_dump($index_cate[$key]['list']);
                    //var_dump("bbbb");
                }
            }
        }
        $adata['data'] = $index_cate;
        return json_encode($adata);
    }

    //170821 获取列表页列表
    public function doPagelistPic()
    {
        $uniacid = input('uniacid');
        $pindex = max(1, intval(input('page')));
        $cid = intval(input('cid'));
        $type = input('type');
        $suid = input('suid');

        // 判断栏目等级 根据等级显示不同的信息
        if ($type != 'showPro' && $type != 'reserve') {
            $cateinfos = Db::name('wd_xcx_cate')->where("uniacid", $uniacid)->where("id", $cid)->field("id,cid,type,pagenum")->find();

        } else if ($type == 'showPro') {
            $cateinfos = Db::name('wd_xcx_flashsale_cate')->where("uniacid", $uniacid)->where("id", $cid)->where("catefor", 'flashsale')->find();

        } else if ($type == 'reserve') {
            $cateinfos = Db::name('wd_xcx_flashsale_cate')->where("uniacid", $uniacid)->where("id", $cid)->where("catefor", 'reserve')->field("id,cid,type,pagenum")->find();
        }
        $is_top = $cateinfos['cid'];
        $psize = $cateinfos['pagenum'];

        if ($cateinfos['cid'] == 0) {
            $pcid = $cateinfos['id'];
            $slid = 'pcid';
        } else {
            $pcid = $cateinfos['cid'];
            $slid = 'cid';
        }

        // 获取顶级栏目基础信息
        if ($type != 'showPro' && $type != 'reserve') {
            $cateinfo = Db::name('wd_xcx_cate')->where("uniacid", $uniacid)->where("id", $pcid)->field("id,name,ename,type,list_type,list_style,list_tstyle,list_tstylel,list_stylet,list_style_more,randid,slide_is")->find();
        } else if ($type == 'showPro') {
            $cateinfo = Db::name('wd_xcx_flashsale_cate')->where("uniacid", $uniacid)->where("id", $pcid)->where("catefor", 'flashsale')->field("id,name,ename,type,list_type,list_style,list_tstyle,list_tstylel,list_stylet,list_style_more,randid,slide_is")->find();
        } else if ($type == 'reserve') {
            $cateinfo = Db::name('wd_xcx_flashsale_cate')->where("uniacid", $uniacid)->where("id", $pcid)->where("catefor", 'reserve')->field("id,name,ename,type,list_type,list_style,list_tstyle,list_tstylel,list_stylet,list_style_more,randid,slide_is")->find();
        }

        if (isset($cateinfo['randid'])) {
            $cateslide = Db::name('wd_xcx_products_url')->where("randid", $cateinfo['randid'])->field("url")->select();
            $cateinfo['cateslide'] = [];
            foreach ($cateslide as $v) {
                array_push($cateinfo['cateslide'], remote($uniacid, $v['url'], 1));
            }
        } else {
            $cateinfo['cateslide'] = [];
        }
        //当前顶级栏目改为 全部
        if ($type != 'showPro' && $type != 'reserve') {
            $cate_first = Db::name('wd_xcx_cate')->where("uniacid", $uniacid)->where("id", $pcid)->field("id,name")->find();
        } else if ($type == 'showPro') {
            $cate_first = Db::name('wd_xcx_flashsale_cate')->where("uniacid", $uniacid)->where("id", $pcid)->where("catefor", 'flashsale')->field("id,name")->find();
        } else if ($type == 'reserve') {
            $cate_first = Db::name('wd_xcx_flashsale_cate')->where("uniacid", $uniacid)->where("id", $pcid)->where("catefor", 'reserve')->field("id,name")->find();
        }
        $cate_first['name'] = "全部";
        //获取子栏目
        if ($type != 'showPro' && $type != 'reserve') {
            $cateinfo['cate'] = Db::name('wd_xcx_cate')->where("uniacid", $uniacid)->where("cid", $pcid)->where("statue", 1)->field("id,num,name")->order('num desc')->select();
        } else if ($type == 'showPro') {
            $cateinfo['cate'] = Db::name('wd_xcx_flashsale_cate')->where("uniacid", $uniacid)->where("cid", $pcid)->where("statue", 1)->where("catefor", 'flashsale')->field("id,num,name")->order('num desc')->select();
        } else if ($type == 'reserve') {
            $cateinfo['cate'] = Db::name('wd_xcx_flashsale_cate')->where("uniacid", $uniacid)->where("cid", $pcid)->where("statue", 1)->where("catefor", 'reserve')->field("id,num,name")->order('num desc')->select();
        }

        // 全部栏目数组
        array_unshift($cateinfo['cate'], $cate_first);
        //获取当前栏目基础信息
        if ($type != 'showPro' && $type != 'reserve') {
            $cateinfo['this'] = Db::name('wd_xcx_cate')->where("uniacid", $uniacid)->where("id", $cid)->field("id,name,ename,type,list_type,list_style,list_tstyle,list_tstylel,list_stylet")->find();
        } else if ($type == 'showPro') {
            $cateinfo['this'] = Db::name('wd_xcx_flashsale_cate')->where("uniacid", $uniacid)->where("id", $cid)->where("catefor", 'flashsale')->field("id,name,ename,type,list_type,list_style,list_tstyle,list_tstylel,list_stylet")->find();
        } else if ($type == 'reserve') {
            $cateinfo['this'] = Db::name('wd_xcx_flashsale_cate')->where("uniacid", $uniacid)->where("id", $cid)->where("catefor", 'reserve')->field("id,name,ename,type,list_type,list_style,list_tstyle,list_tstylel,list_stylet")->find();
        }

        if (!$cateinfo['this']['list_style']) {
            $cateinfo['this']['list_style'] = 2;
        }
        if (isset($cateinfo['this']['list_stylet']) && !$cateinfo['this']['list_stylet']) {
            $cateinfo['this']['list_stylet'] = "t1";
        }

        if ($cateinfo['type'] == 'showArt' or $cateinfo['type'] == 'showPic' or $cateinfo['type'] == 'showPro' or $cateinfo['type'] == 'showProMore') {
            if ($cateinfo['type'] == 'showPro') {
                $cateinfo['type'] = 'showProMore';
            }
            
            //获取所有数量
            $cateinfo['num'] = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where($slid, $cid)->where('type', $type) ->where('is_sale', 0)->field('id') ->select();
            //获取栏目文章
            $cateinfo['list'] = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where($slid, $cid)->where('type', $type) ->where('is_sale', 0)->field('id,type,num,title,thumb,ctime,edittime,etime,hits,`desc`,price,market_price,sale_num,is_more,buy_type,sale_tnum,discount_status,discount,art_type, music_art_info,text')->order('num desc,id desc')->limit(($pindex - 1) * $psize, $psize)->select();
            foreach ($cateinfo['list'] as &$row) {
                $row['discount_pro'] = 0;
                if($type == 'showArt'){
                    $music_art_info = unserialize($row['music_art_info']);
                    if($row['art_type'] == 1){
                        $row['price'] = $music_art_info['art_price'] ? $music_art_info['art_price'] : 0;
                    }else if($row['art_type'] == 3){
                        $row['price'] = $music_art_info['music_price'] ? $music_art_info['music_price'] : 0;
                    }
                    $row['creattime'] = $row['edittime'] ? date("Y-m-d", $row['edittime']) : date("Y-m-d", $row['ctime']);
                }else if ($type == 'showProMore' || $type == 'reserve') {
                    $userinfo = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where('id', $suid)->find();
                    $discount_status = intval($row['discount_status']);
                    if ($discount_status == 2) {
                        $row['discount'] = unserialize($row['discount']);
                        foreach ($row['discount'] as $key => $value) {
                            if ($userinfo['grade'] == $value['grade']) {
                                if (floatval($value['discount']) > 0) {
                                    $row['discount_pro'] = $value['discount'];
                                    break;
                                }
                            }
                        }
                    } else if ($row['discount_status'] == 1) {
                        $row['discount'] = Db::name('wd_xcx_vipgrade')->where('grade', $userinfo['grade'])->where('uniacid', $uniacid)->where('discount_flag', 1)->field('discount_grade')->find()['discount_grade'];
                        $row['discount_pro'] = floatval($row['discount']);
                    }
                }else if($type == 'showPic'){
                    $row['pic_num'] = $row['text'] ? count(unserialize($row['text'])) : 0;
                }


                if ($row['edittime'] > 0) {
                    $row['edittime'] = date("y-m-d H:i:s", $row['edittime']);
                } else {
                    $row['edittime'] = 0;
                }
                if ($row['etime']) {
                    $row['ctime'] = date("y-m-d H:i:s", $row['etime']);
                } else {
                    $row['ctime'] = date("y-m-d H:i:s", $row['ctime']);
                }
                $row['thumb'] = remote($uniacid, $row['thumb'], 1);
                if ($row['is_more'] == 1) {
                    $row['type'] = 'showPro_lv';
                }
                if ($row['is_more'] == 3) {
                    $pro_type_val = Db::name('wd_xcx_duo_products_type_value')->where('pid', $row['id'])->select();
                    if ($pro_type_val) {
                        foreach ($pro_type_val as $key => $value) {
                            $row['sale_num'] = $value['salenum'] + $value['vsalenum'];
                        }
                    }
                } else {
                    $row['sale_num'] = $row['sale_num'] + $row['sale_tnum'];
                }
            }
        } else if ($cateinfo['type'] == 'showWxapps') {
            //获取所有数量
            $cateinfo['num'] = Db::name('wd_xcx_wxapps')->where('uniacid', $uniacid)->where($slid, $cid)->field('id')->select();
            //获取栏目文章
            $cateinfo['list'] = Db::name('wd_xcx_wxapps')->where('uniacid', $uniacid)->where($slid, $cid)->field('id,type,num,title,thumb,appId,path,`desc`')->order('num desc,id desc')->limit(($pindex - 1) * $psize, $psize)->select();
            foreach ($cateinfo['list'] as &$row) {
                $row['thumb'] = remote($uniacid, $row['thumb'], 1);
            }
        }
        if ($cateinfo['list_style_more'] == 2 && $cateinfos['cid'] == 0) {
            if ($type != 'showPro' && $type != 'reserve') {
                $newcate = Db::name('wd_xcx_cate')->where('uniacid', $uniacid)->where("cid", $pcid)->field('id,num,name')->order('num desc,id desc')->select();
            } else if ($type == 'showPro') {
                $newcate = Db::name('wd_xcx_flashsale_cate')->where('uniacid', $uniacid)->where("catefor", 'flashsale')->where("cid", $pcid)->field('id,num,name')->order('num desc,id desc')->select();
            } else if ($type == 'reserve') {
                $newcate = Db::name('wd_xcx_flashsale_cate')->where('uniacid', $uniacid)->where("catefor", 'reserve')->where("cid", $pcid)->field('id,num,name')->order('num desc,id desc')->select();
            }
            foreach ($newcate as $key5 => &$rebs) {
                $listarr = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where("cid", $rebs['id'])->order('num desc,id desc')->select();
                if ($listarr) {
                    foreach ($listarr as $key6 => &$v) {
                        $v['thumb'] = remote($uniacid, $v['thumb'], 1);
                        if ($type != 'showPro' && $type != 'reserve') {
                            $v['gurl'] = "pages/" . $v['type'] . "/" . $v['type'] . "?id=" . $v['id'];
                        } else if ($type == 'showPro') {
                            $v['gurl'] = "pagesFlashSale/showPro/showPro?id=" . $v['id'];
                        } else if ($type == 'reserve') {
                            $v['gurl'] = "pagesReserve/proDetail/proDetail?id=" . $v['id'];
                        }
                    }
                }
                $rebs['goodsList'] = $listarr;
            }
            $cateinfo['newlist'] = $newcate;
        }
        $cateinfo['topcid'] = $cateinfos['cid'];
        $cateinfo['is_top'] = $is_top;
        $result["data"] = $cateinfo;
        return json_encode($result);
    }


    //获取所有栏目
    public function doPagelistAllPic()
    {
        $uniacid = input('uniacid');
        $type = input('type');
        $pindex = max(1, intval(input('page')));
        $data = [];
        if ($type == 'showProMore') {
            //获取所有的顶级分类
            $top_cate = Db::name('wd_xcx_cate')->where("uniacid", $uniacid)->where('cid', 0)->where('type', 'showPro')->field("id,name")->select();
            //获取所有顶级分类的子类
            foreach ($top_cate as $key => $value) {
                $tow_cate = Db::name('wd_xcx_cate')->where('cid', $value['id'])->field('id, name, pagenum, catepic')->select();
                if ($tow_cate) {
                    //获取子类内容
                    foreach ($tow_cate as $k => $v) {
                        if ($tow_cate[$k]['catepic']) {
                            $tow_cate[$k]['catepic'] = remote($uniacid, $tow_cate[$k]['catepic'], 1);
                        }

                        $prolist = Db::name('wd_xcx_products')->where('type', 'showProMore')->where('is_sale', 0)->where('cid', $v['id'])->field('id, type, is_more, thumb, title, desc, price, market_price, use_more')->limit($v['pagenum'])->select();
                        foreach ($prolist as $k1 => $v1) {
                            if ($prolist[$k1]['thumb']) {
                                $prolist[$k1]['thumb'] = remote($uniacid, $prolist[$k1]['thumb'], 1);
                            }
                            if ($v1['use_more'] == 1) {
                                $price = Db::name('wd_xcx_duo_products_type_value')->where('pid', $v1['id'])->column('price');
                                $prolist[$k1]['price'] = min($price);
                            }
                        }
                        $tow_cate[$k]['list'] = $prolist;

                    }
                    $top_cate[$key]['list'] = $tow_cate;
                } else {
                    $top_cate[$key]['list'] = '';
                }

            }
            $data['top_cate'] = $top_cate;
            return json_encode($data);
        } else if ($type == 'showPro') {
            //获取所有顶级分类
            $top_cate = Db::name('wd_xcx_flashsale_cate')->where('uniacid', $uniacid)->where('cid', 0)->where('catefor', 'flashsale')->select();
            //获取所有顶级分类的子类
            foreach ($top_cate as $key => $value) {
                $tow_cate = Db::name('wd_xcx_flashsale_cate')->where('cid', $value['id'])->where('catefor', 'flashsale')->field('id, name, pagenum, catepic')->select();
                if ($tow_cate) {
                    //获取子类内容
                    foreach ($tow_cate as $k => $v) {
                        if ($tow_cate[$k]['catepic']) {
                            $tow_cate[$k]['catepic'] = remote($uniacid, $tow_cate[$k]['catepic'], 1);
                        }
                        $prolist = Db::name('wd_xcx_products')->where('type', 'showPro')->where('is_sale', 0)->where('cid', $v['id'])->field('id, type, is_more, thumb, title, desc, price, market_price')->limit($v['pagenum'])->select();
                        foreach ($prolist as $k1 => $v1) {
                            if ($prolist[$k1]['thumb']) {
                                $prolist[$k1]['thumb'] = remote($uniacid, $prolist[$k1]['thumb'], 1);
                            }
                        }
                        $tow_cate[$k]['list'] = $prolist;

                    }
                    $top_cate[$key]['list'] = $tow_cate;
                } else {
                    $top_cate[$key]['list'] = '';
                }

            }
            $data['top_cate'] = $top_cate;
            return json_encode($data);


        } else if ($type == 'reserve') {
            //获取所有顶级分类
            $top_cate = Db::name('wd_xcx_flashsale_cate')->where('uniacid', $uniacid)->where('cid', 0)->where('catefor', 'reserve')->select();
            //获取所有顶级分类的子类
            foreach ($top_cate as $key => $value) {
                $tow_cate = Db::name('wd_xcx_flashsale_cate')->where('cid', $value['id'])->where('catefor', 'reserve')->field('id, name, pagenum, catepic')->select();
                if ($tow_cate) {
                    //获取子类内容
                    foreach ($tow_cate as $k => $v) {
                        if ($tow_cate[$k]['catepic']) {
                            $tow_cate[$k]['catepic'] = remote($uniacid, $tow_cate[$k]['catepic'], 1);
                        }
                        $prolist = Db::name('wd_xcx_products')->where('type', 'reserve')->where('is_sale', 0)->where('cid', $v['id'])->field('id, type, is_more, thumb, title, desc, price, market_price')->limit($v['pagenum'])->select();
                        foreach ($prolist as $k1 => $v1) {
                            if ($prolist[$k1]['thumb']) {
                                $prolist[$k1]['thumb'] = remote($uniacid, $prolist[$k1]['thumb'], 1);
                            }
                        }
                        $tow_cate[$k]['list'] = $prolist;

                    }
                    $top_cate[$key]['list'] = $tow_cate;
                } else {
                    $top_cate[$key]['list'] = '';
                }

            }
            $data['top_cate'] = $top_cate;
            return json_encode($data);

        }


    }


    public function doPagelistCate()
    {
        $uniacid = input('uniacid');
        $pindex = max(1, intval(input('page')));
        $cid = intval(input('cid'));
        // 获取顶级栏目基础信息
        $cateinfo = Db::name('wd_xcx_cate')->where('uniacid', $uniacid)->where("id", $cid)->field('id,name,ename,type,list_type,type,list_style,list_tstyle,list_tstylel,list_stylet,onlyid,slide_is')->find();
        $cateinfo['list'] = Db::name('wd_xcx_cate')->field('id,name,catepic,cdesc,list_style,list_tstyle,list_stylet,list_tstylel')->where('uniacid', $uniacid)->where("cid", $cid)->order('num desc,id desc')->select();
        foreach ($cateinfo['list'] as $ki => &$vi) {
            $vi['catepic'] = remote($uniacid, $vi['catepic'], 1);
        }
        if (isset($cateinfo['onlyid'])) {
            $cateslide = Db::name('wd_xcx_products_url')->where("randid", $cateinfo['onlyid'])->field("url")->select();
            $cateinfo['cateslide'] = [];
            foreach ($cateslide as $v) {
                array_push($cateinfo['cateslide'], remote($uniacid, $v['url'], 1));
            }
        } else {
            $cateinfo['cateslide'] = [];
        }
        if ($cateinfo['type'] == 'showPro') {
            $cateinfo['l_type'] = 'listPro';
        } else {
            $cateinfo['l_type'] = 'listPic';
        }
        foreach ($cateinfo['list'] as &$row) {
            $row['catepic'] = $row['catepic'];
        }
        //var_dump($cateinfo);
        $adata['data'] = $cateinfo;
        return json_encode($adata);
    }

    //170821婚纱专用页
    public function doPageshowPic()
    {
        $uniacid = input('uniacid');
        $id = intval(input('id'));
        $pics = Db::name('wd_xcx_products')->field('id,title,text,hits,cid,`desc`,buy_type,get_share_gz,thumb')->where('uniacid', $uniacid)->where("id", $id)->find();
        $pics['thumb'] = remote($uniacid, $pics['thumb'], 1);

        $pics['btn'] = Db::name('wd_xcx_cate')->field('pic_page_btn_zt,pic_page_bg')->where('uniacid', $uniacid)->where("id", $pics['cid'])->find();
        if ($pics['btn']) {
            $pics['btn']['pic_page_btn'] = $pics['btn']['pic_page_btn_zt'];
        }
        $data = array(
            'hits' => $pics['hits'] + 1,
        );
        Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where("id", $id)->update($data);
        if ($pics['text']) {
            $pics['text'] = unserialize($pics['text']);
            $num = count($pics['text']);
            for ($i = 0; $i < $num; $i++) {
                $pics['text'][$i] = remote($uniacid, $pics['text'][$i], 1);
            }
        }

        $adata['data'] = $pics;
        return json_encode($adata);
    }

    //商品详情显示
    public function doPageshowPro()
    {
        $uniacid = input('uniacid');
        $id = intval(input('id'));
        $suid = intval(input('suid'));
        $pro = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where("id", $id)->find();
        if ($pro['video'] != '') {
            if (strpos($pro['video'], ".mp4") !== false || strpos($pro['video'], ".MP4") !== false) {
                $pro['video'] = $pro['video'];
            } else {
                if (preg_match("/^(http:\/\/|https:\/\/).*$/", $pro['video'])) {
                    include 'videoInfo.php';
                    $videoInfo = new videoInfo();
                    $videodata = $videoInfo->getVideoInfo($pro['video']);
                    $pro['video'] = $videodata['url'];
                } else {
                    $pro['video'] = '';
                }
            }
        }
        $userinfo = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where('id', $suid)->find();
        $pro['discount_status'] = intval($pro['discount_status']);
        $pro['discount_price'] = 0;
        $pro['discount_pro'] = 0;
        if ($pro['discount_status'] == 2) {
            $pro['discount'] = unserialize($pro['discount']);
            foreach ($pro['discount'] as $key => $value) {
                if ($userinfo['grade'] == $value['grade']) {
                    if (floatval($value['discount']) > 0) {
                        $pro['discount_pro'] = $value['discount'];
                        $pro['discount_price'] = round($pro['price'] * floatval($value['discount']) * 0.1, 2) < 0.01 ? 0.01 : round($pro['price'] * floatval($value['discount']) * 0.1, 2);
                        break;
                    }
                }
            }
        } else if ($pro['discount_status'] == 1) {
            $pro['discount'] = Db::name('wd_xcx_vipgrade')->where('grade', $userinfo['grade'])->where('uniacid', $uniacid)->where('discount_flag', 1)->field('discount_grade')->find()['discount_grade'];
            $pro['discount'] = floatval($pro['discount']);
            $pro['discount_pro'] = $pro['discount'];
            if ($pro['discount'] > 0) {
                $pro['discount_price'] = round($pro['price'] * floatval($pro['discount'] * 0.1), 2) < 0.01 ? 0.01 : round($pro['price'] * floatval($pro['discount'] * 0.1), 2);
            }
        }

        if ($pro['sale_end_time'] > 0) {
            $pro['sale_end_time'] = $pro['sale_end_time'] - time();
            if ($pro['sale_end_time'] < 0) {
                $pro['sale_end_time'] = 0;
            }
        } else {
            $pro['sale_end_time'] = "true";
        }
        $data = array(
            'hits' => $pro['hits'] + 1,
        );
        Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where("id", $id)->update($data);

        if ($pro['text']) {
            $pro['text'] = unserialize($pro['text']);
            $num = count($pro['text']);
            for ($i = 0; $i < $num; $i++) {
                $pro['text'][$i] = remote($uniacid, $pro['text'][$i], 1);
            }
        }
        // 20170925  修改卖出总数
        $orders = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("pid", $id)->where("flag", ">", 0)->select();
        // if($pro['is_more']==1){
        //  if($orders){
        //      $allnumc = 0;
        //      foreach ($orders as &$rec) {
        //          if($pro['is_more']==1){
        //              $now = time();
        //              if($now>$rec['overtime'] && $rec['flag'] == 0){   //订单失效
        //                  $kdata['flag'] = -1;
        //                  Db::name('wd_xcx_order')->where('uniacid',$uniacid)->where("order_id",$res['order_id'])->update($kdata);
        //              }
        //          }
        //          $duo = $rec['order_duo'];
        //          $newduo = unserialize($duo);
        //          foreach ($newduo as $key=>&$res) {
        //              $allnumc+= $res[4];
        //          }
        //          $allnum[$key] = $allnumc;
        //      }
        //  }
        // }
        $sale_num = 0;
        if ($orders) {
            foreach ($orders as $rec) {
                $sale_num += $rec['num'];
            }
        }
        $pro['sale_num'] = $pro['sale_num'] + $sale_num;
        //20170925  新增我的购买量
        $myorders = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("pid", $id)->where("suid", $suid)->where("flag", ">=", 0)->select();
        $my_num = 0;
        // var_dump($myorders);
        // die();
        //判断我有没有收藏过
        $collectcount = 0;
        if ($suid) {
            $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where("id", $suid)->find();
            $collect = Db::name('wd_xcx_collect')->where('uniacid', $uniacid)->where("suid", $suid)->where("type", "reserve")->where("cid", $id)->count();
            if ($collect > 0) {
                $collectcount = 1;
            }
        }
        $pro['collectcount'] = $collectcount;
        //刷新所有商品已过期订单且未支付
        if ($pro['pro_kc'] >= 0 && $pro['is_more'] == 0) {
            $now = time();
            $onum = 0;
            $allorders = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("pid", $id)->where("overtime", "<", $now)->where("flag", "=", 0)->select();
            if ($allorders) {
                foreach ($allorders as $rec) {
                    $onum += $rec['num'];
                    $kdata['flag'] = -1;
                    $kdata['reback'] = 1;
                    Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $rec['order_id'])->update($kdata);
                }
                $ndata['pro_kc'] = $pro['pro_kc'] + $onum;
                Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where("id", $id)->update($ndata);
            }
        } else if ($pro['pro_kc'] < 0 && $pro['is_more'] == 0) {
            $now = time();
            $allorders = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("pid", $id)->where("overtime", "<", $now)->where("flag", "=", 0)->select();
            if ($allorders) {
                foreach ($allorders as $rec) {
                    $kdata['flag'] = -1;
                    $kdata['reback'] = 1;
                    Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $rec['order_id'])->update($kdata);
                }
            }
        }
        // if($pro['is_more']==1){
        //  $now = time();
        //  if($now>$orders['overtime'] && $orders['flag'] == 0){   //订单失效
        //      $kdata['flag'] = -1;
        //      Db::name('wd_xcx_order')->where('order_id',$id)->where('uniacid',$uniacid)->update($kdata);
        //  }
        // }
        if ($pro['is_more'] == 1) {
            $now = time();
            $onum = 0;
            $allorders = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("pid", $id)->where("overtime", "<", $now)->where("flag", "=", 0)->select();
            if ($allorders) {
                foreach ($allorders as $rec) {
                    $kdata['flag'] = -1;
                    Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $rec['order_id'])->update($kdata);
                }
            }
        }
        if ($myorders) {
            foreach ($myorders as $res) {
                $my_num += $res['num'];
            }
        }
        $pro['my_num'] = $my_num;
        $now = time();
        if ($pro['sale_time'] == 0) {
            $pro['is_sale'] = 1;
        } else {
            if ($pro['sale_time'] > $now) {
                $pro['is_sale'] = 0;
            } else {
                $pro['is_sale'] = 1;
            }
        }
        $pro['thumb'] = remote($uniacid, $pro['thumb'], 1);
        if ($pro['labels'] && $pro['is_more'] == 0) {
            $labels = explode(",", $pro['labels']);

            $pro['labels'] = $labels;
        } elseif ($pro['labels'] && $pro['is_more'] == 1) {
            $labels = unserialize($pro['labels']);
            $arrkk = array();
            if ($labels) {
                foreach ($labels as $key => $res) {
                    $vvkk = array($key, $res);
                    array_push($arrkk, $vvkk);
                }
            }
            $pro['labels'] = $arrkk;
        } else {
            $pro['labels'] = array();
        }
        if ($pro['more_type'] && $pro['tableis'] == 0) {
            $more_type = unserialize($pro['more_type']);
            $newmore = array_chunk($more_type, 4);
            $pro['more_type'] = $newmore;
            foreach ($pro['more_type'] as $key => $value) {
                $pro['more_type'][$key][5] = 0;
                if ($pro['discount_pro'] > 0) {
                    $pro['more_type'][$key][5] = round($value[1] * $pro['discount_pro'] * 0.1, 2) < 0.01 ? 0.01 : round($value[1] * $pro['discount_pro'] * 0.1, 2);
                }
            }
        }
        if ($pro['more_type_x']) {
            $more_type_x = unserialize($pro['more_type_x']);
            $pro['more_type_x'] = $more_type_x;
        }
        if ($pro['more_type_num']) {
            $more_type_num = unserialize($pro['more_type_num']);
            $pro['more_type_num'] = $more_type_num;
        }
        $formset = $pro['formset'];
        if ($formset != 0 && $formset != "") {
            $forms = Db::name('wd_xcx_formlist')->where("id", $formset)->find();
            $forms2 = unserialize($forms['tp_text']);
            $pro['formdescs'] = $forms['descs'];
            $tp_text = [];
            if ($forms2) {
                foreach ($forms2 as $key => &$res) {
                    if ($key > 0) {
                        $tp_key = $key - 1;
                        if ($res['required'] == true) {
                            $tp_text[$tp_key]['ismust'] = 1;
                        } else {
                            $tp_text[$tp_key]['ismust'] = 0;
                        }
                        $tp_text[$tp_key]['name'] = $res['label'];
                        if ($res['field_type'] == '单行文本') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0]['yval'] = 0;
                        } else if ($res['field_type'] == '多行文本') {
                            $tp_text[$tp_key]['type'] = 1;
                            $tp_text[$tp_key]['tp_text'] = '';
                        } else if ($res['field_type'] == '多选' || $res['field_type'] == '单选') {
                            if ($res['field_type'] == '多选') {
                                $tp_text[$tp_key]['type'] = 3;
                            } else {
                                $tp_text[$tp_key]['type'] = 4;
                            }
                            foreach ($res['field_options']['options'] as $key1 => &$rec1) {
                                $rec1['yval'] = $rec1['label'];
                                unset($rec1['label']);
                            }
                            $tp_text[$tp_key]['tp_text'] = $res['field_options']['options'];
                        } else if ($res['field_type'] == '下拉选') {
                            $tp_text[$tp_key]['type'] = 2;
                            $tp_text[$tp_key]['tp_text'] = [];
                            foreach ($res['field_options']['options'] as $key2 => &$rec2) {
                                array_push($tp_text[$tp_key]['tp_text'], $rec2['label']);
                            }
                        } else if ($res['field_type'] == '日期') {
                            $tp_text[$tp_key]['type'] = 7;
                        } else if ($res['field_type'] == '时间') {
                            $tp_text[$tp_key]['type'] = 11;
                        } else if ($res['field_type'] == '图片') {
                            $tp_text[$tp_key]['type'] = 5;
                            $tp_text[$tp_key]['tp_text'] = $res['field_options']['maxpic'];
                            $tp_text[$tp_key]['z_val'] = array();
                        } else if ($res['field_type'] == '手机号') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0]['yval'] = 1;
                        } else if ($res['field_type'] == '身份证') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0]['yval'] = 7;
                        }
                        $tp_text[$tp_key]['val'] = '';
                    }
                }
            }
        } else {
            $tp_text = "NULL";
            $pro['formdescs'] = '';
        }

        if ($pro['pro_flag_data_name']) {
            $pro['pro_flag_data_name'] = explode(";", $pro['pro_flag_data_name']);
            if (count($pro['pro_flag_data_name']) > 1) {
                $pro['afterdays'] = intval($pro['pro_flag_data_name'][1]);
                $pro['beforedays'] = intval($pro['pro_flag_data_name'][2]);
                $pro['modifydays'] = intval($pro['pro_flag_data_name'][3]);
            } else {
                $pro['afterdays'] = 0;
                $pro['beforedays'] = 0;
                $pro['modifydays'] = 0;
            }

            $pro['pro_flag_data_name'] = $pro['pro_flag_data_name'][0];

            if ($pro['afterdays'] > 0) {
                $pro['start_date'] = date("Y-m-d", time() + $pro['afterdays'] * 3600 * 24);
            } else {
                $pro['start_date'] = date("Y-m-d", time());
            }
        }

        $pro['userinfo'] = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();

        //会员购买设置
        $pro['vip_config'] = 0;
        if (empty($user['vipid'])) {

            if (!empty($pro['vipconfig'])) {
                $vipconfig = unserialize($pro['vipconfig']);

                if ($vipconfig['set1'] == 1) {
                    $pro['vip_config'] = $vipconfig['set2'];
                } else {
                    $vip_config = Db::name('wd_xcx_vip_config')->where("uniacid", $uniacid)->find();
                    if (!empty($vip_config)) {
                        $pro['vip_config'] = $vip_config['yuyue'];
                    }
                }
            } else {
                $vip_config = Db::name('wd_xcx_vip_config')->where("uniacid", $uniacid)->find();
                if (!empty($vip_config)) {
                    $pro['vip_config'] = $vip_config['yuyue'];
                }
            }
        }

        if ($pro['tableis'] == 1 && $pro['tableid']) {
            $table_info = Db::name('wd_xcx_table')->where('uniacid', $uniacid)->where('id', $pro['tableid'])->find();
            $table_info['columnstr'] = explode(",", chop($table_info['columnstr'], ","));
            $table_info['rowstr'] = explode(",", chop($table_info['rowstr'], ","));
            $table_info['selectstr'] = explode(",", chop($table_info['selectstr'], ","));
            $pro['table'] = $table_info;
        }
        if ($pro['stores']) {
            $stores = explode(',', $pro['stores']);
            $stores_info = [];
            $i = 0;
            foreach ($stores as $vsi) {
                $info = Db::name('wd_xcx_store')->where("uniacid", $uniacid)->where('id', $vsi)->field("id, title, tel, province, city, country, times")->find();
                if ($info) {
                    $stores_info[$i] = $info;
                    $i++;
                }
            }
            $pro['stores'] = count($stores_info) > 0 ? $stores_info : '';
        } else {
            $pro['stores'] = '';
        }
        $pro['forms'] = $tp_text;
        $adata['data'] = $pro;
        return json_encode($adata);
    }

    //商品生成订单页面
    // public function doPageDingd()
    // {
    //     $uniacid = input('uniacid');
    //     $openid = input('openid');
    //     $id = input('id');
    //     $flags = true;
    //     //获得用户信息
    //     $user = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where("openid", $openid)->find();
    //     // var_dump($user);exit;
    //     //获得商品信息
    //     $pro = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where("id", $id)->find();
    //     if ($pro['more_type_num']) {
    //         $more_type_num = unserialize($pro['more_type_num']);
    //     }
    //     $order = input('order');
    //     if (input('order')) {
    //         $order = input('order');
    //     } else {
    //         $now = time();
    //         $order = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
    //     }
    //     if ($pro['is_more'] == 1) {    //多规格产品处理
    //         $num = input('num');
    //         $newnum = explode(',', substr($num, 1, strlen($num) - 2));
    //         $numarr = array();
    //         foreach ($newnum as $rec) {
    //             $nnn = explode(':', $rec);
    //             $numarr[] = $nnn[1];
    //         }
    //         $guig = unserialize($pro['more_type_x']);
    //         foreach ($guig as $key => &$rec) {
    //             $rec[] = $numarr[$key];
    //         }
    //         $newgg = serialize($guig);
    //         $cydat = input('chuydate') . " " . input('chuytime');
    //         $zzcy = strtotime($cydat);
    //         $overtime = time() + 30 * 60;
    //         $data = array(
    //             "uniacid" => input('uniacid'),
    //             "order_id" => $order,
    //             "suid" => $user['id'],
    //             "openid" => input('openid'),
    //             "pid" => input('id'),
    //             "thumb" => remote($uniacid, $pro['thumb'], 1),
    //             "product" => $pro['title'],
    //             "yhq" => input('youhui'),
    //             "true_price" => input('zhifu'),
    //             "creattime" => time(),
    //             "flag" => 0,
    //             "pro_user_name" => input('pro_name'),
    //             "pro_user_tel" => input('pro_tel'),
    //             "pro_user_add" => input('pro_address'),
    //             "pro_user_txt" => input('pro_txt'),
    //             "overtime" => $overtime,
    //             "is_more" => 1,
    //             "order_duo" => $newgg,
    //             "coupon" => input('yhqid')
    //         );
    //         // 新增自定义表单数据接收
    //         $formarr = "";
    //         if (input("pagedata") && input("pagedata") !== "NULL") {
    //             $forms = json_decode(input("pagedata"), true);
    //             $kdata = array(
    //                 "uniacid" => $uniacid,
    //                 "cid" => input('id'),
    //                 "creattime" => time(),
    //                 "val" => serialize($forms),
    //                 "flag" => 0
    //             );
    //             $kres = Db::name('wd_xcx_formcon')->insert($kdata);
    //             foreach ($forms as $key => &$res) {
    //                 $vals = "";
    //                 if (intval($res['type']) == 3) {
    //                     if ($res['val'] != "") {
    //                         foreach ($res['val'] as &$k) {
    //                             $vals .= $k . "、";
    //                         }
    //                         $formarr .= $res['name'] . ":" . $vals . "    ";
    //                     } else {
    //                         $formarr .= $res['name'] . ":    ";
    //                     }
    //                 }
    //                 if (intval($res['type']) == 5) {
    //                     if (isset($res['z_val'])) {
    //                         if ($res['z_val'] != "") {
    //                             foreach ($res['z_val'] as &$k) {
    //                                 $vals .= "<img src='" . $k . "' style='width:100px;height:100px'>";
    //                             }
    //                             $formarr .= $res['name'] . ":" . $vals . "    ";
    //                         } else {
    //                             $formarr .= $res['name'] . ":    ";
    //                         }
    //                         foreach ($res['z_val'] as &$k) {
    //                             $vals .= $k . "、";
    //                         }
    //                     }
    //                 } else {
    //                     $formarr .= $res['name'] . ":" . $res['val'] . "    ";
    //                 }
    //             }
    //         } else {
    //             $forms = "";
    //         }
    //         $data['beizhu'] = $formarr;
    //         $data['beizhu_val'] = serialize($forms);
    //         // echo "</pre>";
    //         // 新增自定义表单数据接收结束
    //         $orId = 0;
    //         if (input("order")) {
    //             $res = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $order)->update($data);
    //         } else {
    //             $res = Db::name('wd_xcx_order')->insert($data);
    //         }
    //         if ($res) {
    //             $data['success'] = 1;
    //             $data['xg'] = $pro['pro_xz'];
    //             $adata['data'] = $data;
    //             return json_encode($adata);
    //         }
    //     }
    //     //20170925  新增我的购买量
    //     $openid = input('openid');
    //     $pid = input('id');
    //     $myorders = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("pid", $pid)->where("openid", $openid)->where("flag", ">=", 0)->where("order_id", $order)->select();
    //     $my_num = 0;
    //     if ($myorders) {
    //         foreach ($myorders as $res) {
    //             $my_num += $res['num'];
    //         }
    //     }
    //     //1.生成订单之前再判断次该商品有没有下架及库存剩余量
    //     $num = input('count');
    //     $orderid = input('order');
    //     if (!$orderid) {                              //新下单的情况
    //         if ($pro['pro_kc'] == -1) {                 //不限库存
    //             $flags = true;
    //             $syl = $pro['pro_kc'];
    //         } else {                                  //限制库存
    //             if ($pro['pro_kc'] + $my_num == 0) {    //库存为空
    //                 $syl = 0;
    //                 $flags = false;
    //             }
    //             if ($pro['pro_kc'] + $my_num != 0) {   //库存不为空
    //                 if ($pro['pro_xz'] == 0) {          //限量不限购
    //                     if ($num > $pro['pro_kc']) {
    //                         $syl = $pro['pro_kc'];
    //                         $flags = false;
    //                     }
    //                 } else {                          //限量又限购
    //                     if ($my_num + $num > $pro['pro_xz'] || $num > $pro['pro_kc']) {
    //                         $syl = $pro['pro_kc'];
    //                         $flags = false;
    //                     }
    //                 }
    //             }
    //         }
    //     } else {
    //         $oinfo = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $orderid)->find();
    //         $ddnum = $oinfo['num'];
    //         if ($pro['pro_kc'] == -1) {   //不限库存
    //             $flags = true;
    //             $syl = $pro['pro_kc'];
    //         } else {
    //             $cha = $ddnum - $num;  //订单号里面的数值相差几个
    //             $new_num = $my_num - $cha;  //获得现在新提交数
    //             if ($new_num < 0) {   //又增加了购买量
    //                 $absnum = abs($new_num);
    //                 if ($my_num + $absnum > $pro['pro_xz'] || $absnum > $pro['pro_kc']) {
    //                     $syl = $pro['pro_kc'];
    //                     $flags = false;
    //                 }
    //             } else {
    //                 $flags = true;
    //             }
    //         }
    //     }
    //     if ($flags && $pro['pro_kc'] >= 0) {    //限制库存 且有库存剩余
    //         if (input('order')) {
    //             $order = input('order');
    //             //修改订单的时候商品总数变化
    //             $oinfo = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $order)->find();
    //             $onum = $oinfo['num'];
    //             $newnum = $num - $onum;
    //             $ndata['pro_kc'] = $pro['pro_kc'] - $newnum;
    //             Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where("id", $id)->update($ndata);
    //         } else {
    //             $now = time();
    //             $order = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
    //             //新下单的同时立即把商品数量减去
    //             $ndata['pro_kc'] = $pro['pro_kc'] - $num;
    //             Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where("id", $id)->update($ndata);
    //         }
    //         $overtime = time() + 30 * 60;
    //         $data = array(
    //             "uniacid" => input('uniacid'),
    //             "order_id" => $order,
    //             "suid" => $user['id'],
    //             "openid" => input('openid'),
    //             "pid" => input('id'),
    //             "thumb" => remote($uniacid, $pro['thumb'], 1),
    //             "product" => $pro['title'],
    //             "price" => input('price'),
    //             "num" => input('count'),
    //             "yhq" => input('youhui'),
    //             "true_price" => input('zhifu'),
    //             "creattime" => time(),
    //             "flag" => 0,
    //             "pro_user_name" => input('pro_name'),
    //             "pro_user_tel" => input('pro_tel'),
    //             "pro_user_add" => input('pro_address'),
    //             "pro_user_txt" => input('pro_txt'),
    //             "overtime" => $overtime,
    //             "coupon" => input('yhqid')
    //         );
    //         // 新增自定义表单数据接收
    //         $formarr = "";
    //         if (input("pagedata") && input("pagedata") !== "NULL") {
    //             $forms = json_decode(input("pagedata"), true);
    //             foreach ($forms as $key => &$res) {
    //                 $vals = "";
    //                 if ($res['type'] == 3) {
    //                     foreach ($res['val'] as &$k) {
    //                         $vals .= $k . "、";
    //                     }
    //                     $formarr .= $res['name'] . ":" . $vals . "    ";
    //                 } else {
    //                     $formarr .= $res['name'] . ":" . $res['val'] . "    ";
    //                 }
    //             }
    //         }
    //         if (input('order')) {
    //             $res = Db::name('wd_xcx_order')->where("order_id", $order)->where("uniacid", $uniacid)->update($data);
    //         } else {
    //             $res = Db::name('wd_xcx_order')->insert($data);
    //         }
    //         if ($res) {
    //             $data['success'] = 1;
    //             $data['xg'] = $pro['pro_xz'];
    //             $adata['data'] = $data;
    //             return json_encode($adata);
    //             exit;
    //         }
    //     }
    //     if ($flags && $pro['pro_kc'] < 0) {    //不限制库存
    //         if (input('order')) {
    //             $order = input('order');
    //         } else {
    //             $now = time();
    //             $order = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
    //         }
    //         $overtime = time() + 30 * 60;
    //         $data = array(
    //             "uniacid" => input('uniacid'),
    //             "order_id" => $order,
    //             "suid" => $user['id'],
    //             "openid" => input('openid'),
    //             "pid" => input('id'),
    //             "thumb" => remote($uniacid, $pro['thumb'], 1),
    //             "product" => $pro['title'],
    //             "price" => input('price'),
    //             "num" => input('count'),
    //             "yhq" => input('youhui'),
    //             "true_price" => input('zhifu'),
    //             "creattime" => time(),
    //             "flag" => 0,
    //             "pro_user_name" => input('pro_name'),
    //             "pro_user_tel" => input('pro_tel'),
    //             "pro_user_txt" => input('pro_txt'),
    //             "overtime" => $overtime,
    //             "coupon" => input('yhqid')
    //         );
    //         // 新增自定义表单数据接收
    //         $formarr = "";
    //         if (input("pagedata") && input("pagedata") !== "NULL") {
    //             $forms = json_decode(input("pagedata"), true);
    //             foreach ($forms as $key => &$res) {
    //                 $vals = "";
    //                 if ($res['type'] == 3) {
    //                     foreach ($res['val'] as &$k) {
    //                         $vals .= $k . "、";
    //                     }
    //                     $formarr .= $res['name'] . ":" . $vals . "    ";
    //                 } else {
    //                     $formarr .= $res['name'] . ":" . $res['val'] . "    ";
    //                 }
    //             }
    //         }
    //         if (input('order')) {
    //             $res = Db::name('wd_xcx_order')->where("order_id", $order)->where("uniacid", $uniacid)->update($data);
    //         } else {
    //             $res = Db::name('wd_xcx_order')->insert($data);
    //         }
    //         if ($res) {
    //             $data['success'] = 1;
    //             $data['xg'] = $pro['pro_xz'];
    //             $adata['data'] = $data;
    //             return json_encode($adata);
    //             exit;
    //         }
    //     }
    //     if (!$flags) {
    //         $data['success'] = 0;
    //         $data['syl'] = $syl;
    //         $data['id'] = $id;
    //         $adata['data'] = $data;
    //         return json_encode($adata);
    //     }
    // }

    //订单号取数据
    public function doPageOrderinfo()
    {
        $uniacid = input('uniacid');
        $id = input('order');
        $suid = input('suid');
        $orders = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $id)->find();
        $orders['store_info'] = $orders['store_info'] ? unserialize($orders['store_info']) : '';

        $hxinfos = [];
        if (!empty($orders['hxinfo'])) {
            $hxinfo = unserialize($orders['hxinfo']);
            if ($hxinfo[0] == 1) {
                $hxinfos['flag'] = 1;
                $hxinfos['store'] = "系统核销";
            } else if ($hxinfo[0] == '密码核销') {
                $hxinfos['flag'] = 3;
                $hxinfos['store'] = "核销密码核销";
            } else if ($hxinfo[0] == '核销员核销') {
                $hxinfos['flag'] = 5;
                $hxinfos['store'] = "核销员核销";
            } else if ($hxinfo[0] == '管理员核销') {
                $hxinfos['flag'] = 4;
                $hxinfos['store'] = "管理员核销";
            } else {
                $hxinfos['flag'] = 2;
                $hxinfos['store'] = Db::name("wd_xcx_store")->where("id", $hxinfo[1])->field("title")->find()['title'];
                $hxinfos['staff'] = Db::name("wd_xcx_staff")->where("id", $hxinfo[2])->field("realname")->find()['realname'];
            }
        }

        if (!empty($orders['yhinfo'])) {
            $orders['yhInfo'] = unserialize($orders['yhinfo']);
        } else {
            $orders['yhInfo'] = 0;
        }

        //获得商品信息
        $pro = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where("id", $orders['pid'])->find();
        $orders['thumb'] = remote($uniacid, $orders['thumb'], 1);
        //获得用户金钱
        $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where("id", $suid)->find();
        $money = $user['money'];
        $score = $user['score'];
        // 积分兑换金额
        $jf_gz = Db::name('wd_xcx_rechargeconf')->where('uniacid', $uniacid)->find();
        if (!$jf_gz) {
            $jf_gz['score'] = 10000;
            $jf_gz['money'] = 1;
        }
        // var_dump($jf_gz);
        // die();
        $jf_money = intval($score / $jf_gz['score']) * $jf_gz['money'];            //1.我的积分可以换取多少钱
        $jf_pro = intval($pro['score_num'] / $jf_gz['score']) * $jf_gz['money'];    //2.商品最高抵扣换取多少钱
        // var_dump($jf_money);
        // die();
        $dikou_jf = 0;
        if ($jf_pro >= $jf_money) {   //商品设置的最大可使用积分 >= 我自己的积分
            $dikou_jf = $jf_money;
            if ($dikou_jf * 1000 > $orders['true_price'] * 1000) {         //最终抵扣金钱和商品价格进行比较[抵扣钱大于订单钱]
                $dikou_jf = $orders['true_price'];
            } else {                                           //抵扣钱<=订单钱
                $dikou_jf = $dikou_jf;
            }
        } else {                        //商品设置的最大可使用积分 < 我自己的积分
            $dikou_jf = $jf_pro;
            if ($dikou_jf * 1000 > $orders['true_price'] * 1000) {         //最终抵扣金钱和商品价格进行比较[抵扣钱大于订单钱]
                $dikou_jf = $orders['true_price'];
            } else {                                           //抵扣钱<=订单钱
                $dikou_jf = $dikou_jf;
            }
        }
        // 积分金钱转积分数
        $jf_score = ($dikou_jf / $jf_gz['money']) * $jf_gz['score'];
        // var_dump($orders['true_price']);
        // var_dump($jf_pro);
        // die();
        //刷新该订单的状态【判断是否过期】
        if ($pro['pro_kc'] >= 0 && $pro['is_more'] == 0) {  //限制库存
            $now = time();
            if ($now > $orders['overtime'] && $orders['reback'] == 0 && $orders['flag'] == 0) {   //订单失效
                $onum = $orders['num'];
                $kdata['flag'] = -1;
                $kdata['reback'] = 1;
                Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $id)->update($kdata);
                $ndata['pro_kc'] = $pro['pro_kc'] + $onum;
                Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where("id", $orders['pid'])->update($ndata);
            }
        } elseif ($pro['pro_kc'] < 0 && $pro['is_more'] == 0) {
            $now = time();
            if ($now > $orders['overtime'] && $orders['reback'] == 0 && $orders['flag'] == 0) {   //订单失效
                $kdata['flag'] = -1;
                $kdata['reback'] = 1;
                Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $id)->update($kdata);
            }
        }
        if ($pro['is_more'] == "1" or $pro['is_more'] == 1) {
            $now = time();
            if ($now > $orders['overtime'] && $orders['flag'] == 0) {   //订单失效
                $kdata['flag'] = -1;
                Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $id)->update($kdata);

                // //处理优惠券
                // if($orders['coupon']){
                //     Db::name('wd_xcx_coupon_user') ->where('uniacid', $uniacid) ->where('suid', $orders['suid']) ->where('id', $orders['coupon']) ->update(array('flag' => 0,"utime"=>0));
                // }
                // if($orders['dkscore']){
                //     Db::execute("UPDATE {$prefix}wd_xcx_user set score = score + ".$orders['dkscore']." where uniacid = ".$uniacid." and id = ".$orders['suid']);
                //     $score_data = array(
                //         "uniacid" => $uniacid,
                //         "orderid" => $orders['order_id'],
                //         "suid" => $orders['suid'],
                //         "type" => "add",
                //         "score" => $orders['dkscore'],
                //         "message" => "订单过期退回抵扣积分",
                //         "creattime" => time()
                //     );
                //     Db::name('wd_xcx_score') ->insert($score_data);
                // }

                // //处理库存与真实销量
                // if($pro['tableis'] != 1){
                //     //处理库存销量
                //     $more_type_num = unserialize($pro['more_type_num']);
                //     $order_duo = unserialize($orders['order_duo']);
                //     $more_type = unserialize($pro['more_type']);
                //     $rows = count($more_type)/4;
                //     for($i = 0; $i<$rows; $i++){
                //         if($i==0){
                //             $more_type[2] = $more_type[2] + $order_duo[$i][4];
                //         }else{
                //             $more_type[2+$i*4] = $more_type[2+$i*4] + $order_duo[$i][4];
                //         }
                //     }

                //     $now_salenum = 0;
                //     if(!empty($order_duo)){
                //         foreach ($order_duo as $kv => $vv) {
                //             $now_salenum += $vv[4];
                //             $more_type_num[$kv]['salenum'] = $more_type_num[$kv]['salenum'] - $vv[4];
                //             $more_type_num[$kv]['shennum'] = $more_type_num[$kv]['shennum'] + $vv[4];
                //         }
                //     }
                //     $sale_tnum = $pro['sale_tnum'] - $now_salenum;
                //     Db::name('wd_xcx_products') ->where('uniacid', $uniacid) ->where('id', $pro['id']) ->update(['sale_tnum' => $sale_tnum, 'more_type_num' => serialize($more_type_num), 'more_type'=> serialize($more_type)]);
                // }else{
                //     //更新选择座位状态
                //     Db::name('wd_xcx_tableselect')->where('id', $orders['tsid']) ->update(['flag' => 2]);
                //     // $has_select = unserialize($orders['order_duo']);
                //     //减少销量
                //     $table_select = Db::name('wd_xcx_tableselect') ->where('id', $orders['tsid']) ->find();
                //     $temp_select = explode(',', $table_select['select_str']);
                //     $count = count($temp_select);

                //     $sale_tnum = $product['sale_tnum'] - $count;
                //     Db::name('wd_xcx_products') ->where('id', $pro['id']) ->update(['sale_tnum'=>$sale_tnum]);
                // }

            }

        }
        $new_orders = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $id)->find();
        // 获得优惠券信息
        $mycoupon = Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where("id", $new_orders['coupon'])->find();
        $coupon = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where("id", $mycoupon['cid'])->find();
        //20170925  新增我的购买量
        $pid = $new_orders['pid'];
        $myorders = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("pid", $pid)->where("suid", $suid)->where("flag", ">=", 0)->select();
        $my_num = 0;
        if ($myorders) {
            foreach ($myorders as $res) {
                $my_num += $res['num'];
            }
        }
        // 我的订单数
        $cdd = count($myorders);
        // 20171123  修改卖出总数
        $orders_l = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("pid", $pid)->where("flag", ">", 0)->select();
        $sale_num = 0;
        if ($orders_l) {
            foreach ($orders_l as $rec) {
                $sale_num += $rec['num'];
            }
        }
        $new_orders['sale_num'] = $sale_num;
        //订单有没有过期
        $now = time();
        $overtime = $orders['overtime'];
        if ($now > $overtime) {
            $new_orders['isover'] = 1;
        } else {
            $new_orders['isover'] = 0;
        }

        if ($pro['pro_flag_data_name']) {
            $pro['pro_flag_data_name'] = explode(";", $pro['pro_flag_data_name']);
            if (count($pro['pro_flag_data_name']) > 1) {
                $new_orders['afterdays'] = intval($pro['pro_flag_data_name'][1]);
                $new_orders['beforedays'] = intval($pro['pro_flag_data_name'][2]);
                $new_orders['modifydays'] = intval($pro['pro_flag_data_name'][3]);
            } else {
                $new_orders['afterdays'] = 0;
                $new_orders['beforedays'] = 0;
                $new_orders['modifydays'] = 0;
            }

            $new_orders['pro_flag_data_name'] = $pro['pro_flag_data_name'][0];

            if ($new_orders['afterdays'] > 0) {
                $new_orders['start_date'] = date("Y-m-d", time() + $new_orders['afterdays'] * 3600 * 24);
            } else {
                $new_orders['start_date'] = date("Y-m-d", time());
            }

            if ($new_orders['modifydays'] > 0 && (time() + $new_orders['modifydays'] * 3600 * 24) <= $orders['appoint_date']) {
                $new_orders['modify_date_begin'] = date("Y-m-d", time() + $new_orders['afterdays'] * 24 * 3600);
                $new_orders['can_modify'] = 1;
            } else {
                $new_orders['can_modify'] = 0;
            }
        }

        if ($orders['modify_info']) {
            $modify_info = unserialize($orders['modify_info']);
            $new_orders['modify_flag'] = $modify_info['flag'];
        }

        $new_orders['my_num'] = $my_num;
        $new_orders['mcount'] = $cdd;
        $new_orders['pro_flag'] = $pro['pro_flag'];
        $new_orders['pro_flag_tel'] = $pro['pro_flag_tel'];
        $new_orders['pro_flag_add'] = $pro['pro_flag_add'];
        $new_orders['pro_flag_data'] = $pro['pro_flag_data'];
        $new_orders['pro_flag_time'] = $pro['pro_flag_time'];
        $new_orders['pro_flag_ding'] = $pro['pro_flag_ding'];
        $new_orders['pro_kc'] = $pro['pro_kc'];
        $new_orders['pro_xz'] = $pro['pro_xz'];
        $new_orders['thumb'] = remote($uniacid, $new_orders['thumb'], 1);
        $new_orders['more_type_x'] = unserialize($new_orders['order_duo']);
        $new_orders['chuydate'] = date("Y-m-d", $new_orders['appoint_date']);
        $new_orders['chuytime'] = date("H:i", $new_orders['appoint_date']);
        $new_orders['more_type_num'] = unserialize($pro['more_type_num']);
        $new_orders['couponid'] = $new_orders['coupon'];
        $new_orders['is_score'] = $pro['is_score'];
        $new_orders['jf_score'] = $jf_score;
        $new_orders['my_score'] = $user['score'];
        $new_orders['store_info'] = $orders['store_info'];
        if ($coupon) {
            $new_orders['coupon'] = $coupon;
        } else {
            $coupon['price'] = 0;
            $new_orders['coupon'] = $coupon;
        }
        $new_orders['shengyutime'] = intval(($overtime - time()) / 60);
        // $new_orders['beizhu_val'] = unserialize($orders['beizhu_val']);
        $fomeval = unserialize($orders['beizhu_val']);
        if ($fomeval != 'NULL') {
            foreach ($fomeval as $key => &$res) {
                if ($res['type'] == 3) {
                    foreach ($res["tp_text"] as &$val) {
                        if (in_array($val['yval'], $res["val"])) {
                            $val['checked'] = "true";
                        } else {
                            $val['checked'] = "false";
                        }
                    }
                }
                if ($res['type'] == 4) {
                    foreach ($res["tp_text"] as &$val) {
                        $kk = array();
                        if ($val['yval'] == $res["val"]) {
                            $val['checked'] = "true";
                        } else {
                            $val['checked'] = "false";
                        }
                    }
                }
                if ($res['type'] == 5) {
                    $imgall = $res['z_val'];
                    foreach ($imgall as $key => &$rec) {
                        $rec = remote($uniacid, $rec, 1);
                    }
                    $res["z_val"] = $imgall;
                }
            }
        }


        $new_orders['yhInfo'] = $orders['yhInfo'];
        $new_orders['beizhu_val'] = $fomeval;
        $new_orders['my_money'] = $money;
        $new_orders['dikou_jf'] = $dikou_jf;
        $new_orders['hxinfos'] = $hxinfos;
        $adata['data'] = $new_orders;
        return json_encode($adata);
    }
    //更新订单状态 20170925
    // public function doPageorderpayover()
    // {
    //     $uniacid = input('uniacid');
    //     $id = input('order_id');
    //     $my_pay_money = input('my_pay_money');
    //     $orders = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $id)->find();
    //     $pro = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where("id", $orders['pid'])->find();
    //     // 对备注进行相关操作
    //     if ($orders['beizhu_val']) {
    //         $addbeizh = unserialize($orders['beizhu_val']);
    //         if ($addbeizh) {
    //             foreach ($addbeizh as $key5 => &$rem) {
    //                 if ($rem['type'] == 14) {
    //                     $addbarr = array(
    //                         "uniacid" => $uniacid,
    //                         "cid" => $orders['pid'],
    //                         "types" => "showPro_lv_buy",
    //                         "datys" => strtotime($rem['days']),
    //                         "pagedatekey" => $rem['indexkey'],
    //                         "arrkey" => $rem['xuanx'],
    //                         "creattime" => time()
    //                     );
    //                     $res = Db::name('wd_xcx_form_dd')->insert($addbarr);
    //                 }
    //             }
    //         }
    //     }
    //     $coupondata = array(
    //         "flag" => 1
    //     );
    //     Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where("id", $orders['coupon'])->update($coupondata);
    //     // 消费的积分
    //     $jifen = input("jf_score");
    //     // 积分规则
    //     $jf_gz = Db::name('wd_xcx_rechargeconf')->where('uniacid', $uniacid)->find();
    //     if (!$jf_gz) {
    //         $jf_gz['score'] = 10000;
    //         $jf_gz['money'] = 1;
    //     }
    //     // 积分金钱转积分数
    //     $jf_score = ($jifen / $jf_gz['money']) * $jf_gz['score'];
    //     //获得用户金钱,并更新金钱数
    //     $openid = $orders['openid'];
    //     $user = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->find();
    //     $money = $user['money'];
    //     $true_money = ($user['money'] * 1000 - $my_pay_money * 1000) / 1000;
    //     $true_score = $user['score'] - $jf_score;
    //     $tprice['money'] = $true_money;
    //     $tprice['score'] = $true_score;
    //     Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->update($tprice);
    //     $jdata['uniacid'] = $uniacid;
    //     $jdata['orderid'] = $id;
    //     $jdata['suid'] = $user['id'];
    //     $jdata['type'] = "del";
    //     $jdata['score'] = $my_pay_money;
    //     $jdata['message'] = "消费";
    //     $jdata['creattime'] = time();
    //     if ($my_pay_money > 0) {
    //         Db::name('wd_xcx_money')->insert($jdata);
    //     }
    //     $kdata['uniacid'] = $uniacid;
    //     $kdata['orderid'] = $id;
    //     $kdata['suid'] = $user['id'];
    //     $kdata['type'] = "del";
    //     $kdata['score'] = $jf_score;
    //     $kdata['message'] = "消费";
    //     $kdata['creattime'] = time();
    //     if ($jf_score > 0) {
    //         Db::name('wd_xcx_score')->insert($kdata);
    //     }
    //     // 判断有没有超出库存、并更新数据库
    //     if ($pro['is_more'] == 1) {
    //         $duock = 0;
    //         $more_type_num = unserialize($pro['more_type_num']);
    //         $num = unserialize($orders['order_duo']);
    //         $numarr = array();
    //         foreach ($num as $res) {
    //             array_push($numarr, $res[4]);
    //         }
    //         foreach ($more_type_num as $key => &$value) {
    //             if ($value['shennum'] >= $numarr[$key]) {
    //                 $value['shennum'] = $value['shennum'] - $numarr[$key];
    //                 $value['salenum'] = $value['salenum'] + $numarr[$key];
    //                 $duock = 1;
    //             } else {
    //                 $duock = 0;
    //             }
    //         }
    //         if ($duock == 1) {
    //             $pid = $orders['pid'];
    //             $prodata['more_type_num'] = serialize($more_type_num);
    //             Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where("id", $pid)->update($prodata);
    //             if ($pro['pro_flag_ding'] == 0) {
    //                 $data = array(
    //                     "flag" => 1
    //                 );
    //             }
    //             if ($pro['pro_flag_ding'] == 1) {
    //                 $data = array(
    //                     "flag" => 3
    //                 );
    //             }
    //             $res = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", input('order_id'))->update($data);
    //         } else {
    //             $adata['data'] = $data;
    //             return json_encode($adata);
    //         }
    //     }
    //     if ($pro['pro_kc'] >= 0 && $pro['is_more'] == 0) {
    //         $now = time();
    //         if ($orders['overtime'] < $now) {   //订单过期
    //             if ($orders['reback'] == 0) {
    //                 $ndata['pro_kc'] = $pro['pro_kc'] + $orders['num'];
    //                 Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where("id", $orders['pid'])->update($ndata);
    //                 $cdata['reback'] = 1;
    //                 Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $id)->update($cdata);
    //             }
    //             $data = array(
    //                 "flag" => -2
    //             );
    //         } else {
    //             $data = array(
    //                 "flag" => 1
    //             );
    //         }
    //         $res = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $id)->update($data);
    //     } elseif ($pro['pro_kc'] < 0 && $pro['is_more'] == 0) {   //不限制库存
    //         $data = array(
    //             "flag" => 1
    //         );
    //         $res = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $id)->update($data);
    //     }
    //     if ($res) {
    //         $adata['data'] = 1;
    //         $applet = Db::name('wd_xcx_applet')->where("id", $uniacid)->field('appID,appSecret')->find();
    //         if ($applet) {
    //             $mid = Db::name('wd_xcx_message')->where("uniacid", $uniacid)->where('flag', 1)->find();
    //             if ($mid) {
    //                 if ($mid['mid'] != "") {
    //                     $mids = $mid['mid'];
    //                     $url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=" . $applet['appID'] . "&secret=" . $applet['appSecret'];
    //                     $a_token = $this->_requestGetcurl($url);
    //                     if ($a_token) {
    //                         $url_m = "https://api.weixin.qq.com/cgi-bin/message/wxopen/template/send?access_token=" . $a_token['access_token'];
    //                         $formId = input('formId');
    //                         $ftitle = $pro['title'];
    //                         $fprice = $my_pay_money;
    //                         $openid = input('openid');
    //                         $ftime = date('Y-m-d H:i:s', time());
    //                         $furl = $mid['url'];
    //                         $post_info = '{
    //                                   "touser": "' . $openid . '",
    //                                   "template_id": "' . $mids . '",
    //                                   "page": "' . $furl . '",
    //                                   "form_id": "' . $formId . '",
    //                                   "data": {
    //                                       "keyword1": {
    //                                           "value": "' . $id . '",
    //                                           "color": "#173177"
    //                                       },
    //                                       "keyword2": {
    //                                           "value": "' . $ftitle . '",
    //                                           "color": "#173177"
    //                                       },
    //                                       "keyword3": {
    //                                           "value": "' . $fprice . '元",
    //                                           "color": "#173177"
    //                                       },
    //                                       "keyword4": {
    //                                           "value": "' . $ftime . '",
    //                                           "color": "#173177"
    //                                       },
    //                                       "emphasis_keyword": ""
    //                                   }
    //                                 }';
    //                         $this->_requestPost($url_m, $post_info);
    //                     }
    //                 }
    //             }
    //         }
    //         return json_encode($adata);
    //     }
    // }
    //取消订单
    public function doPageDpass()
    {
        $uniacid = input('uniacid');
        $id = input('order');
        $data = array(
            "flag" => 1
        );
        $orders = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $id)->find();
        $now = time();
        $over = $orders["overtime"];
        $flag = $orders["flag"];
        $num = $orders["num"];
        $pid = $orders["pid"];
        $pro = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where("id", $pid)->find();

        //处理优惠券
        if ($orders['coupon']) {
            Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where('suid', $orders['suid'])->where('id', $orders['coupon'])->update(array('flag' => 0, "utime" => 0));
        }
        if ($orders['dkscore']) {
            $prefix = config('database.prefix');
            Db::execute("UPDATE {$prefix}wd_xcx_superuser set score = score + " . $orders['dkscore'] . " where uniacid = " . $uniacid . " and id = " . $orders['suid']);
            $score_data = array(
                "uniacid" => $uniacid,
                "orderid" => $orders['order_id'],
                "suid" => $orders['suid'],
                "type" => "add",
                "score" => $orders['dkscore'],
                "message" => "订单取消删除退回抵扣积分",
                "creattime" => time()
            );
            Db::name('wd_xcx_score')->insert($score_data);
        }

        //处理库存与真实销量
        if ($pro['tableis'] != 1) {
            //处理库存销量
            $more_type_num = unserialize($pro['more_type_num']);
            $order_duo = unserialize($orders['order_duo']);
            $more_type = unserialize($pro['more_type']);
            $rows = count($more_type) / 4;
            for ($i = 0; $i < $rows; $i++) {
                if ($i == 0) {
                    $more_type[2] = $more_type[2] + $order_duo[$i][4];
                } else {
                    $more_type[2 + $i * 4] = $more_type[2 + $i * 4] + $order_duo[$i][4];
                }
            }

            $now_salenum = 0;
            if (!empty($order_duo)) {
                foreach ($order_duo as $kv => $vv) {
                    $now_salenum += $vv[4];
                    $more_type_num[$kv]['salenum'] = $more_type_num[$kv]['salenum'] - $vv[4];
                    $more_type_num[$kv]['shennum'] = $more_type_num[$kv]['shennum'] + $vv[4];
                }
            }
            $sale_tnum = $pro['sale_tnum'] - $now_salenum;
            Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $pro['id'])->update(['sale_tnum' => $sale_tnum, 'more_type_num' => serialize($more_type_num), 'more_type' => serialize($more_type)]);
        } else {
            //更新选择座位状态
            Db::name('wd_xcx_tableselect')->where('id', $orders['tsid'])->update(['flag' => 2]);

            $table_select = Db::name('wd_xcx_tableselect')->where('id', $orders['tsid'])->find();
            $temp_select = explode(',', $table_select['select_str']);
            $count = count($temp_select);

            $sale_tnum = $pro['sale_tnum'] - $count;
            Db::name('wd_xcx_products')->where('id', $pro['id'])->update(['sale_tnum' => $sale_tnum]);
        }


        $res = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $id)->delete();
        if ($res) {
            //退积分

            //退优惠券
            //恢复销量与库存

            $adata['data'] = 1;
            return json_encode($adata);
        }
    }

    public function doPageMyorder()
    {
        $uniacid = input('uniacid');
        $suid = input('suid');
        $type = input('type');
        $is_more = input('is_more');
        $pindex = max(1, intval(input('page')));
        $psize = 10;
        $begin = ($pindex - 1) * $psize;
        $where = "";
        if (input('nav')) {
            $where = [
                'nav' => input('nav')
            ];
        }
        $yuyue = ['is_more' => input('is_more')];

        // 先处理未支付订单
        //获取基础配置
        if ($is_more == 0) {
            $baseset = Db::name('wd_xcx_flashsale_set')->where('uniacid', $uniacid)->find();
        } else if ($is_more = 1) {
            $baseset = Db::name('wd_xcx_reserve_set')->where('uniacid', $uniacid)->find();
        }

        if (!$baseset) {
            $overtime = 30 * 60;
        }


        if ($baseset) {
            if ($baseset['order_close_time'] > 0) {
                $overtime = intval($baseset['order_close_time']) * 60;
                $wforders = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('flag', 0)->select();
                foreach ($wforders as $key => &$res) {
                    $now = time();
                    if ($now > ($res['creattime'] + $overtime) && $res['flag'] == 0) {
                        $adata = array(
                            "flag" => -1
                        );
                        Db::name('wd_xcx_order')->where('id', $res['id'])->update($adata);
                        $orders = Db::name('wd_xcx_order')->where('id', $res['id'])->find();
                        $pro = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $orders['pid'])->find();
                        //处理优惠券
                        if ($orders['coupon']) {
                            Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where('suid', $orders['suid'])->where('id', $orders['coupon'])->update(array('flag' => 0, "utime" => 0));
                        }
                        if ($orders['dkscore']) {
                            $prefix = config('database.prefix');
                            Db::execute("UPDATE {$prefix}wd_xcx_superuser set score = score + " . $orders['dkscore'] . " where uniacid = " . $uniacid . " and id = " . $orders['suid']);
                            $score_data = array(
                                "uniacid" => $uniacid,
                                "orderid" => $orders['order_id'],
                                "suid" => $orders['suid'],
                                "type" => "add",
                                "score" => $orders['dkscore'],
                                "message" => "订单过期退回抵扣积分",
                                "creattime" => time()
                            );
                            Db::name('wd_xcx_score')->insert($score_data);
                        }

                        //处理库存与真实销量
                        if ($pro['tableis'] != 1) {
                            //处理库存销量
                            $more_type_num = unserialize($pro['more_type_num']);
                            $order_duo = unserialize($orders['order_duo']);
                            $more_type = [];
                            if ($pro['more_type']) {
                                $more_type = unserialize($pro['more_type']);
                                $rows = count($more_type) / 4;
                            } else {
                                $rows = 0;
                            }
                            for ($i = 0; $i < $rows; $i++) {
                                if ($i == 0) {
                                    $more_type[2] = $more_type[2] + $order_duo[$i][4];
                                } else {
                                    $more_type[2 + $i * 4] = $more_type[2 + $i * 4] + $order_duo[$i][4];
                                }
                            }

                            $now_salenum = 0;
                            if (!empty($order_duo)) {
                                foreach ($order_duo as $kv => $vv) {
                                    $now_salenum += $vv[4];
                                    $more_type_num[$kv]['salenum'] = $more_type_num[$kv]['salenum'] - $vv[4];
                                    $more_type_num[$kv]['shennum'] = $more_type_num[$kv]['shennum'] + $vv[4];
                                }
                            }
                            $sale_tnum = $pro['sale_tnum'] - $now_salenum;

                            $pro_upd = [];
                            if($pro['type'] == 'showPro'){ //秒杀
                                $pro_upd = [
                                    'sale_tnum' => $pro['sale_tnum'] - $orders['num'],
                                    'pro_kc' => $pro['pro_kc'] !== -1 ?  $pro['pro_kc'] - $orders['num'] : -1,
                                ];
                            }else{
                                $pro_upd = ['sale_tnum' => $sale_tnum, 'more_type_num' => serialize($more_type_num), 'more_type' => serialize($more_type)];
                            }
                            Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $pro['id'])->update($pro_upd);
                        } else {
                            //更新选择座位状态
                            Db::name('wd_xcx_tableselect')->where('id', $orders['tsid'])->update(['flag' => 2]);
                            // $has_select = unserialize($orders['order_duo']);
                            //减少销量
                            $table_select = Db::name('wd_xcx_tableselect')->where('id', $orders['tsid'])->find();
                            $temp_select = explode(',', $table_select['select_str']);
                            $count = count($temp_select);

                            $sale_tnum = $pro['sale_tnum'] - $count;
                            Db::name('wd_xcx_products')->where('id', $pro['id'])->update(['sale_tnum' => $sale_tnum]);
                        }
                    }
                }
            }

        }

        // 自动收货
        if (!$baseset) {
            $receiving = 15 * 24 * 3600; //未设置自动收货时间默认为15天
        }
        if ($baseset) {
            if ($baseset['queren_time'] > 0) {
                $receiving = intval($baseset['queren_time']) * 24 * 3600;
                $hxlist = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('flag', 4)->select();

                foreach ($hxlist as $kv => $vv) {
                    if ($vv['custime'] == null) {
                        Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('flag', 4)->where('id', $vv['id'])->update(['flag' => 2]);
                        $fxsorder = Db::name('wd_xcx_fx_ls')->where('uniacid', $uniacid)->where('order_id', $vv['order_id'])->find();
                        if ($fxsorder) {
                            $this->dopagegivemoney($uniacid, $suid, $vv['order_id']);
                        }
                    } else {
                        $now7_date = time() - $receiving; //七天前的时间搓
                        if ($now7_date > $vv['custime']) {
                            Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('flag', 4)->where('id', $vv['id'])->update(['flag' => 2]);
                            $fxsorder = Db::name('wd_xcx_fx_ls')->where('uniacid', $uniacid)->where('order_id', $vv['order_id'])->find();
                            if ($fxsorder) {
                                $this->dopagegivemoney($uniacid, $suid, $vv['order_id']);
                            }
                        }
                    }
                }
            }
        }

        if ($type != 9) {
            $OrdersList['list'] = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("suid", $suid)->where("flag", $type)->where($where)->where($yuyue)->order('creattime desc,flag desc')->limit($begin, $psize)->select();
        } else {
            $OrdersList['list'] = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("suid", $suid)->where($yuyue)->order('creattime desc,flag desc')->limit($begin, $psize)->select();
        }
        foreach ($OrdersList['list'] as &$row) {
            $row['thumb'] = remote($uniacid, $row['thumb'], 1);
            if ($row['tsid'] > 0) {
                $tableselect = Db::name('wd_xcx_tableselect')->where('uniacid', $uniacid)->where('id', $row['tsid'])->find();
                $row['select_str'] = $tableselect['select_str'];
                $row['appoint_date'] = $tableselect['appoint_date'];
            }

            if ($row['emp_id']) {
                $emp = Db::name('wd_xcx_staff')->where('id', $row['emp_id'])->field('realname, mobile')->find();
                if ($emp) {
                    $row['emp_name'] = $emp['realname'];
                    $row['emp_mobile'] = $emp['mobile'];
                }
            }
        }
        $alls = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("suid", $suid)->select();
        $mymoney = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where("id", $suid)->value('money');
        $OrdersList['allnum'] = count($alls);
        $OrdersList['mymoney'] = $mymoney;
        $adata['data'] = $OrdersList;
        return json_encode($adata);
    }
    //支付流程
    // public function doPageweixinpay()
    // {
    //     $uniacid = input('uniacid');
    //     $openid = input('openid');
    //     //先取对应数据
    //     $id = input('order_id');
    //     $orders = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $id)->find();
    //     $pro = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where("id", $orders['pid'])->find();
    //     $more_type_num = unserialize($pro['more_type_num']);
    //     $num = unserialize($orders['order_duo']);
    //     //支付之前先处理下过期的优惠券
    //     $openid = input('openid');
    //     $user = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where("openid", $openid)->find();
    //     $suid = $user['id'];
    //     $yhqs = Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where("suid", $suid)->where("flag", 0)->where("etime", ">", 0)->select();
    //     $nowtime = time();
    //     // var_dump($yhqs);
    //     // die();
    //     foreach ($yhqs as $key => &$res) {
    //         $couponinfo = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where("id", $res['cid'])->find();
    //         if ($nowtime > $couponinfo['etime']) {
    //             $updatas = array("flag" => 2);
    //             Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where("id", $res['id'])->update($updatas);
    //         }
    //     }
    //     //支付之前判断下优惠券有没有在其他地方使用或者过期
    //     if ($orders['coupon'] != 0) {
    //         $coupon = Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where("id", $orders['coupon'])->find();
    //         $couponinfo = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where("id", $coupon['cid'])->find();
    //         if ($coupon['flag'] == 2) {
    //             $data = array("message" => "该优惠券已过期！");
    //             //删除该订单的优惠券信息，并恢复价格
    //             //删除该订单的优惠券信息，并恢复价格
    //             $true_price = $orders['true_price'];
    //             $yhjg = $couponinfo['price'];
    //             $newtrueprice = $true_price + $yhjg;
    //             $dataorder = array(
    //                 "true_price" => $newtrueprice,
    //                 "coupon" => 0
    //             );
    //             Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $id)->update($dataorder);
    //             $adata['data'] = $data;
    //             return json_encode($adata);
    //         }
    //         if ($coupon['flag'] == 1) {
    //             $data = array("message" => "该优惠券已经使用过了！");
    //             //删除该订单的优惠券信息，并恢复价格
    //             $true_price = $orders['true_price'];
    //             $yhjg = $couponinfo['price'];
    //             $newtrueprice = $true_price + $yhjg;
    //             $dataorder = array(
    //                 "true_price" => $newtrueprice,
    //                 "coupon" => 0
    //             );
    //             Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where("order_id", $id)->update($dataorder);
    //             $adata['data'] = $data;
    //             return json_encode($adata);
    //         }
    //     }
    //     if ($pro['is_more'] == 1) {
    //         $numarr = array();
    //         foreach ($num as $res) {
    //             array_push($numarr, $res[4]);
    //         }
    //         $duock = 0;
    //         foreach ($more_type_num as $key => &$value) {
    //             if ($value['shennum'] >= $numarr[$key]) {
    //                 $duock = 1;
    //             } else {
    //                 $duock = 0;
    //             }
    //         }
    //         if ($duock == 1) {
    //             $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->find();
    //             // var_dump($app);
    //             // die();
    //             include 'WeixinPay.php';
    //             $appid = $app['appID'];    //小程序appid
    //             $openid = input('openid'); //用户openid
    //             $mch_id = $app['mchid'];   //商户id
    //             $key = $app['signkey'];        //secert
    //             $out_trade_no = input('order_id');  //订单号
    //             $body = "商品支付";
    //             $total_fee = input('price') * 100;  //单位分
    //             if (isset($app['identity'])) {
    //                 $identity = $app['identity'];
    //             } else {
    //                 $identity = 1;
    //             }
    //             if (isset($app['sub_mchid'])) {
    //                 $sub_mchid = $app['sub_mchid'];
    //             } else {
    //                 $sub_mchid = 0;
    //             }
    //             $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, $identity, $sub_mchid);
    //             $return = $weixinpay->pay();
    //             $adata['data'] = $return;
    //             $adata['message'] = "success";
    //             // var_dump($return);
    //             // die();
    //             return json_encode($adata);
    //         } else {
    //             $adata['message'] = "error";
    //             $data = array("message" => "库存不足！");
    //             $adata['data'] = $data;
    //             return json_encode($adata);
    //         }
    //     } else {
    //         $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->find();
    //         include 'WeixinPay.php';
    //         $appid = $app['appID'];
    //         $openid = input('openid');
    //         $mch_id = $app['mchid'];
    //         $key = $app['signkey'];
    //         $out_trade_no = input('order_id');  //订单号
    //         $body = "商品支付";
    //         $total_fee = input('price') * 100;
    //         if (isset($app['identity'])) {
    //             $identity = $app['identity'];
    //         } else {
    //             $identity = 1;
    //         }
    //         if (isset($app['sub_mchid'])) {
    //             $sub_mchid = $app['sub_mchid'];
    //         } else {
    //             $sub_mchid = 0;
    //         }
    //         $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, $identity, $sub_mchid);
    //         $return = $weixinpay->pay();
    //         $adata['message'] = "success";
    //         $adata['data'] = $return;
    //         return json_encode($adata);
    //     }
    // }
    //170821获取单页面
    public function doPagePage()
    {
        $uniacid = input('uniacid');
        $id = intval(input('id'));
        $pageInfo = Db::name('wd_xcx_cate')->where('uniacid', $uniacid)->where("id", $id)->field('name,ename,content')->find();
        $adata['data'] = $pageInfo;
        return json_encode($adata);
    }

    //170823获取版权内容
    public function doPagecopycon()
    {
        $uniacid = intval(input('uniacid'));
        $copycon = Db::name('wd_xcx_copyright')->where("uniacid", $uniacid)->field('copycon')->find();
        $adata['data'] = $copycon;
        return json_encode($adata);
    }
    //付款成功页面表单提醒 -- 多规格商品
    //文章详情页表单提交成功邮件提醒
    public function doPagesendMail_form()
    {
        $uniacid = input('uniacid');
        $cid = intval(input('id')); //文章id
        $id = intval(input('cid')); //表单id
        $formsConfig = Db::name('wd_xcx_forms_config')->where("uniacid", $uniacid)->field('mail_sendto,mail_user,mail_password,mail_user_name')->find();
        $mail_sendto = array();
        $mail_sendto = explode(",", $formsConfig['mail_sendto']);
        $row_mail_user = $formsConfig['mail_user'];
        $row_mail_pass = $formsConfig['mail_password'];
        $row_mail_name = $formsConfig['mail_user_name'];
        $forms = Db::name('wd_xcx_formcon')->alias("a")->join("wd_xcx_products b", "a.cid = b.id")->where("a.uniacid", $uniacid)->where("a.id", $id)->where("a.cid", $cid)->field('a.*,b.title,b.type')->find();
        if ($forms['type'] == "showArt") {
            $forms['type'] = "文章";
        }
        if ($forms['type'] == "showPro") {
            $forms['type'] = "产品";
        }
        if ($forms['val']) {
            $val = unserialize($forms['val']);
            $row_title = "文章名称：" . $forms['title'] . "<br />";
            $row_type = "文章类型：" . $forms['type'] . "<br />";
            $row_oid = "表单信息<br/>编号：" . $forms['id'] . "<br />";
            $forms_con = "";
            foreach ($val as $key => $v) {
                if (isset($v['z_val']) && $v['z_val']) {
                    $forms_con .= $v['name'] . ":<br/>";
                    $img = "";
                    foreach ($v['z_val'] as $k => $vi) {
                        if (stristr($vi, 'http')) {
                            $img .= "<img src='" . $vi . "'><br/>";
                        } else {
                            $img .= "<img src='" . ROOT_HOST . $vi . "'><br/>";
                        }
                    }
                    $forms_con .= $img;
                } else {
                    if (is_array($v['val'])) {
                        $forms_con .= $v['name'] . ":";
                        $txt_s = "";
                        foreach ($v['val'] as $key => $value) {
                            $txt_s = $txt_s . $value . ",";
                        }
                        $forms_con .= $txt_s;
                    } else {
                        $forms_con .= $v['name'] . ":" . $v['val'] . "<br />";
                    }
                }
            }
            $mail = new PHPMailer();
            $mail->CharSet = "utf-8";
            $mail->Encoding = "base64";
            $mail->SMTPSecure = "ssl";
            $mail->IsSMTP();
            $mail->Port = 465;
            $mail->Host = "smtp.qq.com";
            $mail->SMTPAuth = true;
            $mail->SMTPDebug = false;
            $mail->Username = $row_mail_user;
            $mail->Password = $row_mail_pass;
            $mail->setFrom($row_mail_user, $row_mail_name);
            foreach ($mail_sendto as $v) {
                $mail->AddAddress($v);
            }
            $mail->Subject = "新表单 - " . date("Y-m-d H:i:s", time());
            $mail->isHTML(true);
            $mail->Body = "<div style='height:40px;line-height:40px;font-size:16px;font-weight:bold;background:#7030A0;color:#fff;text-indent:10px;'>表单详情：</div><div style='line-height:30px;padding:15px;background:#f6f6f6'>" . $row_title . $row_type . $row_oid . $forms_con . "<div style='line-height:40px;margin-top:10px;text-align:center;color:#888;font-size:12px'>" . $row_mail_name . "</div></div>";
            if (!$mail->send()) {
                $result = "send_err";
            } else {
                $result = "send_ok";
            }
        }
        $adata['data'] = $result;
        return json_encode($adata);
    }

    public function doPagesendMail_form2()
    {
        $uniacid = input('uniacid');
        $orderid = input('orderid');
        $id = input('cid');
        $formsConfig = Db::name('wd_xcx_forms_config')->where("uniacid", $uniacid)->field('mail_sendto,mail_user,mail_password,mail_user_name')->find();
        $mail_sendto = array();
        $mail_sendto = explode(",", $formsConfig['mail_sendto']);
        $row_mail_user = $formsConfig['mail_user'];
        $row_mail_pass = $formsConfig['mail_password'];
        $row_mail_name = $formsConfig['mail_user_name'];
        $orderinfo = Db::name('wd_xcx_order')->where("uniacid", $uniacid)->where("id", $orderid)->find();
        $forms['type'] = "产品";
        $row_title = "文章名称：" . $orderinfo['product'] . "<br />";
        $row_type = "文章类型：" . $forms['type'] . "<br />";
        $row_oid = "表单信息<br/>";
        $forms_con = "";
        if ($orderinfo['is_more']) { //预约预定产品
            $val = unserialize($orderinfo['beizhu_val']);
            if ($val) {
                foreach ($val as $key => $v) {
                    if (isset($v['z_val'])) {
                        $img = "";
                        foreach ($v["z_val"] as $k => $vi) {
                            $img .= "<img src='" . $vi . "'><br/>";
                        }
                        $forms_con .= $img;
                    } else {
                        $forms_con .= $v['name'] . ":" . $v['val'] . "<br />";
                    }
                }
            } else {
                exit;
            }
        } else {
            $forms_con .= "姓名：" . $orderinfo['pro_user_name'] . "<br/>手机号：" . $orderinfo['pro_user_tel'] . "<br/>地址：" . $orderinfo['pro_user_add'] . "<br/>备注：" . $orderinfo['pro_user_txt'];
        }
        $mail = new PHPMailer();
        $mail->CharSet = "utf-8";
        $mail->Encoding = "base64";
        $mail->SMTPSecure = "ssl";
        $mail->IsSMTP();
        $mail->Port = 465;
        $mail->Host = "smtp.qq.com";
        $mail->SMTPAuth = true;
        $mail->SMTPDebug = false;
        $mail->Username = $row_mail_user;
        $mail->Password = $row_mail_pass;
        $mail->setFrom($row_mail_user, $row_mail_name);
        foreach ($mail_sendto as $v) {
            $mail->AddAddress($v);
        }
        $mail->Subject = "新表单 - " . date("Y-m-d H:i:s", time());
        $mail->isHTML(true);
        $mail->Body = "<div style='height:40px;line-height:40px;font-size:16px;font-weight:bold;background:#7030A0;color:#fff;text-indent:10px;'>表单详情：</div><div style='line-height:30px;padding:15px;background:#f6f6f6'>" . $row_title . $row_type . $row_oid . $forms_con . "<div style='line-height:40px;margin-top:10px;text-align:center;color:#888;font-size:12px'>" . $row_mail_name . "</div></div>";
        if (!$mail->send()) {
            $result = "send_err";
        } else {
            $result = "send_ok";
        }
        $adata['data'] = $result;
        return json_encode($adata);
    }

    //付款成功邮件提醒 -- 购物车
    public function doPagesendMail_order_gwc()
    {
        $uniacid = input('uniacid');
        $order_id = input('order_id');
        $formsConfig = Db::name('wd_xcx_forms_config')->where("uniacid", $uniacid)->field('mail_sendto,mail_user,mail_password,mail_user_name')->find();
        $mail_sendto = array();
        $mail_sendto = explode(",", $formsConfig['mail_sendto']);
        $row_mail_user = $formsConfig['mail_user'];
        $row_mail_pass = $formsConfig['mail_password'];
        $row_mail_name = $formsConfig['mail_user_name'];
        $ord = Db::name('wd_xcx_duo_products_order')->where("uniacid", $uniacid)->where("order_id", $order_id)->find();
        $row_oid = "订单编号：" . $ord['order_id'] . "<br />";
        $pro = unserialize($ord['jsondata']);
        $row_pro = "";
        foreach ($pro as $key5 => &$resb) {
            $row_pro .= "产品名称：" . $resb['baseinfo']['title'] . "<br />";
            $row_pro .= "产品规格：" . $resb['proinfo']['ggz'] . "<br />";
        }
        $row_pro .= "支付金额：" . $ord['price'] . "<br />";
        $row_prc = "<br />";
        $row_prc .= "===================订单地址===================<br />";
        // 去查询订单的收货地址
        if ($ord['nav'] == 2) {//到店自提
            $row_prc .= "到店自提<br />";
        } else {
            $address = Db::name('wd_xcx_duo_products_address')->where("uniacid", $uniacid)->where("id", $ord['address'])->find();
            $row_prc .= "联系姓名：" . $address['name'] . "<br />";
            $row_prc .= "联系电话：" . $address['mobile'] . "<br />";
            $row_prc .= "联系地址：" . $address['address'] . "<br />";
            $row_prc .= "详细地址：" . $address['more_address'] . "<br />";
            $row_prc .= "邮编：" . $address['postalcode'] . "<br />";
        }
        $mail = new PHPMailer();
        $mail->CharSet = "utf-8";
        $mail->Encoding = "base64";
        $mail->SMTPSecure = "ssl";
        $mail->IsSMTP();
        $mail->Port = 465;
        $mail->Host = "smtp.qq.com";
        $mail->SMTPAuth = true;
        $mail->SMTPDebug = false;
        $mail->Username = $row_mail_user;
        $mail->Password = $row_mail_pass;
        $mail->setFrom($row_mail_user, $row_mail_name);
        foreach ($mail_sendto as $v) {
            $mail->AddAddress($v);
        }
        $mail->Subject = "新订单 - " . date("Y-m-d H:i:s", time());
        $mail->isHTML(true);
        $mail->Body = "<div style='height:40px;line-height:40px;font-size:16px;font-weight:bold;background:#7030A0;color:#fff;text-indent:10px;'>订单详情：</div><div style='line-height:30px;padding:15px;background:#f6f6f6'>" . $row_oid . $row_pro . $row_prc . "<div style='line-height:40px;margin-top:10px;text-align:center;color:#888;font-size:12px'>" . $row_mail_name . "</div></div>";
        if (!$mail->send()) {
            $result = "send_err";
        } else {
            $result = "send_ok";
        }
        $adata['data'] = $result;
        return json_encode($adata);
    }

    //付款成功邮件提醒  拼团
    public function doPagesendMail_order()
    {
        $uniacid = input('uniacid');
        $order_id = input('order_id');
        $formsConfig = Db::name('wd_xcx_forms_config')->where("uniacid", $uniacid)->field('mail_sendto,mail_user,mail_password,mail_user_name')->find();
        $mail_sendto = array();
        $mail_sendto = explode(",", $formsConfig['mail_sendto']);
        $row_mail_user = $formsConfig['mail_user'];
        $row_mail_pass = $formsConfig['mail_password'];
        $row_mail_name = $formsConfig['mail_user_name'];


        $ord = Db::name('wd_xcx_pt_order')->where("uniacid", $uniacid)->where("order_id", $order_id)->find();
        $row_oid = "订单编号（拼团）：" . $ord['order_id'] . "<br />";
        $pro = unserialize($ord['jsondata']);
        $row_pro = "";
        foreach ($pro as $key5 => &$resb) {
            $pro_belong = Db::name("wd_xcx_pt_pro")->where("id", $resb['pvid'])->find();
            $row_pro .= "产品名称：" . $pro_belong['title'] . "<br />";
            $row_pro .= "产品规格：" . $resb['proval_ggz'] . "<br />";
            $row_pro .= "产品价格：￥" . $resb['proval_price'] . " X " . $resb['num'] . " = ￥" . $resb['proval_price'] * $resb['num'] . "<br />";
        }
        $row_pro .= "购买数量：" . $resb['num'] . "<br />";
        $row_pro .= "实付金额：￥" . $ord['price'] . "<br />";

        $row_prc = "<br />";
        $form_id = $ord['formid'];//表单提交信息id

        if (intval($form_id) > 0) {
            $row_prc .= "===================表单信息===================<br />";
            $biaodan = Db::name("wd_xcx_formcon")->where("uniacid", $uniacid)->where("id", $form_id)->value("val");
            $biaodan = unserialize($biaodan);
            for ($i = 0; $i < count($biaodan); $i++) {
                if ($biaodan[$i]['val']) {
                    if ($biaodan[$i]['type'] == 5) {
                        for ($j = 0; $j < count($biaodan[$i]['z_val']); $j++) {
                            $row_prc .= $biaodan[$i]['name'] . ": <img src='" . $biaodan[$i]['z_val'][$j] . "'/><br />";
                        }
                    } else if ($biaodan[$i]['type'] == 3) {
                        $row_prc .= $biaodan[$i]['name'] . ": " . implode(',', $biaodan[$i]['val']) . "<br />";
                    } else {
                        $row_prc .= $biaodan[$i]['name'] . ":" . $biaodan[$i]['val'] . "<br />";
                    }
                }
            }
        }

        // 去查询订单的收货地址
        $row_prc .= "<br />";
        $row_prc .= "===================订单地址===================<br />";
        if ($ord['nav'] == 2) {//到店自提
            $row_prc .= "到店自提<br />";
        } else {
            $address = Db::name('wd_xcx_duo_products_address')->where("id", $ord['address'])->find();
            $row_prc .= "联系姓名：" . $address['name'] . "<br />";
            $row_prc .= "联系电话：" . $address['mobile'] . "<br />";
            $row_prc .= "联系地址：" . $address['address'] . "<br />";
            $row_prc .= "详细地址：" . $address['more_address'] . "<br />";
            $row_prc .= "邮编：" . $address['postalcode'] . "<br />";
        }
        $row_prc .= "买家留言：" . $ord['liuyan'] . "<br />";


        $mail = new PHPMailer();
        $mail->CharSet = "utf-8";
        $mail->Encoding = "base64";
        $mail->SMTPSecure = "ssl";
        $mail->IsSMTP();
        $mail->Port = 465;
        $mail->Host = "smtp.qq.com";
        $mail->SMTPAuth = true;
        $mail->SMTPDebug = false;
        $mail->Username = $row_mail_user;
        $mail->Password = $row_mail_pass;
        $mail->setFrom($row_mail_user, $row_mail_name);
        foreach ($mail_sendto as $v) {
            $mail->AddAddress($v);
        }
        $mail->Subject = "新订单 - " . date("Y-m-d H:i:s", time());
        $mail->isHTML(true);
        $mail->Body = "<div style='height:40px;line-height:40px;font-size:16px;font-weight:bold;background:#7030A0;color:#fff;text-indent:10px;'>订单详情：</div><div style='line-height:30px;padding:15px;background:#f6f6f6'>" . $row_oid . $row_pro . $row_prc . "<div style='line-height:40px;margin-top:10px;text-align:center;color:#888;font-size:12px'>" . $row_mail_name . "</div></div>";

        if (!$mail->send()) {
            $result = "send_err";
        } else {
            $result = "send_ok";
        }
        $adata['data'] = $result;
        return json_encode($adata);
    }

    //付款成功邮件提醒 -- 餐饮
    public function doPagesendMail_foodorder()
    {
        $uniacid = input("uniacid");
        $order_id = input("order_id");
        $formsConfig = Db::name('wd_xcx_forms_config')->where("uniacid", $uniacid)->field('mail_sendto,mail_user,mail_password,mail_user_name')->find();
        $mail_sendto = array();
        $mail_sendto = explode(",", $formsConfig['mail_sendto']);
        $row_mail_user = $formsConfig['mail_user'];
        $row_mail_pass = $formsConfig['mail_password'];
        $row_mail_name = $formsConfig['mail_user_name'];
        $ord = Db::name('wd_xcx_food_order')->where("uniacid", $uniacid)->where("order_id", $order_id)->field('order_id,username,usertel,address,userbeiz,usertime,creattime,price,val')->find();
        $pro = array();
        $pro = unserialize($ord['val']);
        $row_con = "";
        foreach ($pro as $v) {
            $row_con = $v[2] . "x" . $v[3] . " = " . $v[1] * $v[3] . "<br/>" . $row_con;
        }
        $row_oid = "订单编号：" . $ord['order_id'] . "<br />";
        $row_pro = "订单内容：<br />" . $row_con . "<br />";
        $row_prc = "支付金额：" . $ord['price'] . "<br />";
        $row_nam = "联系姓名：" . $ord['username'] . "<br />";
        $row_tel = "联系电话：" . $ord['usertel'] . "<br />";
        $row_add = "预定地址：" . $ord['address'] . "<br />";
        $row_time = "预定时间：" . $ord['usertime'] . "<br />";
        $row_txt = "留言备注：" . $ord['userbeiz'] . "<br />";
        $mail = new PHPMailer();
        $mail->CharSet = "utf-8";
        $mail->Encoding = "base64";
        $mail->SMTPSecure = "ssl";
        $mail->IsSMTP();
        $mail->Port = 465;
        $mail->Host = "smtp.qq.com";
        $mail->SMTPAuth = true;
        $mail->SMTPDebug = false;
        $mail->Username = $row_mail_user;
        $mail->Password = $row_mail_pass;
        $mail->setFrom($row_mail_user, $row_mail_name);
        foreach ($mail_sendto as $v) {
            $mail->AddAddress($v);
        }
        $mail->Subject = "新订单 - " . date("Y-m-d H:i:s", time());
        $mail->isHTML(true);
        $mail->Body = "<div style='height:40px;line-height:40px;font-size:16px;font-weight:bold;background:#7030A0;color:#fff;text-indent:10px;'>订单详情：</div><div style='line-height:30px;padding:15px;background:#f6f6f6'>" . $row_oid . $row_pro . $row_prc . $row_nam . $row_tel . $row_add . $row_time . $row_txt . "<div style='line-height:40px;margin-top:10px;text-align:center;color:#888;font-size:12px'>" . $row_mail_name . "</div></div>";
        if (!$mail->send()) {
            $result = "send_err";
        } else {
            $result = "send_ok";
        }
        $adata['data'] = $result;
        return json_encode($adata);
    }


    // 优惠券管理
    public function doPagecoupon()
    {
        $uniacid = input('uniacid');
        $suid = input('suid');
        $coupon = Db::name('wd_xcx_coupon')->where("uniacid", $uniacid)->where("flag", 1)->where('give_type = 0 or give_type = 2')->order('num DESC,id DESC')->select();

        foreach ($coupon as $key => &$res) {
            $res['hide'] = 0;

            if($res['counts'] != -1){
                $res['pers'] = round($res['nownum'] / $res['counts'] * 100, 2);
            }

            //1.判断优惠券有没有领完 0 领完了  1未领完
            $isover = 1;
            if (($res['counts'] - $res['nownum']) <= 0) {
                $isover = 0;
            } else {
                $isover = 1;
            }
            $res['isover'] = $isover;
            //2.判断优惠券有没有过期 0过期  1未过期
            $isover_time = 1;
            $nowtime = time();
            if ($res['use_contents'] === "" || $res['use_contents'] === 0) {//老优惠券规则兼容
                $res['use_contents'] = [];
                $res['use_contents']['use_type'] = 0;
                $res['use_contents']['use_time']['use_btime'] = $res['btime'] > 0 ? date("Y-m-d", $res['btime']) : 0;
                $res['use_contents']['use_time']['use_etime'] = $res['etime'] > 0 ? date("Y-m-d", $res['etime']) : 0;

                $temp_arr = [
                    'type' => 0,
                    'class' => ''
                ];

                $res['use_goods_contents'] = $temp_arr;
            } else {
                $use_contents = unserialize($res['use_contents']);
                if ($use_contents['use_type'] == 0) {
                    $use_contents['use_time'] = explode(",", $use_contents['use_time']);
                    $use_btime = $use_contents['use_time'][0];
                    $use_etime = $use_contents['use_time'][1];

                    if ($use_etime != 0) {
                        if ($nowtime <= $use_etime) {   //现在的时间在设置时间区间内算未过期
                            $isover_time = 1;
                        } else {
                            $isover_time = 0;
                        }
                    } else if ($use_etime == 0) {
                        $isover_time = 1;
                    }

                    $res['use_contents'] = $use_contents;
                    $res['use_contents']['use_time'] = [];
                    $res['use_contents']['use_time']['use_btime'] = $use_btime > 0 ? date("Y-m-d", $use_btime) : 0;
                    $res['use_contents']['use_time']['use_etime'] = $use_etime > 0 ? date("Y-m-d", $use_etime) : 0;
                } else {
                    $res['use_contents'] = $use_contents;
                }

                $use_goods_contents = $res['use_goods_contents'] ? unserialize($res['use_goods_contents']) : '';
                if(!$use_goods_contents){
                    $use_goods_contents['type'] = 1;
                    $use_goods_contents['cate_names'] = '';
                }else{
                    //type a 多规格   b 秒杀  c 预约预定  d 拼团  e多商户  gpay 店内支付 
                    if ($use_goods_contents['type'] == 1) {
                        $contents = explode(",", $use_goods_contents['contents']);
                        $cate_names = '';
                        foreach ($contents as $value) {
                            if($value == 'gpay'){
                                $cate_name = '店内支付';
                            }else{
                                $fir = substr($value, 0, 1);
                                $cate_id = substr($value, 1);
                                if($fir == 'a'){
                                    $cate_name = Db::name('wd_xcx_cate') ->where('id', $cate_id) ->where('statue', 1) ->value('name');
                                }else if($fir == 'b'){
                                    $cate_name = Db::name('wd_xcx_flashsale_cate') ->where('id', $cate_id) ->where('statue', 1)->where('catefor', 'flashsale') ->value('name');
                                }else if($fir == 'c'){
                                    $cate_name = Db::name('wd_xcx_flashsale_cate') ->where('id', $cate_id) ->where('statue', 1)->where('catefor', 'reserve') ->value('name');
                                }else if($fir == 'd'){
                                    $cate_name = Db::name('wd_xcx_pt_cate') ->where('id', $cate_id)->value('title');
                                }else if($fir == 'e'){
                                    $cate_name = Db::name('wd_xcx_goods_cate') ->where('id', $cate_id)->where('flag', 1)->value('name');
                                }
                            }
                            if($cate_name){
                                $cate_names .= $cate_name.'、';
                            }
                        }
                        if($cate_names){
                            $cate_names = mb_substr($cate_names, 0, -1);
                        }
                        $use_goods_contents['contents'] = $cate_names;
                    }else{
                        $use_goods_contents['contents'] = '';
                    }
                }
                $res['use_goods_contents'] = $use_goods_contents;
            }

            $res['isover_time'] = $isover_time;
            //3.判断我有没有领取过这个优惠券
            $is_get = 1;
            $yhqbuy = Db::name('wd_xcx_coupon_user')->where("uniacid", $uniacid)->where("cid", $res['id'])->where("suid", $suid)->count();
            if ($res['xz_count'] == 0) {
                $coupon[$key]['nowCount'] = "无限";
            } else {
                $coupon[$key]['nowCount'] = intval($res['xz_count']) - intval($yhqbuy);
            }
            if ($res['xz_count'] > 0 && $yhqbuy >= $res['xz_count']) {
                $is_get = 0;
            }
            $res['is_get'] = $is_get;
            $yhqs = Db::name('wd_xcx_coupon_user')->where("uniacid", $uniacid)->where("cid", $res['id'])->count();
            $res['kc'] = $res['counts'];
        }
        $adata['data'] = $coupon;
        return json_encode($adata);
    }

    public function doPagegetcoupon()
    {
        $uniacid = input('uniacid');
        $suid = input('suid');   //超级用户ID
        $id = input('id');
        $coupon = Db::name('wd_xcx_coupon')->where("uniacid", $uniacid)->where("id", $id)->find();
        //获取是否已领取过
        $is_get = Db::name('wd_xcx_coupon_user')->where([
            'suid' => $suid,
            'uniacid' => $uniacid,
            'cid' => $id
        ])->count();

        if ($is_get > 0 && $coupon['xz_count'] == 1) {
            $adata['data'] = 2;
            return json_encode($adata);
        }

        if ($coupon['use_contents']) {//新版
            $use_contents = unserialize($coupon['use_contents']);
            if ($use_contents['use_type'] == 0) {
                $coupon['btime'] = explode(",", $use_contents['use_time'])[0];
                $coupon['etime'] = explode(",", $use_contents['use_time'])[1];
            } else if ($use_contents['use_type'] == 1) {
                $coupon['btime'] = mktime(0, 0, 0, date('m'), date('d'), date('Y'));
                $coupon['etime'] = $use_contents['use_time'] > 1 ? strtotime(date('Y-m-d', strtotime('+' . ($use_contents['use_time']) . ' day'))) - 1 : strtotime(date('Y-m-d', strtotime('+1 day'))) - 1;

            } else if ($use_contents['use_type'] == 2) {
                $coupon['btime'] = strtotime(date('Y-m-d', strtotime("+1 day")));
                $coupon['etime'] = $use_contents['use_time'] > 1 ? strtotime(date('Y-m-d', strtotime('+' . ($use_contents['use_time'] + 1) . ' day'))) -1 : strtotime(date('Y-m-d', strtotime('+2 day'))) - 1;
            }
        }
        if ($coupon['use_goods_contents'] == "") { //兼容老版本优惠券
            $use_type = 0;
            $use_class = "";
        } else {
            $use_goods_contents = unserialize($coupon['use_goods_contents']);
            $use_type = $use_goods_contents['type'];
            $use_class = $use_goods_contents['contents'];
        }
        $data = array(
            "suid" => $suid,
            "uniacid" => $uniacid,
            "cid" => $id,
            "ltime" => time(),
            "flag" => 0,
            "utime" => 0,
            "btime" => $coupon['btime'],
            "etime" => $coupon['etime'],
            "title" => $coupon['title'],
            "price" => $coupon['price'],
            "pay_money" => $coupon['pay_money'],
            "color" => $coupon['color'],
            "use_type" => $use_type,
            "use_class" => $use_class,
        );
        $kid = 1;
        if ($coupon['counts'] > 0 || $coupon['counts'] == -1) {
            $res = Db::name('wd_xcx_coupon_user')->insert($data);
            $data2 = array(
                "nownum" => $coupon['nownum'] + 1
            );
            Db::name('wd_xcx_coupon')->where("id", $id)->where("uniacid", $uniacid)->update($data2);
            $kid = 1;
        } else {
            $kid = 2;
        }
        $adata['data'] = $kid;
        return json_encode($adata);
    }

    public function doPagemycoupon()
    {
        $uniacid = input('uniacid');
        $suid = input('suid');
        $flag = input('flag');
        $tiaojian = " and flag <> 2 and flag = 0";
        if ($flag == 0) {
            $tiaojian = " and flag <> 2 and flag = 0";
        }
        if ($flag == 1) {
            $tiaojian = " ";
        }


        //if ($suid) {
        //$user = Db::name('wd_xcx_user')->where("uniacid", $uniacid)->where("openid", $openid)->find();
        //}
        //$suid = $user['id'];
        $prefix = config('database.prefix');
        $yhqsold = Db::query("select * from {$prefix}wd_xcx_coupon_user where uniacid = " . $uniacid . " and suid = " . $suid . $tiaojian . " ORDER BY id desc");
        $time = time();
        $aa = [];
        foreach ($yhqsold as $key => &$resi) {
            if ($resi['etime'] != 0) {
                if ($time > $resi['etime'] && $resi['flag'] == 0) {
                    $kdata = array(
                        "flag" => 2
                    );
                    Db::name('wd_xcx_coupon_user')->where("id", $resi['id'])->update($kdata);
                }
            }
        }
        // 重新获取过滤后的我的优惠券
        $prefix = config('database.prefix');
        $yhqs = Db::query("select * from {$prefix}wd_xcx_coupon_user where uniacid = " . $uniacid . " and suid = " . $suid . $tiaojian . " ORDER BY flag asc, id desc");
        $type = input("type");

        foreach ($yhqs as $key => &$res) {
            $res['show_status'] = 1; //1在可用时间内 0在未使用时间内
            if($res['btime'] != 0){
                if($res['btime'] > time()){
                    $res['show_status'] = 0;
                }
            }
            //type a 多规格   b 秒杀  c 预约预定  d 拼团  e多商户  gpay 店内支付 
            if ($res['use_type'] == 1) {
                $contents = explode(",", $res['use_class']);
                $cate_names = '';
                foreach ($contents as $value) {
                    if($value == 'gpay'){
                        $cate_name = '店内支付';
                    }else{
                        $fir = substr($value, 0, 1);
                        $cate_id = substr($value, 1);
                        if($fir == 'a'){
                            $cate_name = Db::name('wd_xcx_cate') ->where('id', $cate_id) ->where('statue', 1) ->value('name');
                        }else if($fir == 'b'){
                            $cate_name = Db::name('wd_xcx_flashsale_cate') ->where('id', $cate_id) ->where('statue', 1)->where('catefor', 'flashsale') ->value('name');
                        }else if($fir == 'c'){
                            $cate_name = Db::name('wd_xcx_flashsale_cate') ->where('id', $cate_id) ->where('statue', 1)->where('catefor', 'reserve') ->value('name');
                        }else if($fir == 'd'){
                            $cate_name = Db::name('wd_xcx_pt_cate') ->where('id', $cate_id)->value('title');
                        }else if($fir == 'e'){
                            $cate_name = Db::name('wd_xcx_goods_cate') ->where('id', $cate_id)->where('flag', 1)->value('name');
                        }
                    }
                    if($cate_name){
                        $cate_names .= $cate_name.'、';
                    }
                }
                if($cate_names){
                    $cate_names = mb_substr($cate_names, 0, -1);
                }
                $res['use_class'] = $cate_names;
            }

            if ($res['btime'] != 0) {
                $res['btime'] = date("Y-m-d", $res['btime']);
            }
            if ($res['etime'] != 0) {
                $res['etime'] = date("Y-m-d", $res['etime']);
            }

            $type = input("type");
            if ($res['use_type'] == 1 && $type) {
                if ($type == "miaosha") {
                    if (strpos($res['use_class'], "b") === false) { //当优惠券没有栏目时
                        unset($yhqs[$key]);
                    } else { //当优惠券有栏目时
                        $id = input('id');
                        $cate_id = Db::name('wd_xcx_products')->where('id', $id)->value('cid');
                        $use_class = explode(",", $res['use_class']);
                        if (!in_array("b" . $cate_id, $use_class)) { //商品所属栏目不在优惠券可用类目中
                            unset($yhqs[$key]);
                        }
                    }
                } else if ($type == "yuyue") {
                    if (strpos($res['use_class'], "c") === false) { //当优惠券没有栏目时
                        unset($yhqs[$key]);
                    } else { //当优惠券有栏目时
                        $id = input('id');
                        $cate_id = Db::name('wd_xcx_products')->where('id', $id)->value('cid');
                        $use_class = explode(",", $res['use_class']);
                        if (!in_array("c" . $cate_id, $use_class)) { //商品所属栏目不在优惠券可用类目中
                            unset($yhqs[$key]);
                        }
                    }
                } else if ($type == "pt") {
                    if (strpos($res['use_class'], "d") === false) { //当优惠券没有栏目时
                        unset($yhqs[$key]);
                    } else { //当优惠券有栏目时
                        $id = input('id');
                        $cate_id = Db::name('wd_xcx_pt_pro')->where('id', $id)->value('cid');
                        $use_class = explode(",", $res['use_class']);
                        if (!in_array("d" . $cate_id, $use_class)) { //商品所属栏目不在优惠券可用类目中
                            unset($yhqs[$key]);
                        }
                    }
                } else if ($type == "duoshop") { //多商户
                    if (strpos($res['use_class'], "e") === false) { //当优惠券没有栏目时
                        unset($yhqs[$key]);
                    } else { //当优惠券有栏目时
                        $id = input('id');
                        $cate_id = Db::name('wd_xcx_shops_goods')->where('id', $id)->value('cid');
                        $use_class = explode(",", $res['use_class']);
                        if (!in_array("e" . $cate_id, $use_class)) { //商品所属栏目不在优惠券可用类目中
                            unset($yhqs[$key]);
                        }
                    }
                }
            }
        }

        $result['data'] = $yhqs;
        return json_encode($result);
    }

    public function doPagemycouponD()  //多规格商品优惠券
    {
        $uniacid = input('uniacid');
        $suid = input('suid');
        $flag = input('flag');

        $tiaojian = " and flag <> 2 and flag = 0";
        if ($flag == 0) {
            $tiaojian = " and flag <> 2 and flag = 0";
        }
        if ($flag == 1) {
            $tiaojian = " and flag <> 2";
        }

        $prefix = config('database.prefix');
        $yhqsold = Db::query("select * from {$prefix}wd_xcx_coupon_user where uniacid = " . $uniacid . " and suid = " . $suid . $tiaojian . " ORDER BY id desc");
        $time = time();
        // $aa = [];
        foreach ($yhqsold as $key => &$resi) {
            if ($resi['etime'] != 0) {
                if ($time > $resi['etime'] && $resi['flag'] == 0) {
                    $kdata = array(
                        "flag" => 2
                    );
                    Db::name('wd_xcx_coupon_user')->where("id", $resi['id'])->update($kdata);
                }
            }

            // $arrs = Db::name('wd_xcx_coupon')->where("uniacid", $uniacid)->where("id", $resi['cid'])->find();
            // if ($arrs['btime'] != 0) {
            //     $arrs['btime'] = date("Y-m-d", $arrs['btime']);
            // }
            // if ($arrs['etime'] != 0) {
            //     if ($time > $arrs['etime'] && $resi['flag'] == 0) {
            //         $kdata = array(
            //             "flag" => 2
            //         );
            //         Db::name('wd_xcx_coupon_user')->where("id", $resi['id'])->update($kdata);
            //     }
            //     $arrs['etime'] = date("Y-m-d", $arrs['etime']);
            // }
        }


        // 重新获取过滤后的我的优惠券
        $yhqs = Db::query("select * from {$prefix}wd_xcx_coupon_user where uniacid = " . $uniacid . " and suid = " . $suid . $tiaojian . " ORDER BY id desc");
        foreach ($yhqs as $key => &$res) {
            if ($res['use_type'] == 1) {

                if (strpos($res['use_class'], "a") === false) { //当优惠券没有栏目时
                    unset($yhqs[$key]);
                } else { //当优惠券有栏目时
                    $gids = substr(input("gids"), 0, -1); //栏目
                    $gids = explode(',', $gids);
                    $cids = Db::name('wd_xcx_products')->where("id", "in", $gids)->field("cid")->select();
                    $cids = array_column($cids, 'cid');
                    $cid_is_not = 0;

                    $use_class = explode(",", $res['use_class']);
                    foreach ($cids as $ksi => $vsi) {
                        if (!in_array("a" . $vsi, $use_class)) { //商品所属栏目不在优惠券可用类目中
                            $cid_is_not += 1;
                        }
                    }

                    if ($cid_is_not > 0) {
                        unset($yhqs[$key]);
                    }

                }
            }
            if ($res['btime'] != 0) {
                $res['btime'] = date("Y-m-d", $res['btime']);
            }
            if ($res['etime'] != 0) {
                $res['etime'] = date("Y-m-d", $res['etime']);
            }
        }
        $result['data'] = $yhqs;
        return json_encode($result);
    }

    public function doPagegetorderart()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $pindex = max(1, intval(input('page')));
        $psize = 10;
        $begin = ($pindex - 1) * $psize;
        if ($suid) {
            $collect = Db::name('wd_xcx_video_pay')->where("uniacid", $uniacid)->where("suid", $suid)->limit($begin, $psize)->select();
            $num = Db::name('wd_xcx_video_pay')->where("uniacid", $uniacid)->where("suid", $suid)->count();
            $arr = array();
            foreach ($collect as $key => &$rec) {
                $pro = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where("id", $rec['pid'])->where("flag", 1)->find();
                if (!$pro) {
                    continue;
                }
                $pro['paymoney'] = $rec['paymoney'];
                $pro['thumb'] = remote($uniacid, $pro['thumb'], 1);
                $pro['paytime'] = date("Y-m-d H:i:s", $rec['creattime']);
                $arr['list'][] = $pro;
            }
            $arr['num'] = ceil($num / $psize);
            $adata['data'] = $arr;
            return json_encode($adata);
        }
    }

    public function doPageCollect()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $cid = input("id");
        $type = input("types");

        //先判断有没有收藏过
        $collect = Db::name('wd_xcx_collect')->where("uniacid", $uniacid)->where("suid", $suid)->where("type", $type)->where("cid", $cid)->find();
        if ($collect) {
            $res = Db::name('wd_xcx_collect')->where("uniacid", $uniacid)->where("suid", $suid)->where("type", $type)->where("cid", $cid)->delete();
            if ($res) {
                $adata['data'] = "取消收藏成功";
                return json_encode($adata);
            }
        } else {
            $data = array(
                "suid" => $suid,
                "type" => $type,
                "cid" => $cid,
                "uniacid" => $uniacid
            );
            $res = Db::name('wd_xcx_collect')->insert($data);
            if ($res) {
                $adata['data'] = "收藏成功";
                return json_encode($adata);
            }
        }
    }

    public function doPagegetCollect()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $type = input("type");
        $where = [];
        if($type == 1){
            $where['type'] = ['neq', 'showArt'];
        }else{
            $where['type'] = 'showArt';
        }
        $pindex = max(1, intval(input('page')));
        $psize = 10;
        $begin = ($pindex - 1) * $psize;
        if ($suid) {
            $collect = Db::name('wd_xcx_collect')->where("uniacid", $uniacid)->where("suid", $suid)->where($where)->limit($begin, $psize)->select();
            $num = Db::name('wd_xcx_collect')->where("uniacid", $uniacid)->where("suid", $suid)->where($where)->count();
            $arr = array();
            $arr['list'] = [];
            foreach ($collect as $key => &$rec) {
                if ($rec['type'] == "pt") {
                    $pro = Db::name('wd_xcx_pt_pro')->where("uniacid", $uniacid)->where("id", $rec['cid'])->find();
                    if ($pro) {
                        $pro['sale_num'] = Db::name('wd_xcx_pt_share')->where("uniacid", $uniacid)->where("pid", $rec['cid'])->count();
                        $pro['type'] = "pt";
                        if ($pro['thumb']) {
                            $pro['thumb'] = remote($uniacid, $pro['thumb'], 1);
                        }
                    }
                } else if ($rec['type'] == 'flashsale' || $rec['type'] == 'reserve') {
                    $pro = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where("id", $rec['cid'])->where("is_sale", 0)->find();
                    if ($pro) {
                        $orders = Db::name('wd_xcx_order')->where('pid', $pro['id'])->where('uniacid', $uniacid)->select();
                        $sale_num = 0;
                        if ($orders) {
                            foreach ($orders as $reb) {
                                $sale_num += $reb['num'];
                            }
                        }
                        $pro['sale_num'] = $pro['sale_num'] + $sale_num;
                        $pro['type'] = $rec['type'];
                        if ($pro['thumb']) {
                            $pro['thumb'] = remote($uniacid, $pro['thumb'], 1);
                        }
                    }
                } else if ($rec['type'] == 'showProMore') {
                    $pro = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where("id", $rec['cid'])->where("is_sale", 0)->find();
                    if ($pro) {
                        $proarr = Db::name('wd_xcx_duo_products_type_value')->where("pid", $rec['cid'])->order("id asc")->select();
                        $pro['type'] = "showProMore";
                        foreach ($proarr as $key => &$res) {
                            $pro['sale_num'] = $pro['sale_num'] + $res['vsalenum'] + $res['salenum'];
                        }
                        if ($pro['thumb']) {
                            $pro['thumb'] = remote($uniacid, $pro['thumb'], 1);
                        }
                    }


                } else if ($rec['type'] == "exchange") {
                    $pro = Db::name('wd_xcx_score_shop')->where("uniacid", $uniacid)->where("id", $rec['cid'])->find();
                    if ($pro) {
                        $pro['sale_num'] = Db::name('wd_xcx_score_order')->where("uniacid", $uniacid)->where("pid", $rec['cid'])->count();
                        $pro['type'] = "exchange";
                        if ($pro['thumb']) {
                            $pro['thumb'] = remote($uniacid, $pro['thumb'], 1);
                        }
                    }
                } else if ($rec['type'] == 'shopsPro') {   //多商户商品
                    $pro = Db::name('wd_xcx_shops_goods')->where("uniacid", $uniacid)->where("id", $rec['cid'])->where("flag", 1)->find();
                    if ($pro) {
                        $pro['sale_num'] = $pro['vsales'] + $pro['rsales'];
                        $pro['price'] = $pro['sellprice'];
                        $pro['type'] = "shopsPro";
                        if ($pro['thumb']) {
                            $pro['thumb'] = remote($uniacid, $pro['thumb'], 1);
                        }
                    }
                } else if ($rec['type'] == 'showArt') {   //文章
                    $pro = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where("id", $rec['cid'])->where("flag", 1)->find();
                    if ($pro) {
                        $pro['type'] = "showArt";
                        $music_art_info = unserialize($pro['music_art_info']);
                        if($pro['art_type'] == 1){
                            $pro['price'] = $music_art_info['art_price'] ? $music_art_info['art_price'] : 0;
                        }else if($pro['art_type'] == 3){
                            $pro['price'] = $music_art_info['music_price'] ? $music_art_info['music_price'] : 0;
                        }
                        $pro['creattime'] = date("Y-m-d", $pro['ctime']);

                        if ($pro['thumb']) {
                            $pro['thumb'] = remote($uniacid, $pro['thumb'], 1);
                        }
                    }
                }

                if ($pro) {
                    $arr['list'][] = $pro;
                }

            }
            $arr['num'] = ceil($num / $psize);
            $adata['data'] = $arr;
            return json_encode($adata);
        }
    }

    public function doPageStore()
    {
        $uniacid = input("uniacid");
        $radius = 6378.135;
        $keyword = input('keyword');
        if ($keyword) {
            $store['list'] = Db::name('wd_xcx_store')->where("uniacid", $uniacid)->where("title", 'like', "%" . $keyword . "%")->order("id desc")->select();
            $store['num'] = Db::name('wd_xcx_store')->where("uniacid", $uniacid)->where("title", 'like', "%" . $keyword . "%")->order("id desc")->count();
            foreach ($store['list'] as $key => &$res) {
                $res['logo'] = remote($uniacid, $res['logo'], 1);
                $rad = doubleval(M_PI / 180.0);
                $lat1 = doubleval(input("lat")) * $rad;
                $lon1 = doubleval(input("lon")) * $rad;
                $lat2 = doubleval($res['lat']) * $rad;
                $lon2 = doubleval($res['lon']) * $rad;
                $theta = $lon2 - $lon1;
                $dist = acos(sin($lat1) * sin($lat2) + cos($lat1) * cos($lat2) * cos($theta));
                if ($dist < 0) {
                    $dist += M_PI;
                }
                $dist = $dist * $radius;
                $formatted = round($dist, 2);
                $res['kms'] = $formatted;
            }
            $arry = $store['list'];
            for ($i = 0; $i < count($arry); $i++) {
                for ($j = $i + 1; $j < count($arry); $j++) {
                    if ($arry[$i]['kms'] > $arry[$j]['kms']) {
                        $new = $arry[$i];
                        $arry[$i] = $arry[$j];
                        $arry[$j] = $new;
                    }
                }
            }
            $store['list'] = $arry;
        } else {
            $store['list'] = Db::name('wd_xcx_store')->where("uniacid", $uniacid)->order("id desc")->select();
            $store['num'] = Db::name('wd_xcx_store')->where("uniacid", $uniacid)->order("id desc")->count();
            foreach ($store['list'] as $key => &$res) {
                $res['logo'] = remote($uniacid, $res['logo'], 1);
                $rad = doubleval(M_PI / 180.0);
                $lat1 = doubleval(input('lat')) * $rad;
                $lon1 = doubleval(input('lon')) * $rad;
                $lat2 = doubleval($res['lat']) * $rad;
                $lon2 = doubleval($res['lon']) * $rad;
                $theta = $lon2 - $lon1;
                $dist = acos(sin($lat1) * sin($lat2) + cos($lat1) * cos($lat2) * cos($theta));
                if ($dist < 0) {
                    $dist += M_PI;
                }
                $dist = $dist * $radius;
                $formatted = round($dist, 2);
                $res['kms'] = $formatted;
            }
            $arry = $store['list'];
            for ($i = 0; $i < count($arry); $i++) {
                for ($j = $i + 1; $j < count($arry); $j++) {
                    if ($arry[$i]['kms'] > $arry[$j]['kms']) {
                        $new = $arry[$i];
                        $arry[$i] = $arry[$j];
                        $arry[$j] = $new;
                    }
                }
            }
            $store['list'] = $arry;
        }
        $result['data'] = $store;
        return json_encode($result);
    }

    public function doPagestoreConf()
    {
        $uniacid = input("uniacid");
        $store = Db::name('wd_xcx_storeconf')->where('uniacid', $uniacid)->find();
        if ($store == false) {
            $store['status'] = 0;
        }
        $result['data'] = $store;
        return json_encode($result);
    }

    public function doPageShowstore()
    {
        $uniacid = input("uniacid");
        $id = input("id");
        $store = Db::name('wd_xcx_store')->where("uniacid", $uniacid)->where("id", $id)->order("id desc")->find();
        if ($store) {
            $allimg = Db::name('wd_xcx_products_url')->where("randid", $store['onlyid'])->field('url')->select();
            $store['logo'] = remote($uniacid, $store['logo'], 1);
            $store['thumb'] = remote($uniacid, $store['thumb'], 1);
        }

        $store['text'] = array();
        if ($allimg) {
            foreach ($allimg as $key => $value) {
                $value['url'] = remote($uniacid, $value['url'], 1);
                array_push($store['text'], $value['url']);
            }
        }
        $adata['data'] = $store;
        return json_encode($adata);
    }

    public function doPageStoreNew()
    {
        $uniacid = input("uniacid");
        $radius = 6378.135;
        $city = input("currentCity");
        $store['list'] = Db::name('wd_xcx_store')->where('uniacid', $uniacid)->where('city', $city)->order('id desc')->select();
        // dump($store['list']);die;
        // var_dump($store);exit;
        $store['num'] = Db::name('wd_xcx_store')->where('uniacid', $uniacid)->where('city', $city)->order('id desc')->count();
        foreach ($store['list'] as $key => &$res) {
            if (stristr($res['logo'], 'http')) {
                $res['logo'] = $res['logo'];
            } else {
                $res['logo'] = remote($uniacid, $res['logo'], 1);
            }
            $rad = doubleval(M_PI / 180.0);
            $lat1 = doubleval(input('lat')) * $rad;
            $lon1 = doubleval(input('lon')) * $rad;
            $lat2 = doubleval($res['lat']) * $rad;
            $lon2 = doubleval($res['lon']) * $rad;
            $theta = $lon2 - $lon1;
            $dist = acos(sin($lat1) * sin($lat2) + cos($lat1) * cos($lat2) * cos($theta));
            if ($dist < 0) {
                $dist += M_PI;
            }
            $dist = $dist * $radius;
            $formatted = round($dist, 2);
            $res['kms'] = $formatted;
        }
        $arry = $store['list'];
        for ($i = 0; $i < count($arry); $i++) {
            for ($j = $i + 1; $j < count($arry); $j++) {
                if ($arry[$i]['kms'] > $arry[$j]['kms']) {
                    $new = $arry[$i];
                    $arry[$i] = $arry[$j];
                    $arry[$j] = $new;
                }
            }
        }
        $store['list'] = $arry;
        $result['data'] = $store['list'];
        return json_encode($result);
    }

    public function doPageProductsearch()
    {
        $uniacid = input("uniacid");
        $title = "%" . input("title") . "%";
        $paimai = input('paimai');
        $type = input('type');
        $sid = input('sid');  //来源  1多商户商品列表  2非多商户商品列表
        $le = input("latitude");
        $ne = input("longitude");
        $flag = 1;
        $result = [];
        $cid = input('cid');

        //来自多规格栏目页搜索
        if ($cid) {
            $result = [];
            // 获取属于当前栏目的商品
            $products = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where("type", 'showProMore')->where("title", 'like', $title)->where("is_sale", 0)->where('cid', $cid)->field('id,title,thumb,type,`desc`,ctime,buy_type,price,sale_num,sale_tnum,hits,is_more,use_more')->order("id desc")->select();

            if(count($products) > 0){
                $result['type'][] = 'showProMore';
                $result['list'][] = $products;
            }

            //获取当前栏目的子栏目
            $son_cate = Db::name('wd_xcx_cate')->where('cid', $cid)->select();
            if ($son_cate) {
                foreach ($son_cate as $kkk => $son_p) {
                    $son_pro = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where("type", 'showProMore')->where("title", 'like', $title)->where("is_sale", 0)->where('cid', $son_p['id'])->field('id,title,thumb,type,`desc`,ctime,buy_type,price,sale_num,sale_tnum,hits,is_more,use_more')->order("id desc")->select();
                    if(count($son_pro) > 0){
                        $result['type'][] = 'showProMore';
                        $result['list'][] = $son_pro;
                    }
                }
            } 

            if(count($result)){
                foreach ($result['list'] as $k_r => $v_r) {
                    if ($v_r['use_more'] == 1) {
                        $result['list'][$k_r]['price'] = Db::name("wd_xcx_duo_products_type_value")->where("pid", $v_r['id'])->min("price");
                        $b = Db::name("wd_xcx_duo_products_type_value")->where("pid", $v_r['id'])->sum("salenum");
                        $c = Db::name("wd_xcx_duo_products_type_value")->where("pid", $v_r['id'])->sum("vsalenum");
                        $result['list'][$k_r]['sale_num'] = $b + $c;
                    } else {
                        $result['list'][$k_r]['price'] = $v_r['price'];
                        $result['list'][$k_r]['sale_num'] = $v_r['sale_num'] + $v_r['sale_tnum'];
                    }

                    $result['list'][$k_r]['thumb'] = remote($uniacid, $v_r['thumb'], 1);
                }
            }

            $adata['data'] = $result;
            return json_encode($adata);
        }

        //来自全部商品页搜索
        if ($type) {
            $product1 = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where("type", "showProMore")->where("title", 'like', $title)->where("is_sale", 0)->field('id,title,thumb,type,`desc`,ctime,buy_type,price,sale_num,sale_tnum,hits,is_more,use_more')->order("id desc")->select();
            $product2 = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where("type", "showPro")->where("title", 'like', $title)->where("is_sale", 0)->field('id,title,thumb,type,`desc`,ctime,buy_type,price,sale_num,sale_tnum,hits,is_more,use_more')->order("id desc")->select();
            $product3 = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where("type", "reserve")->where("title", 'like', $title)->where("is_sale", 0)->field('id,title,thumb,type,`desc`,ctime,buy_type,price,sale_num,sale_tnum,hits,is_more,use_more')->order("id desc")->select();
            if ($product1) {
                foreach ($product1 as &$row) {
                    if ($row['use_more']) {
                        $a = Db::name("wd_xcx_duo_products_type_value")->where("pid", $row['id'])->min("price");
                        $row['price'] = $a;
                        $b = Db::name("wd_xcx_duo_products_type_value")->where("pid", $row['id'])->sum("salenum");
                        $c = Db::name("wd_xcx_duo_products_type_value")->where("pid", $row['id'])->sum("vsalenum");
                        $row['sale_num'] = $b + $c;
                    } else {
                        $row['sale_num'] = $row['sale_num'] + $row['sale_tnum'];
                    }

                    $row['thumb'] = remote($uniacid, $row['thumb'], 1);
                    $row['ctime'] = date("Y-m-d", $row['ctime']);
                }
                $result['type'][] = 'showProMore';
                $result['list'][] = $product1;
            }
            if ($product2) {
                foreach ($product2 as &$row) {
                    $row['sale_num'] = ($row['sale_num'] * 1) + ($row['sale_tnum'] * 1);
                    $row['thumb'] = remote($uniacid, $row['thumb'], 1);
                    $row['ctime'] = date("Y-m-d", $row['ctime']);
                }
                $result['type'][] = 'showPro';
                $result['list'][] = $product2;
            }
            if ($product3) {
                foreach ($product3 as &$row) {
                    $row['thumb'] = remote($uniacid, $row['thumb'], 1);
                    $row['ctime'] = date("Y-m-d", $row['ctime']);
                }
                $result['type'][] = 'reserve';
                $result['list'][] = $product3;
            }
            $adata['data'] = $result;
            return json_encode($adata);
        }


        $auction = Db::name('wd_xcx_auction_goodslist')->where("uniacid", $uniacid)->where("stat", '<>', 0)->where("stat", '<>', -1)->where("name", 'like', $title)->field('id,name as title,img as thumb,starttime,endtime,stat')->order("id desc")->select();
        if (!empty($auction)) {
            foreach ($auction as $key => $value) {
                $auction[$key]['type'] = "auction";
                $auction[$key]['thumb'] = remote($uniacid, $value['thumb'], 1);
                if ($value['stat'] != 3) {
                    $starttime = strtotime($value['starttime']); //开始时间
                    $endtime = strtotime($value['endtime']); //结束时间
                    $time = time(); //当前时间戳
                    $date = date('Y', $time) + 1 . '-' . date('m-d H:i:s');//一年后日期
                    $agetime = strtotime($date); //一年后时间戳

                    if ($starttime > $agetime) {//展示中  开始时间大于现在一年
                        $auction[$key]['status'] = 1;
                    } else if ($starttime > $time && $starttime <= $agetime) {//未开始  开始时间小于现在一年并且大于现在的时间
                        $auction[$key]['status'] = 2;
                    } else if ($starttime < $time && $time < $endtime) { //拍卖中  开始时间大于现在的时间并且现在时间小于结束时间
                        $auction[$key]['status'] = 3;
                    } else {
                        $auction[$key]['status'] = 4;
                    }
                } else {
                    $auction[$key]['status'] = 4;  //流拍
                }
            }
            $result['type'][] = 'auction';
            $result['list'][] = $auction;
        }
        if ($paimai != 1) {
            if ($sid > 0) {
                $shopsPro = Db::name("wd_xcx_shops_goods")->where("uniacid", $uniacid)->where('flag', $flag)->where('status', $flag)->where('sid', $sid)->where("title", 'like', $title)->field("id,title,thumb,buy_type,sellprice as price,vsales,rsales,descs")->order("id desc")->select();
                if ($shopsPro) {
                    foreach ($shopsPro as &$vi) {
                        $vi['type'] = "shopsPro";
                        $vi['sale_num'] = $vi['vsales'] + $vi['rsales'];
                        $vi['desc'] = $vi['descs'];
                        $vi['thumb'] = remote($uniacid, $vi['thumb'], 1);
                    }
                    $result['type'][] = 'shopsPro';
                    $result['list'][] = $shopsPro;
                }
            } else {

                //多商户店铺、商品
                $shops = Db::name("wd_xcx_shops_shop")->where("uniacid", $uniacid)->where('flag', $flag)->where("name", 'like', $title)->field("id,name,logo,createtime as ctime,intro, tel, address, latitude, longitude")->order("id desc")->select();

                if ($shops) {
                    foreach ($shops as &$v) {
                        $v['type'] = "shops";
                        $v['logo'] = remote($uniacid, $v['logo'], 1);
                        $v['ctime'] = date("Y-m-d", $v['ctime']);
                        if ($v['latitude'] > 0 && $v['longitude'] > 0) {
                            $radLat1 = deg2rad($v['latitude']);
                            $radLat2 = deg2rad($le);
                            $radLng1 = deg2rad($v['longitude']);
                            $radLng2 = deg2rad($ne);
                            $a = $radLat1 - $radLat2;
                            $b = $radLng1 - $radLng2;
                            $d = 2 * asin(sqrt(pow(sin($a / 2), 2) + cos($radLat1) * cos($radLat2) * pow(sin($b / 2), 2))) * 6378.137 * 1000;
                            $v['distance'] = round($d / 1000, 2) . 'KM';
                        } else {
                            $v['distance'] = 0;
                        }
                    }
                    $result['type'][] = 'shops';
                    $result['list'][] = $shops;

                }

                $shopsPro = Db::name("wd_xcx_shops_goods")->where("uniacid", $uniacid)->where('flag', $flag)->where('status', $flag)->where("title", 'like', $title)->field("id,title,thumb,buy_type,sellprice as price,vsales,rsales,descs")->order("id desc")->select();
                if ($shopsPro) {
                    foreach ($shopsPro as &$vi) {
                        $vi['type'] = "shopsPro";
                        $vi['desc'] = $vi['descs'];
                        $vi['sale_num'] = $vi['vsales'] + $vi['rsales'];
                        $vi['thumb'] = remote($uniacid, $vi['thumb'], 1);
                    }
                    $result['type'][] = 'shopsPro';
                    $result['list'][] = $shopsPro;
                }

                //多门店
//                $stores = Db::name('wd_xcx_store')->where("uniacid", $uniacid)->where("title", 'like', $title)->field("id,title,logo")->order("id desc")->select();
//                if ($stores) {
//                    foreach ($stores as &$vs) {
//                        $vs['type'] = "store";
//                        $vs['thumb'] = remote($uniacid, $vs['logo'], 1);
//                    }
//                    $result['type'][] = 'store';
                    // $result['list'][] = $stores;
//                }

                $product1 = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where("flag", $flag)->where("title", 'like', $title)->where('type', 'showPro')->field('id,title,thumb,type,`desc`,ctime,buy_type,price,sale_num,sale_tnum,hits,is_more,use_more')->order("id desc")->select();
                $product2 = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where("flag", $flag)->where("title", 'like', $title)->where('type', 'showProMore')->field('id,title,thumb,type,`desc`,ctime,buy_type,price,sale_num,sale_tnum,hits,is_more,use_more')->order("id desc")->select();
                $product3 = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where("flag", $flag)->where("title", 'like', $title)->where('type', 'showArt')->field('id,title,thumb,type,`desc`,ctime,buy_type,price,sale_num,sale_tnum,hits,is_more,use_more')->order("id desc")->select();
                $product4 = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where("flag", $flag)->where("title", 'like', $title)->where('type', 'showPic')->field('id,title,thumb,type,`desc`,ctime,buy_type,price,sale_num,sale_tnum,hits,is_more,use_more')->order("id desc")->select();
                if ($product1) {
                    foreach ($product1 as &$row) {
                        if ($row['is_more'] == 0) {
                            $row['sale_num'] = ($row['sale_num'] * 1) + ($row['sale_tnum'] * 1);
                        }
                        if ($row['is_more'] == 3) {
                            if ($row['use_more'] == 1) {
                                $b = Db::name("wd_xcx_duo_products_type_value")->where("pid", $row['id'])->sum("salenum");
                                $c = Db::name("wd_xcx_duo_products_type_value")->where("pid", $row['id'])->sum("vsalenum");
                                $row['sale_num'] = $b + $c;
                            } else {
                                $row['sale_num'] = $row['sale_num'] + $row['sale_tnum'];
                            }

                        }
                        $row['thumb'] = remote($uniacid, $row['thumb'], 1);
                        $row['ctime'] = date("Y-m-d", $row['ctime']);
                    }
                    $result['type'][] = 'showPro';
                    $result['list'][] = $product1;
                }
                if ($product2) {
                    foreach ($product2 as &$row) {
                        if ($row['type'] == "showProMore") {
                            if ($row['use_more'] == 1) {
                                $a = Db::name("wd_xcx_duo_products_type_value")->where("pid", $row['id'])->min("price");
                                $row['price'] = $a;
                            }

                        }
                        if ($row['is_more'] == 0) {
                            $row['sale_num'] = ($row['sale_num'] * 1) + ($row['sale_tnum'] * 1);
                        }
                        if ($row['is_more'] == 3) {
                            if ($row['use_more'] == 1) {
                                $b = Db::name("wd_xcx_duo_products_type_value")->where("pid", $row['id'])->sum("salenum");
                                $c = Db::name("wd_xcx_duo_products_type_value")->where("pid", $row['id'])->sum("vsalenum");
                                $row['sale_num'] = $b + $c;
                            } else {
                                $row['sale_num'] = $row['sale_num'] + $row['sale_tnum'];
                            }

                        }
                        $row['thumb'] = remote($uniacid, $row['thumb'], 1);
                        $row['ctime'] = date("Y-m-d", $row['ctime']);
                    }
                    $result['type'][] = 'showProMore';
                    $result['list'][] = $product2;
                }
                if ($product3) {
                    foreach ($product3 as &$row) {
                        if ($row['is_more'] == 0) {
                            $row['sale_num'] = ($row['sale_num'] * 1) + ($row['sale_tnum'] * 1);
                        }
                        if ($row['is_more'] == 3) {
                            if ($row['use_more'] == 1) {
                                $b = Db::name("wd_xcx_duo_products_type_value")->where("pid", $row['id'])->sum("salenum");
                                $c = Db::name("wd_xcx_duo_products_type_value")->where("pid", $row['id'])->sum("vsalenum");
                                $row['sale_num'] = $b + $c;
                            } else {
                                $row['sale_num'] = $row['sale_num'] + $row['sale_tnum'];
                            }

                        }
                        $row['thumb'] = remote($uniacid, $row['thumb'], 1);
                        $row['ctime'] = date("Y-m-d", $row['ctime']);
                    }
                    $result['type'][] = 'showArt';
                    $result['list'][] = $product3;
                }
                if ($product4) {
                    foreach ($product4 as &$row) {
                        if ($row['is_more'] == 0) {
                            $row['sale_num'] = ($row['sale_num'] * 1) + ($row['sale_tnum'] * 1);
                        }
                        if ($row['is_more'] == 3) {
                            if ($row['use_more'] == 1) {
                                $b = Db::name("wd_xcx_duo_products_type_value")->where("pid", $row['id'])->sum("salenum");
                                $c = Db::name("wd_xcx_duo_products_type_value")->where("pid", $row['id'])->sum("vsalenum");
                                $row['sale_num'] = $b + $c;
                            } else {
                                $row['sale_num'] = $row['sale_num'] + $row['sale_tnum'];
                            }

                        }
                        $row['thumb'] = remote($uniacid, $row['thumb'], 1);
                        $row['ctime'] = date("Y-m-d", $row['ctime']);
                    }
                    $result['type'][] = 'showPic';
                    $result['list'][] = $product4;
                }

                $yuyue = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where('is_more', 1)->where("is_sale", 0)->where("title", 'like', $title)->field('id,title,thumb,type,`desc`,ctime,buy_type,price,sale_num,sale_tnum,hits,is_more')->order("id desc")->select();
                if ($yuyue) {
                    foreach ($yuyue as &$vl) {
                        $vl['thumb'] = remote($uniacid, $vl['thumb'], 1);
                        $vl['ctime'] = date("Y-m-d", $vl['ctime']);
                    }
                    $result['type'][] = 'reserve';
                    $result['list'][] = $yuyue;
                }

                //拼团
                if($flag == 1){
                    $pt = Db::name('wd_xcx_pt_pro')->where("uniacid", $uniacid)->where("show_pro", 0)->where("title", 'like', $title)->field('id,title,thumb,descs,xsl as sale_num,price')->order("id desc")->select();
                    if ($pt) {
                        foreach ($pt as &$vv) {
                            $vv['type'] = "pt";
                            $vv['thumb'] = remote($uniacid, $vv['thumb'], 1);
                        }
                        $result['type'][] = 'pt';
                        $result['list'][] = $pt;
                    }
                }

            }
        }

        $adata['data'] = $result;
        return json_encode($adata);
    }

    //餐饮开始
    public function doPageGetFoodInfo()
    {
        $id = input('id');
        $uniacid = input('uniacid');
        $info = Db::name('wd_xcx_food')->where("id", $id)->find();
        if ($info && $info['thumb']) {
            $info['thumb'] = remote($uniacid, $info['thumb'], 1);
        }
        $saleCount = 0;
        $kc = 0;
        $typesjson = [];
        $guige_arr = Db::name('wd_xcx_food_type_value')->where("pid", $id)->select();
        if ($guige_arr) {
            $info['guige_price'] = $guige_arr[0]['price'];
            $info['val_id'] = $guige_arr[0]['id'];
            $types = $guige_arr[0]['comment'];
            //构建规格组
            $typesarr = explode(",", $types);
            // 构建规格组json
            foreach ($typesarr as $key4 => &$rec) {
                $str = "type" . ($key4 + 1);
                $ziji = Db::name('wd_xcx_food_type_value')->where('pid', $id)->order("id asc")->group($str)->field($str)->select();
                $xarr = array();
                foreach ($ziji as $key => $res) {
                    array_push($xarr, $res[$str]);
                }
                $cdata["val"] = $xarr;
                $cdata['ck'] = 0;
                $typesjson[$rec] = $cdata;
            }
            foreach ($guige_arr as $k => &$v) {
                $saleCount += $v['salenum'] + $v['vsalenum'];
                $kc += $v['kc'];
            }
            $info['saleCount'] = $saleCount;
            $info['kc'] = $kc;
        } else {
            $info['guige_price'] = 0;
            $info['val_id'] = 0;
            $types = '';
            $info['saleCount'] = 0;
            $info['kc'] = 0;
            $typesjson = '';
        }

        $result = [];
        $result['data'] = [
            'foodInfo' => $info,
            'guige_arr' => $typesjson
        ];

        return json_encode($result);
    }

    public function doPageDingtype()
    {
        $uniacid = input("uniacid");
        $types = Db::name('wd_xcx_food_cate')->where("uniacid", $uniacid)->order("id desc,num desc")->select();
        $adata['data'] = $types;
        return json_encode($adata);
    }

    public function doPageDingcai()
    {
        $uniacid = input("uniacid");
        $prefix = config('database.prefix');
        $cates = Db::query("SELECT a.cid,b.title,b.num FROM {$prefix}wd_xcx_food as a LEFT JOIN {$prefix}wd_xcx_food_cate as b on a.cid = b.id WHERE a.uniacid = ? GROUP BY a.cid ORDER BY b.num desc", [$uniacid]);
        foreach ($cates as $key => &$rec) {
            $pro = Db::query("SELECT *,a.id as oid,a.title AS otitle FROM {$prefix}wd_xcx_food as a LEFT JOIN {$prefix}wd_xcx_food_cate as b on a.cid = b.id WHERE a.uniacid = ? and a.cid = ? ORDER BY b.num,b.id desc", [$uniacid, $rec['cid']]);
            $arr = $this->gaichang($pro);
            $rec['id'] = $rec['cid'];
            $rec['categoryName'] = $rec['title'];
            $rec['goodsList'] = $arr;
            $rec['val'] = $arr;
        }
        $adata['data'] = $cates;
        return json_encode($adata);
    }

    function gaichang($pro)
    {
        if ($pro) {
            foreach ($pro as $key => &$res) {
                $res['id'] = $res['oid'];
                $res['title'] = $res['otitle'];
                $res['text'] = unserialize($res['text']);
                $labels = unserialize($res['labels']);
                $lab = $this->clabels($labels);
                $res['labels'] = $lab;
                if (count($res['labels']) == 0) {
                    $res['labels'] = "";
                }
                $uniacid = input("uniacid");
                $res['thumb'] = remote($uniacid, $res['thumb'], 1);
                if ($res['descimg']) {
                    $res['descimg'] = remote($uniacid, $res['descimg'], 1);
                } else {
                    $res['descimg'] = remote($uniacid, $res['thumb'], 1);
                }
                if (empty($res['desccon'])) {
                    $res['desccon'] = $res['otitle'];
                }
            }
        }
        return $pro;
    }

    function clabels($labels)
    {
        $arr = array();
        if ($labels) {
            foreach ($labels as $key => &$res) {
                $k1 = $res[0];
                $k2 = $res[1];
                if ($k2) {
                    $karr = explode("&", $k2);
                }
                $arr[$key]['title'] = $k1;
                $arr[$key]['val'] = $karr;
            }
            return $arr;
        } else {
            return $arr;
        }
    }
    // function doPageOrderpaymoney()
    // {
    //     $uniacid = input("uniacid");
    //     $allprice = input("price");
    //     $now = time();
    //     $order_id = $order = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
    //     $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->find();
    //     include 'WeixinPay.php';
    //     $appid = $app['appID'];
    //     $openid = input('openid');
    //     $mch_id = $app['mchid'];
    //     $key = $app['signkey'];
    //     $out_trade_no = $order_id; //订单号
    //     $body = "商品支付";
    //     $total_fee = input('price') * 100;
    //     if (isset($app['identity'])) {
    //         $identity = $app['identity'];
    //     } else {
    //         $identity = 1;
    //     }
    //     if (isset($app['sub_mchid'])) {
    //         $sub_mchid = $app['sub_mchid'];
    //     } else {
    //         $sub_mchid = 0;
    //     }
    //     $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, $identity, $sub_mchid);
    //     $return = $weixinpay->pay();
    //     $return['order_id'] = $order_id;
    //     $adata['data'] = $return;
    //     $adata['message'] = "success";
    //     return json_encode($adata);
    // }
    function doPageZhifdingd()
    {
        $uniacid = input("uniacid");
        $gwc = input("gwc");
        $suid = input("suid");
        $source = input("source");
        $now = time();
        $order_ids = input('order_id');//订单id
        if ($order_ids == "") {
            $order_id = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
        } else {
            $order_id = $order_ids;
        }
        $openid = input("openid");
        $my_pay_money = input("yue_money");
        $allprice = input("price");

        $zh = input('zh');
        $gwc = stripslashes(html_entity_decode($gwc));
        $gwc = json_decode($gwc, TRUE);
        $newgwc = serialize($gwc);
        $xinxi = input("xinxi");
        $xinxi = stripslashes(html_entity_decode($xinxi));
        $xinxi = json_decode($xinxi, TRUE);
        $data['username'] = $xinxi['username'];
        $data['usertel'] = $xinxi['usertel'];
        $data['address'] = $xinxi['address'];
        $data['usertime'] = $xinxi['userdate'] . " " . $xinxi['usertime'];
        $data['userbeiz'] = $xinxi['userbeiz'];
        $data['source'] = $source;
        $score = input("dikou_score");
        if ($score > 0) {
            $score_money = input("dikou_money");
            $data['score_info'] = serialize(['score' => $score, 'score_money' => $score_money]);
        }

        //获得用户信息
        $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->find();
        // $money_u = $user['money'];
        // $score_u = $user['score'];
        // $kdata['money'] = $money_u - $my_pay_money;
        // $kdata['score'] = $score_u - $score;
        // Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->update($kdata);

        $data['order_id'] = $order_id;
        $data['uniacid'] = $uniacid;
        $data['suid'] = $user['id'];
        $data['val'] = $newgwc;
        $data['price'] = $allprice;
        $data['creattime'] = time();
        $data['flag'] = 0;
        $data['zh'] = input("zh");
        $data['wx_price'] = input("wx_money");
        $data['yue_price'] = input("yue_money");
        if ($order_ids == "") {
            Db::name('wd_xcx_food_order')->insert($data);
        } else {
            Db::name('wd_xcx_food_order')->where('order_id', $order_id)->update($data);
        }
        $result['data'] = $order_id;
        return json_encode($result);
        // $applet = Db::name('wd_xcx_applet')->where("id", $uniacid)->field('appID,appSecret')->find();
        // $score_name = Db::name('wd_xcx_food_sj')->where("uniacid", $uniacid)->field('names')->find();
        // if ($applet) {
        //     $mid = Db::name('wd_xcx_message')->where("uniacid", $uniacid)->where('flag', 4)->find();
        //     if ($mid) {
        //         if ($mid['mid'] != "") {
        //             $mids = $mid['mid'];
        //             $url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=" . $applet['appID'] . "&secret=" . $applet['appSecret'];
        //             $a_token = $this->_requestGetcurl($url);
        //             if ($a_token) {
        //                 $url_m = "https://api.weixin.qq.com/cgi-bin/message/wxopen/template/send?access_token=" . $a_token['access_token'];
        //                 $formId = input('formId');
        //                 $fscore_name = $score_name['names'];
        //                 if ($data['zh'] == "0") {
        //                     $fzh = "打包/拼桌";
        //                 } else {
        //                     $fzh = $data['zh'];
        //                 }
        //                 $forder_id = $order_id;
        //                 $fcontent = "";
        //                 foreach ($gwc as $k => $v) {
        //                     $foodinfo = $v['title'] . ',数量' . $v['num'] . ',价格' . $v['price'] . '元;';
        //                     $fcontent .= $foodinfo;
        //                 }
        //                 $fpaymoney = $allprice;
        //                 $ftime = date('Y-m-d H:i:s', time());
        //                 $furl = $mid['url'];
        //                 $post_info = '{
        //                       "touser": "' . $openid . '",
        //                       "template_id": "' . $mids . '",
        //                       "page": "' . $furl . '",
        //                       "form_id": "' . $formId . '",
        //                       "data": {
        //                           "keyword1": {
        //                               "value": "' . $fscore_name . '",
        //                               "color": "#173177"
        //                           },
        //                           "keyword2": {
        //                               "value": "' . $fzh . '",
        //                               "color": "#173177"
        //                           },
        //                           "keyword3": {
        //                               "value": "' . $forder_id . '",
        //                               "color": "#173177"
        //                           } ,
        //                           "keyword4": {
        //                               "value": "' . $fcontent . '",
        //                               "color": "#173177"
        //                           },
        //                           "keyword5": {
        //                               "value": "' . $fpaymoney . '元",
        //                               "color": "#173177"
        //                           },
        //                           "keyword6": {
        //                               "value": "' . $ftime . '",
        //                               "color": "#173177"
        //                           }
        //                       },
        //                       "emphasis_keyword": ""
        //                     }';
        //                 $this->_requestPost($url_m, $post_info);
        //                 $datea['price'] = $fpaymoney;
        //                 $result['data'] = $datea;
        //                 return $this->result(0, 'success', $datea);
        //             }
        //         }
        //     }
        // }
        // $printer = Db::name('wd_xcx_food_printer')->where("uniacid", $uniacid)->find();
        // if ($printer) {
        //     if ($printer['status'] == 1) {
        //         $content = '';
        //         $content .= '下单时间：' . date('Y-m-d H:i:s', time()) . '\r\n';
        //         $content .= '订单号：' . $order_id . '\r\n';
        //         $content .= '餐厅名称：' . $printer['title'] . '\r\n';                      //打印内容
        //         if ($data['zh'] != "0") {
        //             $content .= '<center>' . $data['zh'] . '</center>\r\n';
        //         } else {
        //             $content .= '<center>打包/外卖</center>\r\n';
        //         }
        //         $content .= '<table>';
        //         $content .= '<tr><td>商品</td><td>数量</td><td>价格</td></tr>';
        //         foreach ($gwc as $k => $v) {
        //             $content .= '<tr><td>' . $v['title'] . '</td><td>x' . $v['num'] . '</td><td>' . $v['price'] . '</td></tr>';
        //         }
        //         $content .= '</table>\r\n\r\n';
        //         $content .= '<FS>金额: ' . $data['price'] . '元</FS>\r\n\r\n';
        //         if ($data['username'] != "") {
        //             $content .= '姓名：' . $data['username'] . '\r\n';
        //         }
        //         if ($data['usertel'] != "") {
        //             $content .= '电话：' . $data['usertel'] . '\r\n';
        //         }
        //         if ($data['address'] != "") {
        //             $content .= '地址：' . $data['address'] . '\r\n';
        //         }
        //         if ($xinxi['userdate'] != "" || $xinxi['usertime'] != "") {
        //             $content .= '预约配送时间：' . $data['usertime'] . '\r\n';
        //         }
        //         if ($data['userbeiz'] != "") {
        //             $content .= '备注：' . $data['userbeiz'];
        //         }
        //         include("Print.php");
        //         $print = new Yprint();
        //         $apiKey = $printer['apikey'];
        //         $msign = $printer['nkey'];
        //         //打印
        //         $print->action_print($printer['suid'], $printer['nid'], $content, $apiKey, $msign);
        //     }
        // }
    }

    //得到桌号
    public function doPageGetzh()
    {
        $uniacid = input("uniacid");
        $zid = input('zid');
        $zhinfo = Db::name('wd_xcx_food_tables')->where("uniacid", $uniacid)->where("id", $zid)->find();
        $zh = Db::name('wd_xcx_food_tables')->where("uniacid", $uniacid)->ORDER("id desc")->select();
        $keys = 0;
        foreach ($zh as $key => &$res) {
            if ($zid == $res['id']) {
                $keys = $key + 1;
            }
        }
        $adata['zh'] = $zhinfo;
        $adata['keys'] = $keys;
        $result['data'] = $adata;
        return json_encode($result);
    }

    //选择桌号
    public function doPageZhchange()
    {
        $uniacid = input("uniacid");
        $zh = Db::name('wd_xcx_food_tables')->where("uniacid", $uniacid)->order("id desc")->select();
        $zhs = ['打包/拼桌'];
        foreach ($zh as $k => $v) {
            $zho = $v['title'] . "-" . $v['tnum'] . "号桌";
            array_push($zhs, $zho);
        }
        $zh['zhs'] = $zhs;
        $result['data'] = $zh;
        return json_encode($result);
    }

    function doPageMycai()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");

        // 先处理未支付并超过30分钟的订单
        $wforders = Db::name('wd_xcx_food_order')->where('uniacid', $uniacid)->where('flag', 0)->select();
        foreach ($wforders as $key => &$res) {
            $st = $res['creattime'] + 1800;
            if ($st < time()) {
                $adata = array(
                    "flag" => 3
                );
                //返回销量与库存
                $res['jsondata'] = unserialize($res['val']);
                foreach ($res['jsondata'] as $key => &$reb) {
                    $sgoods = Db::name('wd_xcx_food_type_value')->where('id', $reb[0])->find();
                    $rsales = $sgoods['salenum'] - $reb[3];
                    $storage = $sgoods['kc'] + $reb[3];
                    Db::name('wd_xcx_food_type_value')->where('id', $reb[4])->update(['salenum' => $rsales, 'kc' => $storage]);
                }
                Db::name('wd_xcx_food_order')->where('id', $res['id'])->update($adata);
            }
        }

        $orders = Db::name('wd_xcx_food_order')->where("uniacid", $uniacid)->where("suid", $suid)->order("creattime desc")->select();
        foreach ($orders as &$res) {
            $res['creattime'] = date("Y-m-d H:i:s", $res['creattime']);
            $res['val'] = $this->chuli(unserialize($res['val']), $uniacid);
        }
        $adata['data'] = $orders;
        return json_encode($adata);
    }

    function chuli($arr, $uniacid)
    {
        if ($arr) {
            foreach ($arr as $key => &$res) {
                $products = Db::name('wd_xcx_food')->where("uniacid", $uniacid)->where("id", $res[0])->find();
                $res['thumb'] = remote($uniacid, $products['thumb'], 1);
            }
            return $arr;
        }
    }

    function doPageShangjbs()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $shangjbase = Db::name('wd_xcx_food_sj')->where("uniacid", $uniacid)->find();
        // dump($shangjbase);die;
        // var_dump($shangjbase);exit;
        //处理积分规则
        //获得用户金钱
        $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->find();
        $money = $user['money'];
        $score = $user['score'];
        // 积分兑换金额
        $jf_gz = Db::name('wd_xcx_rechargeconf')->where("uniacid", $uniacid)->find();
        if (!$jf_gz) {
            $jf_gz['score'] = 10000;
            $jf_gz['money'] = 1;
        }
        $jf_money = intval($score / $jf_gz['score']) * $jf_gz['money'];            //1.我的积分可以换取多少钱
        $jf_pro = intval($shangjbase['score'] / $jf_gz['score']) * $jf_gz['money'];    //2.订单最高抵扣换取多少钱
        $dikou_jf = 0;
        if ($jf_pro >= $jf_money) {   //商品设置的最大可使用积分 >= 我自己的积分
            $dikou_jf = $jf_money;
        } else {                        //商品设置的最大可使用积分 < 我自己的积分
            $dikou_jf = $jf_pro;
        }
        // 积分金钱转积分数
        $jf_score = ($dikou_jf / $jf_gz['money']) * $jf_gz['score'];
        $shangjbase['user_money'] = $money;
        $shangjbase['dk_money'] = $dikou_jf;   //抵扣的金钱
        $shangjbase['dk_score'] = $jf_score;   //抵扣的积分
        $shangjbase['jf_gz'] = $jf_gz; //积分规则
        if ($shangjbase['thumb']) {
            $shangjbase['thumb'] = remote($uniacid, $shangjbase['thumb'], 1);
        }
        $adata['data'] = $shangjbase;
        return json_encode($adata);
    }
    // 分享获得积分
    // public function dopagesharejf()
    // {
    //     $uniacid = input("uniacid");
    //     $suid = input('suid');
    //     $id = input('id');
    //     $types = input('types');
    //     $numflag = 0;  //分享次数
    //     $typeflag = 0; //分享类型
    //     // 获取个人信息
    //     $userinfo = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->find();
    //     $userjf = $userinfo['score'];
    //     // 获取分享规则
    //     $pro = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where("id", $id)->field('share_gz,share_type,share_score,share_num')->find();
    //     $gz = $pro['share_gz'];
    //     if ($gz == 1) {  //公用规则
    //         $gzinfo = Db::name('wd_xcx_base')->where("uniacid", $uniacid)->field('sharetype,sharejf,sharexz')->find();
    //         $share_type = $gzinfo['sharetype'];
    //         $share_score = $gzinfo['sharejf'];
    //         $share_num = $gzinfo['sharexz'];
    //         // 判断今天还能不能获得积分
    //         $begintime = date("Y-m-d", time()) . " 00:00:00";
    //         $endtime = date("Y-m-d", time()) . " 23:59:59";
    //         $btime = strtotime($begintime);
    //         $etime = strtotime($endtime);
    //         $count = Db::name('wd_xcx_share_user')->where("uniacid", $uniacid)->where("suid", $userinfo['id'])->where("pid", $id)->where("creattime", '>=', $btime)->where("creattime", '<=', $etime)->count();
    //         $n = $count;
    //         if ($n >= $share_num) {
    //             $numflag = 0;
    //         } else {
    //             $numflag = 1;
    //         }
    //         // 判断你的分享对象
    //         if ($share_type == 3) {  //个人+群
    //             $typeflag = 1;
    //         } else {
    //             if ($types == $share_type) {
    //                 $typeflag = 1;
    //             }
    //         }
    //         $newscore = $userjf + $share_score;
    //         $kdata = array(
    //             'uniacid' => $uniacid,
    //             'suid' => $userinfo['id'],
    //             'pid' => $id,
    //             'creattime' => time()
    //         );
    //         if ($numflag == 1 && $typeflag == 1) {  //符合增加积分的规则
    //             $data['score'] = $newscore;
    //             $shareData['score'] = $share_score;
    //             $shareData['notice'] = 0;
    //             $res = Db::name('wd_xcx_user')->where("openid", $openid)->update($data);
    //             Db::name('wd_xcx_share_user')->insert($kdata);
    //             // 分享获得积分
    //             $xfscore = array(
    //                 "uniacid" => $uniacid,
    //                 "orderid" => "",
    //                 "suid" => $userinfo['id'],
    //                 "type" => "add",
    //                 "score" => $share_score,
    //                 "message" => "分享获得积分",
    //                 "creattime" => time()
    //             );
    //             if ($share_score > 0) {
    //                 Db::name('wd_xcx_score')->insert($xfscore);
    //             }
    //         } else {
    //             $shareData['score'] = "0";
    //             $shareData['notice'] = 1;
    //             Db::name('wd_xcx_share_user')->insert($kdata);
    //         }
    //     } else { //私有规则
    //         $share_type = $pro['share_type'];
    //         $share_score = $pro['share_score'];
    //         $share_num = $pro['share_num'];
    //         // 判断今天还能不能获得积分
    //         $begintime = date("Y-m-d", time()) . " 00:00:00";
    //         $endtime = date("Y-m-d", time()) . " 23:59:59";
    //         $btime = strtotime($begintime);
    //         $etime = strtotime($endtime);
    //         $count = Db::name('wd_xcx_share_user')->where("uniacid", $uniacid)->where("suid", $userinfo['id'])->where("pid", $id)->where("creattime", '>=', $btime)->where("creattime", '<=', $etime)->count();
    //         $n = $count;
    //         if ($n >= $share_num) {
    //             $numflag = 0;
    //         } else {
    //             $numflag = 1;
    //         }
    //         // 判断你的分享对象
    //         if ($share_type == 3) {  //个人+群
    //             $typeflag = 1;
    //         } else {
    //             if ($types == $share_type) {
    //                 $typeflag = 1;
    //             }
    //         }
    //         $newscore = $userjf + $share_score;
    //         $kdata = array(
    //             'uniacid' => $uniacid,
    //             'suid' => $userinfo['id'],
    //             'pid' => $id,
    //             'creattime' => time()
    //         );
    //         if ($numflag == 1 && $typeflag == 1) {  //符合增加积分的规则
    //             $data['score'] = $newscore;
    //             $shareData['score'] = $share_score;
    //             $shareData['notice'] = 0;
    //             $res = Db::name('wd_xcx_user')->where("openid", $openid)->update($data);
    //             Db::name('wd_xcx_share_user')->insert($kdata);
    //             // 分享获得积分
    //             $xfscore = array(
    //                 "uniacid" => $uniacid,
    //                 "orderid" => "",
    //                 "suid" => $userinfo['id'],
    //                 "type" => "add",
    //                 "score" => $share_score,
    //                 "message" => "分享获得积分",
    //                 "creattime" => time()
    //             );
    //             if ($share_score > 0) {
    //                 Db::name('wd_xcx_score')->insert($xfscore);
    //             }
    //         } else {
    //             $shareData['score'] = "0";
    //             $shareData['notice'] = 1;
    //             Db::name('wd_xcx_share_user')->insert($kdata);
    //         }
    //     }
    //     $result['data'] = $shareData;
    //     return json_encode($result);
    // }
    public function doPageFormval()
    {
        $uniacid = input("uniacid");
        $cid = input('id');
        $pagedata = input('pagedata');
        $types = input('types');
        $suid = input("suid");
        $formId = input('form_id');
        $source = input('source');
        //cid和fid

        $fid = input("fid");
        $openid = input("openid");
        $datas = stripslashes(html_entity_decode(input('datas')));
        $datas = json_decode($datas, TRUE);
        // 新增自定义表单数据接收
        $forms = '';
        if (input('pagedata') && input('pagedata') !== "NULL") {
            $forms = stripslashes(html_entity_decode(input('pagedata')));
            $forms = json_decode($forms, TRUE);
            foreach ($forms as $k => $f){
                if($f['name'] == '单行' || $f['name'] == '多行'){
                    $forms[$k]['val'] = $this->filterEmoji($f['val']);
                }
            }
        }
        if ($forms != "NULL") {
            foreach ($forms as $key1 => &$res) {
                if ($res['type'] == 14) {
                    $strtime = strtotime($res['days']);
                    $arrs = array(
                        "uniacid" => $uniacid,
                        "cid" => $cid,
                        "types" => $types,
                        "datys" => $strtime,
                        "pagedatekey" => $res['indexkey'],
                        "arrkey" => $res['xuanx'],
                        "creattime" => time()
                    );
                    Db::name('wd_xcx_form_dd')->insert($arrs);
                }
            }
            $data = array(
                "uniacid" => $uniacid,
                "cid" => $cid,
                "creattime" => time(),
                "val" => serialize($forms),
                "flag" => 0,
                "fid" => $fid,
                //            "formid"=>$formid,
                "openid" => $openid,
                "type" => $types,
                "suid" => $suid,
                'source' => $source,

            );
            $res = Db::name('wd_xcx_formcon')->insertGetId($data);


            if ($res) {
                $formsinfo = Db::name('wd_xcx_formlist')->where("id", $fid)->find();
                $jsons = [
                    "ftitle" => $formsinfo['formname'],
                    "fmsg" => $formsinfo['descs']
                ];
                $jsons = serialize($jsons);

                tpl_send($uniacid, 11, input('openid'), $source, input('form_id'), $jsons);

                $form = Db::name('wd_xcx_formcon')->where('uniacid', $uniacid)->where("id", $res)->field("id")->find();
                $form['con'] = "表单提交成功";
                $result['data'] = $form;
                return json_encode($result);
            }
        } else {
            $formsinfo = Db::name('wd_xcx_formlist')->where("id", $fid)->find();
            $jsons = [
                "ftitle" => $formsinfo['formname'],
                "fmsg" => $formsinfo['descs']
            ];
            $jsons = serialize($jsons);

            tpl_send($uniacid, 11, input('openid'), $source, input('form_id'), $jsons);

            $form['con'] = "提交成功";
            $result['data'] = $form;
            return json_encode($result);
        }
    }

    public function doPageBalance()
    {
        $uniacid = input("uniacid");
        $openid = input('openid');
        $suid = input('suid');
        $sid = input('sid');
        $source = input('source');
        $yue = input('yuemoney');
        $money = input('money');  //非余额费用
        $yhq_id = input('yhq_id');  //优惠券id
        $jfscore = input('jfscore'); //积分
        $now = time();
        $order_id = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);

        $rediscon = $this->GetRediscon();
        $redis = new Redis($rediscon);
        $redis_data = [
            'suid' => $suid,
            'source' => $source,
            'money' => $money,
            'yue' => $yue,
            'yhq_id' => $yhq_id,
            'jfscore' => $jfscore,
            'sid' => $sid,
        ];
        $redis->set($order_id . 's', json_encode($redis_data));
        $return['order_id'] = $order_id;
        $adata['data'] = $return;
        $adata['message'] = "success";
        return json_encode($adata);
    }

    public function doPageRechargeOrder()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $source = input('source');
        $money = input('money');  //非余额费用
        $now = time();
        $order_id = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
        $rediscon = $this->GetRediscon();
        $redis = new Redis($rediscon);
        $redis_data = [
            'suid' => $suid,
            'source' => $source,
            'money' => $money
        ];
        $redis->set($order_id . 's', json_encode($redis_data));
        $return['order_id'] = $order_id;
        $adata['data'] = $return;
        $adata['message'] = "success";
        return json_encode($adata);
    }

    public function doPagePay_cz()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $money = input('money');
        $order_id = input("order_id");
        $is = Db::name('wd_xcx_money')->where('orderid', $order_id)->find();
        if (!$is) {
            // 1.根据openid 取uid 和剩余 money
            $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->find();
            $suid = $user['id'];
            $my_money = $user['money'];
            $my_score = $user['score'];
            $new_money = ($my_money * 1000 + $money * 1000) / 1000;
            $new_score = $my_score;
            // 预留接口
            $guize = Db::name('wd_xcx_recharge')->where("uniacid", $uniacid)->order("money asc")->select();

            if ($guize) {   //有充值规则时
                $key = count($guize) - 1;
                $zsmoney = 0;
                $coupon_con = [];
                if ($key == 0) {
                    if ($money * 1000 >= $guize[0]['money'] * 1000) {
                        $new_money = ($new_money * 1000 + $guize[0]['getmoney'] * 1000) / 1000;
                        $new_score = ($new_score * 1000 + $guize[0]['getscore'] * 1000) / 1000;
                        $zsmoney = $guize[0]['getmoney'];
                        $coupon_con = $guize[0]['coupon_con'];
                    } else {
                        $new_money = $new_money + 0;
                        $new_score = $new_score + 0;
                        $zsmoney = 0;
                    }
                } else {
                    $new_money1 = 0;
                    $new_score1 = 0;
                    for ($i = 0; $i < count($guize); $i++) {
                        if ($i < count($guize) - 1) {
                            if ($money * 1000 >= $guize[$i]['money'] * 1000 && $money * 1000 < $guize[$i + 1]['money'] * 1000 && $i + 1 <= count($guize)) {
                                $new_money1 = ($new_money * 1000 + $guize[$i]['getmoney'] * 1000) / 1000;
                                $new_score1 = ($new_score * 1000 + $guize[$i]['getscore'] * 1000) / 1000;
                                $zsmoney += $guize[$i]['getmoney'];
                                $coupon_con = $guize[$i]['coupon_con'];
                            }
                        } else {
                            if ($money * 1000 >= $guize[$i]['money'] * 1000) {
                                $new_money1 = ($new_money * 1000 + $guize[$i]['getmoney'] * 1000) / 1000;
                                $new_score1 = ($new_score * 1000 + $guize[$i]['getscore'] * 1000) / 1000;
                                $zsmoney += $guize[$i]['getmoney'];
                                $coupon_con = $guize[$i]['coupon_con'];
                            }
                        }

                    }
                    if ($new_money1 > 0) {
                        $new_money = $new_money1;
                        $new_score = $new_score1;
                    }
                }
                $zsdata['uniacid'] = $uniacid;
                $zsdata['orderid'] = $order_id;
                $zsdata['suid'] = $suid;
                $zsdata['type'] = "add";
                $zsdata['score'] = $zsmoney;
                $zsdata['message'] = "充值送金钱";
                $zsdata['creattime'] = time();
                Db::name('wd_xcx_money')->insert($zsdata);

                $receive = [];
                if ($zsmoney > 0) {
                    $receive['give_money'] = $zsmoney;
                }

                if ($coupon_con) {
                    $receive['coupon_con'] = [];
                    $coupon_give = unserialize($coupon_con);
                    foreach ($coupon_give as $k => $v) {
                        for ($i = 0; $i < $v['coupon_num']; $i++) {
                            $coup = [];
                            $cid = $v['coupon_id'];
                            //判断优惠券是否为系统发放
                            $couponinfo = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where('id', $cid)->where('give_type', 'neq', 2)->find();
                            if($couponinfo){
                                $use_contents = unserialize($couponinfo['use_contents']);

                                $couponinfo['use_goods_contents'] = unserialize($couponinfo['use_goods_contents']);
                                $couponinfo['use_type'] = $use_contents['use_type'];
                                $coup['uniacid'] = $uniacid;
                                $coup['suid'] = $suid;
                                $coup['cid'] = $cid;
                                if($use_contents['use_type'] == 1) {
                                    $coup['btime'] = strtotime(date("Y-m-d")); //当天开始时间戳
                                    $coup['etime'] = strtotime(date("Y-m-d")) + 3600 * 24 * $use_contents['use_time'];
                                }else if($use_contents['use_type'] == 2){
                                    $coup['btime'] = strtotime(date("Y-m-d")) + 3600 * 24; //次日开始时间戳为今天开始时间戳加一天时间戳
                                    $coup['etime'] = strtotime(date("Y-m-d")) + 3600 * 24 * ($use_contents['use_time'] + 1); //今天0点时间戳加上n+1天的时间戳
                                }else{
                                    $use_time = explode(',', $use_contents['use_time']);
                                    $coup['btime'] = $use_time[0];
                                    $coup['etime'] = $use_time[1];
                                }
                                $coup['title'] = $couponinfo['title'];
                                $coup['pay_money'] = $couponinfo['pay_money'];
                                $coup['price'] = $couponinfo['price'];
                                $coup['color'] = $couponinfo['color'];
                                $coup['ltime'] = time();
                                $coupon_id = Db::name('wd_xcx_coupon_user')->insertGetId($coup);
                            }
                        }
                        $receive['coupon_con'][$k]['coupon_id'] = $coupon_id;
                        $receive['coupon_con'][$k]['coupon_num'] = $v['coupon_num'];
                    }
                    $receive['coupon_con'] = serialize($receive['coupon_con']);
                }

            } else {        //没有充值规则
                $new_money = $new_money + 0;
                $new_score = $new_score + 0;
            }

            $data['money'] = $new_money;
            $data['score'] = $new_score;
            $res = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->update($data);
            // 充值成功后生成流水
            $gghmoney = $new_money * 1 - $my_money * 1; //增加规格后的money
            $jdata['uniacid'] = $uniacid;
            $jdata['orderid'] = $order_id;
            $jdata['suid'] = $suid;
            $jdata['type'] = "add";
            $jdata['score'] = $money;
            $jdata['message'] = "充值";
            $jdata['creattime'] = time();
            if ($gghmoney > 0) {
                Db::name('wd_xcx_money')->insert($jdata);
                $receive['money'] = $money;
                $receive['all_money'] = round($money + $zsmoney, 2);
            }
            // 充值成功后生成积分流水
            $gghscore = $new_score * 1 - $my_score * 1;
            $sdata['uniacid'] = $uniacid;
            $sdata['orderid'] = $order_id;
            $sdata['suid'] = $suid;
            $sdata['type'] = "add";
            $sdata['score'] = $gghscore;
            $sdata['message'] = "充值送积分";
            $sdata['creattime'] = time();
            if ($gghscore > 0) {
                Db::name('wd_xcx_score')->insert($sdata);
                $receive['score'] = $gghscore;
            }
            if (count($receive) > 0) {
                Db::name('wd_xcx_recharge_receive')->where('uniacid', $uniacid)->where('suid', $suid)->update(['flag' => 1]);

                $receive['uniacid'] = $uniacid;
                $receive['suid'] = $suid;
                Db::name('wd_xcx_recharge_receive')->insert($receive);
            }
        }
    }

    public function doPageMymoney()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->field("id,money,score,vipid,uniacid")->find();
        $coupon = Db::name('wd_xcx_coupon_user')->where("uniacid", $uniacid)->where("suid", $user['id'])->where("flag", 0)->select();
        $time = time();
        foreach ($coupon as $key => &$res) {
            // $arrs = Db::name('wd_xcx_coupon')->where("uniacid", $uniacid)->where("id", $res['cid'])->find();
            // if ($arrs['etime'] != 0) {
            //     if ($time > $arrs['etime'] && $res['flag'] == 0) {
            //         $kdata = array(
            //             "flag" => 2
            //         );
            //         Db::name('wd_xcx_coupon_user')->where("id", $res['id'])->update($kdata);
            //     }
            // }
            if ($res['etime'] != 0) {
                if ($time > $res['etime'] && $res['flag'] == 0) {
                    $kdata = array(
                        "flag" => 2
                    );
                    Db::name('wd_xcx_coupon_user')->where("id", $res['id'])->update($kdata);
                }
            }
        }
        $user['couponNum'] = Db::name('wd_xcx_coupon_user')->where("uniacid", $uniacid)->where("suid", $user['id'])->where("flag", 'neq', 2)->count();
        unset($user['id']);
        //查询会员卡申请情况
        $vipflag = Db::name('wd_xcx_vip_apply')->where("uniacid", $uniacid)->where("suid", $suid)->order("id desc")->find();
        $user['vipflag'] = $vipflag['flag'];
        //查询会员卡信息
        $vipcard = Db::name('wd_xcx_vip_config')->where("uniacid", $uniacid)->find();
        $user['vipset'] = $vipcard['isopen'];
        $user['cardname'] = $vipcard['name'] == "" ? '会员卡' : $vipcard['name'];
        $user['userbg'] = ROOT_HOST . "/image/ubg.png";
        $adata['data'] = $user;
        return json_encode($adata);
    }

    public function doPageMymoneyD()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->find();
        $gradelist = Db::name('wd_xcx_vipgrade')->where('uniacid', $uniacid)->select();
        $vid = 0;
        $coupon_give = [];
        $coupon_arr = [];
        $is = [];
        $is['flag'] = 1;
        if ($user) {
            foreach ($gradelist as $k => $v) {
                if ($v['grade'] == $user['grade']) {
                    $user['vipname'] = $v['name'];
                    $vid = $v['id'];
                    Db::name('wd_xcx_vip_receive')->where('uniacid', $uniacid)->where('suid', $suid)->where('vid', '<', $vid)->where('flag', 0)->update(array('flag' => 1));
                    $is = Db::name('wd_xcx_vip_receive')->where('vid', $vid)->where('suid', $suid)->where('uniacid', $uniacid)->find();
                    $is = $is ? $is : array('flag' => 1);
                    if ($is && isset($is['coupon'])) {
                        $coupon_arr = unserialize($is['coupon']);
                        if (count($coupon_arr) > 0) {
                            foreach ($coupon_arr as $key => $value) {
                                $is['coupon_arr'][$key] = Db::name('wd_xcx_coupon_user')->alias('a')->join('wd_xcx_coupon b', 'a.cid = b.id')->where('a.id', $value['coupon_id'])->field('a.etime as endtime,b.*')->find();
                                if ($is['coupon_arr'][$key]) {
                                    if ($is['coupon_arr'][$key]['endtime'] == 0) {
                                        $is['coupon_arr'][$key]['etime'] = '永久有效';
                                    } else {
                                        $is['coupon_arr'][$key]['etime'] = date("Y-m-d", $is['coupon_arr'][$key]['endtime']);
                                    }
                                }
                                $is['coupon_arr'][$key]['get_num'] = $value['coupon_num'];
                            }
                        }
                    }
                    if ($v['coupon_flag'] > 0) {
                        $coupon_give = unserialize($v['coupon_give']);
                    }
                    break;
                }
            }
        } else {
            $user['vipname'] = '普通用户';
            $user['grade'] = 0;
        }

        $coupon = Db::name('wd_xcx_coupon_user')->where("uniacid", $uniacid)->where("suid", $suid)->where("flag", 0)->select();
        $time = time();
        foreach ($coupon as $key => &$res) {
            // $arrs = Db::name('wd_xcx_coupon')->where("uniacid", $uniacid)->where("id", $res['cid'])->find();
            // if ($arrs['etime'] != 0) {
            //     if ($time > $arrs['etime'] && $res['flag'] == 0) {
            //         $kdata = array(
            //             "flag" => 2
            //         );
            //         Db::name('wd_xcx_coupon_user')->where("id", $res['id'])->update($kdata);
            //     }
            // }
            if ($res['etime'] != 0) {
                if ($time > $res['etime'] && $res['flag'] == 0) {
                    $kdata = array(
                        "flag" => 2
                    );
                    Db::name('wd_xcx_coupon_user')->where("id", $res['id'])->update($kdata);
                }
            }
        }
        $user['couponNum'] = Db::name('wd_xcx_coupon_user')->where("uniacid", $uniacid)->where("suid", $suid)->where("flag", 0)->count();
        unset($user['id']);

        //查询会员卡申请情况
        $vipflag = Db::name('wd_xcx_vip_apply')->where("uniacid", $uniacid)->where("suid", $suid)->order("id desc")->find();
        if ($vipflag) {
            $user['vipflag'] = $vipflag['flag'];
        } else {
            $user['vipflag'] = '';
        }

        //查询会员卡信息
        $vipcard = Db::name('wd_xcx_vip_config')->where("uniacid", $uniacid)->find();
        $user['vipset'] = $vipcard['isopen'] ? $vipcard['isopen'] : 0;
        $user['cardname'] = $vipcard['name'] == "" ? '会员卡' : $vipcard['name'];
        $user['userbg'] = ROOT_HOST . "/image/ubg.png";
        $user['is'] = $is;

        $user['recharge_receive_is'] = 0;
        $recharge_receive = Db::name('wd_xcx_recharge_receive')->where("uniacid", $uniacid)->where('suid', $suid)->where('flag', 0)->order("id desc")->find();
        if ($recharge_receive) {
            $recharge_receive['coupon_con'] = $recharge_receive['coupon_con'] ? unserialize($recharge_receive['coupon_con']) : '';
            if ($recharge_receive['coupon_con']) {
                foreach ($recharge_receive['coupon_con'] as &$vs) {
                    $vs['coupon_info'] = Db::name('wd_xcx_coupon_user')->alias('a')->join('wd_xcx_coupon b', 'a.cid = b.id')->where('a.id', $vs['coupon_id'])->field('a.etime as endtime,b.*')->find();

                    if ($vs['coupon_info']['endtime'] == 0) {
                        $vs['coupon_info']['etime'] = '永久有效';
                    } else {
                        $vs['coupon_info']['etime'] = date("Y-m-d", $vs['coupon_info']['endtime']);
                    }
                    unset($vs['coupon_id']);
                }
            }
            $user['recharge_receive'] = $recharge_receive;
            $user['recharge_receive_is'] = 1;
        }
        $adata['data'] = $user;
        return json_encode($adata);
    }


    // //四端定制
    // public function doPageMymoneyD()
    // {
    //     $uniacid = input("uniacid");
    //     $suid = input('suid');
    //     $user = Db::name('wd_xcx_superuser') ->where("uniacid", $uniacid)->where("id", $suid)->field("id,money,score,vipid,uniacid")->find();
    //     $coupon = Db::name('wd_xcx_coupon_user')->where("uniacid", $uniacid)->where("suid", $suid)->where("flag", 0)->select();
    //     $time = time();
    //     foreach ($coupon as $key => &$res) {
    //         $arrs = Db::name('wd_xcx_coupon')->where("uniacid", $uniacid)->where("id", $res['cid'])->find();
    //         if ($arrs['etime'] != 0) {
    //             if ($time > $arrs['etime'] && $res['flag'] == 0) {
    //                 $kdata = array(
    //                     "flag" => 2
    //                 );
    //                 Db::name('wd_xcx_coupon_user')->where("id", $res['id'])->update($kdata);
    //             }
    //         }
    //     }
    //     $user['couponNum'] = Db::name('wd_xcx_coupon_user')->where("uniacid", $uniacid)->where("suid", $suid)->where("flag", 'neq', 2)->count();
    //     //查询会员卡申请情况
    //     $vipflag = Db::name('wd_xcx_vip_apply') ->where("uniacid", $uniacid) ->where("suid", $suid) ->find();
    //     $user['vipflag'] = $vipflag['flag'];
    //     //查询会员卡信息
    //     $vipcard = Db::name('wd_xcx_vip_config')->where("uniacid", $uniacid)->find();
    //     $user['vipset'] = $vipcard['isopen'];
    //     $user['cardname'] = $vipcard['name'] == "" ? '会员卡' : $vipcard['name'];
    //     $user['userbg'] = ROOT_HOST . "/image/ubg.png";
    //     $adata['data'] = $user;
    //     return json_encode($adata);
    // }

    //新版个人中心功能列表请求接口
    public function doPageupdatausersetnew()
    {
        $uniacid = input("uniacid");
        $source = input("source");
        $suid = input("suid");
        $hx_is = false;

        $hxinfo = Db::name('wd_xcx_hx_user')->where('uniacid', $uniacid)->find();
        if ($hxinfo) {
            $hxuser = unserialize($hxinfo['hxuser']);
            if (in_array($suid, array_column($hxuser, 'suid'))) {
                $hx_is = true;
            }
        }
        $items = Db::name('wd_xcx_usercenter_set')->where("uniacid", $uniacid)->find();
        $usercenterset = unserialize($items['usercenterset']);
        // 先组装成选择显示的数据
        $arrs = array();
        $myorder = false;
        $mysign = false;
        $mycoupons = false;
        for ($i = 1; $i <= count($usercenterset) / 6; $i++) {
            if ($usercenterset['flag' . $i] == 2 && $usercenterset['num' . $i] != 5) {
                if (isset($usercenterset['icon' . $i])) {

                    if ($usercenterset['icon' . $i] != 'icon-x-saoma') {
                        $jdata = array(
                            "title" => $usercenterset['title' . $i],
                            "thumb" => remote($uniacid, $usercenterset['thumb' . $i], 1),
                            "num" => $usercenterset['num' . $i],
                            "url" => $usercenterset['url' . $i],
                            "icon" => $usercenterset['icon' . $i]
                        );
                    } else if ($usercenterset['icon' . $i] == 'icon-x-saoma' && $hx_is) {
                        $jdata = array(
                            "title" => $usercenterset['title' . $i],
                            "thumb" => remote($uniacid, $usercenterset['thumb' . $i], 1),
                            "num" => $usercenterset['num' . $i],
                            "url" => $usercenterset['url' . $i],
                            "icon" => $usercenterset['icon' . $i]
                        );
                    } else {
                        continue;
                    }
                } else {
                    $jdata = array(
                        "title" => $usercenterset['title' . $i],
                        "thumb" => remote($uniacid, $usercenterset['thumb' . $i], 1),
                        "num" => $usercenterset['num' . $i],
                        "url" => $usercenterset['url' . $i]
                    );
                }
                array_push($arrs, $jdata);
            }
            if ($usercenterset['flag' . $i] == 2 && $usercenterset['num' . $i] == 5) {
                $myorder = true;
            }
            if ($usercenterset['flag' . $i] == 2 && $usercenterset['num' . $i] == 2) {
                $mysign = true;
            }
            if ($usercenterset['flag' . $i] == 2 && $usercenterset['num' . $i] == 7) {
                $mycoupons = true;
            }
        }
        // 对数据进行排序
        $counts = count($arrs);
        $temps = "";
        for ($i = 0; $i < $counts - 1; $i++) {
            for ($j = 0; $j < $counts - 1 - $i; $j++) {
                if ($arrs[$j + 1]['num'] > $arrs[$j]['num']) {
                    $temps = $arrs[$j];
                    $arrs[$j] = $arrs[$j + 1];
                    $arrs[$j + 1] = $temps;
                }
            }
        }
        foreach ($arrs as $key1 => &$reb) {
            $reb['thumb'] = remote($uniacid, $reb['thumb'], 1);
            if($reb['icon'] == 'icon-x-dingdan2' || $reb['icon'] == 'icon-x-shipin'){
                $reb['url'] = $reb['url'] . '?title='.$reb['title'];
            }
        }
        $adata = array();
        $adata['data']['arrs'] = $arrs;
        $adata['data']['hx_is'] = $hx_is;
        $adata['data']['myorder'] = $myorder;
        $adata['data']['mysign'] = $mysign;
        $adata['data']['mycoupons'] = $mycoupons;
        return json_encode($adata);
    }

    public function dopageShoppay_duo()
    {   //店内支付
        $uniacid = input("uniacid");
        $openid = input('openid');
        $suid = input('suid');
        $ordermoeny = input('ordermoeny');  //订单的总价格
        $yuemoney = input('yuemoney');      //用余额支付的钱
        $money = input('money');            //用微信支付的钱
        $order_id = input('order_id');
        $jfscore = input('jfscore');  //积分抵扣的积分
        $yhq_id = input('yhq_id');  //优惠券id

        $sid = input('sid');  //多商户门店id

        $now = time();
        if (empty($order_id)) {
            $order_id = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
        }
        //获得用户信息
        $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->find();
        $money_u = $user['money'];
        $score_u = $user['score'];
        $kdata = array();
        $kdata['money'] = $money_u - $yuemoney;  //用的钱
        $kdata['score'] = $score_u - $jfscore;    //用的积分
        if ($kdata['money'] != 0 || $kdata['score'] != 0) {
            Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->update($kdata);
        }
        //生成订单
        $ddata['uniacid'] = $uniacid;
        $ddata['orderid'] = $order_id;
        $ddata['suid'] = $suid;
        $ddata['type'] = "del";
        $ddata['creattime'] = time();
        if ($yuemoney > 0) {
            $ddata['score'] = $yuemoney;
            $ddata['message'] = "店内支付扣余额";
            if ($sid > 0) {
                $jiesuan = Db::name('wd_xcx_shops_set')->where('uniacid', $uniacid)->value('jiesuan');
                $tx_money = Db::name('wd_xcx_shops_shop')->where('uniacid', $uniacid)->where('id', $sid)->value('tixian');
                $tx_money = $tx_money + number_format($yuemoney - $yuemoney * $jiesuan * 0.01, 2);
                Db::name('wd_xcx_shops_shop')->where('uniacid', $uniacid)->where('id', $sid)->update(array('tixian' => $tx_money));
                $ddata['sid'] = $sid;
            }
            Db::name('wd_xcx_money')->insert($ddata);
            add_all_pay($uniacid, $yuemoney, $suid);
            check_vip_grade($uniacid, $suid);
        }
        if ($jfscore > 0) {
            $ddata['score'] = $jfscore;
            $ddata['message'] = "店内支付积分抵扣";
            if ($sid > 0) {
                $ddata['sid'] = $sid;
            }
            Db::name('wd_xcx_score')->insert($ddata);
        }
        if ($yhq_id > 0) {
            Db::name('wd_xcx_coupon_user')->where('id', $yhq_id)->update(array("utime" => time(), "flag" => 1));
        }
    }

    public function doPageGuiz()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $guize['list'] = Db::name('wd_xcx_recharge')->where("uniacid", $uniacid)->order("money asc")->select();
        foreach ($guize['list'] as $k => &$v) {
            $v['allmoney'] = round($v['money'] + $v['getmoney'], 2);
            $v['coupon_num'] = 0;
            if ($v['coupon_con']) {
                $coupon_con = unserialize($v['coupon_con']);
                foreach ($coupon_con as $key => &$value) {
                    $v['coupon_num'] += $value['coupon_num'];
                }
            }
        }
        $conf = Db::name('wd_xcx_rechargeconf')->where("uniacid", $uniacid)->find();
        if (!$conf) {
            $conf = [
                'score_shoppay' => 0
            ];
        }
        $guize['conf'] = $conf;
        if ($suid) {
            $guize['user'] = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->field('money,score,uniacid,id')->find();
        } else {
            $guize['user'] = [
                'money' => 0,
                'score' => 0
            ];
        }


        if ($suid) {
            $tiaojian = " and flag <> 2 and flag = 0";
            $prefix = config('database.prefix');
            $yhqsold = Db::query("select * from {$prefix}wd_xcx_coupon_user where uniacid = " . $uniacid . " and suid = " . $suid . $tiaojian . " ORDER BY id desc");
            $time = time();
            // $aa = [];
            foreach ($yhqsold as $key => &$resi) {
                // $arrs = Db::name('wd_xcx_coupon')->where("uniacid", $uniacid)->where("id", $resi['cid'])->find();
                // if ($arrs['btime'] != 0) {
                //     $arrs['btime'] = date("Y-m-d", $arrs['btime']);
                // }
                // if ($arrs['etime'] != 0) {
                //     if ($time > $arrs['etime'] && $resi['flag'] == 0) {
                //         $kdata = array(
                //             "flag" => 2
                //         );
                //         Db::name('wd_xcx_coupon_user')->where("id", $resi['id'])->update($kdata);
                //     }
                //     $arrs['etime'] = date("Y-m-d", $arrs['etime']);
                // }
                if ($resi['etime'] != 0) {
                    if ($time > $resi['etime'] && $resi['flag'] == 0) {
                        $kdata = array(
                            "flag" => 2
                        );
                        Db::name('wd_xcx_coupon_user')->where("id", $resi['id'])->update($kdata);
                    }
                }
            }
        }


        $guize['coupon'] = Db::name('wd_xcx_superuser')->alias("a")->join("wd_xcx_coupon_user b", "a.id = b.suid")->where("a.uniacid", $uniacid)->where("a.id", $suid)->where("b.flag", 0)->field('b.*')->select();
        foreach ($guize['coupon'] as $ksi => $vsi) {
            if ($vsi['use_type'] == 1) {
                if (strstr($vsi['use_class'], 'gpay') === false) {//不存在
                    unset($guize['coupon'][$ksi]);
                }
            }
        }
        $adata['data'] = $guize;
        return json_encode($adata);
    }

    public function doPageZjkk()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $openid = input('openid');
        $order_ids = input('order_id');
        $source = input('source');
        $now = time();
        if ($order_ids == "") {
            $order_id = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
        } else {
            $order_id = $order_ids;
        }
        $gwc = input("gwc");
        $order_id = $order_id;
        $my_pay_money = input("yue_money");
        $allprice = input("price");
        $score = input("dikou_score");
        $zh = input('zh');
        $gwc = stripslashes(html_entity_decode($gwc));
        $gwc = json_decode($gwc, TRUE);
        $newgwc = serialize($gwc);  //餐饮下单规格
        $xinxi = input("xinxi");
        $xinxi = stripslashes(html_entity_decode($xinxi));
        $xinxi = json_decode($xinxi, TRUE);
        $data['username'] = $xinxi['username']; //姓名
        $data['usertel'] = $xinxi['usertel'];    //电话
        $data['address'] = $xinxi['address'];    //地址
        $data['usertime'] = $xinxi['userdate'] . " " . $xinxi['usertime'];  //预定时间
        $data['userbeiz'] = $xinxi['userbeiz'];    //备注
        //获得用户信息
        $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->field('id,money,score,uniacid')->find();
        $money_u = $user['money'];
        $score_u = $user['score'];
        $kdata['money'] = $money_u - $my_pay_money;
        $kdata['score'] = $score_u - $score;

        $data['order_id'] = $order_id;
        $data['uniacid'] = $uniacid;
        $data['suid'] = $suid;
        $data['val'] = $newgwc;
        $data['price'] = $allprice;
        $data['yue_price'] = $my_pay_money;
        $data['creattime'] = time();
        $data['flag'] = 1;
        $data['zh'] = $zh;

        $score = input("dikou_score");
        if ($score > 0) {
            $score_money = input("dikou_money");
            $data['score_info'] = serialize(['score' => $score, 'score_money' => $score_money]);
        }
        Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->update($kdata);
        if ($order_ids == "") {
            Db::name('wd_xcx_food_order')->insert($data);
        } else {
            Db::name('wd_xcx_food_order')->where('order_id', $order_id)->update($data);
        }

        //金钱流水
        if ($my_pay_money > 0) {
            $xfmoney = array(
                "uniacid" => $uniacid,
                "orderid" => $order_id,
                'suid' => $suid,
                'source' => $source,
                "type" => "del",
                "score" => $my_pay_money,
                "message" => '消费',
                "creattime" => time()
            );
            add_all_pay($uniacid, $my_pay_money, $suid);
            check_vip_grade($uniacid, $suid);
            Db::name('wd_xcx_money')->insert($xfmoney);
        }
        //积分流水
        if ($score > 0) {
            $xfscore = array(
                "uniacid" => $uniacid,
                "orderid" => $order_id,
                'suid' => $suid,
                'source' => $source,
                "type" => "del",
                "score" => $score,
                "message" => "消费",
                "creattime" => time()
            );
            Db::name('wd_xcx_score')->insert($xfscore);
        }

        //餐饮规格添加实际销量减少库存
        foreach ($gwc as $ks => $vs) {
            $food_id = $vs[0];   //商品id
            $food_price = $vs[1]; //规格价格
            $food_title = $vs[2]; //规格标题不带规格值
            $food_num = $vs[3]; //规格购买数量
            $food_gg = explode(',', $vs[5]);
            if (count($food_gg) == 3) {
                $where = " and type1 = '" . $food_gg[0] . "' and type2 = '" . $food_gg[1] . "' and type3 = '" . $food_gg[2] . "'";
            } else if (count($food_gg) == 2) {
                $where = " and type1 = '" . $food_gg[0] . "' and type2 = '" . $food_gg[1] . "'";
            } else if (count($food_gg) == 1) {
                $where = " and type1 = '" . $food_gg[0] . "'";
            }
            $prefix = config('database.prefix');
            $sql = "update {$prefix}wd_xcx_food_type_value SET kc = kc - " . $food_num . ", salenum = salenum + " . $food_num . " WHERE pid = " . $food_id . $where;
            Db::query($sql);
        }


        //模板消息start
        if ($data['zh'] == "0") {
            $fzh = "打包/拼桌";
        } else {
            $fzh = $data['zh'];
        }
        $fcontent = "";
        foreach ($gwc as $k => $v) {
            $foodinfo = $v[2] . ',数量' . $v[3] . ',价格' . $v[1] . '元;';
            $fcontent .= $foodinfo;
        }
        $score_name = Db::name('wd_xcx_food_sj')->where("uniacid", $uniacid)->field('names')->find();
        $jsons = [
            'fzh' => $fzh,
            'forder_id' => $order_id,
            'forder_id' => $order_id,
            'fscore_name' => $score_name['names'],
            'fcontent' => $fcontent,
            'fpaymoney' => $allprice
        ];
        $jsons = serialize($jsons);
        tpl_send($uniacid, 10, $openid, $source, input('formId'), $jsons);
        //打印
        $printlist = Db::name('wd_xcx_print')->where('uniacid', $uniacid)->where('flag', 1)->select();
        if (!empty($printlist)) {
            $print_res = $this->printer($uniacid, $order_id, 'food');
        }

        //发送订单短信给商家
        $this->sendSms($uniacid, $my_pay_money);

        return json_encode(array('data' => $order_id));
    }

    //不带报头的curl
    public function _requestPost($url, $data, $ssl = true)
    {
        //curl完成
        $curl = curl_init();
        //设置curl选项
        curl_setopt($curl, CURLOPT_URL, $url);//URL
        $user_agent = isset($_SERVER['HTTP_USER_AGENT']) ? $_SERVER['HTTP_USER_AGENT'] : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:38.0) Gecko/20100101 Firefox/38.0 FirePHP/0.7.4';
        curl_setopt($curl, CURLOPT_USERAGENT, $user_agent);//user_agent，请求代理信息
        curl_setopt($curl, CURLOPT_AUTOREFERER, true);//referer头，请求来源
        curl_setopt($curl, CURLOPT_TIMEOUT, 30);//设置超时时间
        //SSL相关
        if ($ssl) {
            curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);//禁用后cURL将终止从服务端进行验证
            curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 2);//检查服务器SSL证书中是否存在一个公用名(common name)。
        }
        // 处理post相关选项
        curl_setopt($curl, CURLOPT_POST, true);// 是否为POST请求
        curl_setopt($curl, CURLOPT_POSTFIELDS, $data);// 处理请求数据
        // 处理响应结果
        curl_setopt($curl, CURLOPT_HEADER, false);//是否处理响应头
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);//curl_exec()是否返回响应结果
        // 发出请求
        $response = curl_exec($curl);
        if (false === $response) {
            echo '<br>', curl_error($curl), '<br>';
            return false;
        }
        curl_close($curl);
        return $response;
    }

    public function _requestGetcurl($url)
    {
        //curl完成
        $curl = curl_init();
        //设置curl选项
        $header = array(
            "authorization: Basic YS1sNjI5dmwtZ3Nocmt1eGI2Njp1TlQhQVFnISlWNlkySkBxWlQ=",
            "content-type: application/json",
            "cache-control: no-cache",
            "postman-token: cd81259b-e5f8-d64b-a408-1270184387ca"
        );
        curl_setopt($curl, CURLOPT_HEADER, 1);
        curl_setopt($curl, CURLOPT_HTTPHEADER, $header);
        curl_setopt($curl, CURLOPT_URL, $url);//URL
        curl_setopt($curl, CURLOPT_HEADER, 0);             // 0：不返回头信息
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl, CURLOPT_TIMEOUT, 30);//设置超时时间
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
        // 发出请求
        $response = curl_exec($curl);
        if (false === $response) {
            echo '<br>', curl_error($curl), '<br>';
            return false;
        }
        curl_close($curl);
        $forms = stripslashes(html_entity_decode($response));
        $forms = json_decode($forms, TRUE);
        return $forms;
    }

    //月统计数据统计
    public function dopageMysign()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $year = input('year') ? input('year') : date("Y", time());  //获取年
        $month = input('month') ? input('month') : date("m", time()); //当前月
        $days = date("t", strtotime($year . "-" . $month . "-1")); //当前月的天数
        // 拼接日期
        $rbeing = $year . "-" . $month . "-1" . " 00:00:00";
        $rend = $year . "-" . $month . "-" . $days . " 23:59:59";
        // 转换日期
        $begintime = strtotime($rbeing);
        $endtime = strtotime($rend);
        $alls = Db::name('wd_xcx_sign')->where("uniacid", $uniacid)->where("suid", $suid)->where('creattime', '>=', $begintime)->where('creattime', '<=', $endtime)->select();
        // 进行当月数据重组
        $choiceday = array();
        foreach ($alls as $key => &$res) {
            $choiceday[] = date("d", $res['creattime']);
        }
        //构造当月的数组
        $dayarr = array();
        $nowarr = array();
        for ($i = 1; $i <= $days; $i++) {
            $nowarr['day'] = $i;
            if (in_array($i, $choiceday)) {
                $nowarr['choosed'] = true;
            } else {
                $nowarr['choosed'] = false;
            }
            $dayarr[] = $nowarr;
        }
        $result['data'] = $dayarr;
        return json_encode($result);
    }

    //签到统计
    public function dopageMysignjl()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $source = input('source');
        $alls = Db::name('wd_xcx_sign')->where("uniacid", $uniacid)->where("suid", $suid)->order('creattime desc')->limit(0, 5)->select();
        foreach ($alls as $key => &$res) {
            $res['creattime'] = date("Y-m-d", $res['creattime']);
        }
        $userinfo = $this->getnameandavatar($source, $uniacid, $suid);
        $result['data']['alls'] = $alls;
        $result['data']['userinfo'] = $userinfo;
        return json_encode($result);
    }

    //签到操作
    public function dopageQiandao()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $source = input('source');
        $dateriqi = time();
        //签到规则
        $guize = Db::name('wd_xcx_sign_con')->where("uniacid", $uniacid)->find();
        $sj = explode("/", $guize['score']);
        if (!$guize) {
            $score = 0;
        } else {
            $smval = $sj[0];
            $upval = $sj[1];
            $score = rand($smval, $upval);
        }
        // 拼接日期
        $datas = date("Y-m-d", $dateriqi);
        $rbeing = $datas . " 00:00:00";
        $rend = $datas . " 23:59:59";
        // 转换日期
        $begintime = strtotime($rbeing);
        $endtime = strtotime($rend);
        // 判断今天有没有签到
        $res = Db::name('wd_xcx_sign')->where("uniacid", $uniacid)->where("suid", $suid)->where('creattime', '>=', $begintime)->where('creattime', '<=', $endtime)->find();
        // var_dump($res);exit;
        if ($res) {
            $data['flag'] = 1;
            return json_encode(array("data" => 1));
        } else {
            //查询个人积分情况
            $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->find();
            $user_score = $user['score'];
            if (intval($guize['max_score']) > intval($user_score)) {   //总积分大于个人积分
                $jiascor = $user_score + $score;
                if (intval($jiascor) >= intval($guize['max_score'])) {  //新签到的积分+个人积分  大于了总积分
                    $score = $guize['max_score'] - $user_score;
                } else {
                    $score = $score;
                }
            } else {
                $score = 0;
            }
            $udata['score'] = $user_score + $score;
            Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->update($udata);
            $data['uniacid'] = $uniacid;
            $data['suid'] = $suid;
            $data['creattime'] = time();
            $data['score'] = $score;
            $data["source"] = $source;
            Db::name('wd_xcx_sign')->insert($data);
            if ($score != 0) {
                // 2.支付积分流水
                $xfscore = array(
                    "uniacid" => $uniacid,
                    "orderid" => "",
                    "suid" => $user['id'],
                    "type" => "add",
                    "score" => $score,
                    "message" => "签到增加积分",
                    "creattime" => time()
                );
                if ($score > 0) {
                    Db::name('wd_xcx_score')->insert($xfscore);
                }
            }
            $cleiji = Db::name('wd_xcx_sign')->where("uniacid", $uniacid)->where("suid", $suid)->count();
            //获得昨天签到的数据
            $yesterday = date("Y-m-d", strtotime("-1 day"));
            // 拼接日期
            $ybeing = $yesterday . " 00:00:00";
            $yend = $yesterday . " 23:59:59";
            // 转换日期
            $ybegintime = strtotime($ybeing);
            $yendtime = strtotime($yend);
            $yres = Db::name('wd_xcx_sign')->where("uniacid", $uniacid)->where("suid", $suid)->where('creattime', '>=', $ybegintime)->where('creattime', '<=', $yendtime)->find();
            //获取连续统计签到
            $lxqd = Db::name('wd_xcx_sign_lx')->where("uniacid", $uniacid)->where("suid", $suid)->find();
            //如果是新的签到
            if (!$lxqd) {
                $ldata['uniacid'] = $uniacid;
                $ldata['suid'] = $suid;
                $ldata['count'] = 0;
                $ldata['max_count'] = 0;
                $ldata['source'] = $source;
                Db::name('wd_xcx_sign_lx')->insert($ldata);
            }
            $newlxqd = Db::name('wd_xcx_sign_lx')->where("uniacid", $uniacid)->where("suid", $suid)->find();
            //判断昨天有没有签到数据
            if ($yres) {
                $newcount = $newlxqd['count'] + 1;
                $maxcount = $newlxqd['max_count'];
                $lx['count'] = $newcount;
                if ($newcount > $maxcount) {
                    $lx['max_count'] = $newcount;
                } else {
                    $lx['max_count'] = $maxcount;
                }
                $lx['all_count'] = $cleiji;
                Db::name('wd_xcx_sign_lx')->where("uniacid", $uniacid)->where("suid", $suid)->update($lx);
            } else {
                $lx['count'] = 1;
                $lx['all_count'] = $cleiji;
                Db::name('wd_xcx_sign_lx')->where("uniacid", $uniacid)->where("suid", $suid)->update($lx);
            }
            $data['flag'] = 0;
            return json_encode(array("data" => 0));
        }
    }

    //统计的综合数据
    public function dopageMysigntj()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $source = input('source');
        $lxqd = Db::name('wd_xcx_sign_lx')->where("uniacid", $uniacid)->where("suid", $suid)->find();
        $arr = Db::name('wd_xcx_sign_lx')->where("uniacid", $uniacid)->order('all_count desc')->order('id desc')->select();

        $beginToday = mktime(0, 0, 0, date('m'), date('d'), date('Y'));
        $endToday = mktime(0, 0, 0, date('m'), date('d') + 1, date('Y')) - 1;
        $time = time();
        $is_today = Db::name('wd_xcx_sign')->where("uniacid", $uniacid)->where("suid", $suid)->where('creattime > ' . $beginToday . ' and creattime < ' . $endToday)->find();
        if ($is_today) {
            $data['is_today'] = 1;
        } else {
            $data['is_today'] = 0;
        }
        if ($lxqd) {
            $data['lianq'] = $lxqd['count'];
            $data['maxlianq'] = $lxqd['max_count'];
            $data['all_count'] = $lxqd['all_count'];
            $paix = 0;
            foreach ($arr as $key => &$res) {
                if ($res['suid'] == $lxqd['suid']) {
                    $paix = $key + 1;
                    break;
                }
            }
            $data['paix'] = $paix;
        } else {
            $data['lianq'] = 0;
            $data['maxlianq'] = 0;
            $data['all_count'] = 0;
            $data['paix'] = 0;
        }
        $data['qdbg'] = ROOT_HOST . "/image/bg/qdbg.png";
        $data['score'] = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->find();
        if (empty($data['score'])) {
            $data['score']['score'] = 0;
        }
        $info = $this->getnameandavatar($source, $uniacid, $suid);
        $data['avatar'] = $info['avatar'];
        //排序
        $result['data'] = $data;
        return json_encode($result);
    }

    //排行榜
    public function dopagePaihb()
    {
        $uniacid = input("uniacid");
        $arr = Db::name('wd_xcx_sign_lx')->where("uniacid", $uniacid)->order('all_count desc')->order('id desc')->limit(0, 7)->select();
        foreach ($arr as $key => &$res) {
            $user = $this->getnameandavatar($res['source'], $uniacid, $res['suid']);
            $res['avatar'] = $user['avatar'];
            $res['nickname'] = $user['nickname'];
        }
        $result['data'] = $arr;
        return json_encode($result);
    }

    //最新签到
    public function dopageZxqd()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $source = input("source");
        $arr = Db::name('wd_xcx_sign')->where("uniacid", $uniacid)->order('creattime desc')->limit(0, 9)->select();
        foreach ($arr as $key => &$res) {
            $user = $this->getnameandavatar($source, $uniacid, $res['suid']);
            $res['avatar'] = $user['avatar'];
            $res['nickname'] = $user['nickname'];
            $res['creattime'] = date("Y-m-d h:m:s", $res['creattime']);
        }
        $result['data'] = $arr;
        return json_encode($result);
    }

    // 积分商城列表
    public function dopageScorepro()
    {
        $uniacid = input("uniacid");
        $pindex = max(1, intval(input('page')));
        $psize = 8;
        $cid = input("cid");
        if ($cid == 0) {
            $products = Db::name('wd_xcx_score_shop')->where("uniacid", $uniacid)->where('flag', 1)->order('num desc, id desc')->limit(($pindex - 1) * $psize, $psize)->select();
        } else {
            $products = Db::name('wd_xcx_score_shop')->where("uniacid", $uniacid)->where('cid', $cid)->where('flag', 1)->order('num desc, id desc')->limit(($pindex - 1) * $psize, $psize)->select();
        }
        foreach ($products as $key => &$value) {
            $value['thumb'] = remote($uniacid, $value['thumb'], 1);
        }
        $result['data'] = $products;
        return json_encode($result);
    }

    //积分商城的分类
    public function dopageScorecate()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $source = input("source");
        $cate = Db::name('wd_xcx_score_cate')->where("uniacid", $uniacid)->order('num desc, id desc')->select();
        $cate_first = array("catepic" => "", "id" => "0", "name" => "全部", "num" => "99999", "uniacid" => $uniacid);
        array_unshift($cate, $cate_first);
        $userinfo = $this->getnameandavatar($source, $uniacid, $suid);
        $user = new \app\index\model\ImsSudu8PageSuperuser;
        $userinfo['score'] = $user->getScore($suid);
        $result['data']['cate'] = $cate;
        $result['data']['userinfo'] = $userinfo;
        return json_encode($result);
    }

    // 积分商城详情
    public function dopageScoreinfo()
    {
        $uniacid = input("uniacid");
        $id = input("id");
        $suid = input('suid');
        $suid = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->field('id')->find()['id'];
        if ($id) {
            $products = Db::name('wd_xcx_score_shop')->where("uniacid", $uniacid)->where('id', $id)->where('flag', 1)->find();
            $videourl = $products['video'];
            if ($products['video'] != '') {
                if (strpos($videourl, ".mp4") !== false || strpos($videourl, ".MP4") !== false) {
                    $products['video'] = $videourl;
                } else {
                    if (preg_match("/^(http:\/\/|https:\/\/).*$/", $products['video'])) {
                        include 'videoInfo.php';
                        $videoInfo = new videoInfo();
                        $videodata = $videoInfo->getVideoInfo($products['video']);
                        $products['video'] = $videodata['url'];
                    } else {
                        $products['video'] = '';
                    }
                }
            }

            $products['thumb'] = remote($uniacid, $products['thumb'], 1);
            $products['sale_num'] = $products['sale_num'] + $products['sale_tnum'];
            $imgs = new \app\index\model\ProductsUrl;
            $imgs_arr = $imgs->where("randid", $products['onlyid'])->field('url')->select();
            $products['slide'] = [];
            foreach ($imgs_arr as $kk => $dd) {
                array_push($products['slide'], $dd['url']);
            }

            //查询是否已收藏
            $res = Db::name('wd_xcx_collect')->where("uniacid", $uniacid)->where("suid", $suid)->where("type", "exchange")->where("cid", $id)->find();
            if ($res) {
                $products['sc'] = 1;
            } else {
                $products['sc'] = 0;
            }
            if ($products['slide']) {
                foreach ($products['slide'] as $key => &$res) {
                    $res = remote($uniacid, $res, 1);
                }
            }
            if ($products['labels']) {
                $labels = explode(",", $products['labels']);
                $products['labels'] = $labels;
            } else {
                $products['labels'] = array();
            }
        } else {
            $products = "";
        }
        $result['data'] = $products;
        return json_encode($result);
    }

    // 积分商城下单
    public function dopageScoreorder()
    {
        $uniacid = input("uniacid");
        $id = input("id");
        $suid = input("suid");
        $source = input("source");
        $openid = input("openid");
        $formId = input("formId");
        $user = new \app\index\model\ImsSudu8PageSuperuser;
        $userinfo = $user->get(['id' => $suid]);
        $data = array();
        $proM = new \app\index\model\ImsSudu8PageScoreShop;
        $products = $proM->get(['id' => $id, 'flag' => 1]);
        // 检测积分够不够
        if ($userinfo['score'] < $products['price']) {
            $data['flag'] = 0;
            $data['msg'] = "不好意思，您的积分不够！";
            $result['data'] = $data;
            return json_encode($result);
            die();
        }
        if ($products['pro_kc'] > 0 || $products['pro_kc'] == -1) {
            $now = time();
            $order_id = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
            // 1.处理下单录入操作
            $kdata = array(
                "uniacid" => $uniacid,
                "order_id" => $order_id,
                "suid" => (int)$userinfo['id'],
                "pid" => (int)$id,
                "thumb" => remote($uniacid, $products['thumb'], 1),
                "product" => $products['title'],
                "price" => $products['price'],
                "num" => 1,
                "creattime" => time(),
                "flag" => 0,
                "source" => $source
            );
            $res = Db::name('wd_xcx_score_order')->insert($kdata);
            // 2.处理个人扣积分操作
            $myscore = $userinfo['score'];
            $newscore = $myscore - $products['price'];
            $udata = array(
                "score" => $newscore
            );
            Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where('id', $suid)->update($udata);
            $kdatas['uniacid'] = $uniacid;
            $kdatas['orderid'] = $order_id;
            $kdatas['suid'] = $userinfo['id'];
            $kdatas['type'] = "del";
            $kdatas['score'] = $products['price'];
            $kdatas['message'] = "积分商品兑换";
            $kdatas['creattime'] = time();
            $kdatas['source'] = $source;
            if ($products['price'] > 0) {
                Db::name('wd_xcx_score')->insert($kdatas);
            }
            // 3.处理商品库存和卖出总数
            $kc = $products['pro_kc'];
            if ($kc < 0) {
                $newkc = -1;
            } else {
                $newkc = $kc - 1;
            }
            $snum = $products['sale_tnum'];
            $newsnum = $snum + 1;
            $pdata = array(
                "pro_kc" => $newkc,
                "sale_tnum" => $newsnum
            );
            Db::name('wd_xcx_score_shop')->where("uniacid", $uniacid)->where('id', $id)->update($pdata);
            $data['flag'] = 1;
            $data['msg'] = "积分兑换成功！";

            if ($source != 3) {
                $jsons = [];
                $jsons['ftitle'] = $products['title'];
                $jsons['fprice'] = $products['price'];
                $jsons['fscore'] = $newscore; //剩余个人积分
                $jsons = serialize($jsons);
                if($source == 1){
                    sendSubscribe($uniacid, 10, $openid, $jsons);  //订阅消息发送
                }else{
                    tpl_send($uniacid, 9, $openid, $source, $formId, $jsons);
                }
            }
        } else {
            $data['flag'] = 0;
            $data['msg'] = "不好意思，您来晚了,商品已兑换完了！";
        }
        $result['data'] = $data;
        return json_encode($result);
    }

    // 我的积分订单
    public function dopagemyscoreorder()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $ordersList = Db::name('wd_xcx_score_order')->where("uniacid", $uniacid)->where('suid', $suid)->order('creattime desc')->select();
        foreach ($ordersList as $key => &$rec) {
            $rec['creattime'] = date("Y-m-d H:i:s", $rec['creattime']);
        }
        $result['data'] = $ordersList;
        return json_encode($result);
    }

    // 多规格订单详情
    public function dopageduoorderinfo()
    {
        $uniacid = input("uniacid");
        $orderid = input("orderid");
        $orders = Db::name('wd_xcx_duo_products_order')->where("uniacid", $uniacid)->where('order_id', $orderid)->find();
        $orders['m_address'] = unserialize($orders['m_address']);
        $orders['jsondata'] = unserialize($orders['jsondata']);
        $orders['yhinfo'] = unserialize($orders['yhinfo']);
        foreach ($orders['jsondata'] as $key => &$vi) {
            if (isset($vi['baseinfo'])) {
                $vi['baseinfo']['thumb'] = remote($uniacid, $vi['baseinfo']['thumb'], 1);
            }
            if ($vi['proinfo']['thumb']) {
                $vi['proinfo']['thumb'] = remote($uniacid, $vi['proinfo']['thumb'], 1);
            }
        }
        if ($orders['address']) {
            $orders['address_info'] = Db::name('wd_xcx_duo_products_address')->where('id', $orders['address'])->find();
        }
        //获取满减设置
        $orders['moneyoff'] = Db::name('wd_xcx_moneyoff')->where("uniacid", $uniacid)->select();
        $result['data'] = $orders;
        return json_encode($result);
    }

    public function dopageptorderinfo()
    {
        $uniacid = input("uniacid");
        $orderid = input("orderid");
        $suid = input('suid');
        $orders = Db::name('wd_xcx_pt_order')->where("uniacid", $uniacid)->where('suid', $suid)->where('order_id', $orderid)->find();
        $pt_pro['jsondata'] = unserialize($orders['jsondata']);
        $pt_pro['nav'] = $orders['nav'];
        foreach ($pt_pro['jsondata'] as $kk => &$vv) {
            $proinfo['ggz'] = $vv['proval_ggz'];
            $proinfo['price'] = $vv['proval_price'];
            $proinfo['dprice'] = $vv['proval_dprice'];
            $p_id = $vv['proinfo'];
            $pro_val = Db::name("wd_xcx_pt_pro_val")->where("id", $p_id)->find();
            if ($pro_val['thumb']) {
                $proinfo['thumb'] = remote($uniacid, $pro_val['thumb'], 1);
            }
            $vv['proinfo'] = $proinfo;
            $vv['gmorpt'] = $orders['types'];
            $pro_belong = Db::name("wd_xcx_pt_pro")->where("id", $vv['pvid'])->find();
            $baseinfo2['title'] = $pro_belong['title'];
            $baseinfo2['kuaidi'] = $pro_belong['kuaidi'];
            $vv['baseinfo2'] = $baseinfo2;

        }

        $orders['yhqinfo_flag'] = 1;
        if ($orders['coupon']) {  //计算优惠券
            $cou = Db::name('wd_xcx_coupon_user')->alias('a')->join('wd_xcx_coupon b', 'a.cid=b.id', 'left')->where('a.flag', 0)->where('a.id', $orders['coupon'])->field('b.*')->find();
            if ($cou) {
                $orders['yhqinfo'] = '减' . $cou['price'] . '元';
            } else {
                $orders['yhqinfo_flag'] = 2;
                Db::name('wd_xcx_pt_order')->where("uniacid", $uniacid)->where('suid', $suid)->where('order_id', $orderid)->update(['flag' => 3]);
            }
        } else {
            $orders['yhqinfo'] = '未使用优惠券';
        }
        $user = Db::name('wd_xcx_superuser')->where('id', $suid)->where('uniacid', $uniacid)->find();
        $orders['jf_flag'] = 1; //积分不足
        if ($orders['jf'] > 0) {
            if ($orders['jf'] > $user['score']) {
                $orders['jf_flag'] = 2; //积分不足
                Db::name('wd_xcx_pt_order')->where("uniacid", $uniacid)->where('suid', $suid)->where('order_id', $orderid)->update(['flag' => 3]);
            }
            $gz = Db::name('wd_xcx_rechargeconf')->where('uniacid', $uniacid)->find();
            $jian = $orders['jf'] / $gz['score'] * $gz['money'];
            $orders['jfinfo'] = $orders['jf'] . '积分抵' . $jian . '元';
        } else {
            $orders['jfinfo'] = '未使用积分';
        }

        if ($orders['m_address']) {
            $orders['m_address'] = unserialize($orders['m_address']);
        }

        $pt_pro['user'] = $user;

        $pt_pro['orderinfo'] = $orders;
        return json_encode($pt_pro);
    }

    // 分销商中心
    public function dopagefxszhongx()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $sq = Db::name('wd_xcx_fx_sq')->where("uniacid", $uniacid)->where('suid', $suid)->find();
        $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where('id', $suid)->find();
        $arr['sq'] = $sq;
        $arr['user'] = $user;
        $arr['order_counts'] = 0;
        $arr['team_counts'] = 0;
        $arr['tx_counts'] = 0;
        $arr['zuidi'] = 0;
        $prefix = config('database.prefix');
        //我的团队数据
        $team_counts = count(Db::query("SELECT * FROM {$prefix}wd_xcx_superuser WHERE uniacid=" . $uniacid . " and (parent_id = '" . $suid . "' or p_parent_id = '" . $suid . "' or p_p_parent_id = '" . $suid . "')"));
        $arr['team_counts'] = $team_counts;
        // 分销订单
        $order_counts = count(Db::query("SELECT * FROM  {$prefix}wd_xcx_fx_ls WHERE uniacid=" . $uniacid . " and (parent_id = '" . $suid . "' or p_parent_id = '" . $suid . "' or p_p_parent_id = '" . $suid . "')"));
        $arr['order_counts'] = $order_counts;
        // 提现申请
        $tx_counts = Db::name('wd_xcx_fx_tx')->where("uniacid", $uniacid)->where('suid', $suid)->count();
        $arr['tx_counts'] = $tx_counts;
        // 最低提现规则
        $guiz = Db::name('wd_xcx_fx_gz')->where("uniacid", $uniacid)->find();
        $arr['zuidi'] = $guiz['txmoney'];
        $arr['guiz'] = $guiz;
        $result['data'] = $arr;
        return json_encode($result);
    }

    // 我要提现申请
    public function dopagewytixian()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $userinfo = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where('id', $suid)->find();
        $guiz = Db::name('wd_xcx_fx_gz')->where("uniacid", $uniacid)->find();
        $guiz['tx_type'] = trim($guiz['tx_type'], '"');
        $guiz['tx_type'] = array_filter(explode(',', $guiz['tx_type']));

        $data['userinfo'] = $userinfo;
        $data['guiz'] = $guiz;
        $result['data'] = $data;
        return json_encode($result);
    }

    // 分销商提现了
    public function dopagefxstixian()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $money = input("money");
        $data = array(
            "uniacid" => $uniacid,
            "suid" => $suid,
            "money" => $money,
            "types" => input('xuanz'),
            "zfbzh" => input('zfbzh'),
            "zfbxm" => input('zfbxm'),
            "yhkuser" => input('yhkuser'),
            "yhname" => input('yhname'),
            "yhkcard" => input('yhkcard'),
            "source" => input('source'),
            "creattime" => time()
        );
        Db::name('wd_xcx_fx_tx')->insert($data);
        // 申请提现的同时减去提现的数据
        $userinfo = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where('id', $suid)->find();
        $fx_money = $userinfo['fx_money'];
        $new_fx_money = $fx_money * 1 - $money * 1;
        Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where('id', $suid)->update(array('fx_money' => $new_fx_money));
    }

    // 分销商提现记录
    public function dopagefxstxjl()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $val = input("val");
        if ($val == 1) {
            $txjl = Db::name('wd_xcx_fx_tx')->where("uniacid", $uniacid)->where('suid', $suid)->order('id desc')->select();
        } else {
            $flag = $val - 1;
            $txjl = Db::name('wd_xcx_fx_tx')->where("uniacid", $uniacid)->where('suid', $suid)->where('flag', $flag)->order('id desc')->select();
        }
        foreach ($txjl as $key => &$res) {
            $res['creattime'] = date("Y-m-d H:i:s", $res['creattime']);
        }
        $data['data'] = $txjl;
        return json_encode($data);
    }

    // 分销订单
    public function dopagefxdingd()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $types = input("types");
        $guiz = Db::name('wd_xcx_fx_gz')->where("uniacid", $uniacid)->find();
        if ($types != 1) {
            $nty = $types - 1;
            // $orders = Db::name('wd_xcx_fx_ls')->where("uniacid", $uniacid)->where('flag', $nty)->where('parent_id', $suid)->whereOr('p_parent_id', $suid)->whereOr('p_p_parent_id', $suid)->order('id desc')->select();
            $orders = Db::name('wd_xcx_fx_ls')->where("uniacid", $uniacid)->where('flag', $nty)->where(function ($query) use ($suid) {
                $query->where('parent_id', $suid)->whereOr('p_parent_id', $suid)->whereOr('p_p_parent_id', $suid);
            })->order('id desc')->select();
        } else {
            $orders = Db::name('wd_xcx_fx_ls')->where("uniacid", $uniacid)->where(function ($query) use ($suid) {
                $query->where('parent_id', $suid)->whereOr('p_parent_id', $suid)->whereOr('p_p_parent_id', $suid);
            })->order('id desc')->select();
        }
        if ($orders) {
            foreach ($orders as $key => &$res) {
                $v = 0;
                $bili = 0;
                // 根据订单号去订单里面去jsondata
                //$orderinfo = Db::name('wd_xcx_duo_products_order')->where("uniacid", $uniacid)->where('order_id', $res['order_id'])->find();
                //$jsdata = unserialize($orderinfo['jsondata']);
                //$one_bili = $jsdata[0]['one_bili'];
                //$two_bili = $jsdata[0]['two_bili'];
                //$three_bili = $jsdata[0]['three_bili'];
                if ($res['parent_id'] == $suid) {
                    $v = 1;
                    //$bili = $one_bili;
                }
                if ($res['p_parent_id'] == $suid) {
                    $v = 2;
                    //$bili = $two_bili;
                }
                if ($res['p_p_parent_id'] == $suid) {
                    $v = 3;
                    //$bili = $three_bili;
                }

                if ($res['types'] == 'miaosha') {  //秒杀订单
                    $order = Db::name('wd_xcx_order')->alias('a')->join('wd_xcx_products b', 'a.pid = b.id', 'left')->where("a.uniacid", $uniacid)->where('a.order_id', $res['order_id'])->field('a.num as buynum, b.*')->find();
                    $res['nickname'] = $this->getnameandavatar($res['source'], $uniacid, $res['suid'])['nickname'];
                    $order['thumb'] = remote($uniacid, $order['thumb'], 1);
                    $res['noguige'] = 1;  //非多规格商品
                    $res['proinfo'][0] = $order;
                } elseif ($res['types'] == 'duo') {   //多规格订单
                    $order = Db::name('wd_xcx_main_shop_order')->where("uniacid", $uniacid)->where('order_id', $res['order_id'])->find();
                    if($order){
                        // $res['nickname'] = $this->getnameandavatar($order['source'], $uniacid, $order['suid'])['nickname'];
                        $res['proinfo'] = unserialize($order['jsondata']);
                        foreach ($res['proinfo'] as $key => &$reb) {
                            $mm = $reb['num'] * $reb['proinfo']['price'] * $bili / 100;
                            $reb['kmoney'] = $mm;
                            $reb['proinfo']['thumb'] = remote($uniacid, $reb['proinfo']['thumb'], 1);
                        }
                        $res['noguige'] = 2;
                        $res['nickname'] = $this->getnameandavatar($res['source'], $uniacid, $res['suid'])['nickname'];
                    }

                }elseif($res['types'] == 'mainShop'){
                    $order = Db::name('wd_xcx_main_shop_order_item')->where("uniacid", $uniacid)->where('order_item_id', $res['order_id'])->find();
                    if($order){
                        // $res['nickname'] = $this->getnameandavatar($order['source'], $uniacid, $order['suid'])['nickname'];
                        $res['proinfo'] = [];
                        $res['proinfo'][0]['proinfo']['title'] = $order['pro_title'];
                        $res['proinfo'][0]['proinfo']['thumb'] = $order['pro_thumb'];
                        $res['proinfo'][0]['proinfo']['ggz'] = $order['pro_attr'];
                        $res['proinfo'][0]['proinfo']['price'] = $order['pro_price'];
                        $res['proinfo'][0]['num'] = $order['num'];
                        // foreach ($res['proinfo'] as $key => &$reb) {
                        //     $mm = $reb['num'] * $reb['proinfo']['price'] * $bili / 100;
                        //     $reb['kmoney'] = $mm;
                        //     $reb['proinfo']['thumb'] = remote($uniacid, $reb['proinfo']['thumb'], 1);
                        // }
                        $res['noguige'] = 2;
                        $res['nickname'] = $this->getnameandavatar($res['source'], $uniacid, $res['suid'])['nickname'];
                    }

                } elseif ($res['types'] == 'pt') {
                    $order = Db::name('wd_xcx_pt_order')->where("uniacid", $uniacid)->where('order_id', $res['order_id'])->find();
                    $res['proinfo'] = unserialize($order['jsondata']);
                    foreach ($res['proinfo'] as $key => &$reb) {
                        $proinfo = [];
                        $mm = $reb['num'] * $reb['proinfo']['price'] * $bili / 100;
                        $reb['kmoney'] = $mm;
                        $thumb = Db::name('wd_xcx_pt_pro_val')->where('id', $reb['proinfo'])->field('thumb')->find();
                        if ($thumb) {
                            $proinfo['thumb'] = remote($uniacid, $thumb['thumb'], 1);

                        }
                        $proinfo['ggz'] = $reb['proval_ggz'];
                        $proinfo['num'] = $reb['num'];
                        $title = Db::name('wd_xcx_pt_pro')->where('id', $reb['pvid'])->field('title')->find();
                        if ($title) {
                            $proinfo['title'] = $title['title'];
                        }
                        $proinfo['price'] = $order['price'];
                        $reb['proinfo'] = $proinfo;

                    }
                    $res['noguige'] = 2;
                    $res['nickname'] = $this->getnameandavatar($res['source'], $uniacid, $res['suid'])['nickname'];

                } elseif ($res['types'] == 'ext|pdd' || $res['types'] == 'ext|jd') {
                    $order = Db::name('wd_xcx_external_order')->where('uniacid', $uniacid)->where('order_sn', $res['order_id'])->find();
                    if ($order['type'] == 'pdd') {
                        $res['nickname'] = '拼多多';
                    } elseif ($order['type'] == 'jd') {
                        $res['nickname'] = '京东';
                    }
                    $res['proinfo'][0] = [
                        'title' => $order['goods_name'],
                        'thumb' => $order['goods_thumbnail_url'],
                        'buynum' => $order['goods_quantity'],
                        'price' => $order['order_amount'],
                    ];
                    $res['noguige'] = 1;
                }


                $res['creattime'] = date("Y-m-d H:i", $res['creattime']);
                $res['v'] = $v;


            }
            $result['data'] = $orders;
            return json_encode($orders);
        }
    }

    // 分销订单数据统计
    public function dopagefxcount()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $prefix = config('database.prefix');
        $orders1 = count(Db::query("SELECT * FROM {$prefix}wd_xcx_fx_ls WHERE uniacid=" . $uniacid . " and flag = 1 and (parent_id = '" . $suid . "' or p_parent_id = '" . $suid . "' or p_p_parent_id = '" . $suid . "')"));
        $orders2 = count(Db::query("SELECT * FROM {$prefix}wd_xcx_fx_ls WHERE uniacid=" . $uniacid . " and flag = 2 and (parent_id = '" . $suid . "' or p_parent_id = '" . $suid . "' or p_p_parent_id = '" . $suid . "')"));
        $orders3 = count(Db::query("SELECT * FROM {$prefix}wd_xcx_fx_ls WHERE uniacid=" . $uniacid . " and flag = 3 and (parent_id = '" . $suid . "' or {$prefix}p_parent_id = '" . $suid . "' or p_p_parent_id = '" . $suid . "')"));
        $data = array(
            "onecount" => $orders1,
            "twocount" => $orders2,
            "threecount" => $orders3,
            "total" => $orders1 + $orders2 + $orders3
        );
        $result['data'] = $data;
        return json_encode($result);
    }

    // 我的账户
    public function dopagegetmzh()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $userinfo = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where('id', $suid)->find();
        // 申请提现中的钱
        $ord = Db::name('wd_xcx_fx_tx')->where("uniacid", $uniacid)->where('suid', $suid)->where('flag', 1)->select();
        $wfmoney = 0;
        foreach ($ord as $key => &$res) {
            $wfmoney += $res['money'] * 1;
        }
        $data['userinfo'] = $userinfo;
        $data['wfmoney'] = $wfmoney;
        $result['data'] = $data;
        return json_encode($result);
        // return $this->result(0, 'success', $data);
    }

    // 我的团队
    public function dopagemyteam()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $types = input("types") ? input("types") : 1;
        if (!$suid) {
            $result['data'] = '';
            return json_encode($result);
        }
        // 去获取开启了几级目录
        $guiz = Db::name('wd_xcx_fx_gz')->where("uniacid", $uniacid)->find();
        if ($types == 1) {
            $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where('parent_id', $suid)->field('id,createtime, fxs')->select();
        }
        if ($types == 2) {
            $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where('p_parent_id', $suid)->field('id,createtime, fxs')->select();
        }
        if ($types == 3) {
            $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where('p_p_parent_id', $suid)->field('id,createtime, fxs')->select();
        }
        foreach ($user as $key => &$res) {
            $prefix = config('database.prefix');
            $counts = count(Db::query("SELECT * FROM {$prefix}wd_xcx_superuser WHERE uniacid=" . $uniacid . " and (parent_id = '" . $res['id'] . "' or p_parent_id = '" . $res['id'] . "' or p_p_parent_id = '" . $res['id'] . "')"));
            if ($types == 1) {
                $allgetmoney = Db::name('wd_xcx_fx_ls')->where('uniacid', $uniacid)->where('suid', $res['id'])->where('parent_id', $suid)->where('flag', 2)->sum('parent_id_get');
            }
            if ($types == 2) {
                $allgetmoney = Db::name('wd_xcx_fx_ls')->where('uniacid', $uniacid)->where('suid', $res['id'])->where('p_parent_id', $suid)->where('flag', 2)->sum('p_parent_id_get');
            }
            if ($types == 3) {
                $allgetmoney = Db::name('wd_xcx_fx_ls')->where('uniacid', $uniacid)->where('suid', $res['id'])->where('p_p_parent_id', $suid)->where('flag', 2)->sum('p_p_parent_id_get');
            }
            $res['zjcount'] = $counts;
            $res['createtime'] = date("Y-m-d H:i:s", $res['createtime']);
            $info = $this->getNickname($res['id'], $uniacid);
            $res['nickname'] = $info['nickname'];
            $res['avatar'] = $info['avatar'];
            $res['allgetmoney'] = $allgetmoney ? $allgetmoney : 0;
            //$res['nickname'] = rawurldecode($res['nickname']);
        }
        $data['user'] = $user;
        $data['cj'] = $guiz['fx_cj'];
        $result['data'] = $data;
        return json_encode($result);
    }

    public function getNickname($suid, $uniacid)
    {
        $user = Db::name("wd_xcx_user")->where('suid', $suid)->where('uniacid', $uniacid)->field('nickname, avatar')->find();
        $nickname = $user['nickname'];
        $avatar = $user['avatar'];
        if (empty($nickname) && empty($avatar)) {
            $user = Db::name('wd_xcx_ali_user')->where('suid', $suid)->where('uniacid', $uniacid)->field('nick_name, avatar')->find();
            $nickname = $user['nick_name'];
            $avatar = $user['avatar'];
        }
        if (empty($nickname) && empty($avatar)) {
            $nickname = Db::name('wd_xcx_superuser')->where('id', $suid)->where('uniacid', $uniacid)->value('phone');
            $avatar = "";
        }
        $info = array(
            'nickname' => rawurldecode($nickname),
            'avatar' => $avatar
        );
        return $info;
    }

    // 申请成为分销商基本新
    public function doPagesqcwfxsbase()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $source = input("source");
        $gz = Db::name('wd_xcx_fx_gz')->where("uniacid", $uniacid)->find();
        $sq = Db::name('wd_xcx_fx_sq')->where("uniacid", $uniacid)->where('suid', $suid)->find();
        $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where('id', $suid)->find();
        $parent_id = $user['parent_id'];
        if ($parent_id == '0' || !$user) {
            $fxs = "总店";
        } else {
            if ($source == '1')
                $fxs = Db::name('wd_xcx_user')->where("uniacid", $uniacid)->where('suid', $parent_id)->value('nickname');
            else if ($source == '2')
                $fxs = Db::name('wd_xcx_ali_user')->where("uniacid", $uniacid)->where('suid', $parent_id)->value('nick_name');
            else if ($source == '3')
                $fxs = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where('id', $parent_id)->value('phone');
            else if ($source == '4')
                $fxs = Db::name('wd_xcx_baidu_user')->where("uniacid", $uniacid)->where('suid', $parent_id)->value('nick_name');

            $fxs = rawurldecode($fxs);
        }

        if ($gz['sq_thumb']) {
            $gz['sq_thumb'] = remote($uniacid, $gz['sq_thumb'], 1);
        }

        $data['gz'] = $gz;
        $data['sq'] = $sq;
        $data['userinfo'] = $user;
        $data['fxs'] = $fxs;
        $res['data'] = $data;
        return json_encode($res);
    }

    // 申请成为分销商
    public function dopagesqcwfxs()
    {
        $uniacid = input("uniacid");
        $truename = input("truename");
        $truetime = input("truetime");
        $truetel = input("truetel");
        $suid = input("suid");
        $openid = input("openid");
        $source = input("source");
        $formid = input("formid");
        $m = Db::name("wd_xcx_superuser")->where("uniacid", $uniacid)->where('id', $suid)->where('fxs', 2)->find();
        if ($m['fxsstop'] == 2) {
            $data = array(
                "suid" => $suid,
                "openid" => $openid,
                "source" => $source,
                "uniacid" => $uniacid,
                "truename" => $truename,
                "truetel" => $truetel,
                "formid" => $formid,
                "creattime" => time(),
            );
            Db::name("wd_xcx_fx_sq")->insert($data);
            $flag = 4;
        } else {
            $sq = Db::name('wd_xcx_fx_sq')->where("uniacid", $uniacid)->where('suid', $suid)->find();

            $guiz = Db::name('wd_xcx_fx_gz')->where("uniacid", $uniacid)->find();
            @include($truetime);
            if ($guiz['fxs_sz'] == 1) {
                $data = array(
                    "suid" => $suid,
                    "openid" => $openid,
                    "source" => $source,
                    "uniacid" => $uniacid,
                    "truename" => $truename,
                    "truetel" => $truetel,
                    "formid" => $formid,
                    "creattime" => time(),
                    "flag" => 2
                );
                Db::name('wd_xcx_fx_sq')->insert($data);
                Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where('id', $suid)->update(array("fxs" => 2));
                $flag = -1;
            } else {
                $flag = 0;
                if ($sq) {
                    if ($sq['flag'] == 1 || $sq['flag'] == 2) {
                        $flag = $sq['flag'];
                    } else {
                        $flag = 4;
                    }
                } else {
                    $flag = 4;
                }
                if ($flag == 4) {
                    $data = array(
                        "suid" => $suid,
                        "openid" => $openid,
                        "source" => $source,
                        "uniacid" => $uniacid,
                        "truename" => $truename,
                        "truetel" => $truetel,
                        "formid" => $formid,
                        "creattime" => time()
                    );

                    Db::name('wd_xcx_fx_sq')->insert($data);
                }
            }

            if ($guiz['fxs_sz'] == "1") {

                $f = Db::name("wd_xcx_superuser")->where("uniacid", $uniacid)->where('id', $suid)->where('fxs', 2)->find();
                if ($f['fxsstop'] == 2) {
                    Db::name("wd_xcx_superuser")->where("uniacid", $uniacid)->where('id', $suid)->where('fxs', 2)->update(array("fxsstop" => 1));
                }

                $jsons = array(
                    "truename" => $truename,
                    "content" => "申请成为分销商",
                    "creattime" => date("Y-m-d H:i:s", time()),
                    "notice" => "恭喜您已成为分销商！"
                );
                if($source == 1){
                    $jsons['tel'] = $truetel;
                    $jsons['msg'] = "通过";
                    $jsons = serialize($jsons);
                    sendSubscribe($uniacid, 7, $openid, $jsons);
                }else{
                    $jsons = serialize($jsons);
                    tpl_send($uniacid, 7, $openid, $source, $formid, $jsons);
                }
            }
        }
        $result['data'] = $flag;
        return json_encode($result);
    }
    //多规格购物车开始
    //多规格数据
    public function dopageduoproducts()
    {
        $uniacid = input("uniacid");
        $id = input("id");
        $openid = input("openid");
        $suid = input('suid');

        $userinfo = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where('id', $suid)->find();
        $products = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where('id', $id)->find();

        $hits = $products['hits'] + 1;
        Db::name("wd_xcx_products")->where("uniacid", $uniacid)->where('id', $id)->update(array('hits' => $hits));
        $products = Db::name('wd_xcx_products')->where("uniacid", $uniacid)->where('id', $id)->find();
        $videourl = $products['video'];
        if ($videourl != '') {
            if (strpos($videourl, ".mp4") !== false || strpos($videourl, ".MP4") !== false) {
                $products['video'] = $videourl;
            } else {
                include 'videoInfo.php';
                $videoInfo = new videoInfo();
                if (preg_match("/^(http:\/\/|https:\/\/).*$/", $products['video'])) {
                    $videodata = $videoInfo->getVideoInfo($products['video']);
                    $products['video'] = $videodata['url'];
                } else {
                    $products['video'] = '';
                }
            }
        }
        $products['grade'] = $userinfo['grade'];
        $products['discount_status'] = intval($products['discount_status']);

        if ($products['discount_status'] == 2) {
            $products['discount'] = unserialize($products['discount']);
        } else if ($products['discount_status'] == 1) {
            $products['discount'] = Db::name('wd_xcx_vipgrade')->where('grade', $userinfo['grade'])->where('uniacid', $uniacid)->where('discount_flag', 1)->field('discount_grade')->find()['discount_grade'];
            $products['discount'] = floatval($products['discount']);
        }
        // 检查该商品有没有收藏过
        $shouc = Db::name('wd_xcx_collect')->where("uniacid", $uniacid)->where('suid', $suid)->where('cid', $id)->where('type', "showProMore")->find();
        if ($shouc) {
            $shouc = 2;
        } else {
            $shouc = 1;
        }
        // if($products['types']==2){
        $products['mark_price'] = $products['market_price'];
        $products['texts'] = $products['product_txt'];
        $products['xsl'] = 0;
        if ($products['use_more'] == 1) {
            $proarr = Db::name('wd_xcx_duo_products_type_value')->where("pid", $id)->order("id asc")->select();
            // 处理库存量
            $kcl = 0;
            foreach ($proarr as $key => &$res) {
                $kcl += $res['kc'];
                $products['xsl'] = $products['xsl'] + $res['vsalenum'] + $res['salenum'];
            }
            $products['kc'] = $kcl;

            $types = $proarr[0]['comment'];
            //构建规格组
            $typesarr = explode(",", $types);
            // 构建规格组json
            $typesjson = [];
            foreach ($typesarr as $key => &$rec) {
                $str = "type" . ($key + 1);
                $ziji = Db::name('wd_xcx_duo_products_type_value')->where("pid", $id)->order("id asc")->field($str)->select();
                $xarr = array();
                foreach ($ziji as $key => $res) {
                    array_push($xarr, $res[$str]);
                }
                $cdata["val"] = array_unique($xarr);
                $cdata['ck'] = 0;
                $typesjson[$rec] = $cdata;
            }
            $adata['grouparr'] = $typesarr;
            $adata['grouparr_val'] = $typesjson;
        } else if ($products['use_more'] == 2) {
            $products['xsl'] = $products['sale_num'] + $products['sale_tnum'];
            $adata['grouparr'] = [];
            $adata['grouparr_val'] = [];
        }


        // }
        $products['explains'] = explode(",", $products['labels']);
        if ($products['explains'][0] == "") {
            $products['explains'] = "";
        }

        $imgarr = unserialize($products['text']);
        foreach ($imgarr as $key => &$value) {
            $value = remote($uniacid, $value, 1);
        }
        $products['imgtext'] = $imgarr;
        if ($products['shareimg']) {
            $products['shareimg'] = remote($uniacid, $products['shareimg'], 1);
        }
        if ($products['thumb']) {
            $products['thumb'] = remote($uniacid, $products['thumb'], 1);
        }
        $adata['products'] = $products;
        // 分销商的关系[1.绑定上下级关系 ]
        //获取该小程序的分销关系绑定规则
        $guiz = Db::name('wd_xcx_fx_gz')->where("uniacid", $uniacid)->field("fx_cj,sxj_gx,uniacid")->find();
        $fxsid = input('fxsid');

        if ($fxsid != 'undefined' && $fxsid != '0' && $fxsid != 0) {
            $fxsinfo = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $fxsid)->find();
            // 1.先进行上下级关系绑定[判断是不是首次下单]
            if ($guiz['fx_cj'] != 4 && $guiz['sxj_gx'] == 1 && $userinfo['parent_id'] == '0' && $fxsid != '0' && $userinfo['fxs'] != 2 && $fxsinfo['fxs'] == 2) {
                $p_fxs = $fxsinfo['parent_id'];  //分销商的上级
                $p_p_fxs = $fxsinfo['p_parent_id']; //分销商的上上级
                // 判断启用几级分销
                $fx_cj = $guiz['fx_cj'];
                // 分别做判断
                if ($fx_cj == 1) {
                    $uuser = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->update(array("parent_id" => $fxsid));
                }
                if ($fx_cj == 2) {
                    $uuser = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->update(array("parent_id" => $fxsid, "p_parent_id" => $p_fxs));
                }
                if ($fx_cj == 3) {
                    $uuser = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->update(array("parent_id" => $fxsid, "p_parent_id" => $p_fxs, "p_p_parent_id" => $p_p_fxs));
                }
            }
            $adata['guiz'] = Db::name('wd_xcx_fx_gz')->where("uniacid", $uniacid)->field("one_bili,two_bili,three_bili,uniacid")->find();
        } else {
            $fx_cj = $guiz['fx_cj'];
            if ($fx_cj == 1) {
                $adata['guiz']['one_bili'] = Db::name('wd_xcx_fx_gz')->where("uniacid", $uniacid)->field("one_bili")->find()['one_bili'];
                $adata['guiz']['two_bili'] = 0;
                $adata['guiz']['three_bili'] = 0;
            } else if ($fx_cj == 2) {
                $adata['guiz']['one_bili'] = Db::name('wd_xcx_fx_gz')->where("uniacid", $uniacid)->field("one_bili")->find()['one_bili'];
                $adata['guiz']['two_bili'] = Db::name('wd_xcx_fx_gz')->where("uniacid", $uniacid)->field("two_bili")->find()['two_bili'];
                $adata['guiz']['three_bili'] = 0;
            } else if ($fx_cj == 3) {
                $adata['guiz']['one_bili'] = Db::name('wd_xcx_fx_gz')->where("uniacid", $uniacid)->field("one_bili")->find()['one_bili'];
                $adata['guiz']['two_bili'] = Db::name('wd_xcx_fx_gz')->where("uniacid", $uniacid)->field("two_bili")->find()['two_bili'];
                $adata['guiz']['three_bili'] = Db::name('wd_xcx_fx_gz')->where("uniacid", $uniacid)->field("three_bili")->find()['three_bili'];
            } else if ($fx_cj == 4) {
                $adata['guiz']['one_bili'] = 0;
                $adata['guiz']['two_bili'] = 0;
                $adata['guiz']['three_bili'] = 0;
            }
        }
        if (!$guiz) {
            $adata['guiz'] = array(
                "one_bili" => 0,
                "two_bili" => 0,
                "three_bili" => 0
            );
        }
        $adata['vip_config'] = 0;
        if (empty($userinfo['vipid'])) {

            if (!empty($products['vipconfig'])) {
                $vipconfig = unserialize($products['vipconfig']);

                if ($vipconfig['set1'] == 1) {
                    $adata['vip_config'] = $vipconfig['set2'];
                } else {
                    $vip_config = Db::name('wd_xcx_vip_config')->where("uniacid", $uniacid)->find();
                    if (!empty($vip_config)) {
                        $adata['vip_config'] = $vip_config['duo'];
                    }
                }
            } else {
                $vip_config = Db::name('wd_xcx_vip_config')->where("uniacid", $uniacid)->find();
                if (!empty($vip_config)) {
                    $adata['vip_config'] = $vip_config['duo'];
                }
            }
        }
        $adata['shouc'] = $shouc;
        $result['data'] = $adata;
        return json_encode($result);
    }

    // 购物车数量统计
    public function doPagegwcdata()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $counts = Db::name('wd_xcx_duo_products_gwc')->where("uniacid", $uniacid)->where('suid', $suid)->where("flag", 1)->count();
        $result['data'] = $counts;
        return json_encode($result);
    }

    //多规格数据自己规格
    public function dopageduoproductsinfo()
    {
        $uniacid = input("uniacid");
        $str = input('str');
        $arr = explode("######", $str);
        $id = input('id');
        $where = "";
        foreach ($arr as $key => &$res) {
            $vv = $key + 1;
            $where .= " and type" . $vv . " = " . "'" . $res . "'";
        }
        $prefix = config('database.prefix');
        $proinfo = Db::query("SELECT * FROM {$prefix}wd_xcx_duo_products_type_value WHERE pid= " . $id . $where);
        foreach ($proinfo as $key => &$value) {
            if ($value['thumb']) {
                $value['thumb'] = remote($uniacid, $value['thumb'], 1);
            }
            $value['salenum'] = $value['salenum'] + $value["vsalenum"];
        }
        $baseinfo = Db::name('wd_xcx_products')->where("id", $proinfo[0]['pid'])->find();
        if ($baseinfo['thumb']) {
            $baseinfo['thumb'] = remote($uniacid, $baseinfo['thumb'], 1);
        }
        if ($baseinfo['shareimg']) {
            $baseinfo['shareimg'] = remote($uniacid, $baseinfo['shareimg'], 1);
        }
        $adata['proinfo'] = $proinfo[0];
        $adata['baseinfo'] = $baseinfo;
        $result['data'] = $adata;
        return json_encode($result);
    }

    //加入购物车
    public function dopagegwcadd()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $id = input("id");
        $pid = input('pid');
        $prokc = input("prokc");
        $proinfo = Db::name('wd_xcx_duo_products_type_value')->where("id", $id)->find();
        $baseinfo = Db::name('wd_xcx_products')->where("id", $pid)->find();
        //判断该商品是不是已经存在
        if ($baseinfo['use_more'] == 1) {
            $where['pid'] = $pid;
        } else {
            $where['pvid'] = $pid;
        }
        $gwcinfo = Db::name('wd_xcx_duo_products_gwc')->where("suid", $suid)->where('flag', 1)->where($where)->find();
        if ($gwcinfo) {
            $kc = $gwcinfo['num'];
            $newkc = $kc + $prokc;
            $data = array(
                "num" => $newkc,
                "creattime" => time()
            );
            $res = Db::name('wd_xcx_duo_products_gwc')->where("id", $gwcinfo['id'])->update($data);
        } else {
            $data = array(
                "uniacid" => $uniacid,
                "suid" => $suid,
                "pvid" => $pid,   // 商品ID
                "num" => $prokc,
                "creattime" => time()
            );
            if ($baseinfo['use_more'] == 1) {
                $data['pid'] = $id;
            } else {
                $data['pid'] = -1;
            }
            $res = Db::name('wd_xcx_duo_products_gwc')->insert($data);
        }
        // 统计购物车里面的情况
        if ($res) {
            return json_encode(1);
        }
    }

    //获取我的购物车数据
    public function doPagegetmygwc()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $userinfo = Db::name('wd_xcx_superuser')->where('id', $suid)->where('uniacid', $uniacid)->find();
        $mygwc = Db::name('wd_xcx_duo_products_gwc')->alias("a")->join("wd_xcx_products b", "a.pvid = b.id")->where('a.suid', $suid)->where('a.flag', 1)->where('b.id', 'gt', 0)->field("a.*,b.kuaidi")->select();
        $guiz = Db::name('wd_xcx_fx_gz')->where('uniacid', $uniacid)->find();

        foreach ($mygwc as $key => &$res) {

            $baseinfo = Db::name('wd_xcx_products')->where('id', $res['pvid'])->find();

            if ($baseinfo['discount_status'] == 2) {
                $discounts = unserialize($baseinfo['discount']);
                foreach ($discounts as $ko => $vo) {
                    if ($vo['grade'] == $userinfo['grade']) {
                        $baseinfo['discounts'] = floatval($vo['discount']);
                        break;
                    }
                }
            } else if ($baseinfo['discount_status'] == 1) {
                $baseinfo['discount'] = Db::name('wd_xcx_vipgrade')->where('grade', $userinfo['grade'])->where('uniacid', $uniacid)->where('discount_flag', 1)->value('discount_grade');
                $baseinfo['discounts'] = floatval($baseinfo['discount']);
            } else {
                $baseinfo['discounts'] = 0;
            }
            $bb = array(
                "cid" => $baseinfo['cid'],
                "id" => $baseinfo['id'],
                "title" => $baseinfo['title'],
                "thumb" => remote($uniacid, $baseinfo['thumb'], 1),
                "discounts" => $baseinfo['discounts']
            );
            if ($baseinfo['use_more'] == 1) {
                $proinfo = Db::name('wd_xcx_duo_products_type_value')->where('id', $res['pid'])->find();
                $proinfo['thumb'] = remote($uniacid, $proinfo['thumb'], 1);
                $gg = $proinfo['comment'];
                $ggarr = explode(",", $gg);
                $str = "";
                foreach ($ggarr as $index => $rec) {
                    $i = $index + 1;
                    $kk = "type" . $i;
                    $str .= $rec . ":" . $proinfo[$kk] . ",";
                }
                $str = substr($str, 0, strlen($str) - 1);
                $proinfo['kc'] = intval($proinfo['kc']);
                $proinfo['ggz'] = $str;
                $res['proinfo'] = $proinfo;

            } else {
                $res['proinfo'] = [
                    'price' => $baseinfo['price'],
                    'thumb' => remote($uniacid, $baseinfo['thumb'], 1),
                    'kc' => intval($baseinfo['pro_kc']),
                    'id' => -1
                ];
            }

            $res['ck'] = 0;
            $res['baseinfo'] = $bb;
            $res['one_bili'] = $guiz['one_bili'];
            $res['two_bili'] = $guiz['two_bili'];
            $res['three_bili'] = $guiz['three_bili'];
        }
        $result['data'] = $mygwc;
        // dump($result);die;
        return json_encode($result);
    }

    //删除购物车数据
    public function doPagedelmygwc()
    {
        $uniacid = input("uniacid");
        $openid = input("openid");
        $id = input("id");
        Db::name('wd_xcx_duo_products_gwc')->where('id', $id)->where('uniacid', $uniacid)->delete();
    }

    // 实时更新数据库数据
    public function doPageduogwcchange()
    {
        $uniacid = input("uniacid");
        $num = input("num");
        $id = input("id");

        //判断库存
        $gwc_info = Db::name('wd_xcx_duo_products_gwc')->where('id', $id)->find();
        if ($gwc_info) {
            if ($gwc_info['pid'] == -1) {
                $kc = Db::name('wd_xcx_products')->where('id', $gwc_info['pvid'])->value('pro_kc');
            } else {
                $kc = Db::name('wd_xcx_duo_products_type_value')->where('id', $gwc_info['pid'])->value('kc');
            }
            if ($num > $kc) {
                return json_encode(['error' => 1, 'msg' => '库存不足！']);
            }
        } else {
            return json_encode(['error' => 2, 'msg' => '记录不存在！']);
        }

        $data = array(
            "num" => $num
        );
        $res = Db::name('wd_xcx_duo_products_gwc')->where('id', $id)->update($data);
        if ($res) {
            return json_encode(['error' => 0, 'msg' => 'success']);
        } else {
            return json_encode(['error' => 3, 'msg' => 'fail']);
        }
    }

//组装拼团积分规则
    public function dopageptsetgwcscore()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $jsdata = input('jsdata');
        $jsdata = json_decode($jsdata, TRUE);
        $arr = array();
        $jifen = 0;
        foreach ($jsdata as $key => $res) {
            $num = $res['num'];
            $baseinfo = Db::name("wd_xcx_pt_pro")->where('id', $res['pvid'])->find();
            $score = $baseinfo['score'];
            if ($score) {
                $jifen += intval($score) * $num;
            }
        }
        //积分转换成金钱
        $jf_gz = Db::name("wd_xcx_rechargeconf")->where("uniacid", $uniacid)->find();
        if (!$jf_gz) {
            $gzscore = 100;
            $gzmoney = 1;
        } else {
            $gzscore = intval($jf_gz['score']);
            $gzmoney = intval($jf_gz['money']);
        }
        // 我的积分抵用
        $userinfo = Db::name("wd_xcx_superuser")->where("id", $suid)->where("uniacid", $uniacid)->find();
        $score = $userinfo['score'];
        //比较我的积分和扣除积分
        $data = array();
        if ($jifen >= 0 && $score >= $jifen) {
            $zhmoney = ($jifen * $gzmoney) / $gzscore;
            $moneycl = floor($zhmoney);
            $jf = $moneycl * $gzscore;
        } else {
            $zhmoney = ($score * $gzmoney) / $gzscore;
            $moneycl = floor($zhmoney);
            //消费掉的积分
            $jf = $moneycl * $gzscore;
        }
        $data["moneycl"] = $moneycl;
        $data["jf"] = $jf;
        $data["gzscore"] = $gzscore;
        $data["gzmoney"] = $gzmoney;
        return json_encode($data);
    }
    //组装积分规则
    // public function dopagesetgwcscore()
    // {
    //     $uniacid = input("uniacid");
    //     $openid = input("openid");
    //     $jsdata = input('jsdata');
    //     $jsdata = json_decode($jsdata, TRUE);
    //     $arr = array();
    //     $jifen = 0;
    //     foreach ($jsdata as $key => $res) {
    //         $num = $res['num'];
    //         $baseinfo = Db::name('wd_xcx_products')->where('id', $res['pvid'])->find();
    //         $score = $baseinfo['score'];
    //         $jifen += $score * $num;
    //     }
    //     //积分转换成金钱
    //     $jf_gz = Db::name('wd_xcx_rechargeconf')->where('uniacid', $uniacid)->find();
    //     if (!$jf_gz) {
    //         $gzscore = 10000;
    //         $gzmoney = 1;
    //     } else {
    //         $gzscore = $jf_gz['score'];
    //         $gzmoney = $jf_gz['money'];
    //     }
    //     // 我的积分抵用
    //     $userinfo = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->find();
    //     $score = $userinfo['score'];
    //     //比较我的积分和扣除积分
    //     $data = array();
    //     if ($score >= $jifen) {
    //         $zhmoney = ($jifen * $gzmoney) / $gzscore;
    //         $moneycl = floor($zhmoney);
    //         $jf = $moneycl * $gzscore;
    //     } else {
    //         $zhmoney = ($score * $gzmoney) / $gzscore;
    //         $moneycl = floor($zhmoney);
    //         //消费掉的积分
    //         $jf = $moneycl * $gzscore;
    //     }
    //     $data["moneycl"] = $moneycl;
    //     $data["jf"] = $jf;
    //     $data["gzscore"] = $gzscore;
    //     $data["gzmoney"] = $gzmoney;
    //     $result['data'] = $data;
    //     return json_encode($result);
    // }

    public function dopagesetgwcscoreD()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $jsdata = input('jsdata');
        $jsdata = json_decode($jsdata, TRUE);
        $arr = array();
        $jifen = 0;
        foreach ($jsdata as $key => $res) {
            $num = $res['num'];
            $baseinfo = Db::name('wd_xcx_products')->where('id', $res['pvid'])->find();
            $score = $baseinfo['score'];
            $jifen += $score * $num;
        }
        //积分转换成金钱
        $jf_gz = Db::name('wd_xcx_rechargeconf')->where('uniacid', $uniacid)->find();
        if (!$jf_gz) {
            $gzscore = 10000;
            $gzmoney = 1;
        } else {
            $gzscore = $jf_gz['score'];
            $gzmoney = $jf_gz['money'];
        }
        // 我的积分抵用
        $userinfo = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->field('score')->find();
        $score = $userinfo['score'];
        //比较我的积分和扣除积分
        $data = array();
        if ($score >= $jifen) {
            $zhmoney = ($jifen * $gzmoney) / $gzscore;
            $moneycl = floor($zhmoney);
            $jf = $moneycl * $gzscore;
        } else {
            $zhmoney = ($score * $gzmoney) / $gzscore;
            $moneycl = floor($zhmoney);
            //消费掉的积分
            $jf = $moneycl * $gzscore;
        }
        $data["moneycl"] = $moneycl;
        $data["jf"] = $jf;
        $data["gzscore"] = $gzscore;
        $data["gzmoney"] = $gzmoney;
        $result['data'] = $data;
        return json_encode($result);
    }

    // 获取默认地址
    public function dopagegetmraddress()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $address['data'] = Db::name('wd_xcx_duo_products_address')->where('is_mo', 2)->where('suid', $suid)->find();
        if ($address['data']) {
            $address_arr = explode(' ', $address['data']['address']);
            if (count($address_arr) > 1) {
                $address['data']['pro_city'] = $address_arr[0] . ' ' . $address_arr[1];  //得到省市，例：江苏省 南通市
            }
        } else {
            $address['data'] = '';
        }
        return json_encode($address);
    }

    // 获取指定地址
    public function dopagegetmraddresszd()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $id = input("id");
        $address['data'] = Db::name('wd_xcx_duo_products_address')->where('id', $id)->where('suid', $suid)->find();
        if ($address['data']) {
            $address_arr = explode(' ', $address['data']['address']);
            $address['data']['pro_city'] = $address_arr[0] . ' ' . $address_arr[1];  //得到省市，例：江苏省 南通市
        } else {
            $address['data'] = '';
        }
        return json_encode($address);
    }

    //获取运费
    public function dopageyunfeiget()
    {
        $uniacid = input("uniacid");
        $yunfei = Db::name('wd_xcx_duo_products_yunfei')->where('uniacid', $uniacid)->find();
        if (!$yunfei) {
            $yunfei = array(
                "yfei" => 0,
                "byou" => 0
            );
        } else {
            $formset = $yunfei['formset'];
            if ($formset != 0 && $formset != "") {
                $forms = Db::name('wd_xcx_formlist')->where('id', $formset)->find();
                $forms2 = unserialize($forms['tp_text']);
                $yunfei['formdescs'] = $forms['descs'];
                foreach ($forms2 as $key => &$res) {
                    if ($res['tp_text']) {
                        $res['tp_text'] = explode(",", $res['tp_text']);
                    }
                    $res['val'] = '';
                }
            } else {
                $forms2 = "NULL";
            }
            $yunfei['forms'] = $forms2;
        }
        $result['data'] = $yunfei;
        return json_encode($result);
    }

    //获取运费new
    public function dopageyunfeigetnew()
    {
        $uniacid = input("uniacid");
        $type = input("type");
        $id = input("id");
        $hjjg = input("hjjg"); //订单总价
        $my_num = input("num"); //订单商品数量
        $pro_city = input("pro_city"); //省市：

        $result = []; //返回数组定义
        $yfei = 0;
        $yunfei_ggid = 0;

        $province = json_decode(file_get_contents(ROOT_PATH . "public/json/province.json"), true); //得到全国省
        if ($type == 'miaosha' || $type == 'duo') {
            $sql = Db::name('wd_xcx_products')->where('id', $id)->field('yunfei_ggid')->find();
        } else if ($type == 'pt') {
            $sql = Db::name('wd_xcx_pt_pro')->where('id', $id)->field('yunfei_ggid')->find();
        } else if ($type == 'bargain') {
            $sql = Db::name('wd_xcx_bargain_pro')->where('id', $id)->field('freightId as yunfei_ggid')->find();
        }

        $yunfei_ggid = $sql['yunfei_ggid'];
        if (intval($yunfei_ggid) > 0) {
            $pro_yunfei_info = Db::name('wd_xcx_freight')->where('id', $yunfei_ggid)->where('is_delete', 0)->find(); //商品自身选择运费模板
            if (!$pro_yunfei_info) {
                $pro_yunfei_info = Db::name('wd_xcx_freight')->where('uniacid', $uniacid)->where('is_enable', 1)->where('is_delete', 0)->find();
                if (!$pro_yunfei_info) {
                    $result = $this->getstaticyunfei($uniacid);
                    return json_encode($result);
                }
            }
        } else {
            $pro_yunfei_info = Db::name('wd_xcx_freight')->where('uniacid', $uniacid)->where('is_enable', 1)->where('is_delete', 0)->find();
            if (!$pro_yunfei_info) {
                $result = $this->getstaticyunfei($uniacid);
                return json_encode($result);
            }
        }
        $pro_arr = array_values(json_decode(stripslashes(html_entity_decode($pro_yunfei_info['detail'])), true));  //得到模板信息数组

        foreach ($province as $k => $v) {
            foreach ($pro_arr as $ki => $vi) {
                foreach ($vi['province_list'] as $key => $value) {

                    if ($value['ProID'] == $v['ProID']) {
                        $city = $v['name'] . ' ' . $value['name'];
                        if ($pro_city == $city) {
                            if ($vi['free_price'] == '') {
                                if ($my_num >= intval($vi['first'])) {
                                    $yfei += intval($vi['first_price']);
                                    if ($my_num > intval($vi['first'])) {
                                        $yfei += ceil(($my_num - intval($vi['first'])) / $vi['second']) * intval($vi['second_price']);
                                    }
                                    $result['yfei'] = $yfei;
                                    $result['byou'] = '';
                                }
                            } else {
                                if ($hjjg >= intval($vi['free_price'])) {
                                    $result['yfei'] = 0;
                                    $result['byou'] = intval($vi['free_price']);
                                } else {
                                    if ($my_num >= intval($vi['first'])) {
                                        $yfei += intval($vi['first_price']);
                                        if ($my_num > intval($vi['first'])) {
                                            $yfei += ceil(($my_num - intval($vi['first'])) / $vi['second']) * intval($vi['second_price']);
                                        }
                                        $result['yfei'] = $yfei;
                                        $result['byou'] = intval($vi['free_price']);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        if (empty($result)) {
            $result = $this->getstaticyunfei($uniacid);
        } else {
            $res = [];
            $res['data'] = $result;
            $result = $res;
        }
        return json_encode($result);
    }

    public function getstaticyunfei($uniacid)
    {
        $yunfei = Db::name('wd_xcx_duo_products_yunfei')->where('uniacid', $uniacid)->find();
        if (!$yunfei) {
            $yunfei = array(
                "yfei" => 0,
                "byou" => 0
            );
        } else {
            $formset = $yunfei['formset'];
            if ($formset != 0 && $formset != "") {
                $forms = Db::name('wd_xcx_formlist')->where('id', $formset)->find();
                $forms2 = unserialize($forms['tp_text']);
                $yunfei['formdescs'] = $forms['descs'];
                $tp_text = [];
                if ($forms2) {
                    foreach ($forms2 as $key => &$res) {
                        if ($key > 0) {
                            $tp_key = $key - 1;
                            if ($res['required'] == true) {
                                $tp_text[$tp_key]['ismust'] = 1;
                            } else {
                                $tp_text[$tp_key]['ismust'] = 0;
                            }
                            $tp_text[$tp_key]['name'] = $res['label'];
                            if ($res['field_type'] == '单行文本') {
                                $tp_text[$tp_key]['type'] = 0;
                                $tp_text[$tp_key]['tp_text'][0]['yval'] = 0;
                            } else if ($res['field_type'] == '多行文本') {
                                $tp_text[$tp_key]['type'] = 1;
                                $tp_text[$tp_key]['tp_text'] = '';
                            } else if ($res['field_type'] == '多选' || $res['field_type'] == '单选') {
                                if ($res['field_type'] == '多选') {
                                    $tp_text[$tp_key]['type'] = 3;
                                } else {
                                    $tp_text[$tp_key]['type'] = 4;
                                }
                                foreach ($res['field_options']['options'] as $key1 => &$rec1) {
                                    $rec1['yval'] = $rec1['label'];
                                    unset($rec1['label']);
                                }
                                $tp_text[$tp_key]['tp_text'] = $res['field_options']['options'];
                            } else if ($res['field_type'] == '下拉选') {
                                $tp_text[$tp_key]['type'] = 2;
                                $tp_text[$tp_key]['tp_text'] = [];
                                foreach ($res['field_options']['options'] as $key2 => &$rec2) {
                                    array_push($tp_text[$tp_key]['tp_text'], $rec2['label']);
                                }
                            } else if ($res['field_type'] == '日期') {
                                $tp_text[$tp_key]['type'] = 7;
                            } else if ($res['field_type'] == '时间') {
                                $tp_text[$tp_key]['type'] = 11;
                            } else if ($res['field_type'] == '图片') {
                                $tp_text[$tp_key]['type'] = 5;
                                $tp_text[$tp_key]['tp_text'] = $res['field_options']['maxpic'];
                                $tp_text[$tp_key]['z_val'] = array();
                            } else if ($res['field_type'] == '手机号') {
                                $tp_text[$tp_key]['type'] = 0;
                                $tp_text[$tp_key]['tp_text'][0]['yval'] = 1;
                            } else if ($res['field_type'] == '身份证') {
                                $tp_text[$tp_key]['type'] = 0;
                                $tp_text[$tp_key]['tp_text'][0]['yval'] = 7;
                            }
                            $tp_text[$tp_key]['val'] = '';
                        }
                    }
                }
            } else {
                $tp_text = "NULL";
            }
            $yunfei['forms'] = $tp_text;
        }
        $result['data'] = $yunfei;
        return $result;
    }
    //创建订单
    // public function dopageduosetorder()
    // {
    //     $uniacid = input("uniacid");
    //     $openid = input("openid");
    //     $couponid = input("couponid");
    //     $price = input("price");
    //     $dkscore = input("dkscore");
    //     $address = input("address");
    //     $mjly = input("mjly");
    //     $nav = input("nav");
    //     $formid = input('formid');
    //     $yunfei = input('yunfei');
    //     $now = time();
    //     $order_id = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
    //     $userinfo = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->find();
    //     $suid = $userinfo['id'];
    //     $jsdata = html_entity_decode(input('jsdata'));
    //     $jsdatass = json_decode($jsdata, true);
    //     foreach ($jsdatass as $key12 => &$res) {
    //         $probaseinfo = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $res['baseinfo'])->field("id,title,thumb")->find();
    //         $proproinfo = Db::name('wd_xcx_duo_products_type_value')->where('id', $res['proinfo'])->field("id,price,thumb,comment,type1,type2,type3,kc")->find();
    //         $newproinfo['id'] = $probaseinfo['id'];
    //         $newproinfo['title'] = $probaseinfo['title'];
    //         $newproinfo['thumb'] = remote($uniacid, $probaseinfo['thumb'], 1);
    //         $res['baseinfo'] = $newproinfo;
    //         $newproinfo['id'] = $proproinfo['id'];
    //         $newproinfo['price'] = $proproinfo['price'];
    //         $newproinfo['thumb'] = remote($uniacid, $proproinfo['thumb'], 1);
    //         $newproinfo['kc'] = $proproinfo['kc'];
    //         $gg = $proproinfo['comment'];
    //         $ggarr = explode(",", $gg);
    //         $str = "";
    //         foreach ($ggarr as $index => $rec) {
    //             $i = $index + 1;
    //             $kk = "type" . $i;
    //             $str .= $rec . ":" . $proproinfo[$kk] . ",";
    //         }
    //         $newproinfo['ggz'] = $str;
    //         $res['proinfo'] = $newproinfo;
    //     }
    //     // echo "<pre>";
    //     // var_dump($jsdatass);
    //     // echo "</pre>";
    //     // die();
    //     $data = array(
    //         "uniacid" => $uniacid,
    //         "suid" => $suid,
    //         "openid" => $openid,
    //         "order_id" => $order_id,
    //         "jsondata" => serialize($jsdatass),
    //         "coupon" => $couponid,
    //         "creattime" => time(),
    //         "price" => $price,
    //         "flag" => 0,
    //         "jf" => $dkscore,
    //         "address" => $address,
    //         "liuyan" => $mjly,
    //         "nav" => $nav,
    //         "formid" => intval($formid),
    //         "yunfei" => $yunfei
    //     );
    //     // var_dump($data);exit;
    //     // var_dump($data);exit;
    //     Db::name('wd_xcx_duo_products_order')->insert($data);
    //     // 分销商的关系[1.绑定上下级关系 ]
    //     $userinfo = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->find();
    //     //获取该小程序的分销关系绑定规则
    //     $guiz = Db::name('wd_xcx_fx_gz')->where('uniacid', $uniacid)->find();
    //     $fxsid = input('fxsid');
    //     // 1.先进行上下级关系绑定[判断是不是首次下单]
    //     if ($guiz['sxj_gx'] == 2 && $userinfo['parent_id'] == '0' && $fxsid != '0' && $userinfo['fxs'] != 2) {
    //         $fxsinfo = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $fxsid)->find();
    //         $p_fxs = $fxsinfo['parent_id'];  //分销商的上级
    //         $p_p_fxs = $fxsinfo['p_parent_id']; //分销商的上上级
    //         // 判断启用几级分销
    //         $fx_cj = $guiz['fx_cj'];
    //         // 分别做判断
    //         if ($fx_cj == 1) {
    //             $uuser = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->update(array("parent_id" => $fxsid));
    //         }
    //         if ($fx_cj == 2) {
    //             $uuser = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->update(array("parent_id" => $fxsid, "p_parent_id" => $p_fxs));
    //         }
    //         if ($fx_cj == 3) {
    //             $uuser = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->update(array("parent_id" => $fxsid, "p_parent_id" => $p_fxs, "p_p_parent_id" => $p_p_fxs));
    //         }
    //     }
    //     $result['data'] = $order_id;
    //     return json_encode($result);
    // }
    // 修改拼团多规格订单
    public function dopageptduoorderchangegg()
    {
        $uniacid = input('uniacid');
        $orderid = input('orderid');
        $couponid = input('couponid');
        $price = input('price');
        $dkscore = input('dkscore');
        $address = input('address');
        $mjly = input('mjly');
        $nav = input('nav');
        $gwc = input('gwc');
        $openid = input('openid');
        $pvid = input('pvid');
        $shareid = input('shareid');
        $suid = input('suid');
        //查询是此用户否已有开团订单且未完成
        if ($gwc == 1) {
            $order_query = Db::name("wd_xcx_pt_order")->where("suid", $suid)->where("flag", 1)->where("ck", 1)->where("uniacid", $uniacid)->select();
            foreach ($order_query as $kk => $vv) {
                $share_order = Db::name("wd_xcx_pt_share")->where("shareid", $vv['pt_order'])->where("uniacid", $uniacid)->find();
                if ($share_order['flag'] == 1 && $share_order['join_count'] < $share_order['pt_min']) {
                    $or_json = unserialize($vv['jsondata']);
                    foreach ($or_json as $k => $v) {
                        if ($v['pvid'] == $pvid) {
                            $data = 5;
                            $result = $data;
                            return json_encode($result);
                            exit;
                        }
                    }
                }
            }
        }
        //未付款入口订单查询是否已参加此商品团购
        if ($shareid != 0) {
            $order_check = Db::name("wd_xcx_pt_order")->where("pt_order", $shareid)->where("suid", $suid)->where("uniacid", $uniacid)->select();
            foreach ($order_check as $kk => $vv) {
                if ($vv['yue_price'] != 0 || $vv['wx_price'] != 0) {
                    $data = 6;
                    $result = $data;
                    return json_encode($result);
                    exit;
                }
            }
        }
        $data = array(
            "coupon" => $couponid,
            "price" => $price,
            "jf" => $dkscore,
            "address" => $address,
            "liuyan" => $mjly,
            "nav" => $nav
        );
    }

    // 修改多规格订单
    public function doPageduoorderchangegg()
    {
        $uniacid = input("uniacid");
        $orderid = input("orderid");
        $couponid = input("couponid");
        $price = input("price");
        $dkscore = input("dkscore");
        $address = input("address");
        $mjly = input("mjly");
        $nav = input("nav");
        $data = array(
            "coupon" => $couponid,
            "price" => $price,
            "jf" => $dkscore,
            "address" => $address,
            "liuyan" => $mjly,
            "nav" => $nav
        );
        Db::name('wd_xcx_pt_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->update($data);
    }

    //获取地址具体信息
    public function doPagegetaddressinfo()
    {
        $uniacid = input("uniacid");
        $openid = input("openid");
        $id = input("id");
        $address['data'] = Db::name('wd_xcx_duo_products_address')->where('id', $id)->where('openid', $openid)->find();
        if ($address['data']) {
            if (strpos($address['data']['address'], ",") === false) {
                $address['data']['region'] = explode(" ", $address['data']['address']);
            } else {
                $address['data']['region'] = explode(",", $address['data']['address']);
            }
        }
        return json_encode($address);
    }

    //获取地址具体信息——三端合一
    public function doPagegetaddressdetail()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $id = input("id");
        $address['data'] = Db::name('wd_xcx_duo_products_address')->where('id', $id)->where('suid', $suid)->find();
        if ($address['data']) {
            if (strpos($address['data']['address'], ",") === false) {
                $address['data']['region'] = explode(" ", $address['data']['address']);
            } else {
                $address['data']['region'] = explode(",", $address['data']['address']);
            }
        }
        return json_encode($address);
    }

    //获取我的地址礼拜
    public function doPagegetmyaddress()
    {
        $uniacid = input("uniacid");
        $openid = input("openid");
        $myaddress = Db::name('wd_xcx_duo_products_address')->where('openid', $openid)->order('id desc')->select();
        $result['data'] = $myaddress;
        return json_encode($result);
    }

    //获取我的地址礼拜——三端合一
    public function doPagegetallmyaddress()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $myaddress = Db::name('wd_xcx_duo_products_address')->where('suid', $suid)->where('is_mo', 'in', [1, 2])->order('id desc')->select();
        $result['data'] = $myaddress;
        return json_encode($result);
    }

    //增加我的地址
    public function dopagesetmyaddress()
    {
        $uniacid = input("uniacid");
        $openid = input("openid");
        $name = input('name');
        $mobile = input('mobile');
        $address = input('address');
        $more_address = input('more_address');
        $postalcode = input('postalcode');
        $froms = input('froms');
        $data = array(
            "uniacid" => $uniacid,
            "openid" => $openid,
            "name" => $name,
            "mobile" => $mobile,
            "address" => $address,
            "more_address" => $more_address,
            "postalcode" => $postalcode,
            "creattime" => time()
        );
        if ($froms == "weixin") {
            $mywx = Db::name('wd_xcx_duo_products_address')->where('openid', $openid)->where('froms', 'weixin')->find();
            if ($mywx) {
                Db::name('wd_xcx_duo_products_address')->where('id', $mywx['id'])->update($data);
            } else {
                $data['froms'] = "weixin";
                Db::name('wd_xcx_duo_products_address')->insert($data);
            }
        } else {
            $id = input('id');
            if ($id != 0 && $froms != "weixin") {
                Db::name('wd_xcx_duo_products_address')->where('id', $id)->update($data);
            } else {
                $data['froms'] = "selfadd";
                Db::name('wd_xcx_duo_products_address')->insert($data);
            }
        }
    }

    //增加我的地址——三端合一
    public function doPageaddmyaddress()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $name = input('name');
        $mobile = input('mobile');
        $address = input('address');
        $more_address = input('more_address');
        $postalcode = input('postalcode') ? input('postalcode') : '000000';
        $froms = input('froms');
        $is_checked = input('is_checked');
        $data = array(
            "uniacid" => $uniacid,
            "suid" => $suid,
            "name" => $name,
            "mobile" => $mobile,
            "address" => $address,
            "more_address" => $more_address,
            "postalcode" => $postalcode,
            "creattime" => time()
        );
        if ($froms == "weixin") {
            $mywx = Db::name('wd_xcx_duo_products_address')->where('uniacid', $uniacid)->where('suid', $suid)->where('froms', 'weixin')->where('is_mo', '<>', 3)->find();
            if ($mywx) {
                Db::name('wd_xcx_duo_products_address')->where('id', $mywx['id'])->update($data);
            } else {
                $data['froms'] = "weixin";
                $is = Db::name('wd_xcx_duo_products_address')->where('uniacid', $uniacid)->where('suid', $suid)->where('is_mo', 2)->find();
                if (!$is) {
                    $data['is_mo'] = 2;
                }
                Db::name('wd_xcx_duo_products_address')->insert($data);
            }
        } else {
            if ($is_checked) {
                $data['is_mo'] = 2;
                Db::name('wd_xcx_duo_products_address')->where('uniacid', $uniacid)->where('suid', $suid)->update(['is_mo' => 1]);
            } else {
                $data['is_mo'] = 1;
            }
            $id = input('id');
            if ($id != 0 && $froms != "weixin") {
                Db::name('wd_xcx_duo_products_address')->where('id', $id)->update($data);
            } else {
                $data['froms'] = "selfadd";
                Db::name('wd_xcx_duo_products_address')->insert($data);
            }
        }
    }

    // 设置默认地址
    public function dopagesetmoaddress()
    {
        $uniacid = input("uniacid");
        $openid = input("openid");
        $id = input("id");
        $data = array(
            "is_mo" => 1
        );
        // 先更新掉其他默认值
        Db::name('wd_xcx_duo_products_address')->where('openid', $openid)->update($data);
        $kdata = array(
            "is_mo" => 2
        );
        // 更新默认值
        Db::name('wd_xcx_duo_products_address')->where('openid', $openid)->where('id', $id)->update($kdata);
    }

    //设置默认地址——三端合一
    public function doPagesetdefaultaddress()
    {
        $suid = input("suid");
        $id = input("id");
        $data = array(
            "is_mo" => 1
        );
        // 先更新掉其他默认值
        Db::name('wd_xcx_duo_products_address')->where('suid', $suid)->update($data);
        $kdata = array(
            "is_mo" => 2
        );
        // 更新默认值
        Db::name('wd_xcx_duo_products_address')->where('suid', $suid)->where('id', $id)->update($kdata);
    }

    //删除我的地址
    public function doPagedelmyaddress()
    {
        $uniacid = input("uniacid");
        $openid = input("openid");
        $id = input("id");
        $res = Db::name('wd_xcx_duo_products_address')->where('id', $id)->delete();
        return json_encode($res);
    }
    //获取新多产品订单
    // public function doPageduoorderget()
    // {
    //     $uniacid = input("uniacid");
    //     $openid = input("openid");
    //     $order_id = input("order");
    //     $order = Db::name('wd_xcx_duo_products_order')->where('order_id', $order_id)->where('uniacid', $uniacid)->where('openid', $openid)->find();
    //     $order['jsondata'] = unserialize($order['jsondata']);
    //     $userinfo = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->find();
    //     $mymongy = $userinfo['money'];
    //     $order['mymoney'] = $mymongy;
    //     if ($order['coupon'] != 0) {
    //         $coupon = Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where('id', $order['coupon'])->find();
    //         $couponinfo = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where('id', $coupon['cid'])->find();
    //         $order['mycoupon'] = $couponinfo['price'];
    //     } else {
    //         $order['mycoupon'] = 0;
    //     }
    //     $result['data'] = $order;
    //     return json_encode($result);
    // }
    //获取产品订单
    // public function dopageptorderget()
    // {
    //     $uniacid = input("uniacid");
    //     $openid = input("openid");
    //     $order_id = input("order");
    //     $order = Db::name('wd_xcx_pt_order')->where('order_id', $order_id)->where('uniacid', $uniacid)->where('openid', $openid)->find();
    //     $order['jsondata'] = unserialize($order['jsondata']);
    //     $userinfo = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->find();
    //     $mymongy = $userinfo['money'];
    //     $order['mymoney'] = $mymongy;
    //     if ($order['coupon'] != 0) {
    //         $coupon = Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where('id', $order['coupon'])->find();
    //         $couponinfo = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where('id', $coupon['cid'])->find();
    //         $order['mycoupon'] = $couponinfo['price'];
    //     } else {
    //         $order['mycoupon'] = 0;
    //     }
    //     $result['data'] = $order;
    //     return json_encode($result);
    // }
    // 支付过后更新对应状态
    // public function doPageduoorderchange()
    // {
    //     $uniacid = input("uniacid");
    //     $openid = input("openid");
    //     $order_id = input("order_id");
    //     $true_price = input("true_price");
    //     $dkscore = input("dkscore");
    //     $couponid = input("couponid");
    //     $userinfo = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->find();
    //     $mymongy = $userinfo['money'];
    //     $newmymoney = $mymongy - $true_price;
    //     $myscore = $userinfo['score'];
    //     $newmyscore = $myscore - $dkscore;
    //     if ($newmymoney < 0) {
    //         $newmymoney = 0;
    //     }
    //     if ($newmyscore < 0) {
    //         $newmyscore = 0;
    //     }
    //     $data = array(
    //         "money" => $newmymoney,
    //         "score" => $newmyscore
    //     );
    //     Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->update($data);
    //     // 更改订单号
    //     Db::name('wd_xcx_duo_products_order')->where('order_id', $order_id)->update(array("flag" => 1));
    //     //删除对应的优惠券
    //     Db::name('wd_xcx_coupon_user')->where('id', $couponid)->update(array("flag" => 1,"utime"=>time()));
    //     //删除对应的购物车
    //     $order = Db::name('wd_xcx_duo_products_order')->where('openid', $openid)->where('order_id', $order_id)->find();
    //     $jsdata = unserialize($order['jsondata']);
    //     $fmsg = "";
    //     foreach ($jsdata as $key => &$res) {
    //         Db::name('wd_xcx_duo_products_gwc')->where('id', $res['id'])->update(array("flag" => 2));
    //         // 处理销售量
    //         $pvid = $res['pvid'];
    //         $num = $res['num'];
    //         $pro = Db::name('wd_xcx_products')->where('id', $pvid)->find();
    //         $pronum = $pro['sale_tnum'];
    //         $newpronum = $pronum + $num;
    //         Db::name('wd_xcx_products')->where('id', $pvid)->update(array("sale_tnum" => $newpronum));
    //         // 减去对应的库存
    //         $spid = $res['proinfo']['id'];
    //         $spnum = $res['proinfo']['kc'];
    //         $kc = $spnum - $num;
    //         $pro_val = Db::name('wd_xcx_duo_products_type_value')->where('id', $spid)->find();
    //         $fmsg .= "产品：" . $pro['title'] . " 购买数：" . $num . " 购买规格：" . $pro_val['type1'] . " " . $pro_val['type2'] . " " . $pro_val['type3'] . " " . " 购买价格：" . $pro_val['price'] . "元 ";
    //         //加销量
    //         $salenum = $pro_val['salenum'] + 1;
    //         Db::name('wd_xcx_duo_products_type_value')->where('id', $spid)->update(array("kc" => $kc, "salenum" => $salenum));
    //     }
    //     $applet = Db::name('wd_xcx_applet')->where("id", $uniacid)->field('appID,appSecret')->find();
    //     if ($applet) {
    //         $mid = Db::name('wd_xcx_message')->where("uniacid", $uniacid)->where('flag', 6)->find();
    //         if ($mid) {
    //             if ($mid['mid'] != "") {
    //                 $mids = $mid['mid'];
    //                 $url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=" . $applet['appID'] . "&secret=" . $applet['appSecret'];
    //                 $a_token = $this->_requestGetcurl($url);
    //                 if ($a_token) {
    //                     $url_m = "https://api.weixin.qq.com/cgi-bin/message/wxopen/template/send?access_token=" . $a_token['access_token'];
    //                     $formId = input('formid');
    //                     $ftime = date('Y-m-d H:i:s', time());
    //                     $openid = input('openid');
    //                     $fprice = $true_price . "元";
    //                     $furl = $mid['url'];
    //                     $post_info = '{
    //                               "touser": "' . $openid . '",
    //                               "template_id": "' . $mids . '",
    //                               "page": "' . $furl . '",
    //                               "form_id": "' . $formId . '",
    //                               "data": {
    //                                   "keyword1": {
    //                                       "value": "' . $order_id . '",
    //                                       "color": "#173177"
    //                                   },
    //                                   "keyword2": {
    //                                       "value": "' . $fprice . '",
    //                                       "color": "#173177"
    //                                   },
    //                                   "keyword3": {
    //                                       "value": "' . $fmsg . '",
    //                                       "color": "#173177"
    //                                   } ,
    //                                   "keyword4": {
    //                                       "value": "' . $ftime . '",
    //                                       "color": "#173177"
    //                                   }
    //                               },
    //                               "emphasis_keyword": ""
    //                             }';
    //                     $this->_requestPost($url_m, $post_info);
    //                 }
    //             }
    //         }
    //     }
    //     //生成支付流水
    //     // 1.支付金钱流水
    //     $xfmoney = array(
    //         "uniacid" => $uniacid,
    //         "orderid" => $order_id,
    //         "suid" => $userinfo['id'],
    //         "type" => "del",
    //         "score" => $true_price,
    //         "message" => "消费",
    //         "creattime" => time()
    //     );
    //     if ($true_price > 0) {
    //         Db::name('wd_xcx_money')->insert($xfmoney);
    //     }
    //     // 2.支付积分流水
    //     $xfscore = array(
    //         "uniacid" => $uniacid,
    //         "orderid" => $order_id,
    //         "suid" => $userinfo['id'],
    //         "type" => "del",
    //         "score" => $dkscore,
    //         "message" => "消费",
    //         "creattime" => time()
    //     );
    //     if ($dkscore > 0) {
    //         Db::name('wd_xcx_score')->insert($xfscore);
    //     }
    //     // 分销商的关系[1.绑定上下级关系 2.上下级获取对应的金钱及记录[重新操作] 3.是否晋升为分销商]
    //     // 获取下单时对应的分销比例
    //     $one_bili = $jsdata[0]['one_bili'];
    //     $two_bili = $jsdata[0]['two_bili'];
    //     $three_bili = $jsdata[0]['three_bili'];
    //     //获取该小程序的分销关系绑定规则
    //     $guiz = Db::name('wd_xcx_fx_gz')->where('uniacid', $uniacid)->find();
    //     $fxsid = input('fxsid');
    //     $fxsinfo = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $fxsid)->find();
    //     // 1.先进行上下级关系绑定[判断是不是首次付款]
    //     if ($guiz['sxj_gx'] == 3 && $userinfo['parent_id'] == '0' && $fxsid != '0' && $userinfo['fxs'] != 2 && $fxsinfo['fxs'] == 2) {
    //         $p_fxs = $fxsinfo['parent_id'];  //分销商的上级
    //         $p_p_fxs = $fxsinfo['p_parent_id']; //分销商的上上级
    //         // 判断启用几级分销
    //         $fx_cj = $guiz['fx_cj'];
    //         // 分别做判断
    //         if ($fx_cj == 1) {
    //             $uuser = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->update(array("parent_id" => $fxsid));
    //         }
    //         if ($fx_cj == 2) {
    //             $uuser = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->update(array("parent_id" => $fxsid, "p_parent_id" => $p_fxs));
    //         }
    //         if ($fx_cj == 3) {
    //             $uuser = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->update(array("parent_id" => $fxsid, "p_parent_id" => $p_fxs, "p_p_parent_id" => $p_p_fxs));
    //         }
    //     }
    //     // 重新获取该用户信息
    //     $userinfo_new = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->find();
    //     // 2.上下级获取对应的金钱及记录
    //     // 只启用一级分销提成
    //     if ($guiz['fx_cj'] == 1) {
    //         $onemoney = round($true_price * ($one_bili * 1) / 100, 2);
    //         if ($userinfo_new['parent_id'] != '0') {
    //             // 分销订单流水记录
    //             $lsdata = array(
    //                 "uniacid" => $uniacid,
    //                 "openid" => $openid,
    //                 "parent_id" => $userinfo_new['parent_id'],
    //                 "parent_id_get" => $onemoney,
    //                 "p_parent_id" => 0,
    //                 "p_parent_id_get" => 0,
    //                 "p_p_parent_id" => 0,
    //                 "p_p_parent_id_get" => 0,
    //                 "order_id" => $order_id,
    //                 "creattime" => time()
    //             );
    //             Db::name('wd_xcx_fx_ls')->insert($lsdata);
    //         }
    //     }
    //     // 启动二级分销提成
    //     if ($guiz['fx_cj'] == 2) {
    //         $onemoney = round($true_price * ($one_bili * 1) / 100, 2);
    //         $twomoney = round($true_price * ($two_bili * 1) / 100, 2);
    //         $P = 0;
    //         $P_P = 0;
    //         if ($userinfo_new['parent_id'] == '0') {
    //             $P = 0;
    //             $onemoney = 0;
    //         } else {
    //             $P = $userinfo_new['parent_id'];
    //             $onemoney = $onemoney;
    //         }
    //         if ($userinfo_new['p_parent_id'] == '0') {
    //             $P_P = 0;
    //             $twomoney = 0;
    //         } else {
    //             $P_P = $userinfo_new['p_parent_id'];
    //             $twomoney = $twomoney;
    //         }
    //         // 分销订单流水记录
    //         $lsdata = array(
    //             "uniacid" => $uniacid,
    //             "openid" => $openid,
    //             "parent_id" => $P,
    //             "parent_id_get" => $onemoney,
    //             "p_parent_id" => $P_P,
    //             "p_parent_id_get" => $twomoney,
    //             "p_p_parent_id" => 0,
    //             "p_p_parent_id_get" => 0,
    //             "order_id" => $order_id,
    //             "creattime" => time()
    //         );
    //         Db::name('wd_xcx_fx_ls')->insert($lsdata);
    //     }
    //     // 启动三级分销提成
    //     if ($guiz['fx_cj'] == 3) {
    //         $onemoney = round($true_price * ($one_bili * 1) / 100, 2);
    //         $twomoney = round($true_price * ($two_bili * 1) / 100, 2);
    //         $threemoney = round($true_price * ($three_bili * 1) / 100, 2);
    //         $P = 0;
    //         $P_P = 0;
    //         $P_P_P = 0;
    //         if ($userinfo_new['parent_id'] == '0') {
    //             $P = 0;
    //             $onemoney = 0;
    //         } else {
    //             $P = $userinfo_new['parent_id'];
    //             $onemoney = $onemoney;
    //         }
    //         if ($userinfo_new['p_parent_id'] == '0') {
    //             $P_P = 0;
    //             $twomoney = 0;
    //         } else {
    //             $P_P = $userinfo_new['p_parent_id'];
    //             $twomoney = $twomoney;
    //         }
    //         if ($userinfo_new['p_p_parent_id'] == '0') {
    //             $P_P_P = 0;
    //             $threemoney = 0;
    //         } else {
    //             $P_P_P = $userinfo_new['p_p_parent_id'];
    //             $threemoney = $threemoney;
    //         }
    //         // 分销订单流水记录
    //         $lsdata = array(
    //             "uniacid" => $uniacid,
    //             "openid" => $openid,
    //             "parent_id" => $P,
    //             "parent_id_get" => $onemoney,
    //             "p_parent_id" => $P_P,
    //             "p_parent_id_get" => $twomoney,
    //             "p_p_parent_id" => $P_P_P,
    //             "p_p_parent_id_get" => $threemoney,
    //             "order_id" => $order_id,
    //             "creattime" => time()
    //         );
    //         Db::name('wd_xcx_fx_ls')->insert($lsdata);
    //     }
    //     // 3.是否付钱升级为分销商
    //     if ($userinfo_new['fxs'] == 1) {   //支付完了还不是分销商
    //         $val = $guiz['fxs_sz_val'];
    //         if ($guiz['fxs_sz'] == 3) {  //消费次数
    //             // 获取我的消费次数
    //             $xf = count(Db::query("SELECT * FROM {$prefix}wd_xcx_duo_products_order WHERE openid = '" . $openid . "' and uniacid = " . $uniacid . " and flag = 1 or flag =2"));
    //             if ($xf >= $val) {
    //                 Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->update(array("fxs" => 2, "fxstime" => time()));
    //             }
    //         }
    //         if ($guiz['fxs_sz'] == 4) {  //消费过的金额？？？？？消费的金额？？？？？分销出去消费的金额？？？？？？
    //             // 获取我的消费
    //             $xf = Db::query("SELECT * FROM {$prefix}wd_xcx_duo_products_order WHERE openid = '" . $openid . "' and uniacid = " . $uniacid . " and flag = 1 or flag =2");
    //             // 分销后重新下单的情况
    //             $jjmoney = 0;
    //             foreach ($xf as $key => &$res) {
    //                 $jjmoney += $res['price'];
    //             }
    //             if ($jjmoney >= $val) {
    //                 Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->update(array("fxs" => 2, "fxstime" => time()));
    //             }
    //         }
    //     }
    // }
    // 多规格的订单
    public function dopageduoorderlist()
    {
        $uniacid = input("uniacid");
        $openid = input("openid");
        $suid = input('suid');
        $page = max(1, input('page'));
        $pagesize = 5;
        $pagebegin = ($page - 1) * $pagesize;
        // 处理已发货并且过了7天还没有确定的订单
        $receiving_day = Db::name('wd_xcx_duo_products_yunfei')->where('uniacid', $uniacid)->field('receiving')->find();
        $receiving_day = $receiving_day ? $receiving_day : 15; //自动收货时间未设置时默认15天售后
        if (intval($receiving_day['receiving']) > 0) {
            $clorders = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('flag', 4)->select();
            foreach ($clorders as $key => &$res) {
                $st = $res['hxtime'] * 1 + 3600 * 24 * intval($receiving_day['receiving']);
                if ($st < time()) {
                    $adata = array(
                        "hxtime" => $st,
                        "flag" => 2
                    );
                    Db::name('wd_xcx_duo_products_order')->where('id', $res['id'])->update($adata);
                    // 核销完成后去检测要不要进行分销商返现
                    $order_id = $res['order_id'];
                    $openid = $res['openid'];
                    $fxsorder = Db::name('wd_xcx_fx_ls')->where('uniacid', $uniacid)->where('order_id', $order_id)->find();
                    if ($fxsorder) {
                        $this->dopagegivemoney($uniacid, $suid, $order_id);
                    }
                }
            }
        }

        // 先处理未支付并超过30分钟的订单
        $wforders = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('flag', 0)->select();
        foreach ($wforders as $key => &$res) {
            $st = $res['creattime'] + 1800;
            if ($st < time()) {
                $adata = array(
                    "flag" => 3
                );
                //返回销量与库存
                if ($res['sid'] != 0) {
                    $res['jsondata'] = unserialize($res['jsondata']);
                    foreach ($res['jsondata'] as $key => &$reb) {
                        $sgoods = Db::name('wd_xcx_shops_goods')->where('id', $reb['baseinfo']['id'])->find();
                        $rsales = $sgoods['rsales'] - $reb['num'];
                        $storage = $sgoods['storage'] + $reb['num'];
                        Db::name('wd_xcx_shops_goods')->where('id', $reb['baseinfo']['id'])->update(['rsales' => $rsales, 'storage' => $storage]);
                    }
                }
                Db::name('wd_xcx_duo_products_order')->where('id', $res['id'])->update($adata);
                Db::name('wd_xcx_fx_ls')->where('uniacid', $uniacid)->where('order_id', $res['order_id'])->update($adata);
            }
        }
        //订单状态 类型
        $flag = input('flag');
        $type1 = input('type1');
        $orders = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('suid', $suid)->order('id desc')->limit($pagebegin, $pagesize)->select();
        if ($flag == 0) {
            $orders = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('suid', $suid)->where('flag', 0)->order('id desc')->limit($pagebegin, $pagesize)->select();
        }
        if ($flag == 1 && $type1 == 1) {
            $orders = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('suid', $suid)->where('flag', 1)->where('nav', 1)->order('id desc')->limit($pagebegin, $pagesize)->select();
        }
        if ($flag == 1 && $type1 == 2) {
            $orders = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('suid', $suid)->where('flag', 1)->where('nav', 2)->order('id desc')->limit($pagebegin, $pagesize)->select();
        }
        if ($flag == 2) {
            $orders = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('suid', $suid)->where('flag', 2)->order('id desc')->limit($pagebegin, $pagesize)->select();
        }
        if ($flag == 3) {
            $orders = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('suid', $suid)->where('flag', 3)->order('id desc')->limit($pagebegin, $pagesize)->select();
        }
        if ($flag == 4) {
            $orders = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('suid', $suid)->where('flag', 4)->order('id desc')->limit($pagebegin, $pagesize)->select();
        }
        if ($flag == 5) {
            $orders = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('suid', $suid)->where('flag', 5)->order('id desc')->limit($pagebegin, $pagesize)->select();
        }
        if ($flag == 7) {
            $orders = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('suid', $suid)->where('flag', "in", [6, 7, 8, 9])->order('id desc')->limit($pagebegin, $pagesize)->select();
        }


        foreach ($orders as $key => &$res) {
            $res['price'] = round($res['price'], 2);
            $res['jsondata'] = unserialize($res['jsondata']);
            if (!empty($res['hxinfo'])) {
                $hxinfo = unserialize($res['hxinfo']);
                if ($hxinfo[0] == 1) {
                    $res['hxinfo'] = array();
                    $res['hxinfo']['flag'] = 1;
                    $res['hxinfo']['store'] = "系统核销";
                } else if ($hxinfo[0] == '密码核销') {
                    $hxinfos['flag'] = 3;
                    $hxinfos['store'] = "核销密码核销";
                } else if ($hxinfo[0] == '核销员核销') {
                    $hxinfos['flag'] = 5;
                    $hxinfos['store'] = "核销员核销";
                } else if ($hxinfo[0] == '管理员核销') {
                    $hxinfos['flag'] = 4;
                    $hxinfos['store'] = "管理员核销";
                } else {
                    $res['hxinfo'] = array();
                    $res['hxinfo']['flag'] = 2;
                    $res['hxinfo']['store'] = Db::name("wd_xcx_store")->where("id", $hxinfo[1])->field("title")->find()['title'];
                    $res['hxinfo']['staff'] = Db::name("wd_xcx_staff")->where("id", $hxinfo[2])->field("realname")->find()['realname'];
                }
            }
            foreach ($res['jsondata'] as $key2 => &$reb) {
                if ($res['sid'] > 0) {
                    $reb['shopname'] = Db::name('wd_xcx_shops_shop')->where("uniacid", $uniacid)->where('id', $res['sid'])->value('name');
                    $reb['shopname'] = $reb['shopname'] ? $reb['shopname'] : "多商户店铺名称";
                }
                if (isset($reb['baseinfo']) && $reb['baseinfo']['thumb']) {
                    $reb['baseinfo']['thumb'] = remote($uniacid, $reb['baseinfo']['thumb'], 1);
                    if (isset($reb['proinfo']['thumb'])) {
                        if ($reb['proinfo']['thumb']) {
                            $reb['proinfo']['thumb'] = remote($uniacid, $reb['proinfo']['thumb'], 1);
                        } else {
                            $reb['proinfo']['thumb'] = $reb['baseinfo']['thumb'];
                        }

                    }
                }

                if (!isset($reb['baseinfo2']) && !is_array($reb['baseinfo'])) {
                    $reb['baseinfo2'] = Db::name('wd_xcx_pt_pro')->where("id", $reb['baseinfo'])->find();
                    $reb['proinfo'] = Db::name('wd_xcx_pt_pro_val')->where("id", $reb['proinfo'])->find();
                    if ($reb['proinfo']) {
                        $reb['proinfo']['ggz'] = $reb['proinfo']['comment'] . ":" . $reb['proinfo']['type1'];
                        $reb['proinfo']['thumb'] = remote($uniacid, $reb['proinfo']['thumb'], 1);
                    }
                }
            }
            $res['creattime'] = date("Y-m-d H:i:s", $res['creattime']);
            $res['hxtime'] = $res['hxtime'] == 0 ? "未核销" : date("Y-m-d H:i:s", $res['hxtime']);
            $res['counts'] = count($res['jsondata']);

        }
        $result['data'] = $orders;
        return json_encode($result);
    }

    //多规格的订单30分钟后结束
    public function doPagesetorderover()
    {
        $uniacid = input("uniacid");
        $openid = input("openid");
        $time = time();
        $orders = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('openid', $openid)->select();
        foreach ($orders as $key => &$res) {
            $overtime = $res['creattime'] + (30 * 60);
        }
    }

    // 向我的上级返钱操作['并生成流水记录']
    public function dopagegivemoney($uniacid, $suid, $orderid)
    {
        $guiz = Db::name('wd_xcx_fx_gz')->where('uniacid', $uniacid)->find();
        $order = Db::name('wd_xcx_fx_ls')->where('uniacid', $uniacid)->where('order_id', $orderid)->find();
        Db::name('wd_xcx_fx_ls')->where('uniacid', $uniacid)->where('order_id', $orderid)->update(array("flag" => 2));
        $me = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['suid'])->find();
        $me_p_get_money = $me['p_get_money'];
        $me_p_p_get_money = $me['p_p_get_money'];
        $me_p_p_p_get_money = $me['p_p_p_get_money'];
        // 启动一级分销提成
        if ($guiz['fx_cj'] == 1) {
            if ($order['parent_id']) {
                $puser = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['parent_id'])->find();
                $kdata = array(
                    "fx_allmoney" => $puser['fx_allmoney'] + $order['parent_id_get'],
                    "fx_money" => $puser['fx_money'] + $order['parent_id_get']
                );
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['parent_id'])->update($kdata);
                // 我给我的父级贡献的钱
                $new_p_get_money = $me_p_get_money * 1 + $order['parent_id_get'] * 1;
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['suid'])->update(array("p_get_money" => $new_p_get_money));
            }
        }
        // 启动二级分销提成
        if ($guiz['fx_cj'] == 2) {
            if ($order['parent_id']) {
                $puser = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['parent_id'])->find();
                $kdata = array(
                    "fx_allmoney" => $puser['fx_allmoney'] + $order['parent_id_get'],
                    "fx_money" => $puser['fx_money'] + $order['parent_id_get']
                );
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['parent_id'])->update($kdata);
                // 我给我的父级贡献的钱
                $new_p_get_money = $me_p_get_money * 1 + $order['parent_id_get'] * 1;
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['suid'])->update(array("p_get_money" => $new_p_get_money));
            }
            if ($order['p_parent_id']) {
                $puser = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['p_parent_id'])->find();
                $kdata = array(
                    "fx_allmoney" => $puser['fx_allmoney'] + $order['p_parent_id_get'],
                    "fx_money" => $puser['fx_money'] + $order['p_parent_id_get']
                );
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['p_parent_id'])->update($kdata);
                // 我给我的父级的父级贡献的钱
                $new_p_p_get_money = $me_p_p_get_money * 1 + $order['p_parent_id_get'] * 1;
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['suid'])->update(array("p_p_get_money" => $new_p_p_get_money));
            }
        }
        // 启动三级分销提成
        if ($guiz['fx_cj'] == 3) {
            if ($order['parent_id']) {
                $puser = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['parent_id'])->find();
                $kdata = array(
                    "fx_allmoney" => $puser['fx_allmoney'] + $order['parent_id_get'],
                    "fx_money" => $puser['fx_money'] + $order['parent_id_get']
                );
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['parent_id'])->update($kdata);
                // 我给我的父级贡献的钱
                $new_p_get_money = $me_p_get_money * 1 + $order['parent_id_get'] * 1;
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['suid'])->update(array("p_get_money" => $new_p_get_money));
            }
            if ($order['p_parent_id']) {
                $puser = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['p_parent_id'])->find();
                $kdata = array(
                    "fx_allmoney" => $puser['fx_allmoney'] + $order['p_parent_id_get'],
                    "fx_money" => $puser['fx_money'] + $order['p_parent_id_get']
                );
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['p_parent_id'])->update($kdata);
                // 我给我的父级的父级贡献的钱
                $new_p_p_get_money = $me_p_p_get_money * 1 + $order['p_parent_id_get'] * 1;
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['suid'])->update(array("p_p_get_money" => $new_p_p_get_money));
            }
            if ($order['p_p_parent_id']) {
                $puser = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['p_p_parent_id'])->find();
                $kdata = array(
                    "fx_allmoney" => $puser['fx_allmoney'] + $order['p_p_parent_id_get'],
                    "fx_money" => $puser['fx_money'] + $order['p_p_parent_id_get']
                );
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['p_p_parent_id'])->update($kdata);
                // 我给我的父级的父级的父级贡献的钱
                $new_p_p_p_get_money = $me_p_p_p_get_money * 1 + $order['p_p_parent_id_get'] * 1;
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['suid'])->update(array("p_p_p_get_money" => $new_p_p_p_get_money));
            }
        }
    }

    // 点击确认订单按钮确认收货
    public function doPagequerenxc()
    {
        $uniacid = input("uniacid");
        $openid = input("openid");
        $orderid = input("orderid");
        $adata = array(
            "hxtime" => time(),
            "flag" => 2
        );
        Db::name('wd_xcx_duo_products_order')->where('order_id', $orderid)->update($adata);
        $fxsorder = Db::name('wd_xcx_fx_ls')->where('order_id', $orderid)->where('uniacid', $uniacid)->find();
        if ($fxsorder) {
            $this->dopagegivemoney($uniacid, $openid, $orderid);
        }
    }

//    // 点击确认订单按钮确认收货（新版）
    public function dopagenewquerenxc()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $orderid = input("orderid");
        $adata = array(
            "hxtime" => time(),
            "flag" => 2
        );

        Db::name('wd_xcx_duo_products_order')->where('order_id', $orderid)->update($adata);
        $fxsorder = Db::name('wd_xcx_fx_ls')->where('order_id', $orderid)->where('uniacid', $uniacid)->find();
        $order = Db::name("wd_xcx_duo_products_order")->where("uniacid", $uniacid)->where("order_id", $orderid)->find();
        if ($order['sid'] != 0) {
            //获取结算费率
            $jiesuan = Db::name('wd_xcx_shops_set')->where('uniacid', $uniacid)->find();
            $jiesuan = $jiesuan['jiesuan'];
            $money = Db::name('wd_xcx_shops_shop')->where("uniacid", $uniacid)->where("id", $order['sid'])->find()['tixian'];
            if (floatval($jiesuan) > 0) {
                $d = floatval($jiesuan) / 100;
                $c = $order['price'] * $d;
                $price = $order['price'] - $c;
                $price = round($price, 2);
                $money = $money + $price;
            } else {
                $price = round($order['price'], 2);
                $money = $money + $order['price'];
            }

            add_all_pay($uniacid, $price, $suid);
            check_vip_grade($uniacid, $suid);

            if($order['source'] == 1){
                $openid = Db::name("wd_xcx_user")->where("suid", $order['suid'])->value('openid');
                $jsons = [
                    'fprice' => $order['price']
                ];
                $jsons = serialize($jsons);
                sendSubscribe($uniacid, 2, $openid, $jsons);
            }

            $result = Db::name('wd_xcx_shops_shop')->where("uniacid", $uniacid)->where("id", $order['sid'])->update(array('tixian' => $money));
            exit;
        }
        if ($fxsorder) {
            $this->dopagegivemoney($uniacid, $suid, $orderid);
        }

        //购买送积分
        $jsondata = unserialize($order['jsondata']);
        $total_num = 0;
        $total_price = 0;
        foreach ($jsondata as $key => &$value) {
            $total_num += $value['num'];
            $total_price += $value['proinfo']['price'] * $value['num'];
        }

        add_all_pay($uniacid, $order['price'], $suid);
        check_vip_grade($uniacid, $suid);

        if ($jsondata) {
            $hasscoreback = 0;
            foreach ($jsondata as $key => $va) {
                $a = Db::name("wd_xcx_products")->where("uniacid", $uniacid)->where("id", $va['baseinfo']['id'])->find();
                $scoreback = $a['scoreback'];
                if (!empty($scoreback)) {
                    if (strpos($scoreback, "%")) {
                        $scoreback = floatval(chop($scoreback, "%"));
                        $scoretomoney = Db::name("wd_xcx_rechangeconf")->where("uniacid", $uniacid)->find();

                        $scoreback = $total_price * $scoreback / 100;
                        if ($order['score_flag'] == 0 && $order['score_bei'] > 0) {
                            $scoreback = floor($scoreback * intval($scoretomoney['score']) * $order['score_bei'] / intval($scoretomoney['money']));
                        } else {
                            $scoreback = floor($scoreback * intval($scoretomoney['score']) / intval($scoretomoney['money']));
                        }

                        $scoreback = $va['proinfo']['price'] * $va['num'] * $scoreback / 100;
                        $scoreback = floor($scoreback * intval($scoretomoney['scroe']) / intval($scoretomoney['money']));

                    } else {
                        if ($order['score_flag'] == 0 && $order['score_bei'] > 0) {
                            $scoreback = floor($va['num'] * floatval($scoreback) * $order['score_bei']);
                        } else {
                            $scoreback = floor($va['num'] * floatval($scoreback));
                        }
                    }
                    $hasscoreback = $hasscoreback + $scoreback * 1;
                }
            }
            if ($hasscoreback > 0) {
                $new_user = Db::name("wd_xcx_superuser")->where("uniacid", $uniacid)->where("id", $order['suid'])->find();
                $new_my_score = $new_user['score'] + $hasscoreback;
                Db::name("wd_xcx_superuser")->where("uniacid", $uniacid)->where("id", $new_user['id'])->update(array("score" => $new_my_score));
                $scoreback_data = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    "suid" => $new_user['id'],
                    "type" => "add",
                    "score" => $hasscoreback,
                    "message" => "买送积分",
                    "creattime" => time()
                );
                Db::name("wd_xcx_score")->insert($scoreback_data);
            }
        }


    }

//    //用户退货（新版）
    public function doPagenewtuihuo()
    {

        $uniacid = input('uniacid');

        $order_id = input('order_id');

        if (!empty($order_id)) {
            $data = array(
                'kuaidi_th' => input('kuaidi'),
                'kuaidihao_th' => input('kuaidihao'),
                'flag' => 7
            );

//           $result = pdo_update("sudu8_page_duo_products_order", $data, array("uniacid"=>$uniacid, "order_id"=>$order_id));
            $result = Db::name("wd_xcx_duo_products_order")->where("uniacid", $uniacid)->where("order_id", $order_id)->update($data);
        }

//        return $this->result(0, 'success', array("result"=>$result));
        return json_encode(array("result" => $result));
    }


//   新版多规格取消订单
//     public function doPagenewduoshoptk(){
//         $uniacid = input('uniacid');

//         $formId = input('formId');
//         $order_id = input('order_id');

//         if($order_id && $order_id != 'undefined'){
//             $now = time();
//             $out_refund_no = date("Y",$now).date("m",$now).date("d",$now).date("H",$now).date("i",$now).date("s",$now).rand(1000,9999);
//            Db::name("wd_xcx_duo_products_order")->where("uniacid",$uniacid)->where("order_id",$order_id)->update(array("th_orderid"=>$out_refund_no));
//            $order=Db::name("wd_xcx_duo_products_order")->where("uniacid",$uniacid)->where("order_id",$order_id)->find();
//             if($order['payprice'] > 0){

//                 $app = Db::name('wd_xcx_applet')->where("id",$uniacid)->find();
//                 $mchid = $app['mchid'];   //商户号
//                 $apiKey = $app['signkey'];    //商户的秘钥
//                 $appid = $app['appID'];                 //小程序的id
//                 $appkey = $app['appSecret'];            //小程序的秘钥
//                 // 更新信息
//                 $openid= $order['openid'];    //申请者的openid
//                 $outTradeNo =$out_refund_no;
//                 $totalFee= intval($order['payprice'] * 100);  //申请了提现多少钱
//                 $outRefundNo = $out_refund_no; //商户订单号
//                 $refundFee= intval($order['payprice'] * 100);  //申请了提现多少钱
//                 $SSLCERT_PATH = ROOT_PATH.'public/Cert/'.$uniacid.'/apiclient_cert.pem';//证书路径
//                 $SSLKEY_PATH =  ROOT_PATH.'public/Cert/'.$uniacid.'/apiclient_key.pem';//证书路径
//                 $opUserId = $mchid;//商户号
//                 include "WinXinRefund.php";
//                 $weixinpay = new WinXinRefund($openid,$outTradeNo,$totalFee,$outRefundNo,$refundFee,$SSLCERT_PATH,$SSLKEY_PATH,$opUserId,$appid,$apiKey);
//                 $return = $weixinpay->refund();
//                 if(!$return){
//                     return json_encode(array("flag" => 1, "message" => "退款失败！请联系卖家"));
//                 }else{
//                     $xfmoney = array(
//                         "uniacid" => $uniacid,
//                         "orderid" => $order['order_id'],
//                         "suid" => $order['suid'],
//                         "type" => "add",
//                         "score" => $order['payprice'],
//                         "message" => "退款退回微信",
//                         "creattime" => time()
//                     );
//                     Db::name("wd_xcx_money")->insert($xfmoney);
//                     $tk_je = $order['price'] - $order['payprice']; //退回余额
//                     if($tk_je > 0){
//                         $xfmoney1 = array(
//                             "uniacid" => $uniacid,
//                             "orderid" => $order['order_id'],
//                             "suid" => $order['suid'],
//                             "type" => "add",
//                             "score" => $tk_je,
//                             "message" => "退款退回余额",
//                             "creattime" => time()
//                         );
//                         Db::name("wd_xcx_money")->insert($xfmoney1);
//                     }
//                 }

//             }else{
//                  Db::name("wd_xcx_duo_products_order")->where("uniacid",$uniacid)->where("th_orderid",$out_refund_no)->update(array("flag"=>8));
//                 $order=Db::name("wd_xcx_duo_products_order")->where("uniacid",$uniacid)->where("th_orderid",$out_refund_no)->find();
//                 Db::execute("update  {$prefix}wd_xcx_user set money=money+".$order['price']." where uniacid=".$uniacid." and id=".$order["suid"]);
//                 if($order['coupon']){
//                      Db::name("wd_xcx_coupon_user")->where("uniacid",$uniacid)->where("suid",$order["suid"])->where("id",$order['coupon'])->update(array("flag"=>0,"utime"=>0));
//                 }

//                 if($order['price'] > 0){
//                     $xfmoney = array(
//                         "uniacid" => $uniacid,
//                         "orderid" => $order['order_id'],
//                         "suid" => $order['suid'],
//                         "type" => "add",
//                         "score" => $order['price'],
//                         "message" => "退款退回余额",
//                         "creattime" => time()
//                     );
//                     Db::name("wd_xcx_money")->insert($xfmoney);
//                 }
//                 $a=Db::name("wd_xcx_user")->where("uniacid",$uniacid)->where("id",$order['suid'])->find();
//                 $b=$a['money']*1+$order['price']*1;
//                 Db::name("wd_xcx_user")->where("uniacid",$uniacid)->where("id",$order['suid'])->update(array("money"=>$b));

//                 if($order['jf']){
//                    Db::execute("update {$prefix}wd_xcx_user set score=score+".$order['jf']." where uniacid=".$uniacid." and id=".$order["suid"]);
//                     $score_data = array(
//                         "uniacid" => $uniacid,
//                         "orderid" => $order_id,
//                         "suid" => $order['suid'],
//                         "type" => "add",
//                         "score" => $order['jf'],
//                         "message" => "退款退回抵扣积分",
//                         "creattime" => time()
//                     );
//                      Db::name("wd_xcx_score")->insert($score_data);
//                 }

//                 $fmsg = "";
//                 $jsondata = unserialize($order['jsondata']);
//                 foreach($jsondata as $key => &$value){
//                     if($key != 0){
//                         $fmsg .= "\\n";
//                     }

//                     $fmsg .= $value['baseinfo']['title'] . "（" . chop($value['proinfo']['ggz'],',') . "） ×" .$value['num'];
//                     Db::execute("update {$prefix}wd_xcx_duo_products_type_value set kc=kc+".$value['num']." where id=".$value['proinfo']['id']);
//                 }

//                 // $jsons = [
//                 //     'orderid' => $order['order_id'],
//                 //     'fprice' => $order['price'],
//                 // ];
//                 // tpl_send($uniacid, 8, $order['openid'], $source, $formId, $jsons);

// //                $flag = 9;
// //                $this->sendTplMessage($flag, $order['openid'], $formId, 'duo_th', array("orderid"=>$order['order_id'], "fmsg"=>$fmsg, "fprice"=>$order['price'], "refund_type"=>"退回到余额"));

//             }

//             return json_encode(array("flag" => 0, "message" => "退款成功！"));
//         }
//     }


    // // 省市区返回
    // public function dopageprovincejson(){
    //  include ROOT_PATH ."public/json/province_xcx.json";
    // }
    // public function dopagecityjson(){
    //  include ROOT_PATH ."public/json/city_xcx.json";
    // }
    // public function dopageareajson(){
    //  include ROOT_PATH . "public/json/area_xcx.json";
    // }
    public function doPageptprolist()
    {
        $uniacid = input("uniacid");
        $cateid = input("cate");
        $guiz = Db::name('wd_xcx_pt_gz')->where('uniacid', $uniacid)->find();
        if (!$guiz) {
            $guiz['types'] = 1;
        }
        $cate = Db::name('wd_xcx_pt_cate')->where('uniacid', $uniacid)->order("num desc")->select();
        if (!$cateid) {
            $lists = Db::name('wd_xcx_pt_pro')->where("show_pro", 0)->where('uniacid', $uniacid)->order("num desc")->select();
        } else {
            $lists = Db::name('wd_xcx_pt_pro')->where("show_pro", 0)->where('uniacid', $uniacid)->where('cid', $cateid)->order("num desc")->select();
        }
        foreach ($lists as $key => &$res) {
            // 获得所有参与的人，并去除相同的人
            $share = Db::name('wd_xcx_pt_share')->where('uniacid', $uniacid)->where('pid', $res['id'])->where('flag', "lt", 3)->select();
            $res['team'] = $this->tuanzsf($uniacid, $share);
            $tzcount = 0;
            $res['thumb'] = remote($uniacid, $res['thumb'], 1);
            foreach ($share as $key1 => &$reb) {
                $tzcount += $reb['join_count'];
            }
            $res['tzcount'] = $tzcount;
        }
        $data['lists'] = $lists;
        $data['guiz'] = $guiz;
        $data['cate'] = $cate;
        $result['data'] = $data;
        return json_encode($result);
    }

    // 获取所有的团长信息
    function tuanzsf($uniacid, $share)
    {
        $arr = array();
        $count = 0;
        foreach ($share as $key => &$res) {
            $jieguo = Db::name('wd_xcx_pt_order')->where('uniacid', $uniacid)->where('pt_order', $res['shareid'])->select();
            foreach ($jieguo as $key1 => &$reb) {
                // $info = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $reb['suid'])->find();
                $info = $this->getnameandavatar($res['source'], $uniacid, $reb['suid']);
                if (in_array($info['avatar'], $arr)) {
                    continue;
                } else {
                    $count++;
                    if ($count > 7) {
                        continue;
                    } else {
                        array_push($arr, $info['avatar']);
                    }
                }
            }
        }
        return $arr;
    }

    // 拼团情况
    public function doPagepingtuan()
    {
        $uniacid = input("uniacid");
        $shareid = input("shareid");
        $openid = input("openid");
        // 我的拼团
        $share = Db::name('wd_xcx_pt_share')->where('shareid', $shareid)->where("uniacid", $uniacid)->find();
        // 拼团的商品
        $products = Db::name('wd_xcx_pt_pro')->where('uniacid', $uniacid)->where('id', $share['pid'])->find();
        if ($products['shareimg']) {
            $products['shareimg'] = remote($uniacid, $products['shareimg'], 1);
        }
        if ($products['thumb']) {
            $products['thumb'] = remote($uniacid, $products['thumb'], 1);
        }
        $products['imgtext'] = unserialize($products['imgtext']);
//        $share_num = pdo_fetchall("SELECT * FROM ".tablename('sudu8_page_pt_share')." WHERE pid = :pid and uniacid = :uniacid" , array(':pid' => $products['id'],':uniacid' => $uniacid))
        $share_num = Db::name("wd_xcx_pt_share")->where("pid", $products['id'])->where("uniacid", $uniacid)->select();
        $products['pt_num'] = 0;
        foreach ($share_num as $kk => $vv) {
            if ($vv['join_count'] >= $vv['pt_min']) {
                $products['pt_num']++;
            }
        }
        $data['hx'] = 0;
        // 参加拼团的人
        $lists = Db::name('wd_xcx_pt_order')->where('uniacid', $uniacid)->where('pt_order', $shareid)->where('flag', 'in', [1, 2, 4])->order('creattime asc')->select();
        foreach ($lists as $key => &$res) {
            $userinfo = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $res['suid'])->find();
            $info = $this->getnameandavatar($res['source'], $uniacid, $res['suid']);
            $res['infoimg'] = $info['avatar'];
            if ($res['openid'] = $openid && !empty($res['hxinfo'])) {
                $data['hx'] = 1;
                $hxinfo = unserialize($res['hxinfo']);
                if ($hxinfo[0] == 1) {
                    $data['hxinfo']['flag'] = 1;
                    $data['hxinfo']['store'] = "系统核销";
                } else if ($hxinfo[0] == '密码核销') {
                    $hxinfos['flag'] = 3;
                    $hxinfos['store'] = "核销密码核销";
                } else if ($hxinfo[0] == '核销员核销') {
                    $hxinfos['flag'] = 5;
                    $hxinfos['store'] = "核销员核销";
                } else if ($hxinfo[0] == '管理员核销') {
                    $hxinfos['flag'] = 4;
                    $hxinfos['store'] = "管理员核销";
                } else {
                    $data['hxinfo']['flag'] = 2;
                    $data['hxinfo']['store'] = Db::name("wd_xcx_store")->where("id", $hxinfo[1])->field("title")->find()['title'];
                    $data['hxinfo']['staff'] = Db::name("wd_xcx_staff")->where("id", $hxinfo[2])->field("realname")->find()['realname'];
                }
            }
        }
        // 获取成团规则
        $guiz = Db::name('wd_xcx_pt_gz')->where('uniacid', $uniacid)->find();
        // 订单结束时间
        if ($guiz['pt_time']) {
            $overtime = $share['creattime'] * 1 + ($guiz['pt_time'] * 3600);
        } else {
            $overtime = $share['creattime'] * 1 + 24 * 3600;
        }

        $data['share'] = $share;
        $data['products'] = $products;
        $data['lists'] = $lists;
        $data['overtime'] = $overtime;
        $data['labels'] = [];
        if ($products['explains']) {
            $data['labels'] = explode(",", $products['explains']);
        }
        $result['data'] = $data;
        return json_encode($result);
    }

    // 拼团商品详情
    public function doPagePtproductinfo()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $id = input("id");
        $userinfo = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where('id', $suid)->find();
        $source = input('source');
        // 处理过期
        $this->doovershare($uniacid);
        $products = Db::name('wd_xcx_pt_pro')->where('uniacid', $uniacid)->where('id', $id)->find();
        $videourl = $products['video'];
        if ($products['video'] != '' && strpos($products['video'], "http") !== false) {
            if (strpos($videourl, ".mp4") !== false || strpos($videourl, ".MP4") !== false) {
                $products['video'] = $videourl;
            } else {
                include 'videoInfo.php';
                $videoInfo = new videoInfo();
                if (preg_match("/^(http:\/\/|https:\/\/).*$/", $products['video'])) {
                    $videodata = $videoInfo->getVideoInfo($products['video']);
                    $products['video'] = $videodata['url'];
                } else {
                    $products['video'] = '';
                }
            }
        }
        if ($products['shareimg']) {
            $products['shareimg'] = remote($uniacid, $products['shareimg'], 1);
            if (strpos($products['shareimg'], 'https') === false) {
                $products['shareimg'] = "https" . substr($products['shareimg'], 4);
            }
        } else {
            $products['shareimg'] = remote($uniacid, $products['thumb'], 1);
            if (strpos($products['shareimg'], 'https') === false) {
                $products['shareimg'] = "https" . substr($products['shareimg'], 4);
            }
        }
        if ($products['thumb']) {
            $products['thumb'] = remote($uniacid, $products['thumb'], 1);
        }

        //会员购买设置
        $products['vip_config'] = 0;
        if (empty($userinfo['vipid'])) {

            if (!empty($products['vipconfig'])) {
                $vipconfig = unserialize($products['vipconfig']);

                if ($vipconfig['set1'] == 1) {
                    $products['vip_config'] = $vipconfig['set2'];
                } else {
                    $vip_config = Db::name('wd_xcx_vip_config')->where("uniacid", $uniacid)->find();
                    if (!empty($vip_config)) {
                        $products['vip_config'] = $vip_config['pt'];
                    }
                }
            } else {
                $vip_config = Db::name('wd_xcx_vip_config')->where("uniacid", $uniacid)->find();
                if (!empty($vip_config)) {
                    $products['vip_config'] = $vip_config['pt'];
                }
            }
        }


        $proarr = Db::name('wd_xcx_pt_pro_val')->where('pid', $id)->order('id desc')->select();
        // 处理库存量
        $kcl = 0;
        foreach ($proarr as $key7 => &$res) {
            $kcl += $res['kc'];
        }
        $products['kc'] = $kcl;
        $imgarr = unserialize($products['imgtext']);
        foreach ($imgarr as $key1 => &$resb) {
            $resb = remote($uniacid, $resb, 1);
        }
        $products['imgtext'] = $imgarr;
        $types = $proarr[0]['comment'];
        //构建规格组
        $typesarr = explode(",", $types);
        // 构建规格组json
        $typesjson = [];
        foreach ($typesarr as $key4 => &$rec) {
            $str = "type" . ($key4 + 1);
            $ziji = Db::name('wd_xcx_pt_pro_val')->where('pid', $id)->order('id desc')->group($str)->field($str)->select();
            $xarr = array();
            foreach ($ziji as $key => $res) {
                array_push($xarr, $res[$str]);
            }
            $cdata["val"] = $xarr;
            $cdata['ck'] = 0;
            $typesjson[$rec] = $cdata;
        }
        $adata['grouparr'] = $typesarr;
        $adata['grouparr_val'] = $typesjson;
        $products['explains'] = explode(",", $products['explains']);
        foreach ($products['explains'] as $k => &$v) {
            if ($v == "") {
                $products['explains'][$k] == "";
            }
        }
        $adata['products'] = $products;
        // 分销规则，暂时先预留着
        $adata['guiz'] = Db::name('wd_xcx_fx_gz')->where('uniacid', $uniacid)->find();
        if (!$adata['guiz']) {
            $adata['guiz']['one_bili'] = 0;
            $adata['guiz']['two_bili'] = 0;
            $adata['guiz']['three_bili'] = 0;
        }
        // 获取成团规则
        $guiz = Db::name('wd_xcx_pt_gz')->where('uniacid', $uniacid)->find();
        //处理该商品的开团情况
        $pingt = Db::name('wd_xcx_pt_share')->where('uniacid', $uniacid)->where('pid', $id)->where("flag", "in", [1, 2])->order('creattime desc')->select();
        // 真正拼团的人
        $pingtcount = 0;
        $dataarr = array();
        if ($pingt) {
            foreach ($pingt as $key2 => &$reb) {
                if ($guiz['pt_time']) {
                    $overtime = $reb['creattime'] * 1 + ($guiz['pt_time'] * 3600);
                } else {
                    $overtime = $reb['creattime'] * 1 + 24 * 3600;
                }
                if ($overtime > time()) {
                    $reb['userinfo'] = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $reb['suid'])->find();
                    $info = $this->getnameandavatar($reb['source'], $uniacid, $reb['suid']);
                    $reb['userinfo']['nickname'] = $info['nickname'];
                    $reb['userinfo']['avatar'] = $info['avatar'];
                    $min = $reb['pt_min'];
                    $max = $reb['pt_max'];
                    $pco = $reb['join_count'];
                    // 还差多少人成团
                    $chaj = $min - $pco;
                    if ($chaj < 0) {
                        $chaj = 0;
                    }
                    // 还可多少人参团
                    $shen = $max - $pco;
                    $reb['chaj'] = $chaj;
                    $reb['shen'] = $shen;
                    // 订单结束时间
                    if ($guiz['pt_time']) {
                        $overtime = $reb['creattime'] * 1 + ($guiz['pt_time'] * 3600);
                    } else {
                        $overtime = $reb['creattime'] * 1 + 24 * 3600;
                    }
                    array_push($dataarr, $overtime);
                    if ($shen > 0) {
                        $pingtcount += $pco;
                    }
                }
            }
        }
        $collect = Db::name('wd_xcx_collect')->alias("a")->join("wd_xcx_superuser b", "a.suid = b.id")->where('a.uniacid', $uniacid)->where('a.cid', $id)->where("b.id", $suid)->find();
        if ($collect) {
            $adata['collect'] = 1;
        } else {
            $adata['collect'] = 0;
        }
        $adata['pingtuan'] = $pingt;
        $adata['overtime'] = $dataarr;
        $adata['pingtcount'] = $pingtcount;
        $result['data'] = $adata;
        return json_encode($result);
    }

    //判断是否有未支付拼团订单
    public function doPageispt()
    {
        $uniacid = input("uniacid");
        $openid = input("openid");
        $id = input("id");
        $list = Db::name('wd_xcx_pt_order')->where("uniacid", $uniacid)->where("openid", $openid)->where("flag", 0)->select();
        if ($list) {
            foreach ($list as $k => $v) {
                $jsondata = unserialize($v['jsondata']);
                foreach ($jsondata as $key2 => &$reb) {
                    if (!isset($reb['baseinfo2'])) {
                        if ($id == $reb['baseinfo']) {
                            return json_encode(array('order_id' => $v['order_id']));
                            exit;
                        }
                    }
                    if (!is_array($reb['proinfo'])) {
                        if ($id == $reb['proinfo']) {
                            return json_encode(array('order_id' => $v['order_id']));
                            exit;
                        }
                    } else {
                        if ($id == $reb['proinfo']['pid']) {
                            return json_encode(array('order_id' => $v['order_id']));
                            exit;
                        }
                    }
                    if (isset($reb['baseinfo'])) {
                        if ($id == $reb['baseinfo']) {
                            return json_encode(array('order_id' => $v['order_id']));
                            exit;
                        }
                    }
                }
            }
        } else {
            return json_encode(array('order_id' => 0));
            exit;
        }
    }

    // 处理过期的订单
    function doovershare($uniacid)
    {
        $now = time();
        $guiz = Db::name('wd_xcx_pt_gz')->where('uniacid', $uniacid)->find();
        $allshare = Db::name('wd_xcx_pt_share')->where('uniacid', $uniacid)->where("flag", "in", [1, 2])->select();
        foreach ($allshare as $key => &$res) {
            $max = $res['pt_max'] * 1;
            $min = $res['pt_min'] * 1;
            $ct = $res['creattime'];
            if ($guiz['pt_time']) {
                $overtime = $ct * 1 + ($guiz['pt_time'] * 3600);
            } else {
                $overtime = $ct * 1 + 24 * 3600;
            }
            // 订单没过期
            if ($overtime >= $now) {
                // 拼团成功
                if ($res['join_count'] >= $min) {
                    $share_arr = array("flag"=>2);
                    //订阅消息start
                    if($res['source'] == 1 && $res['joiner']){
                        $joiner = unserialize($res['joiner']);
                        $lists = Db::name("wd_xcx_pt_order")->where("uniacid", $uniacid)->where("source", 1)->where("suid", 'in', $joiner)->where("pt_order", $res["shareid"])->where("jqr", 1)->select();
                        foreach ($lists as $reb1) {
                            $jsondata = unserialize($reb1['jsondata']);
                            $title = Db::name('wd_xcx_pt_pro')->where('id', $jsondata[0]['id'])->value('title');
                            $user_info = Db::name('wd_xcx_user')->where('suid', $reb1['suid'])->find();
                            $jsons = [
                                    'ftitle' => $title,
                                    'num' => $res['join_count'],
                                    'fprice' => $reb1['price'],
                                 ];
                            $jsons = serialize($jsons);
                            sendSubscribe($uniacid, 4, $user_info['openid'], $jsons);  //模板消息发送
                        }
                        $share_arr['joiner'] = '';
                        //订阅消息end
                    }
                    Db::name("wd_xcx_pt_share")->where("id",$res['id'])->update($share_arr);
                }
            }
            // 订单已过期
            if ($overtime < $now) {
                // 拼团失败
                if ($res['join_count'] < $min) {
                    // 自动成团
                    if ($guiz['is_pt'] == 2) {

                        //订阅消息start
                        $lists = Db::name("wd_xcx_pt_order")->where("uniacid", $uniacid)->where("source", 1)->where("pt_order", $res["shareid"])->where("jqr", 1)->select();
                        foreach ($lists as $reb1) {
                            $jsondata = unserialize($reb1['jsondata']);
                            $title = Db::name('wd_xcx_pt_pro')->where('id', $jsondata[0]['id'])->value('title');
                            $user_info = Db::name('wd_xcx_user')->where('suid', $reb1['suid'])->find();
                            $jsons = [
                                    'ftitle' => $title,
                                    'num' => $res['pt_min'],
                                    'fprice' => $reb1['price'],
                                 ];
                            $jsons = serialize($jsons);
                            sendSubscribe($uniacid, 4, $user_info['openid'], $jsons);  //模板消息发送
                        }
                        //订阅消息end

                        // 生成机器人并完成订单
                        Db::name("wd_xcx_pt_share")->where("id", $res["id"])->update(array("flag" => 2, "join_count" => $min));
                        $jsondata = Db::name('wd_xcx_pt_order')->where('pt_order', $res['shareid'])->field('jsondata')->find()['jsondata'];
                        // 生成机器人订单
                        $xhjc = $min - $res['join_count'];
                        $tmp = range(1, 30);
                        $arr = array_rand($tmp, $xhjc);
                        for ($i = 0; $i < $xhjc; $i++) {
                            // 获取机器人信息
                            $jqr = Db::name("wd_xcx_pt_robot")->where("id", $arr[$i]);
                            $jqrarr = array(
                                "uniacid" => $uniacid,
                                "suid" => $res['suid'],
                                "pt_order" => $res['shareid'],
                                'jsondata' => $jsondata,
                                "ck" => 2,
                                "jqr" => 2
                            );
                            Db::name("wd_xcx_pt_order")->insert($jqrarr);
                        }
                    } else {
                        // 结束订单并退还所有的钱到余额
                        Db::name("wd_xcx_pt_share")->where("id", $res["id"])->update(array("flag" => 3));
                        $lists = Db::name("wd_xcx_pt_order")->where("uniacid", $uniacid)->where("pt_order", $res["shareid"])->where("jqr", 1)->select();
                        foreach ($lists as $key1 => &$reb) {
                            Db::name("wd_xcx_pt_order")->where("id", $reb['id'])->update(array("flag" => 5));
                            $user = Db::name("wd_xcx_superuser")->where("id", $reb['suid'])->where("uniacid", $uniacid)->find();
                            $pdata = array(
                                "uniacid" => $uniacid,
                                "suid" => $reb['suid'],
                                "ptorder" => $reb['order_id'],
                                "money" => $reb['price'],
                                "creattime" => time(),
                                "flag" => 1
                            );
                            Db::name("wd_xcx_pt_tx")->insert($pdata);
                            // 返回钱
                            // $nowmoney = $user['money'];
                            // $newmoney = $nowmoney*1 + $reb['price']*1;
                            // 返回积分
                            $nowscore = $user['score'];
                            $newscore = $nowscore * 1 + $reb['jf'] * 1;
                            if ($reb['jf'] > 0) {
                                $xfscore = array(
                                    "uniacid" => $uniacid,
                                    "orderid" => $reb['id'],
                                    "suid" => $user["id"],
                                    "type" => "add",
                                    "score" => $reb['jf'] * 1,
                                    "message" => "拼团退还积分",
                                    "creattime" => time()
                                );
                                Db::name("wd_xcx_score")->insert($xfscore);
                            }
                            Db::name("wd_xcx_superuser")->where("uniacid", $uniacid)->where("id", $user["id"])->update(array("score" => $newscore));
                            // 返回优惠券
                            if ($reb['coupon'] != 0) {
                                // 先判断优惠券有没有过期了
                                $coupon = Db::name("wd_xcx_coupon_user")->where("id", $reb['coupon'])->where("uniacid", $uniacid)->find();
                                // 如果没有过期更改优惠券状态
                                if ($coupon['etime'] == 0) {
                                    Db::name("wd_xcx_coupon_user")->where("id", $reb['coupon'])->update(array("utime" => 0, "flag" => 0));
                                } else {
                                    if ($now <= $coupon['etime']) {
                                        Db::name("wd_xcx_coupon_user")->where("id", $reb['coupon'])->update(array("utime" => 0, "flag" => 0));
                                    }
                                }
                            }

                            $jsondata = unserialize($reb['jsondata']);

                            //处理库存
                            foreach ($jsondata as $rsi) {
                                // 处理销售量
                                $pvid = $rsi['pvid'];
                                $num = $rsi['num'];
                                $pro = Db::name("wd_xcx_pt_pro")->where("id", $pvid)->find();
                                $pronum = $pro['xsl'];
                                $newpronum = $pronum - $num;
                                Db::name("wd_xcx_pt_pro")->where("id", $pvid)->update(array("xsl" => $newpronum));
                                // 减去对应的库存
                                $spid = $rsi['proinfo'];
                                $pro_val = Db::name("wd_xcx_pt_pro_val")->where("id", $spid)->find();
                                $spnum = $pro_val['kc'];
                                $kc = $spnum + $num;
                                Db::name("wd_xcx_pt_pro_val")->where("id", $spid)->update(array("kc" => $kc));
                            }


                            if($reb['source'] == 1){
                                $title = Db::name('wd_xcx_pt_pro')->where('id', $jsondata[0]['id'])->value('title');
                                $user_info = Db::name('wd_xcx_user')->where('suid', $reb['suid'])->find();
                                $jsons = [
                                        'ftitle' => $title,
                                        'num' => $res['join_count'],
                                        'msg' => '时间超时',
                                     ];
                                $jsons = serialize($jsons);
                                sendSubscribe($uniacid, 5, $user_info['openid'], $jsons);  //模板消息发送
                            }
                        }
                    }
                } else {
                    Db::name("wd_xcx_pt_share")->where("id", $res["id"])->update(array("flag" => 4));
                }
            }
        }
    }

    //拼团数据自己规格
    public function doPageptpinfo()
    {
        $uniacid = input("uniacid");
        $str = input("str");
        $types = input("types");
        $id = input("id");
        $arr = explode("/", $str);
        $where = "";
        foreach ($arr as $key => &$res) {
            $vv = $key + 1;
            $where .= " and type" . $vv . " = " . "'" . $res . "'";
        }
        $prefix = config('database.prefix');
        $proinfo = Db::query("SELECT * FROM {$prefix}wd_xcx_pt_pro_val WHERE pid = " . $id . $where . " limit 1");
        $baseinfo = Db::name('wd_xcx_pt_pro')->where('id', $id)->find();
        if ($baseinfo['thumb']) {
            $baseinfo['thumb'] = remote($uniacid, $baseinfo['thumb'], 1);
        }
        $adata['proinfo'] = $proinfo[0];
        if ($adata['proinfo']['thumb']) {
            $adata['proinfo']['thumb'] = remote($uniacid, $adata['proinfo']['thumb'], 1);
        }
        $adata['baseinfo'] = $baseinfo;
        $result['data'] = $adata;
        return json_encode($result);
    }

    // 判断是不是自己开的团和参与过的团
    public function doPagepdmytuanorcy()
    {
        $uniacid = input("uniacid");
        $shareid = input("shareid");
        $suid = input("suid");
        $type = 0;
        // 我的拼团
        $share = Db::name('wd_xcx_pt_share')->where('shareid', $shareid)->where('suid', $suid)->find();
        if ($share) {
            $type = 1;
        }
        $cyshare = Db::name('wd_xcx_pt_order')->where('pt_order', $shareid)->where('suid', $suid)->where('ck', 2)->where('flag', "in", [1, 4])->find();
        if ($cyshare) {
            $type = 1;
        }
        $result['data'] = $type;
        return json_encode($result);
    }

    //拼团订单
    public function dopageptorderlist()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $is_tuikuan = Db::name('wd_xcx_pt_gz')->where('uniacid', $uniacid)->value('is_tuikuan');
        if (!$is_tuikuan) {
            $is_tuikuan = 2; //无设置规则则不可退款
        }
        $flag = input('flag');
        if (!$flag || $flag == 10) {
            $orders = Db::name('wd_xcx_pt_order')->where('uniacid', $uniacid)->where('jqr', 1)->where('suid', $suid)->order('creattime desc')->select();
        } else {
            if ($flag == 1) { //拼团中
                $orders = Db::name('wd_xcx_pt_order')->alias('a')->join('wd_xcx_pt_share b', 'a.pt_order = b.shareid')->where('a.uniacid', $uniacid)->where('a.jqr', 1)->where('a.suid', $suid)->where('b.flag', 1)->field('a.*')->order('a.creattime desc')->select();
            } elseif ($flag == 2) {//已成团
                $orders = Db::name('wd_xcx_pt_order')->alias('a')->join('wd_xcx_pt_share b', 'a.pt_order = b.shareid')->where('a.uniacid', $uniacid)->where('a.jqr', 1)->where('a.suid', $suid)->where('b.flag', 2)->field('a.*')->order('a.creattime desc')->select();
            } elseif ($flag == 3) {//已失败
                $orders = Db::name('wd_xcx_pt_order')->alias('a')->join('wd_xcx_pt_share b', 'a.pt_order = b.shareid')->where('a.uniacid', $uniacid)->where('a.jqr', 1)->where('a.suid', $suid)->where('b.flag', 3)->field('a.*')->order('a.creattime desc')->select();
            } elseif ($flag == 4) {//已完成
                $orders = Db::name('wd_xcx_pt_order')->where('uniacid', $uniacid)->where('jqr', 1)->where('suid', $suid)->where('flag', 2)->order('creattime desc')->select();
            } elseif ($flag == 5) {//已取消
                $orders = Db::name('wd_xcx_pt_order')->alias('a')->join('wd_xcx_pt_share b', 'a.pt_order = b.shareid')->where('a.uniacid', $uniacid)->where('a.jqr', 1)->where('a.suid', $suid)->where('a.flag', 'neq', 2)->where('b.flag', 4)->field('a.*')->order('a.creattime desc')->select();
            } elseif ($flag == 6) {//待付款
                $orders = Db::name('wd_xcx_pt_order')->where('uniacid', $uniacid)->where('jqr', 1)->where('suid', $suid)->where('flag', 0)->order('creattime desc')->select();
            } elseif ($flag == 7) {//单独购买
                $orders = Db::name('wd_xcx_pt_order')->where('uniacid', $uniacid)->where('jqr', 1)->where('suid', $suid)->where('types', 2)->order('creattime desc')->select();
            }
        }


        foreach ($orders as $key => &$res) {
            $pt_open = Db::name("wd_xcx_pt_share")->where("shareid", $res["pt_order"])->where("uniacid", $uniacid)->find();
            $res['join_count'] = $pt_open['join_count'];
            $res['pt_min'] = $pt_open['pt_min'];
            $res['pt_max'] = $pt_open['pt_max'];
            $res["ptflag"] = $pt_open["flag"];
            $res['jsondata'] = unserialize($res['jsondata']);
            $res['creattime'] = date("Y-m-d H:i:s", $res['creattime']);
            $res['hxtime'] = $res['hxtime'] == 0 ? "未核销" : date("Y-m-d H:i:s", $res['hxtime']);
            $res['userinfo'] = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            $res['counts'] = count($res['jsondata']);
            $coupon = Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where('id', $res['coupon'])->find();
            $couponinfo = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where('id', $coupon['cid'])->find();
            $res['couponinfo'] = $couponinfo;
            $pt_tx = Db::name("wd_xcx_pt_tx")->where("ptorder", $res['order_id'])->where("uniacid", $uniacid)->find();
            if ($pt_tx) {
                $res['pt_tx'] = $pt_tx;
                $res['has_tx'] = 1;
            } else {
                $a = [
                    'flag' => 0,
                ];
                $res['pt_tx'] = $a;
                $res['has_tx'] = 0;
            }
            $allprice = 0;
            foreach ($res['jsondata'] as $key2 => &$reb) {
                $allprice += ($reb['num'] * 1) * ($reb['proinfo']['price']);
                if (!isset($reb['baseinfo2'])) {
                    $reb['baseinfo2'] = Db::name('wd_xcx_pt_pro')->where("id", $reb['baseinfo'])->find();
                    if ($reb['baseinfo2']) {
                        if ($reb['baseinfo2']['shareimg']) {
                            $reb['baseinfo2']['shareimg'] = remote($uniacid, $reb['baseinfo2']['shareimg'], 1);
                        }
                        if ($reb['baseinfo2']['thumb']) {
                            $reb['baseinfo2']['thumb'] = remote($uniacid, $reb['baseinfo2']['thumb'], 1);
                        }
                    }
                }
                if (!is_array($reb['proinfo'])) {
                    $reb['proinfo'] = Db::name('wd_xcx_pt_pro_val')->where("id", $reb['proinfo'])->find();
                    if ($reb['proinfo']) {
                        $reb['proinfo']['ggz'] = $reb['proinfo']['comment'] . ":" . $reb['proinfo']['type1'];
                    }
                } else {
                    $res['pid'] = $reb['proinfo']['pid'];
                }
                if (isset($reb['baseinfo'])) {
                    $res['pid'] = $reb['baseinfo'];
                }
            }
            $res['allprice'] = $allprice;
            // 积分转钱
            //积分转换成金钱
            $jf_gz = Db::name('wd_xcx_rechargeconf')->where('uniacid', $uniacid)->find();
            if (!$jf_gz) {
                $gzscore = 10000;
                $gzmoney = 1;
            } else {
                $gzscore = $jf_gz['score'];
                $gzmoney = $jf_gz['money'];
            }
            $res['jfmoney'] = $res['jf'] * $gzmoney / $gzscore;
            // 转换地址
            if ($res['address'] != 0) {
                $res['address_get'] = Db::name('wd_xcx_duo_products_address')->where('openid', $res['openid'])->where('id', $res['address'])->find();
            } else {
                $res['address_get'] = $res['m_address'];
            }
        }
        $result['data']['orders'] = $orders;
        $result['data']['is_tuikuan'] = $is_tuikuan;
        $result['data']['mymoney'] = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->value('money');
        return json_encode($result);
    }

    // 支付过后更新对应状态
    public function doPageptorderchange()
    {
        $uniacid = input('uniacid');
        $order_id = input('order_id');
        $openid = input('openid');
        $source = input('source');
        $true_price = input('true_price');
        $dkscore = input('dkscore');
        $couponid = input('couponid');
        $shareid = input('shareid');
        $yue_price = $true_price;
        $wx_price = input('wx_price');
        $suid = input('suid');
        $userinfo = Db::name("wd_xcx_superuser")->where("id", $suid)->where("uniacid", $uniacid)->find();
        $order = Db::name("wd_xcx_pt_order")->where("order_id", $order_id)->find();
        $mymongy = $userinfo['money'];
        $newmymoney = $mymongy - $yue_price;
        $myscore = $userinfo['score'];
        $newmyscore = $myscore - $order['jf'];
        $data = array(
            "money" => $newmymoney,
            "score" => $newmyscore
        );
        Db::name('wd_xcx_superuser')->where('id', $suid)->where("uniacid", $uniacid)->update($data);
        // 更改订单号
        $datas = array(
            "flag" => 1,
            "yue_price" => $yue_price,
            // "wx_price" => $wx_price,
            // "coupon"=>$couponid
        );
        Db::name("wd_xcx_pt_order")->where("order_id", $order_id)->update($datas);

        //删除对应的优惠券
        if (!$couponid) {
            Db::name("wd_xcx_coupon_user")->where("id", $order['coupon'])->update(array("flag" => 1, "utime" => time()));
        } else {
            Db::name("wd_xcx_coupon_user")->where("id", $couponid)->update(array("flag" => 1, "utime" => time()));
        }

        $jsdatass = unserialize($order['jsondata']);
        //处理库存
        foreach ($jsdatass as $rsi) {
            // 处理销售量
            $pvid = $rsi['pvid'];
            $num = $rsi['num'];
            $pro = Db::name("wd_xcx_pt_pro")->where("id", $pvid)->find();
            $pronum = $pro['xsl'];
            $newpronum = $pronum + $num;
            // Db::name("wd_xcx_pt_pro")->where("id", $pvid)->update(array("xsl" => $newpronum));
            // 减去对应的库存
            $spid = $rsi['proinfo'];
            $pro_val = Db::name("wd_xcx_pt_pro_val")->where("id", $spid)->find();
            $spnum = $pro_val['kc'];
            $kc = $spnum - $num;
            // Db::name("wd_xcx_pt_pro_val")->where("id", $spid)->update(array("kc" => $kc));
        }


        //生成支付流水
        // 1.支付金钱流水
        $xfmoney = array(
            "uniacid" => $uniacid,
            "orderid" => $order_id,
            "suid" => $suid,
            "type" => "del",
            "score" => $yue_price,
            "message" => "消费",
            "creattime" => time()
        );
        if ($yue_price > 0) {
            Db::name('wd_xcx_money')->insert($xfmoney);
        }
        // 2.支付积分流水

        if ($dkscore > 0) {
            $xfscore = array(
                "uniacid" => $uniacid,
                "orderid" => $order_id,
                "suid" => $suid,
                "type" => "del",
                "score" => $dkscore,
                "message" => "消费",
                "creattime" => time()
            );
            Db::name("wd_xcx_score")->insert($xfscore);
        }
        $jsondata = unserialize($order['jsondata']);
        $pid = $jsondata[0]['id'];
        // 判断是不是直接购买并且是开团还是参加团购
        // 参加团购的时候更新参与人数
        if ($order['ck'] == 2) {
            $share = Db::name("wd_xcx_pt_share")->where("shareid", $shareid)->find();
            $counts = $share['join_count'] + 1;
            $share_arr = ["join_count" => $counts];

            if($source == 1){
                if($share['joiner']){
                    $joiner = unserialize($share['joiner']);
                    array_push($joiner, $suid);
                    $share_arr['joiner'] = serialize($joiner);
                }else{
                    $joiner = [];
                    array_push($joiner, $suid);
                    $share_arr['joiner'] = serialize($joiner);
                }
            }
            Db::name("wd_xcx_pt_share")->where("shareid", $shareid)->update($share_arr);
            $ptorderid = $shareid;
        }
        // 开团的时候
        $min_max = Db::name("wd_xcx_pt_pro")->where("id", $pid)->where("uniacid", $uniacid)->find();
        $pt_min = $min_max['pt_min'];
        $pt_max = $min_max['pt_max'];
        if ($order['ck'] == 1) {  //开团
            if ($order['types'] == 1) {
                //生成开团信息
                $now = time();
                $ptorderid = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
                $data = array(
                    "uniacid" => $uniacid,
                    "shareid" => $ptorderid,
                    "pid" => $pid,
                    "suid" => $suid,
                    "creattime" => time(),
                    "pt_min" => $pt_min,
                    "pt_max" => $pt_max,
                    "flag" => 1,
                    'source' => $order['source']
                );
                if($source == 1){
                    $joiner = [];
                    array_push($joiner, $suid);
                    $data['joiner'] = serialize($joiner);
                }
                Db::name("wd_xcx_pt_share")->insert($data);
                // 更新订单跟拼团订单绑定
                $pdata = array(
                    "pt_order" => $ptorderid
                );
                Db::name("wd_xcx_pt_order")->where("order_id", $order_id)->update($pdata);
            } else {
                $ptorderid = 0;
            }
        }

        //分销
        $this->payoverFxs($uniacid, $order_id, $suid, 'pt');

        //模板消息
        if ($source != 3) {
            $formId = input('formid');
            if ($order['nav'] == 1) {
                $fps = "快递";
            } else {
                $fps = "到店自提";
            }
            $fpro = $pro['title'] . " " . $pro_val['type1'] . " " . $pro_val['type2'] . " " . $pro_val['type3'];
            if ($order['types'] == 1) {  //1拼团  2单买
                $fprice = $pro_val['price'] . "元";  //拼团价
                $fpy = $pro_val['dprice'] . "元";    //原价
                $fmsg = $pro['pt_min'] . "人";
            } else {
                $fprice = $pro_val['dprice'] . "元";  //拼团价
                $fpy = $pro_val['dprice'] . "元";  //原价
                $fmsg = "原价单独购买";
            }
            $fnum = $num;
            $fpriceall = $true_price . "元";

            $jsons = [
                'order_id' => $order_id,
                'fps' => $fps,
                'fpro' => $fpro,
                'fprice' => $fprice,
                'fpy' => $fpy,
                'fnum' => $fnum,
                'fpriceall' => $fpriceall,
                'fmsg' => $fmsg,
            ];
            $jsons = serialize($jsons);
            tpl_send($uniacid, 2, $openid, $source, $formId, $jsons);
        }

        //发送订单短信给商家
        $this->sendSms($uniacid, $yue_price);
        
        $result['data'] = $ptorderid;
        return json_encode($result);
    }

    //创建订单
    public function dopageptsetorder()
    {
        $uniacid = input("uniacid");
        $openid = input("openid");
        $suid = input('suid');
        $couponid = input("couponid");
        $price = input("price");
        $dkscore = input("dkscore");
        $address = input("address");
        $mjly = input("mjly");
        $nav = input("nav");
        $gwc = input("gwc");
        $shareid = input("shareid");
        $pvid = input('pvid');
        $jsdata = html_entity_decode(input('jsdata'));
        $jsdatass = json_decode($jsdata, true);
        $pro = Db::name('wd_xcx_pt_pro')->where("id", $jsdatass[0]["baseinfo"])->where("uniacid", $uniacid)->find();
        if ($pro["show_pro"] == 1) {
            $data = 6;
            $result = $data;
            return json_encode($data);
            exit();
        }
        // 有拼团id
        if ($shareid != 0) {
            $ptorder = $shareid;
            $ptordershare = Db::name('wd_xcx_pt_share')->where("shareid", $shareid)->find();
            $ptmax = Db::name("wd_xcx_pt_order")->where("pt_order", $shareid)->where("flag", "in", [1, 4])->select();
            $ptmaxed = count($ptmax);
            if ($ptordershare['suid'] == $suid) {
                $data = 2;
                $result = $data;
                return json_encode($result);
                exit();
            }
            foreach ($ptmax as $key => $value) {
                if ($suid == $value['suid']) {
                    $data = 3;
                    $result = $data;
                    return json_encode($data);
                    exit();
                }
            }
            if ($ptmaxed >= $ptordershare['pt_max']) {
                $data = 4;
                $result = $data;
                return json_encode($result);
                exit();
            }
            $ck = 2;
        } else {
            if ($gwc == 1) { // 1拼团 0直接购买
                $order_query = Db::name('wd_xcx_pt_order')->where("suid", $suid)->where("flag", 1)->where("ck", 1)->where("uniacid", $uniacid)->select();
                foreach ($order_query as $kk => $vv) {
                    $share_order = Db::name("wd_xcx_pt_share")->where("shareid", $vv['pt_order'])->where("uniacid", $uniacid)->find();
                    if ($share_order['flag'] == 1 && $share_order['join_count'] < $share_order['pt_min']) {
                        $or_json = unserialize($vv['jsondata']);
                        foreach ($or_json as $k => $v) {
                            if ($v['pvid'] == $pvid) {
                                $data = 5;
                                $result = $data;
                                return json_encode($result);
                                exit();
                            }
                        }
                    }
                }
            }
            $ptorder = 0;
            $ck = 1;
        }
        if ($gwc == 0) {
            $types = 2;
        } else {
            $types = 1;
        }
        $now = time();
        $order_id = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
        $m_address = [];
        $addressinfo = Db::name("wd_xcx_duo_products_address")->where("id", $address)->find();
        if (!empty($addressinfo)) {
            $m_address['address'] = $addressinfo['address'] . ' ' . $addressinfo['more_address'];
            $m_address['name'] = $addressinfo['name'];
            $m_address['mobile'] = $addressinfo['mobile'];
        }

        

        $store_info = '';
        $self_taking_info = '';
        if ($nav == 2) {
            $self_taking_shop_id = input('shop_id');
            $self_taking_contact = input('default_concat');
            if($self_taking_shop_id > 0){
                $self_taking_shop_info = Db::name('wd_xcx_store') ->where('id', $self_taking_shop_id) ->find();
            }else{
                $baseinfo = Db::name('wd_xcx_base')->where('uniacid', $uniacid)->field('name, tel, address')->find();
                if($baseinfo){
                    $self_taking_shop_info = ['id' => 0, 'title' => $baseinfo['name'], 'tel' => $baseinfo['tel'], 'province' => '', 'city' => '', 'country' => $baseinfo['address'], 'times' => ''];
                }else{
                    $self_taking_shop_info = '';
                }
            }
            $self_taking_info = [
                'self_taking_shop_id' => $self_taking_shop_id,
                'self_taking_contact' => $self_taking_contact,
                'self_taking_shop_info' => serialize($self_taking_shop_info),
                'self_taking_time' => input('self_taking_time'),
            ];
            $self_taking_info = serialize($self_taking_info);

            // $store_name = input('store_name');
            // $store_tel = input('store_tel');
            // $store_address = input('store_address');
            // $store_hours = input('store_hours');
            // $store_info = [
            //     'store_name' => $store_name,
            //     'store_tel' => $store_tel,
            //     'store_address' => $store_address,
            //     'store_hours' => $store_hours,
            // ];
        }


        $data = array(
            "uniacid" => $uniacid,
            "suid" => $suid,
            "openid" => $openid,
            "order_id" => $order_id,
            "jsondata" => serialize($jsdatass),
            "coupon" => $couponid,
            "creattime" => time(),
            "price" => $price,
            "flag" => 0,
            "jf" => $dkscore,
            "address" => $address,
            "m_address" => count($m_address) > 0 ? serialize($m_address) : $m_address,
            "liuyan" => $mjly,
            "nav" => $nav,
            "types" => $types,
            "pt_order" => $ptorder,
            "ck" => $ck,
            'source' => input('source'),
            'tuanzyh' => input('youhl'),
            'yunfei' => input('yunfei'),
            'form_id' => input('formId') ? input('formId') : "",
            'formid' => intval(input('fid')),
            "store_info" => $store_info ? serialize($store_info) : '',
            "self_taking_info" => $self_taking_info
        );
        Db::name('wd_xcx_pt_order')->insert($data);

        //处理库存
        foreach ($jsdatass as $rsi) {
            // 处理销售量
            $pvid = $rsi['pvid'];
            $num = $rsi['num'];
            $pro = Db::name("wd_xcx_pt_pro")->where("id", $pvid)->find();
            $pronum = $pro['xsl'];
            $newpronum = $pronum + $num;
            Db::name("wd_xcx_pt_pro")->where("id", $pvid)->update(array("xsl" => $newpronum));
            // 减去对应的库存
            $spid = $rsi['proinfo'];
            $pro_val = Db::name("wd_xcx_pt_pro_val")->where("id", $spid)->find();
            $spnum = $pro_val['kc'];
            $kc = $spnum - $num;
            Db::name("wd_xcx_pt_pro_val")->where("id", $spid)->update(array("kc" => $kc));
        }

        $result['order_id'] = $order_id;
        return json_encode($result);
    }

    // 获取对应独占预约的信息
    public function dopageDuzhan()
    {
        $uniacid = input("uniacid");
        $id = input("id");
        $types = input("types");
        $pagedatekey = input("pagedatekey");
        $datys = input("days");
        $strtime = strtotime($datys);
        $arrs = Db::name('wd_xcx_form_dd')->where('uniacid', $uniacid)->where('cid', $id)->where('types', $types)->where('datys', $strtime)->where('pagedatekey', $pagedatekey)->select();
        $arrdata = array();
        foreach ($arrs as $key => &$res) {
            array_push($arrdata, $res['arrkey']);
        }
        $result['data'] = $arrdata;
        return json_encode($result);
    }
    //更新会员信息
    // public function dopageupdatehuiyuan()
    // {
    //     $uniacid = input("uniacid");
    //     $openid = input("openid");
    //     $data = array(
    //         "realname" => input('myname'),
    //         "mobile" => input('mymobile'),
    //         "resideprovince" => input('provinceName'),
    //         "residecity" => input('cityName'),
    //         "residedist" => input('countyName'),
    //         "residecommunity" => input('detailInfo'),
    //         "birth" => input('birthday')
    //     );
    //     $res = Db::name('wd_xcx_user')->where("uniacid", $uniacid)->where("openid", $openid)->update($data);
    // }
    // 更新手机号
    // public function dopagemobilesetuser()
    // {
    //     $uniacid = input("uniacid");
    //     $openid = input("openid");
    //     $mobile = input("mobile");
    //     $data = array(
    //         "mobile" => $mobile
    //     );
    //     $res = Db::name('wd_xcx_user')->where("uniacid", $uniacid)->where("openid", $openid)->update($data);
    // }
    // 获取优惠券开启设置
    public function doPagecouponset()
    {
        $uniacid = input("uniacid");
        $arrdata = Db::name('wd_xcx_coupon_set')->where("uniacid", $uniacid)->find();
        $res['data'] = $arrdata;
        return json_encode($res);
    }

    public function doPagejiemi()
    {
        $uniacid = input("uniacid");
        $app = Db::name('wd_xcx_applet')->where("id", $uniacid)->find();
        $appid = $app['appID'];
        $appsecret = $app['appSecret'];
        $code = input('code');
        $url = "https://api.weixin.qq.com/sns/jscode2session?appid=" . $appid . "&secret=" . $appsecret . "&js_code=" . $code . "&grant_type=authorization_code";
        $weixin = file_get_contents($url);
        $jsondecode = json_decode($weixin); //对JSON格式的字符串进行编码
        $array = get_object_vars($jsondecode);//转换成数组
        $sessionKey = $array['session_key'];
        $encryptedData = input('encryptedData');
        $iv = input('iv');
        include "wxBizDataCrypt.php";
        $pc = new WXBizDataCrypt($appid, $sessionKey);
        $errCode = $pc->decryptData($encryptedData, $iv, $data);
        $arrdata = json_decode($data, TRUE);
        $tel = $arrdata['phoneNumber'];
        $result['data'] = $tel;
        return json_encode($result);
    }

    public function doPageBaseMin()
    {
        $uniacid = input("uniacid");
        
        $suid = intval(input('suid'));
        $baseInfo = Db::name('wd_xcx_base')->where("uniacid", $uniacid)->field("recharge,ios,name,share_open,base_tcolor,base_color,base_color2,base_color_t,tel,longitude,latitude,copy_do,copyright,copyimg,tel_b,uniacid,tabbar_bg,tabbar_tc,tabbar,color_bar,tabbar_t,tabnum,config,tabbar_tca,color_bar,address,tabbar_new,tabnum_new,tabbar_bg1,tabbar_bg2,tabbar_bg3, alish, desc, banner, shortmsg_type")->find();

        $shortmsg_type = $baseInfo['shortmsg_type'];//1手机授权 2手机验证码
        if($shortmsg_type == 1){
            $baseInfo['sms'] = 1;
        }else{
            $baseInfo['sms'] = 2;
        }


        $baseInfo['base_color_t'] = $baseInfo['base_color_t'] ? $baseInfo['base_color_t'] : "#ffcf3d";
        $config = unserialize($baseInfo['config']);
        $baseInfo['banner'] = remote($uniacid, $baseInfo['banner'], 1);
        if ($baseInfo['copyimg']) {
            $baseInfo['copyimg'] = remote($uniacid, $baseInfo['copyimg'], 1);
        }
        $baseInfo['h5_suid'] = 2;
        if ($suid > 0) {
            $is = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            if ($is) {
                $baseInfo['h5_suid'] = 1;
            }
        }
        if (isset($config['commA'])) {
            $baseInfo['commA'] = $config['commA'];
        } else {
            $baseInfo['commA'] = 0;
        }
        if (isset($config['commAs'])) {
            $baseInfo['commAs'] = $config['commAs'];
        } else {
            $baseInfo['commAs'] = 0;
        }
        if (isset($config['commP'])) {
            $baseInfo['commP'] = $config['commP'];
        } else {
            $baseInfo['commP'] = 0;
        }
        if (isset($config['commPs'])) {
            $baseInfo['commPs'] = $config['commPs'];
        } else {
            $baseInfo['commPs'] = 0;
        }
        if (isset($config['serverBtn'])) {
            $baseInfo['serverBtn'] = $config['serverBtn'];
        } else {
            $baseInfo['serverBtn'] = 1;
        }
        $vs1 = input('vs1');
        if ($vs1) {
            $baseInfo['tabbar'] = unserialize($baseInfo['tabbar_new']);
            $baseInfo['tabnum'] = $baseInfo['tabnum_new'];
            for ($i = 0; $i < 5; $i++) {
                if (isset($baseInfo['tabbar'][$i])) {
                    $baseInfo['tabbar'][$i] = unserialize($baseInfo['tabbar'][$i]);
                    if ($baseInfo['tabbar'][$i]) {
                        if ($baseInfo['tabbar'][$i]['tabbar'] == 1) {
                            if (!empty($baseInfo['tabbar'][$i]['tabimginput_1'])) {
                                $baseInfo['tabbar'][$i]['tabimginput_1'] = remote($uniacid, $baseInfo['tabbar'][$i]['tabimginput_1'], 1);
                            }
                            if (!empty($baseInfo['tabbar'][$i]['tabimginput_2'])) {
                                $baseInfo['tabbar'][$i]['tabimginput_2'] = remote($uniacid, $baseInfo['tabbar'][$i]['tabimginput_2'], 1);
                            }
                        }
                        if ($baseInfo['tabbar'][$i]['tabbar_linktype'] == "tel") {
                            $baseInfo['tabbar'][$i]['tabbar_type'] = "tel";
                        } elseif ($baseInfo['tabbar'][$i]['tabbar_linktype'] == "map") {
                            $baseInfo['tabbar'][$i]['tabbar_type'] = "map";
                        } elseif ($baseInfo['tabbar'][$i]['tabbar_linktype'] == "web") {
                            $baseInfo['tabbar'][$i]['tabbar_type'] = "web";
                        } elseif ($baseInfo['tabbar'][$i]['tabbar_linktype'] == "server") {
                            $baseInfo['tabbar'][$i]['tabbar_type'] = "server";
                        } else {
                            $baseInfo['tabbar'][$i]['tabbar_type'] = "Article";
                            $baseInfo['tabbar'][$i]['tabbar_url'] = htmlspecialchars_decode($baseInfo['tabbar'][$i]['tabbar_url']);
                        }
                    }
                } else {
                    $baseInfo['tabbar'][$i] = '';
                }
            }
        } else {
            $baseInfo['tabbar'] = unserialize($baseInfo['tabbar']);
            for ($i = 0; $i < 5; $i++) {
                if (isset($baseInfo['tabbar'][$i])) {
                    $baseInfo['tabbar'][$i] = unserialize($baseInfo['tabbar'][$i]);
                    if (is_numeric($baseInfo['tabbar'][$i]['tabbar_l'])) {
                        $cate_type = Db::name('wd_xcx_cate')->where("uniacid", $uniacid)->where("id", $baseInfo['tabbar'][$i]['tabbar_l'])->field("id,type,list_type")->find();
                        if ($cate_type['type'] == "page") {
                            $baseInfo['tabbar'][$i]['type'] = 'page';
                        }
                        if ($cate_type['list_type'] == 0 && $cate_type['type'] != "page") {
                            $baseInfo['tabbar'][$i]['type'] = 'listCate';
                        } elseif ($cate_type['list_type'] == 1 && $cate_type['type'] != "page") {
                            $baseInfo['tabbar'][$i]['type'] = 'list' . substr($cate_type['type'], 4, strlen($cate_type['type']));
                        }
                    }
                    if ($baseInfo['tabbar'][$i]['tabbar_l'] == "webpage") {
                        $baseInfo['tabbar'][$i]['tabbar_url'] = urlencode($baseInfo['tabbar'][$i]['tabbar_url']);
                    }
                } else {
                    $baseInfo['tabbar'][$i] = '';
                }
            }
        }
        $res['data'] = $baseInfo;
        return json_encode($res);
    }

    //分销中心推广二维码
    public function dopagefxshareewm()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $source = input('source');
        $pageUrl = input('pageUrl');
        $app_name = Db::name('wd_xcx_applet')->where('id', $uniacid)->field('name')->find()['name'];
        if (!$app_name) {
            $app_name = '万能门店小程序';
        }
        $guiz = Db::name('wd_xcx_fx_gz')->where('uniacid', $uniacid)->find();
        $goods_img = remote($uniacid, $guiz['sq_thumb'], 1);

        if ($source == 1) {
            $share_ewm = $this->shareewm_wx($uniacid, $suid, $pageUrl, 1);
            if (!$share_ewm) {
                $result['data'] = ['error' => 2, 'msg' => '获取二维码失败！'];
                return json_encode($result);
            }
        } elseif ($source == 2) {
            $share_ewm = $this->shareewm_ali($uniacid, $suid, $pageUrl, 1);
            if (!$share_ewm) {
                $result['data'] = ['error' => 2, 'msg' => '获取二维码失败！'];
                return json_encode($result);
            }
        } elseif ($source == 3) {
            $share_ewm = $this->shareewm_h5($uniacid, $suid, $pageUrl, 1);
            if (!$share_ewm) {
                $result['data'] = ['error' => 2, 'msg' => '获取二维码失败！'];
                return json_encode($result);
            }
        } elseif ($source == 4) {

        } elseif ($source == 5) {
            $share_ewm = $this->shareewm_bdance($uniacid, $suid, $pageUrl, 1);
            if (!$share_ewm) {
                $result['data'] = ['error' => 2, 'msg' => '获取二维码失败！'];
                return json_encode($result);
            }
        }
        $share_img = $this->drowShareImg_old($uniacid, $source, $goods_img, $share_ewm, '分销商分享', '', '', $app_name);

        $result['data'] = ['error' => 0, 'msg' => '成功', 'url' => $share_img];
        return json_encode($result);

    }

    //获取员工分享海报
    public function doPageStaffShareewm()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $gid = input('gid');
        $source = input('source');

        $app_name = Db::name('wd_xcx_applet')->where('id', $uniacid)->field('name')->find()['name'];
        if (!$app_name) {
            $app_name = '万能门店小程序';
        }

        $staff = Db::name('wd_xcx_staff')->where('uniacid', $uniacid)->where('id', $gid)->find();
        if (!$staff) {
            $result['data'] = ['error' => 1, 'msg' => '员工不存在！'];
            return json_encode($result);
        }
        $staff_img = remote($uniacid, $staff['pic'], 1);
        $realname = $staff['realname'];
        $title = $staff['title'];
        $job = $staff['job'];
        $mobile = $staff['mobile'];
        $phone_img = ROOT_PATH . "public/image/static/phone1.png";
        $email = $staff['email'];
        $email_img = ROOT_PATH . "public/image/static/email.png";
        $company = $staff['company'];
        $com_img = ROOT_PATH . "public/image/static/company.png";

        if ($source == 1 || $source == 5) {  //微信端
            if ($source == 1) {
                $share_ewm = $this->shareewm_wx($uniacid, $suid, 'staff_card', 2, $gid);
            } else if ($source == 5) {
                $share_ewm = $this->shareewm_bdance($uniacid, $suid, 'staff_card', 2, $gid);
            }

            if (!$share_ewm) {
                $result['data'] = ['error' => 2, 'msg' => '获取二维码失败！'];
                return json_encode($result);
            }
            $goods_img = $staff_img;
            $share_img = $this->drowShareImg_old($uniacid, $source, $goods_img, $share_ewm, '员工名片分享', '', '', $app_name);

            // $width = 320;
            // $height = 500;

            // $font = ROOT_PATH.'public/fonts/msyh.ttc';


            // //绘制各种图形
            // //创建一个颜色
            // $background = imagecolorallocate($img, 0, 0, 0);

            // $goods_canvas = imagecreatetruecolor(320, 200);
            // $img_ext = substr($staff_img,-3);
            // if($img_ext == 'png' || $img_ext == 'PNG'){
            //     $scrImg = imagecreatefrompng($staff_img);
            // }elseif($img_ext == 'gif'){
            //     $scrImg = imagecreatefromgif($staff_img);
            // }elseif($img_ext == 'jpg' || $img_ext == 'peg'){
            //     $scrImg = imagecreatefromjpeg($staff_img);
            // }

            // $src_info = getimagesize($staff_img);

            // imageColorTransparent($goods_canvas, $color);  //颜色透明 防止透明色变成黑色

            // imagefill($goods_canvas, 0, 0, $color);

            // //关键函数，参数（目标资源，源，目标资源的开始坐标x,y, 源资源的开始坐标x,y,目标资源的宽高w,h,源资源的宽高w,h）
            // imagecopyresampled($goods_canvas, $scrImg, 0, 0, 0, 0, 320, 200, $src_info['0'], $src_info['1']);

            // //放置图像
            // imagecopymerge($img, $goods_canvas, 0, 0, 0, 0, 320, 200, 100);//左，上，右，下，宽度，高度，透明度

            // $box1_color = imagecolorallocate($img,245,245,245);
            // $points = array(160, 0,
            //                 175, 0,
            //                 120, 200,
            //                 105, 200
            //         );

            // imagefilledpolygon($img, $points, 4, $box1_color);

            // $box2_color = imagecolorallocate($img,253,253,253);
            // $points = array(175, 0,
            //                 320, 0,
            //                 320, 200,
            //                 120, 200
            //         );
            // imagefilledpolygon($img, $points, 4, $box2_color);

            // $box3_color = imagecolorallocate($img,238,238,238);
            // $points = array(166, 30,
            //                 320, 30,
            //                 320, 98,
            //                 148, 98
            //         );
            // imagefilledpolygon($img, $points, 4, $box3_color);


            // $realname_color = imagecolorallocate($img,35,35,35);
            // imagettftext($img , 20, 0, 218, 64, $realname_color, $font, $realname);

            // $info_color = imagecolorallocate($img,120,120,120);
            // imagettftext($img , 10, 0, 200, 86, $info_color, $font, $title."-".$job);
            // imagettftext($img , 10, 0, 170, 130, $info_color, $font, $mobile);
            // imagettftext($img , 10, 0, 170, 155, $info_color, $font, $email);
            // imagettftext($img , 10, 0, 170, 182, $info_color, $font, $company);


            // $background = imagecolorallocate($img,0,0,0);
            // $phone_canvas = imagecreatetruecolor(14, 14);
            // $phone_scrImg = imagecreatefrompng($phone_img);
            // $phone_info = getimagesize($phone_img);
            // imageColorTransparent($phone_canvas, $color);  //颜色透明 防止透明色变成黑色
            // imagefill($phone_canvas, 0, 0, $color);
            // //关键函数，参数（目标资源，源，目标资源的开始坐标x,y, 源资源的开始坐标x,y,目标资源的宽高w,h,源资源的宽高w,h）
            // imagecopyresampled($phone_canvas, $phone_scrImg, 0, 0, 0, 0, 14, 14, $phone_info['0'], $phone_info['1']);
            // imagecopymerge($img, $phone_canvas, 150, 118, 0, 0, 14, 14, 100);//左，上，右，下，宽度，高度，透明度

            // $background = imagecolorallocate($img,0,0,0);
            // $email_canvas = imagecreatetruecolor(14, 12);
            // $eamil_scrImg = imagecreatefrompng($email_img);
            // $email_info = getimagesize($email_img);
            // imageColorTransparent($email_canvas, $color);  //颜色透明 防止透明色变成黑色
            // imagefill($email_canvas, 0, 0, $color);
            // //关键函数，参数（目标资源，源，目标资源的开始坐标x,y, 源资源的开始坐标x,y,目标资源的宽高w,h,源资源的宽高w,h）
            // imagecopyresampled($email_canvas, $eamil_scrImg, 0, 0, 0, 0, 14, 12, $email_info['0'], $email_info['1']);
            // imagecopymerge($img, $email_canvas, 150, 145, 0, 0, 14, 12, 100);//左，上，右，下，宽度，高度，透明度

            // $background = imagecolorallocate($img,0,0,0);
            // $com_canvas = imagecreatetruecolor(14, 14);
            // $com_scrImg = imagecreatefrompng($com_img);
            // $com_info = getimagesize($com_img);
            // imageColorTransparent($email_canvas, $color);  //颜色透明 防止透明色变成黑色
            // imagefill($com_canvas, 0, 0, $color);
            // //关键函数，参数（目标资源，源，目标资源的开始坐标x,y, 源资源的开始坐标x,y,目标资源的宽高w,h,源资源的宽高w,h）
            // imagecopyresampled($com_canvas, $com_scrImg, 0, 0, 0, 0, 14, 14, $com_info['0'], $com_info['1']);
            // imagecopymerge($img, $com_canvas, 150, 170, 0, 0, 14, 14, 100);//左，上，右，下，宽度，高度，透明度


            // $name_color = imagecolorallocate($img,255,255,255);
            // //分享二维码
            // $img_ext1 = substr($share_ewm,-3);
            // if($img_ext1 == 'png' || $img_ext1 == 'PNG'){
            //     $ewm_scrImg = imagecreatefrompng($share_ewm);
            // }elseif($img_ext1 == 'gif'){
            //     $ewm_scrImg = imagecreatefromgif($share_ewm);
            // }elseif($img_ext1 == 'jpg' || $img_ext1 == 'peg'){
            //     $ewm_scrImg = imagecreatefromjpeg($share_ewm);
            // }
            // $info = getimagesize($share_ewm);
            // $canvas = imagecreatetruecolor(160, 160);

            // imageColorTransparent($canvas, $name_color);  //颜色透明 防止透明色变成黑色

            // imagefill($canvas, 0, 0, $name_color);

            // //关键函数，参数（目标资源，源，目标资源的开始坐标x,y, 源资源的开始坐标x,y,目标资源的宽高w,h,源资源的宽高w,h）
            // imagecopyresampled($canvas, $ewm_scrImg, 0, 0, 0, 0, 160, 160, $info['0'], $info['1']);

            // //放置图像
            // imagecopymerge($img, $canvas, 80, 260, 0, 0, 160, 160, 100);//左，上，右，下，宽度，高度，透明度

            // //绘制说明文字
            // $desc_color = imagecolorallocate($img, 0, 0, 0);
            // $app_name = $app_name . '(长按识别小程序)';
            // $len = mb_strlen($app_name);
            // $len_w = 12.3 * $len;
            // imagettftext($img , 10, 0, (320 - $len_w)/2, 450, $desc_color, $font, $app_name);

            // $goods['title'] = $title;
            // $goods['price'] = '';
            // $goods['market_price'] = '';
            // $goods_img = $staff_img;
            // $imgpath = $uniacid . date('YmdHis'). rand(1000, 9999).'.jpg';
            // //保存图片
            // imagepng($img, ROOT_PATH.'public/shareImg/'.$imgpath);
            // $share_img = ROOT_HOST. '/shareImg/'.$imgpath;
            // $share_img = $this ->drowShareImg($uniacid, $source, $goods_img, $share_ewm, $goods['title'], $goods['price'], $goods['market_price'], $app_name);
        } elseif ($source == 2) {  // 支付宝
            $share_ewm = $this->shareewm_ali($uniacid, $suid, 'staff_card', 2, $gid);
            if (!$share_ewm) {
                $result['data'] = ['error' => 2, 'msg' => '获取二维码失败！'];
                return json_encode($result);
            }

            $goods_img = $staff_img;
            $share_img = $this->drowShareImg_old($uniacid, $source, $goods_img, $share_ewm, '员工名片分享', '', '', $app_name);

        } elseif ($source == 3) {  // H5
            $share_ewm = $this->shareewm_h5($uniacid, $suid, 'staff_card', 0, $gid);
            if (!$share_ewm) {
                $result['data'] = ['error' => 2, 'msg' => '获取二维码失败！'];
                return json_encode($result);
            }

            $goods_img = $staff_img;
            $share_img = $this->drowShareImg_old($uniacid, $source, $goods_img, $share_ewm, '员工名片分享', '', '', $app_name);

        } elseif ($source == 4) {  //百度暂不支持生成二维码
            // $share_ewm = $this ->shareewm_bd($uniacid, $suid, $gid, $pageUrl, 2);
            // if(!$share_ewm){
            //     $result['data'] = ['error'=> 2, 'msg'=>'获取二维码失败！'];
            //     return json_encode($result);
            // }
            // $goods['title'] = $title;
            // $goods['price'] = '';
            // $goods['market_price'] = '';
            // $goods_img = $staff_img;
            // $share_img = $this ->drowShareImg($uniacid, $source, $goods_img, $share_ewm, $goods['title'], $goods['price'], $goods['market_price'], $app_name);
        }


        if (strpos($share_img, 'https') === false) {
            $share_img = "https" . substr($share_img, 4);
        }

        if ($share_img) {
            $result['data'] = ['error' => 0, 'msg' => '成功', 'url' => $share_img];
            return json_encode($result);
        } else {
            $result['data'] = ['error' => 3, 'msg' => '海报生成失败！'];
            return json_encode($result);
        }
    }

    //获取分享海报
    public function dopageshareewm()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $types = input("types");
        $pageUrl = input('pageUrl');
        $source = input('source');
        $gid = input('gid');

        $app_name = Db::name('wd_xcx_applet')->where('id', $uniacid)->field('name')->find()['name'];
        if (!$app_name) {
            $app_name = '万能门店小程序';
        }

        if ($types == 'duo' || $types == 'miaosha' || $types == 'reserve' || $types == 'pic') {
            $goods = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $gid)->field('title, price, market_price, thumb, shareimg')->find();
            if ($goods) {
                if ($goods['shareimg']) {
                    $goods_img = remote($uniacid, $goods['shareimg'], 1);
                } else {
                    $goods_img = remote($uniacid, $goods['thumb'], 1);
                }
            } else {
                $result['data'] = ['error' => 1, 'msg' => '商品不存在！'];
                return json_encode($result);
            }
        } elseif ($types == 'pt') {
            $goods = Db::name('wd_xcx_pt_pro')->where('uniacid', $uniacid)->where('id', $gid)->field('title, price, mark_price, thumb, shareimg')->find();
            if ($goods) {
                if ($goods['shareimg']) {
                    $goods_img = remote($uniacid, $goods['shareimg'], 1);
                } else {
                    $goods_img = remote($uniacid, $goods['thumb'], 1);
                }
                $goods['market_price'] = $goods['mark_price'];
            } else {
                $result['data'] = ['error' => 1, 'msg' => '商品不存在！'];
                return json_encode($result);
            }

        } elseif ($types == 'bargain') {
            $goods = Db::name('wd_xcx_bargain_pro')->where('uniacid', $uniacid)->where('id', $gid)->field('title, price, miniPrice, thumb, shareThumb')->find();
            if ($goods) {
                if ($goods['shareThumb']) {
                    $goods_img = remote($uniacid, $goods['shareThumb'], 1);
                } else {
                    $goods_img = remote($uniacid, $goods['thumb'], 1);
                }
                $goods['price'] = $goods['miniPrice'];
                $goods['market_price'] = $goods['price'];
            } else {
                $result['data'] = ['error' => 1, 'msg' => '商品不存在！'];
                return json_encode($result);
            }
        } elseif ($types == 'shop') {
            $goods = Db::name('wd_xcx_shops_goods')->where('uniacid', $uniacid)->where('id', $gid)->field('title, sellprice, marketprice, thumb')->find();
            if ($goods) {

                $goods_img = remote($uniacid, $goods['thumb'], 1);
                $goods['price'] = $goods['sellprice'];
                $goods['market_price'] = $goods['marketprice'];
            } else {
                $result['data'] = ['error' => 1, 'msg' => '商品不存在！'];
                return json_encode($result);
            }
        } elseif ($types == 'ext') {
            $goods = Db::name('wd_xcx_external_goods')->where('uniacid', $uniacid)->where('id', $gid)->field('name as title, min_group_price, goods_thumbnail_url, coupon_discount')->find();
            if ($goods) {
                $goods_img = $goods['goods_thumbnail_url'];
                $goods['price'] = round($goods['min_group_price'] - $goods['coupon_discount'], 2);
                $goods['market_price'] = $goods['min_group_price'];
            } else {
                $result['data'] = ['error' => 1, 'msg' => '商品不存在！'];
                return json_encode($result);
            }
        } elseif ($types == 'art') {
            $goods = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $gid)->field('title, thumb')->find();
            if ($goods) {
                $goods_img = remote($uniacid, $goods['thumb'], 1);
                $goods['price'] = '';
                $goods['market_price'] = '';
            } else {
                $result['data'] = ['error' => 1, 'msg' => '文章不存在！'];
                return json_encode($result);
            }
        } elseif ($types == 'fxs') {
            $goods = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $gid)->field('title, thumb')->find();
            if ($goods) {
                $goods_img = remote($uniacid, $goods['thumb'], 1);
                $goods['price'] = '';
                $goods['market_price'] = '';
            } else {
                $result['data'] = ['error' => 1, 'msg' => '分销商不存在！'];
                return json_encode($result);
            }
        } elseif ($types == 'active') {
            $goods = Db::name('wd_xcx_active')->where('uniacid', $uniacid)->where('id', $gid)->field('name as title, thumb')->find();
            if ($goods) {
                $goods_img = remote($uniacid, $goods['thumb'], 1);
                $goods['price'] = '';
                $goods['market_price'] = '';
            } else {
                $result['data'] = ['error' => 1, 'msg' => '活动不存在！'];
                return json_encode($result);
            }
        }

        if ($source == 1) {  //微信端
            $share_ewm = $this->shareewm_wx($uniacid, $suid, $pageUrl, 2, $gid);
            if (!$share_ewm) {
                $result['data'] = ['error' => 2, 'msg' => '获取二维码失败！'];
                return json_encode($result);
            }
            if ($types == 'duo' || $types == 'miaosha' || $types == 'reserve' || $types == 'pt' || $types == 'bargain' || $types == 'shop') {
                $share_img = $this->drowShareImg($uniacid, $source, $goods_img, $share_ewm, $goods['title'], $goods['price'], $goods['market_price'], $app_name);
            }else{
                $share_img = $this->drowShareImg_old($uniacid, $source, $goods_img, $share_ewm, $goods['title'], $goods['price'], $goods['market_price'], $app_name);
            }
        } elseif ($source == 2) {  // 支付宝
            $share_ewm = $this->shareewm_ali($uniacid, $suid, $pageUrl, 2, $gid);
            if (!$share_ewm) {
                $result['data'] = ['error' => 2, 'msg' => '获取二维码失败！'];
                return json_encode($result);
            }
            if ($types == 'duo' || $types == 'miaosha' || $types == 'reserve' || $types == 'pt' || $types == 'bargain' || $types == 'shop') {
                $share_img = $this->drowShareImg($uniacid, $source, $goods_img, $share_ewm, $goods['title'], $goods['price'], $goods['market_price'], $app_name);
            }else{
                $share_img = $this->drowShareImg_old($uniacid, $source, $goods_img, $share_ewm, $goods['title'], $goods['price'], $goods['market_price'], $app_name);
                
            }
        } elseif ($source == 3) {  // H5
            $share_ewm = $this->shareewm_h5($uniacid, $suid, $pageUrl, 0, $gid);
            if (!$share_ewm) {
                $result['data'] = ['error' => 2, 'msg' => '获取二维码失败！'];
                return json_encode($result);
            }
            if ($types == 'duo' || $types == 'miaosha' || $types == 'reserve' || $types == 'pt' || $types == 'bargain' || $types == 'shop') {
                $share_img = $this->drowShareImg($uniacid, $source, $goods_img, $share_ewm, $goods['title'], $goods['price'], $goods['market_price'], $app_name);
            }else{
                $share_img = $this->drowShareImg_old($uniacid, $source, $goods_img, $share_ewm, $goods['title'], $goods['price'], $goods['market_price'], $app_name);
            }

        } elseif ($source == 4) {  //百度暂不支持生成二维码
            // $share_ewm = $this ->shareewm_bd($uniacid, $suid, $gid, $pageUrl, 2);
            // if(!$share_ewm){
            //     $result['data'] = ['error'=> 2, 'msg'=>'获取二维码失败！'];
            //     return json_encode($result);
            // }
            // $share_img = $this ->drowShareImg($uniacid, $source, $goods_img, $share_ewm, $goods['title'], $goods['price'], $goods['market_price'], $app_name);
        } elseif ($source == 5) {  //字节跳动小程序
            $share_ewm = $this->shareewm_bdance($uniacid, $suid, $pageUrl, 2, $gid);
            if (!$share_ewm) {
                $result['data'] = ['error' => 2, 'msg' => '获取二维码失败！'];
                return json_encode($result);
            }
            if ($types == 'duo' || $types == 'miaosha' || $types == 'reserve' || $types == 'pt' || $types == 'bargain' || $types == 'shop') {
                $share_img = $this->drowShareImg($uniacid, $source, $goods_img, $share_ewm, $goods['title'], $goods['price'], $goods['market_price'], $app_name);
            }else{
                $share_img = $this->drowShareImg_old($uniacid, $source, $goods_img, $share_ewm, $goods['title'], $goods['price'], $goods['market_price'], $app_name);
            }
        }

        if ($share_img) {
            $result['data'] = ['error' => 0, 'msg' => '成功', 'url' => $share_img];
            return json_encode($result);
        } else {
            $result['data'] = ['error' => 3, 'msg' => '海报生成失败！'];
            return json_encode($result);
        }


    }

    //绘制分享海报new
    private function drowShareImg($uniacid, $source, $goods_img, $share_ewm, $title, $price, $market_price, $app_name)
    {
        $width = 300;
        $height = 534;
        $font = ROOT_PATH . 'public/fonts/msyh.ttc';

        //创建画布 默认背景是黑色的
        $img = imagecreatetruecolor($width, $height); //图片尺寸宽高
        $base = Db::name('wd_xcx_base')->where('uniacid', $uniacid)->field('logo, name, base_color, base_color2')->find();
        if($base){
            $base_color2 = $this->hex2rgb($base['base_color2']); // 小程序主色渐变色
            $base_color = $this->hex2rgb($base['base_color']); //小程序主色

            if(!$base['logo']){
                $logo = ROOT_HOST . '/image/shareewm_default.png';
            }else{
                $logo = remote($uniacid, $base['logo'], 1);
            }
            $top_title = $base['name'] ? ( mb_strlen($base['name']) > 6 ? mb_substr($base['name'], 0, 6) : $base['name'] ) : '暂无门店名称';
        }
        $color = imagecolorallocate($img, 255, 255, 255);

        imagefill($img, 0, 0, $color);

        $bg_img1 = ROOT_PATH . 'public/shareImg/' .$uniacid.'_share_back.png';
        if(!file_exists($bg_img1)){
            $bg_img1 = getShareBackGroubd($uniacid);
        }

        $bg_img = ROOT_PATH . 'public/image/shareewm_bg.png';
        
        $bg_img_canvas = imagecreatetruecolor($width, $height);
        $img_ext = substr($bg_img, -3);
        $scrImg1 = imagecreatefrompng($bg_img1);
        $scrImg = imagecreatefrompng($bg_img);
        $src_info1 = getimagesize($bg_img1);
        $src_info = getimagesize($bg_img);
        imageColorTransparent($bg_img_canvas, $color);  //颜色透明 防止透明色变成黑色
        imagefill($bg_img_canvas, 0, 0, $color);

        //关键函数，参数（目标资源，源，目标资源的开始坐标x,y, 源资源的开始坐标x,y,目标资源的宽高w,h,源资源的宽高w,h）
        imagecopyresampled($bg_img_canvas, $scrImg1, 0, 0, 0, 0, $width, $height, $src_info1['0'], $src_info1['1']);
        imagecopyresampled($bg_img_canvas, $scrImg, 0, 0, 0, 0, $width, $height, $src_info['0'], $src_info['1']);

        // //放置图像
        imagecopymerge($img, $bg_img_canvas, 0, 0, 0, 0, $width, $height, 100);//左，上，右，下，宽度，高度，透明度

        $logo_canvas = imagecreatetruecolor(25, 25);
        $img_ext = substr($logo, -3);
        if ($img_ext == 'png' || $img_ext == 'PNG') {
            $scrImg = imagecreatefrompng($logo);
        } elseif ($img_ext == 'gif') {
            $scrImg = imagecreatefromgif($logo);
        } elseif ($img_ext == 'jpg' || $img_ext == 'peg') {
            $scrImg = imagecreatefromjpeg($logo);
        }

        $color1 = imagecolorallocate($img, 0, 0, 0);
        $src_info = getimagesize($logo);
        imageColorTransparent($logo_canvas, $color1);  //颜色透明 防止透明色变成黑色
        imagefill($logo_canvas, 0, 0, $color1);

        //关键函数，参数（目标资源，源，目标资源的开始坐标x,y, 源资源的开始坐标x,y,目标资源的宽高w,h,源资源的宽高w,h）
        imagecopyresampled($logo_canvas, $scrImg, 0, 0, 0, 0, 25, 25, $src_info['0'], $src_info['1']);




        //绘制平台名称
        $name_color = imagecolorallocate($img, 0, 0, 0);
        //获取字符串宽度
        $top_title_box = imagettfbbox(12, 0, $font, $top_title);
        $top_title_width = $top_title_box[4] - $top_title_box[6];

                //放置图像
        imagecopymerge($img, $logo_canvas, ((300 - $top_title_width - 30) / 2), 17, 0, 0, 25, 25, 100);//左，上，右，下，宽度，高度，透明度
        imagettftext($img, 12, 0, ((300 - $top_title_width - 30) / 2) + 30, 35, $name_color, $font, $top_title);

        //拷贝商品图片到画布
        $goods_canvas = imagecreatetruecolor(280, 280);
        $img_ext = substr($goods_img, -3);
        if ($img_ext == 'png' || $img_ext == 'PNG') {
            $scrImg = imagecreatefrompng($goods_img);
        } elseif ($img_ext == 'gif') {
            $scrImg = imagecreatefromgif($goods_img);
        } elseif ($img_ext == 'jpg' || $img_ext == 'peg') {
            $scrImg = imagecreatefromjpeg($goods_img);
        }

        $src_info = getimagesize($goods_img);
        imageColorTransparent($goods_canvas, $color1);  //颜色透明 防止透明色变成黑色
        imagefill($goods_canvas, 0, 0, $color1);

        //关键函数，参数（目标资源，源，目标资源的开始坐标x,y, 源资源的开始坐标x,y,目标资源的宽高w,h,源资源的宽高w,h）
        imagecopyresampled($goods_canvas, $scrImg, 0, 0, 0, 0, 280, 280, $src_info['0'], $src_info['1']);

        //放置图像
        imagecopymerge($img, $goods_canvas, 10, 56, 0, 0, 280, 280, 100);//左，上，右，下，宽度，高度，透明度

        $col_ellipse = imagecolorallocate($img, 255, 255, 255);
        imagefilledellipse($img, 15, 421, 10, 10, $col_ellipse);

        $col_ellipse = imagecolorallocate($img, 255, 255, 255);
        imagefilledellipse($img, 284, 421, 10, 10, $col_ellipse);

        $area_color = imagecolorallocate($img, 255, 255, 255);
        imagefilledrectangle($img, 10, 336, 289, 421, $area_color);
        imagefilledrectangle($img, 15, 421, 284, 426, $area_color);

        //绘制商品名称
        $name_color = imagecolorallocate($img, 0, 0, 0);
        $title = mb_strlen($title) > 12 ? mb_substr($title, 0, 12) . '...' : $title;
        imagettftext($img, 12, 0, 20, 364, $name_color, $font, $title);

        if ($price) {
            //绘制价格
            $price_color = imagecolorallocate($img, 254, 49, 18);
            $price_t = '¥';

            //获取字符串宽度
            $price_box1 = imagettfbbox(10, 0, $font, $price_t);
            $price_box = imagettfbbox(12, 0, $font, $price);
            $price_width1 = $price_box1[4] - $price_box1[6];
            $price_width = $price_box[4] - $price_box[6];
            imagettftext($img, 10, 0, 20, 390, $price_color, $font, $price_t);
            imagettftext($img, 12, 0, 21 + $price_width1, 390, $price_color, $font, $price);
            $price_width = $price_width + $price_width1;
        }
        if ($market_price) {
            $old_price = '¥' . $market_price;
            //获取字符串宽度
            $old_price_box = imagettfbbox(8, 0, $font, $old_price);
            $old_price_width = $old_price_box[4] - $old_price_box[6];

            $old_price_coloe = imagecolorallocate($img, 150, 150, 150);
            imagettftext($img, 8, 0, 20 + $price_width + 10, 390, $old_price_coloe, $font, $old_price);

            imageline($img, 20 + $price_width + 8, 385, 20 + $price_width + 10 + $old_price_width + 2, 385, $old_price_coloe);
        }

        if ($source == 1 || $source == 2 || $source == 3 || $source == 5) { 

            $col_ellipse = imagecolorallocate($img, 255, 255, 255);
            imagefilledrectangle($img, 26, 446, 100, 520, $area_color);

            //分享二维码
            $img_ext = substr($share_ewm, -3);
            if ($img_ext == 'png' || $img_ext == 'PNG') {
                $ewm_scrImg = imagecreatefrompng($share_ewm);
            } elseif ($img_ext == 'gif') {
                $ewm_scrImg = imagecreatefromgif($share_ewm);
            } elseif ($img_ext == 'jpg' || $img_ext == 'peg') {
                $ewm_scrImg = imagecreatefromjpeg($share_ewm);
            }
            $info = getimagesize($share_ewm);
            $canvas = imagecreatetruecolor(74, 74);
            
            imageColorTransparent($canvas, $color1);  //颜色透明 防止透明色变成黑色
            imagefill($canvas, 0, 0, $color1);



            //关键函数，参数（目标资源，源，目标资源的开始坐标x,y, 源资源的开始坐标x,y,目标资源的宽高w,h,源资源的宽高w,h）
            imagecopyresampled($canvas, $ewm_scrImg, 0, 0, 0, 0, 74, 74, $info['0'], $info['1']);

            //放置图像
            imagecopymerge($img, $canvas, 26, 446, 0, 0, 74, 74, 100);//左，上，右，下，宽度，高度，透明度
        }

        $msg1 = $top_title . ' 邀请您';
        $msg2 = '长按识别小程序';
        $msg_color = imagecolorallocate($img, 255, 255, 255);
        imagettftext($img, 12, 0, 130, 470, $msg_color, $font, $msg1);
        imagettftext($img, 8, 0, 130, 495, $msg_color, $font, $msg2);

        $imgpath = $uniacid . date('YmdHis') . rand(1000, 9999) . '.jpg';

        //保存图片
        imagepng($img, ROOT_PATH . 'public/shareImg/' . $imgpath);
        $share_img = ROOT_HOST . '/shareImg/' . $imgpath;
        if (strpos($share_img, 'https') === false) {
            $share_img = "https" . substr($share_img, 4);
        }
        return $share_img;
        
    }

    //绘制分享海报
    private function drowShareImg_old($uniacid, $source, $goods_img, $share_ewm, $title, $price, $market_price, $app_name)
    {
        $width = 320;
        $height = 600;


        $font = ROOT_PATH . 'public/fonts/msyh.ttc';

        //创建画布 默认背景是黑色的
        $img = imagecreatetruecolor($width, $height);
        $color = imagecolorallocate($img, 255, 255, 255);
        imagefill($img, 0, 0, $color);

        //绘制各种图形
        //创建一个颜色
        $background = imagecolorallocate($img, 0, 0, 0);


        //拷贝商品图片到画布
        $goods_canvas = imagecreatetruecolor(320, 300);
        $img_ext = substr($goods_img, -3);
        if ($img_ext == 'png' || $img_ext == 'PNG') {
            $scrImg = imagecreatefrompng($goods_img);
        } elseif ($img_ext == 'gif') {
            $scrImg = imagecreatefromgif($goods_img);
        } elseif ($img_ext == 'jpg' || $img_ext == 'peg') {
            $scrImg = imagecreatefromjpeg($goods_img);
        }

        $src_info = getimagesize($goods_img);

        imageColorTransparent($goods_canvas, $color);  //颜色透明 防止透明色变成黑色

        imagefill($goods_canvas, 0, 0, $color);

        //关键函数，参数（目标资源，源，目标资源的开始坐标x,y, 源资源的开始坐标x,y,目标资源的宽高w,h,源资源的宽高w,h）
        imagecopyresampled($goods_canvas, $scrImg, 0, 0, 0, 0, 320, 300, $src_info['0'], $src_info['1']);

        //放置图像
        imagecopymerge($img, $goods_canvas, 0, 0, 0, 0, 320, 300, 100);//左，上，右，下，宽度，高度，透明度

        //绘制商品名称区域
        // imagerectangle($img, 0 , 350 , 320 , 400 , $background);
        $area_color = imagecolorallocatealpha($img, 0, 0, 0, 90);
        imagefilledrectangle($img, 0, 270, 320, 300, $area_color);

        //绘制商品名称
        $name_color = imagecolorallocate($img, 255, 255, 255);
        imagettftext($img, 12, 0, 10, 289, $name_color, $font, $title);

        if ($price) {
            //绘制价格
            $price_color = imagecolorallocate($img, 255, 0, 0);
            $price = '¥' . $price;
            $price_len = strlen($price) * 18;
            imagettftext($img, 20, 0, 15, 335, $price_color, $font, $price);
        }

        if ($market_price) {
            $old_price = '¥' . $market_price;
            $old_price_len = strlen($old_price) * 8;
            $old_price_coloe = imagecolorallocate($img, 128, 128, 128);
            imagettftext($img, 12, 0, $price_len, 335, $old_price_coloe, $font, $old_price);

            imageline($img, $price_len - 5, 329, $price_len + $old_price_len, 329, $old_price_coloe);
        }


        if ($source == 1) {  //微信
            //分享二维码
            $ewm_scrImg = imagecreatefromjpeg($share_ewm);
            $info = getimagesize($share_ewm);
            $canvas = imagecreatetruecolor(160, 160);

            imageColorTransparent($canvas, $name_color);  //颜色透明 防止透明色变成黑色

            imagefill($canvas, 0, 0, $name_color);

            //关键函数，参数（目标资源，源，目标资源的开始坐标x,y, 源资源的开始坐标x,y,目标资源的宽高w,h,源资源的宽高w,h）
            imagecopyresampled($canvas, $ewm_scrImg, 0, 0, 0, 0, 160, 160, $info['0'], $info['1']);

            //放置图像
            imagecopymerge($img, $canvas, 80, 360, 0, 0, 160, 160, 100);//左，上，右，下，宽度，高度，透明度

            //绘制说明文字
            $desc_color = imagecolorallocate($img, 0, 0, 0);
            $app_name = $app_name . '(长按识别小程序)';
            $len = mb_strlen($app_name);
            $len_w = 12.3 * $len;
            imagettftext($img, 10, 0, (320 - $len_w) / 2, 550, $desc_color, $font, $app_name);
        } else if ($source == 2) {  // 支付宝
            //分享二维码
            $ewm_scrImg = imagecreatefromjpeg($share_ewm);
            $info = getimagesize($share_ewm);
            $canvas = imagecreatetruecolor(160, 200);

            imageColorTransparent($canvas, $name_color);  //颜色透明 防止透明色变成黑色

            imagefill($canvas, 0, 0, $name_color);

            //关键函数，参数（目标资源，源，目标资源的开始坐标x,y, 源资源的开始坐标x,y,目标资源的宽高w,h,源资源的宽高w,h）
            imagecopyresampled($canvas, $ewm_scrImg, 0, 0, 0, 0, 160, 200, $info['0'], $info['1']);

            //放置图像
            imagecopymerge($img, $canvas, 80, 350, 0, 0, 160, 200, 100);//左，上，右，下，宽度，高度，透明度

            //绘制说明文字
            $desc_color = imagecolorallocate($img, 0, 0, 0);
            $app_name = $app_name;
            $len = mb_strlen($app_name);
            $len_w = 12.3 * $len;
            imagettftext($img, 10, 0, (320 - $len_w) / 2, 570, $desc_color, $font, $app_name);
        } else if ($source == 3) { //H5
            //分享二维码
            $ewm_scrImg = imagecreatefrompng($share_ewm);
            $info = getimagesize($share_ewm);
            $canvas = imagecreatetruecolor(160, 160);

            imageColorTransparent($canvas, $name_color);  //颜色透明 防止透明色变成黑色

            imagefill($canvas, 0, 0, $name_color);

            //关键函数，参数（目标资源，源，目标资源的开始坐标x,y, 源资源的开始坐标x,y,目标资源的宽高w,h,源资源的宽高w,h）
            imagecopyresampled($canvas, $ewm_scrImg, 0, 0, 0, 0, 160, 160, $info['0'], $info['1']);

            //放置图像
            imagecopymerge($img, $canvas, 80, 360, 0, 0, 160, 160, 100);//左，上，右，下，宽度，高度，透明度

            //绘制说明文字
            $desc_color = imagecolorallocate($img, 0, 0, 0);
            $app_name = $app_name . '(浏览器扫码进入)';
            $len = mb_strlen($app_name);
            $len_w = 12.3 * $len - 5;
            imagettftext($img, 10, 0, (320 - $len_w) / 2, 550, $desc_color, $font, $app_name);
        } else if ($source == 5) {  //头条
            //分享二维码
            $ewm_scrImg = imagecreatefrompng($share_ewm);
            $info = getimagesize($share_ewm);
            $canvas = imagecreatetruecolor(160, 160);

            imageColorTransparent($canvas, $name_color);  //颜色透明 防止透明色变成黑色

            imagefill($canvas, 0, 0, $name_color);

            //关键函数，参数（目标资源，源，目标资源的开始坐标x,y, 源资源的开始坐标x,y,目标资源的宽高w,h,源资源的宽高w,h）
            imagecopyresampled($canvas, $ewm_scrImg, 0, 0, 0, 0, 160, 160, $info['0'], $info['1']);

            //放置图像
            imagecopymerge($img, $canvas, 80, 360, 0, 0, 160, 160, 100);//左，上，右，下，宽度，高度，透明度

            //绘制说明文字
            $desc_color = imagecolorallocate($img, 0, 0, 0);
            $app_name = $app_name . '(长按识别小程序)';
            $len = mb_strlen($app_name);
            $len_w = 12.3 * $len - 5;
            imagettftext($img, 10, 0, (320 - $len_w) / 2, 550, $desc_color, $font, $app_name);
        }

        $imgpath = $uniacid . date('YmdHis') . rand(1000, 9999) . '.jpg';

        //保存图片
        imagepng($img, ROOT_PATH . 'public/shareImg/' . $imgpath);
        $share_img = ROOT_HOST . '/shareImg/' . $imgpath;
        if (strpos($share_img, 'https') === false) {
            $share_img = "https" . substr($share_img, 4);
        }
        return $share_img;
    }


    //获取微信二维码
    private function shareewm_wx($uniacid, $suid, $pageUrl, $type, $gid = 0)
    {

        $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->find();
        $appid = $app['appID'];
        $appsecret = $app['appSecret'];
        $url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=" . $appid . "&secret=" . $appsecret;
        $weixin = file_get_contents($url);
        $jsondecode = json_decode($weixin); //对JSON格式的字符串进行编码
        $array = get_object_vars($jsondecode);//转换成数组
        $access_token = $array['access_token'];//输出token

        $ewmurl = "https://api.weixin.qq.com/wxa/getwxacode?access_token=" . $access_token;
        if ($type == 1) {
            $sharepath = 'pages/index/index?fxsid=' . $suid;
        } else {
            if ($pageUrl == 'showProMore') {
                $sharepath = 'pages/showProMore/showProMore?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'showPro') {
                $sharepath = 'pagesFlashSale/showPro/showPro?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'products') {
                $sharepath = 'pagesPt/products/products?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'proDetail') {
                $sharepath = 'pagesReserve/proDetail/proDetail?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'bargain_pro') {
                $sharepath = 'pagesBargain/bargain_pro/bargain_pro?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'goods_detail') {
                $sharepath = 'pagesPluginShop/goods_detail/goods_detail?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'extPro') {
                $sharepath = 'pages/showExtPro/showExtPro?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'showArt') {
                $sharepath = 'pages/showArt/showArt?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'staff_card') {
                $sharepath = 'pagesCards/card_info/card_info?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'active') {
                $sharepath = 'pagesActive/active_info/active_info?aid=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'showPic') {
                $sharepath = 'pages/showPic/showPic?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            }
        }

        $data = array(
            "path" => $sharepath,
            "width" => '80'
        );
        $datas = json_encode($data);
        $result = $this->_Postrequest($ewmurl, $datas);
        $root = ROOT_PATH;
        $path = "public/ewmimg/wx/{$uniacid}" . date('Ym');
        $newpath = $root . $path;
        $sjc = time() . rand(1000, 9999);
        if (!file_exists($newpath)) {
            mkdir($newpath);
        }
        file_put_contents($newpath . "/" . $uniacid . date('Ym') . $sjc . ".jpg", $result);
        $imgpath = ROOT_HOST. STATIC_ROOT . "/ewmimg/wx/{$uniacid}" . date('Ym') . "/" . $uniacid . date('Ym') . $sjc . ".jpg";
        if (strpos($imgpath, 'https') === false) {
            $imgpath = "https" . substr($imgpath, 4);
        }

        return $imgpath;
    }


    //获取字节跳动小程序二维码
    private function shareewm_bdance($uniacid, $suid, $pageUrl, $type, $gid = 0)
    {
        $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->find();
        $appid = $app['bdance_appID'];
        $appsecret = $app['bdance_appSecret'];
        $url = "https://developer.toutiao.com/api/apps/token?grant_type=client_credential&appid=" . $appid . "&secret=" . $appsecret;
        $weixin = file_get_contents($url);
        $jsondecode = json_decode($weixin, true); //对JSON格式的字符串进行编码
        $access_token = $jsondecode['access_token'];//输出token

        $ewmurl = "https://developer.toutiao.com/api/apps/qrcode";
        if ($type == 1) {
            $sharepath = 'pages/index/index?fxsid=' . $suid;
        } else {
            if ($pageUrl == 'showProMore') {
                $sharepath = '/pages/showProMore/showProMore?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'showPro') {
                $sharepath = '/pagesFlashSale/showPro/showPro?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'products') {
                $sharepath = '/pagesPt/products/products?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'proDetail') {
                $sharepath = '/pagesReserve/proDetail/proDetail?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'bargain_pro') {
                $sharepath = '/pagesBargain/bargain_pro/bargain_pro?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'goods_detail') {
                $sharepath = '/pagesPluginShop/goods_detail/goods_detail?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'extPro') {
                $sharepath = '/pages/showExtPro/showExtPro?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'showArt') {
                $sharepath = '/pages/showArt/showArt?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'staff_card') {
                $sharepath = '/pagesCards/card_info/card_info?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'active') {
                $sharepath = '/pagesActive/active_info/active_info?aid=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'showPic') {
                $sharepath = '/pages/showPic/showPic?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            }

        }
        $data = array(
            "access_token" => $access_token,
            "appname" => "toutiao",
            "path" => $sharepath,
            "width" => 280,
        );

        $datas = json_encode($data);
        $result = $this->_Postrequest($ewmurl, $datas);

        $root = ROOT_PATH;
        $path = "public/ewmimg/bdance/{$uniacid}" . date('Ym');
        $newpath = $root . $path;
        $sjc = time() . rand(1000, 9999);
        if (!file_exists($newpath)) {
            mkdir($newpath);
        }
        file_put_contents($newpath . "/" . $uniacid . date('Ym') . $sjc . ".png", $result);
        $imgpath = ROOT_HOST . "/ewmimg/bdance/{$uniacid}" . date('Ym') . "/" . $uniacid . date('Ym') . $sjc . ".png";
        if (strpos($imgpath, 'https') === false) {
            $imgpath = "https" . substr($imgpath, 4);
        }
        return $imgpath;

    }


    //获取支付宝二维码
    private function shareewm_ali($uniacid, $suid, $pageUrl, $type, $gid = 0)
    {

        $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->find();
        $appid = $app['ali_appID'];
        include_once 'AopClient.php';

        $aop = new AopClient ();
        $aop->gatewayUrl = 'https://openapi.alipay.com/gateway.do';

        $aop->appId = $appid;
        $aop->rsaPrivateKey = $app['ali_private_key'];
        $aop->alipayrsaPublicKey = $app['ali_public_key'];
        $aop->apiVersion = '1.0';
        $aop->signType = 'RSA2';
        $aop->postCharset = 'UTF-8';
        $aop->format = 'json';
        include_once 'alipaysdk/aop/request/AlipayOpenAppQrcodeCreateRequest.php';
        $request = new \AlipayOpenAppQrcodeCreateRequest();

        if ($type == 1) {
            $request->setBizContent("{" .
                "\"url_param\":\"/pages/index/index\"," .
                "\"query_param\":\"fxsid=" . $suid . "&userid=" . $suid . "\"," .
                "\"describe\":\"二维码描述\"" .
                "  }");
        } else {
            if ($pageUrl == 'showProMore') {
                $request->setBizContent("{" .
                    "\"url_param\":\"/pages/showProMore/showProMore?id=" . $gid . "&fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"query_param\":\"fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"describe\":\"二维码描述\"" .
                    "  }");
            } elseif ($pageUrl == 'showPro') {
                $request->setBizContent("{" .
                    "\"url_param\":\"/pagesFlashSale/showPro/showPro?id=" . $gid . "&fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"query_param\":\"fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"describe\":\"二维码描述\"" .
                    "  }");
            } elseif ($pageUrl == 'products') {
                $request->setBizContent("{" .
                    "\"url_param\":\"/pagesPt/products/products?id=" . $gid . "&fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"query_param\":\"fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"describe\":\"二维码描述\"" .
                    "  }");
            } elseif ($pageUrl == 'proDetail') {
                $request->setBizContent("{" .
                    "\"url_param\":\"/pagesReserve/proDetail/proDetail?id=" . $gid . "&fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"query_param\":\"fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"describe\":\"二维码描述\"" .
                    "  }");
            } elseif ($pageUrl == 'bargain_pro') {
                $request->setBizContent("{" .
                    "\"url_param\":\"/pagesBargain/bargain_pro/bargain_pro?id=" . $gid . "&fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"query_param\":\"fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"describe\":\"二维码描述\"" .
                    "  }");
            } elseif ($pageUrl == 'goods_detail') {
                $request->setBizContent("{" .
                    "\"url_param\":\"/pagesPluginShop/goods_detail/goods_detail?id=" . $gid . "&fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"query_param\":\"fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"describe\":\"二维码描述\"" .
                    "  }");
            } elseif ($pageUrl == 'extPro') {
                $request->setBizContent("{" .
                    "\"url_param\":\"/pages/showExtPro/showExtPro?id=" . $gid . "&fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"query_param\":\"fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"describe\":\"二维码描述\"" .
                    "  }");
            } elseif ($pageUrl == 'showArt') {
                $request->setBizContent("{" .
                    "\"url_param\":\"/pages/showArt/showArt?id=" . $gid . "&fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"query_param\":\"fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"describe\":\"二维码描述\"" .
                    "  }");
            } elseif ($pageUrl == 'staff_card') {
                $request->setBizContent("{" .
                    "\"url_param\":\"/pagesCards/card_info/card_info?id=" . $gid . "&fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"query_param\":\"id=" . $gid . "fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"describe\":\"二维码描述\"" .
                    "  }");
            } elseif ($pageUrl == 'active') {
                $request->setBizContent("{" .
                    "\"url_param\":\"/pagesActive/active_info/active_info?id=" . $gid . "&fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"query_param\":\"aid=" . $gid . "fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"describe\":\"二维码描述\"" .
                    "  }");
            } elseif ($pageUrl == 'showPic') {
                $request->setBizContent("{" .
                    "\"url_param\":\"/pages/showPic/showPic?id=" . $gid . "&fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"query_param\":\"fxsid=" . $suid . "&userid=" . $suid . "\"," .
                    "\"describe\":\"二维码描述\"" .
                    "  }");
            }

        }

        $result = $aop->execute($request);

        $responseNode = str_replace(".", "_", $request->getApiMethodName()) . "_response";
        $resultCode = $result->$responseNode->code;
        if ($resultCode == '10000') {
            $sjc = time() . rand(1000, 9999);
            // $res = file_get_contents($result->$responseNode->qr_code_url);
            $ch = curl_init();
            $timeout = 20;
            curl_setopt($ch, CURLOPT_URL, $result->$responseNode->qr_code_url);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout);
            $res = curl_exec($ch);
            curl_close($ch);
            $path = "public/ewmimg/ali/{$uniacid}" . date('Ym');
            $root = ROOT_PATH;
            $newpath = $root . $path;
            $sjc = time() . rand(1000, 9999);
            if (!file_exists($newpath)) {
                mkdir($newpath);
            }

            file_put_contents($newpath . "/" . $uniacid . date('Ym') . $sjc . ".jpg", $res);
            $imgpath = ROOT_HOST . "/ewmimg/ali/{$uniacid}" . date('Ym') . "/" . $uniacid . date('Ym') . $sjc . ".jpg";
            if (strpos($imgpath, 'https') === false) {
                $imgpath = "https" . substr($imgpath, 4);
            }
            return $imgpath;

        }

    }

    public function doPageHxEwm()
    {
        $pageUrl = input('pageUrl');
        $uniacid = input('uniacid');
        $suid = input('suid');
        $type = 2;
        $orderid = input('orderid');
        $hx_img = $this->shareewm_h5($uniacid, $suid, $pageUrl, $type, 0, $orderid);
        return json_encode(['data' => $hx_img]);
    }

    //h5生成二维码
    private function shareewm_h5($uniacid, $suid, $pageUrl, $type, $gid = 0, $orderid = '')
    {
        if ($type == 1) {
            $url = 'https://' . $_SERVER['SERVER_NAME'] . '/h5/index.html?id=' . $uniacid . '#/pages/index/index?fxsid=' . $suid;
        } else if ($type == 2) { //扫码核销
            if ($pageUrl == 'showProMore') {
                $is_more = 2;
            } else if ($pageUrl == 'showPro') {
                $is_more = 0;
            } else if ($pageUrl == 'proDetail') {
                $is_more = 1;
            } else if ($pageUrl == 'products') {
                $is_more = 3;
            } else if ($pageUrl == 'bargain_pro') {
                $is_more = 4;
            } else if ($pageUrl == 'mainShop') { //多规格新版
                $is_more = 5;
            }
            $url = 'is_more=' . $is_more . '&orderid=' . $orderid;
        } else {
            if ($pageUrl == 'showProMore') {
                $url = 'https://' . $_SERVER['SERVER_NAME'] . '/h5/index.html?id=' . $uniacid . '#/pages/showProMore/showProMore?id=' . $gid . '&fxsid=' . $suid . '&userid=' . $suid;
            } elseif ($pageUrl == 'showPro') {
                $url = 'https://' . $_SERVER['SERVER_NAME'] . '/h5/index.html?id=' . $uniacid . '#/pagesFlashSale/showPro/showPro?id=' . $gid . '&fxsid=' . $suid . '&userid=' . $suid;
            } elseif ($pageUrl == 'products') {
                $url = 'https://' . $_SERVER['SERVER_NAME'] . '/h5/index.html?id=' . $uniacid . '#/pagesPt/products/products?id=' . $gid . '&fxsid=' . $suid . '&userid=' . $suid;
            } elseif ($pageUrl == 'proDetail') {
                $url = 'https://' . $_SERVER['SERVER_NAME'] . '/h5/index.html?id=' . $uniacid . '#/pagesReserve/proDetail/proDetail?id=' . $gid . '&fxsid=' . $suid . '&userid=' . $suid;
            } elseif ($pageUrl == 'bargain_pro') {
                $url = 'https://' . $_SERVER['SERVER_NAME'] . '/h5/index.html?id=' . $uniacid . '#/pagesBargain/bargain_pro/bargain_pro?id=' . $gid . '&fxsid=' . $suid . '&userid=' . $suid;
            } elseif ($pageUrl == 'goods_detail') {
                $url = 'https://' . $_SERVER['SERVER_NAME'] . '/h5/index.html?id=' . $uniacid . '#/pagesPluginShop/goods_detail/goods_detail?id=' . $gid . '&fxsid=' . $suid . '&userid=' . $suid;
            } elseif ($pageUrl == 'extPro') {
                $url = 'https://' . $_SERVER['SERVER_NAME'] . '/h5/index.html?id=' . $uniacid . '#/pages/showExtPro/showExtPro?id=' . $gid . '&fxsid=' . $suid . '&userid=' . $suid;
            } elseif ($pageUrl == 'showArt') {
                $url = 'https://' . $_SERVER['SERVER_NAME'] . '/h5/index.html?id=' . $uniacid . '#/pages/showArt/showArt?id=' . $gid . '&fxsid=' . $suid . '&userid=' . $suid;
            } elseif ($pageUrl == 'active') {
                $url = 'https://' . $_SERVER['SERVER_NAME'] . '/h5/index.html?id=' . $uniacid . '#/pages/pagesActive/active_info/active_info?aid=' . $gid . '&fxsid=' . $suid . '&userid=' . $suid;
            } elseif ($pageUrl == 'staff_card') {
                $url = $url = 'https://' . $_SERVER['SERVER_NAME'] . '/h5/index.html?id=' . $uniacid . '#/pagesCards/card_info/card_info?id=' . $gid . "&fxsid=" . $suid . "&userid=" . $suid;
            } elseif ($pageUrl == 'showPic') {
                $url = 'https://' . $_SERVER['SERVER_NAME'] . '/h5/index.html?id=' . $uniacid . '#/pages/showPic/showPic?id=' . $gid . '&fxsid=' . $suid . '&userid=' . $suid;
            }
        }

        Vendor('phpqrcode.phpqrcode');
        $errorCorrectionLevel = intval(3);//容错级别
        $matrixPointSize = intval(4);//生成图片大小
        //生成二维码图片
        $object = new \QRcode();
        if ($orderid != '') {
            $path = "public/ewmimg/hx/{$uniacid}" . date('Ym');
        } else {
            $path = "public/ewmimg/h5/{$uniacid}" . date('Ym');
        }
        $root = ROOT_PATH;
        $newpath = $root . $path;
        $sjc = time() . rand(1000, 9999);
        if (!file_exists($newpath)) {
            mkdir($newpath);
        }


        $filename = $newpath . "/" . $uniacid . date('Ym') . $sjc . ".png";

        $object->png($url, $filename, $errorCorrectionLevel, $matrixPointSize, 2);
        if ($orderid != '') {
            $imgpath = ROOT_HOST . STATIC_ROOT . "/ewmimg/hx/{$uniacid}" . date('Ym') . "/" . $uniacid . date('Ym') . $sjc . ".png";
        } else {
            $imgpath = ROOT_HOST . STATIC_ROOT . "/ewmimg/h5/{$uniacid}" . date('Ym') . "/" . $uniacid . date('Ym') . $sjc . ".png";
        }

        if (strpos($imgpath, 'https') === false) {
            $imgpath = "https" . substr($imgpath, 4);
        }
        return $imgpath;

    }


    function _Postrequest($url, $data, $ssl = true, $token = '') //0正常， 1头条
    {
        if (!$token) {
            $headers = [
                "Content-type: application/json;charset='utf-8'"
            ];
        } else {

            $headers = [
                "X-Token: " . $token
            ];
        }
        //curl完成
        $curl = curl_init();
        //设置curl选项
        curl_setopt($curl, CURLOPT_URL, $url);//URL
        $user_agent = isset($_SERVER['HTTP_USER_AGENT']) ? $_SERVER['HTTP_USER_AGENT'] : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:38.0) Gecko/20100101 Firefox/38.0 FirePHP/0.7.4';
        curl_setopt($curl, CURLOPT_USERAGENT, $user_agent);//user_agent，请求代理信息
        curl_setopt($curl, CURLOPT_AUTOREFERER, true);//referer头，请求来源
        curl_setopt($curl, CURLOPT_TIMEOUT, 30);//设置超时时间
        //SSL相关
        if ($ssl) {
            curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);//禁用后cURL将终止从服务端进行验证
            curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 2);//检查服务器SSL证书中是否存在一个公用名(common name)。
        }
        // 处理post相关选项
        curl_setopt($curl, CURLOPT_POST, true);// 是否为POST请求
        curl_setopt($curl, CURLOPT_POSTFIELDS, $data);// 处理请求数据
        // 处理响应结果
        curl_setopt($curl, CURLOPT_HEADER, false);//是否处理响应头
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);//curl_exec()是否返回响应结果
        curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);

        curl_setopt($curl, CURLOPT_IPRESOLVE, CURL_IPRESOLVE_V4);
        // 发出请求
        $response = curl_exec($curl);
        if (false === $response) {
            echo '<br>', curl_error($curl), '<br>';
            return false;
        }
        curl_close($curl);
        return $response;
    }

    public function dopageshareguiz()
    {
        $uniacid = input("uniacid");
        $guiz = Db::name('wd_xcx_fx_gz')->where('uniacid', $uniacid)->find();
        $guiz['sq_thumb'] = remote($uniacid, $guiz['sq_thumb'], 1);
        // if (strpos($guiz['sq_thumb'], 'https') === false) {
        //     $neiw['data'] = "https" . substr($guiz['sq_thumb'], 4);
        // } else {
        //     $neiw['data'] = remote($uniacid, $guiz['sq_thumb'], 1);
        // }

        $neiw['data'] = $guiz['sq_thumb'];
        return json_encode($neiw);
    }

    public function dopageupdatauserset()
    {
        $uniacid = input("uniacid");
        $items = Db::name('wd_xcx_usercenter_set')->where('uniacid', $uniacid)->find();
        $usercenterset = unserialize($items['usercenterset']);
        // 先组装成选择显示的数据
        $arrs = array();
        for ($i = 1; $i <= 12; $i++) {
            if ($usercenterset['flag' . $i] == 2) {
                $jdata = array(
                    "title" => $usercenterset['title' . $i],
                    "thumb" => remote($uniacid, $usercenterset['thumb' . $i], 1),
                    "num" => $usercenterset['num' . $i],
                    "url" => $usercenterset['url' . $i]
                );
                array_push($arrs, $jdata);
            }
        }
        // 对数据进行排序
        $counts = count($arrs);
        $temps = "";
        for ($i = 0; $i < $counts - 1; $i++) {
            for ($j = 0; $j < $counts - 1 - $i; $j++) {
                if ($arrs[$j + 1]['num'] > $arrs[$j]['num']) {
                    $temps = $arrs[$j];
                    $arrs[$j] = $arrs[$j + 1];
                    $arrs[$j + 1] = $temps;
                }
            }
        }
        $result['data'] = $arrs;
        return json_encode($result);
    }

    // 获取团长优惠
    public function doPagepttuanzyh()
    {
        $uniacid = input("uniacid");
        $id = input("id");
        // 获取成团规则
        $guiz = Db::name('wd_xcx_pt_pro')->where('uniacid', $uniacid)->where('id', $id)->find();
        if ($guiz['stores']) {
            $stores = explode(',', $guiz['stores']);
            $stores_info = [];
            $i = 0;
            foreach ($stores as $vsi) {
                $info = Db::name('wd_xcx_store')->where("uniacid", $uniacid)->where('id', $vsi)->field("id, title, tel, province, city, country, times")->find();
                if ($info) {
                    $stores_info[$i] = $info;
                    $i++;
                }
            }
            $guiz['stores'] = count($stores_info) > 0 ? $stores_info : '';
        } else {
            $guiz['stores'] = '';
        }
        if ($guiz['thumb']) {
            $guiz['thumb'] = remote($uniacid, $guiz['thumb'], 1);
        }
        $result['data'] = $guiz;

        //获取万能表单
        if ($guiz['formset']) {
            $formset = $guiz['formset'];
            if ($formset != 0 && $formset != "") {
                $forms = Db::name('wd_xcx_formlist')->where('id', $formset)->find();
                $forms2 = unserialize($forms['tp_text']);
                $result['formdescs'] = $forms['descs'];
                $tp_text = [];
                if ($forms2) {
                    foreach ($forms2 as $key => &$res) {
                        if ($key > 0) {
                            $tp_key = $key - 1;
                            if ($res['required'] == true) {
                                $tp_text[$tp_key]['ismust'] = 1;
                            } else {
                                $tp_text[$tp_key]['ismust'] = 0;
                            }
                            $tp_text[$tp_key]['name'] = $res['label'];
                            if ($res['field_type'] == '单行文本') {
                                $tp_text[$tp_key]['type'] = 0;
                                $tp_text[$tp_key]['tp_text'][0]['yval'] = 0;
                            } else if ($res['field_type'] == '多行文本') {
                                $tp_text[$tp_key]['type'] = 1;
                                $tp_text[$tp_key]['tp_text'] = '';
                            } else if ($res['field_type'] == '多选' || $res['field_type'] == '单选') {
                                if ($res['field_type'] == '多选') {
                                    $tp_text[$tp_key]['type'] = 3;
                                } else {
                                    $tp_text[$tp_key]['type'] = 4;
                                }
                                foreach ($res['field_options']['options'] as $key1 => &$rec1) {
                                    $rec1['yval'] = $rec1['label'];
                                    unset($rec1['label']);
                                }
                                $tp_text[$tp_key]['tp_text'] = $res['field_options']['options'];
                            } else if ($res['field_type'] == '下拉选') {
                                $tp_text[$tp_key]['type'] = 2;
                                $tp_text[$tp_key]['tp_text'] = [];
                                foreach ($res['field_options']['options'] as $key2 => &$rec2) {
                                    array_push($tp_text[$tp_key]['tp_text'], $rec2['label']);
                                }
                            } else if ($res['field_type'] == '日期') {
                                $tp_text[$tp_key]['type'] = 7;
                            } else if ($res['field_type'] == '时间') {
                                $tp_text[$tp_key]['type'] = 11;
                            } else if ($res['field_type'] == '图片') {
                                $tp_text[$tp_key]['type'] = 5;
                                $tp_text[$tp_key]['tp_text'] = $res['field_options']['maxpic'];
                                $tp_text[$tp_key]['z_val'] = array();
                            } else if ($res['field_type'] == '手机号') {
                                $tp_text[$tp_key]['type'] = 0;
                                $tp_text[$tp_key]['tp_text'][0]['yval'] = 1;
                            } else if ($res['field_type'] == '身份证') {
                                $tp_text[$tp_key]['type'] = 0;
                                $tp_text[$tp_key]['tp_text'][0]['yval'] = 7;
                            }
                            $tp_text[$tp_key]['val'] = '';
                        }
                    }
                }
                $result['forms'] = $tp_text;
            } else {
                $result['formdescs'] = '';
            }
        }
        return json_encode($result);
    }

    // 获取分销商规则
    public function doPagehuoqfxsgz()
    {
        $uniacid = input("uniacid");
        $guiz = Db::name('wd_xcx_fx_gz')->where('uniacid', $uniacid)->find();
        $res['data'] = $guiz;
        return json_encode($res);
    }

    // 给我的上级积分了
    public function doPagegiveposcore()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $source = input('source');
        $fxsid = input("fxsid");
        $id = input("id");
        $types = input("types");
        $today = strtotime(date("Y-m-d"), time());
        $end = $today + 60 * 60 * 24;
        $is_get = Db::name('wd_xcx_pro_score_get')->where('uniacid', $uniacid)->where('pid', $id)->where('clicksuid', $suid)->where('creattime', 'gt', $today)->where('creattime', 'lt', $today)->find();
        if ($is_get) {
            exit;
        }
        if ($types == 'showProMore' || $types == 'showPro' || $types == 'showPro_lv' || $types == 'showArt' || $types == 'showPic') {
            $pro = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $id)->find();
        }

        // 开启了点击给上级积分规则
        // dump($pro);die;
        if ($pro['get_share_gz'] == 1) {
            $score = $pro['get_share_score'];
            $num = $pro['get_share_num'];
            // 去判断今天获取的次数有没有达到上限
            $counts = Db::name('wd_xcx_pro_score_get')->where('uniacid', $uniacid)->where('pid', $id)->where('suid', $fxsid)->where('creattime', 'gt', $today)->where('creattime', 'lt', $end)->count();
            if ($fxsid && $fxsid != 'undefined') {
                if ($num > $counts) { //今天还可以继续获得
                    // 获取分享者的信息
                    $userinfo = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $fxsid)->find();
                    $newscore = $userinfo['score'] + $score;
                    //再次点击将不能获取积分
                    $has_click = Db::name('wd_xcx_pro_score_get')->where('uniacid', $uniacid)->where('suid', $fxsid)->where('types', $types)->where('pid', $id)->where('clicksuid', $suid)->where('creattime', 'gt', $today)->find();
                    if ($has_click > 0) {
                        exit;
                    }

                    //给分享者加积分
                    $res = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $fxsid)->update(array("score" => $newscore));
                    // 插入今天的记录
                    $data = array(
                        "uniacid" => $uniacid,
                        "suid" => $fxsid,
                        "clicksuid" => $suid,
                        "pid" => $id,
                        "types" => $types,
                        "score" => $score,
                        "creattime" => time()
                    );
                    Db::name('wd_xcx_pro_score_get')->insert($data);
                    // 更新积分流水记录
                    $order_id = date("Y", time()) . date("m", time()) . date("d", time()) . date("H", time()) . date("i", time()) . date("s", time()) . rand(1000, 9999);
                    $clickscore = array(
                        "uniacid" => $uniacid,
                        "orderid" => $order_id,
                        "suid" => $userinfo['id'],
                        "type" => "add",
                        "score" => $score,
                        "message" => "他人点击分享获取积分",
                        "creattime" => time(),
                        "source" => $source
                    );
                    if ($score > 0) {
                        Db::name('wd_xcx_score')->insert($clickscore);
                    }
                }
            }

        }
    }

    // 获取我的积分流水记录
    public function doPagegetmyscorelist()
    {
        $uniacid = input("uniacid");
        $openid = input("openid");
        $suid = input("suid");
        $time = strtotime("2018-05-07");
        $pindex = max(1, intval(input('page')));
        $psize = 10;
        $userinfo = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
        $counts = Db::name('wd_xcx_score')->where('uniacid', $uniacid)->where('suid', $userinfo['id'])->where('creattime', 'gt', $time)->count();
        $list = Db::name('wd_xcx_score')->where('uniacid', $uniacid)->where('suid', $userinfo['id'])->where('creattime', 'gt', $time)->order("creattime desc")->limit(($pindex - 1) * $psize, $psize)->select();
        foreach ($list as $key => &$res) {
            $res['creattime'] = date("Y-m-d H:i:s", $res['creattime']);
        }
        // 有没有下一页
        $show = $pindex * $psize;
        if ($show >= ($counts + $psize)) {  //没有下一页了
            $isover = 2;
        } else {
            $isover = 1;
        }
        $adata['isover'] = $isover;
        $adata['lists'] = $list;
        $result['data'] = $adata;
        return json_encode($result);
    }

    // 获取我的流水记录 180509
    public function dopagegetmymoneylist()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $time = strtotime("2018-05-07");
        $pindex = max(1, intval(input('page')));
        $psize = 10;
        $userinfo = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
        $counts = Db::name('wd_xcx_money')->where('uniacid', $uniacid)->where('suid', $userinfo['id'])->where('creattime', "gt", $time)->count();
        $list = Db::name('wd_xcx_money')->where('uniacid', $uniacid)->where('suid', $userinfo['id'])->where('creattime', "gt", $time)->order("creattime desc")->limit(($pindex - 1) * $psize, $psize)->select();
        foreach ($list as $key => &$res) {
            $res['creattime'] = date("Y-m-d H:i:s", $res['creattime']);
        }
        // 有没有下一页
        $show = $pindex * $psize;
        if ($show >= ($counts + $psize)) {  //没有下一页了
            $isover = 2;
        } else {
            $isover = 1;
        }
        $adata['isover'] = $isover;
        $adata['lists'] = $list;
        $result['data'] = $adata;
        return json_encode($result);
    }

    // 获取所有栏目
    public function dopageallCatep()
    {
        $uniacid = input("uniacid");
        $allcate = Db::name('wd_xcx_cate')->where('uniacid', $uniacid)->where('cid', 0)->where('statue', 1)->order("num desc")->select();
        foreach ($allcate as $k => $v) {
            if ($v['type'] == "showArt" || $v['type'] == "showPic" || $v['type'] == "showWxapps") {
                $allcate[$k]['url'] = "/pages/listPic/listPic?cid=" . $v['id'];
            } else if ($v['type'] == "showPro") {
                $allcate[$k]['url'] = "/pages/listPro/listPro?cid=" . $v['id'];
            }
        }
        $allcate_son = Db::name('wd_xcx_cate')->where('uniacid', $uniacid)->where('cid', $allcate[0]['id'])->where('statue', 1)->order("num desc")->select();
        $result['list'] = $allcate;
        $result['son'] = $allcate_son;
        $res['data'] = $result;
        return json_encode($res);
    }

    // 获取子栏目
    public function dopagegetcateson()
    {
        $uniacid = input("uniacid");
        $id = input("id");
        $allcate_son = Db::name('wd_xcx_cate')->where('uniacid', $uniacid)->where('cid', $id)->where('statue', 1)->order("num desc")->select();
        $result['data'] = $allcate_son;
        return json_encode($result);
    }

    public function doPageGetKuaiDi()
    {
        $uniacid = input("uniacid");
        $id = input("id");
        $proinfo = Db::name('wd_xcx_pt_pro')->where('uniacid', $uniacid)->where('id', $id)->field("kuaidi")->find();
        $result['data'] = $proinfo['kuaidi'];
        return json_encode($result);
    }
    // public function doPagedosetmoney()
    // {
    //     $uniacid = input("uniacid");
    //     $openid = input('openid');
    //     $yemoney = input('yemoney');
    //     $wxmoney = input('wxmoney');
    //     $suid = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->find();
    //     $ddata['uniacid'] = $uniacid;
    //     $ddata['orderid'] = input('orderid');
    //     $ddata['suid'] = $suid['id'];
    //     $ddata['type'] = "del";
    //     $ddata['creattime'] = time();
    //     if ($yemoney > 0) {
    //         $umoney = $suid['money'] - $yemoney;
    //         Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->update(array("money" => $umoney));
    //         $ddata['score'] = $yemoney;
    //         $ddata['message'] = "店内支付扣余额";
    //         Db::name('wd_xcx_money')->insert($ddata);
    //     }
    //     if ($wxmoney > 0) {
    //         $ddata['score'] = $wxmoney;
    //         $ddata['message'] = "店内支付微信支付";
    //         Db::name('wd_xcx_money')->insert($ddata);
    //     }
    // }
    //开通vip
    public function doPageregisterVIP()
    {
        $uniacid = input('uniacid');
        $openid = input('openid');
        $suid = input('suid');
        $source = input('source');
        $vipid = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->field("vipid")->value('vipid');

        if (!$vipid) {
            $formId = input('formId');

            // 新增自定义表单数据接收
            if (input('pagedata') && input('pagedata') !== "NULL" && input('pagedata') !== "[]") {
                $forms = stripslashes(html_entity_decode(input('pagedata')));
                $forms = json_decode($forms, TRUE);
                $fmid = Db::name('wd_xcx_vip_config')->where("uniacid", $uniacid)->find()['formid'];
                $formdata = array(
                    'uniacid' => $uniacid,
                    'openid' => $openid,
                    'suid' => $suid,
                    'creattime' => time(),
                    'val' => serialize($forms),
                    'flag' => 0,
                    'formid' => $formId,
                    'source' => $source,
                    'type' => 'VIP申请',
                    'fid' => $fmid,
                );
                $fid = Db::name('wd_xcx_formcon')->insertGetId($formdata);
            } else {
                $fid = 0;
            }
            $form_status = input('form_status');

            $vipid = time() . '' . rand(100000, 999999);

            if ($form_status == 1) {
                $region = str_replace('-', '|', input('region'));
                $data = array(
                    'truename' => input('name'),
                    'birth' => input('date'),
                    'address' => $region . '|' . input('addressDetail')
                );
                $phoneNumber = input('phoneNumber');
                if ($phoneNumber) {
                    $data['phone'] = $phoneNumber;
                }
            } else {
                $data = [];
                $tel1 = '';
                $tel2 = '';
                $tel3 = '';
                if ($forms) {
                    foreach ($forms as $k => $v) {
                        if ($v['type'] == 0) {
                            foreach ($v['tp_text'] as $key => $value) {
                                if ($value['yval'] == '5' && $v['val'] != '') {
                                    $tel1 = $v['val'];
                                    break;
                                } else if ($value['yval'] == '3' && $v['val'] != '') {
                                    $tel2 = $v['val'];
                                    break;
                                } else if ($value['yval'] == '1' && $v['val'] != '') {
                                    $tel3 = $v['val'];
                                    break;
                                }
                            }
                        }
                    }
                    if ($tel1 != '') {
                        $data['phone'] = $tel1;
                    } else if ($tel2 != '') {
                        $data['phone'] = $tel2;
                    } else if ($tel3 != '') {
                        $data['phone'] = $tel3;
                    }
                }
            }
            $shenhe = Db::name('wd_xcx_vip_config')->where("uniacid", $uniacid)->find()['shenhe']; //是否开启审核

            if ($shenhe == 2) {

                $data['vipid'] = $vipid;
                $data['vipcreatetime'] = time();
                $data['grade'] = 1;

                $result1 = Db::name('wd_xcx_vipgrade')->where('uniacid', $uniacid)->where('grade', 1)->find();
                if ($result1) {
                    $userinfo = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
                    $receive = [];
                    $receive['vid'] = $result1['id'];
                    $receive['uniacid'] = $uniacid;

                    if ($result1['score_feedback_flag'] == 1) {
                        if ($result1['score_feedback'] > 0) {
                            $receive['score'] = $result1['score_feedback'];
                            $data['score'] = $userinfo['score'] + $result1['score_feedback'];
                            $score_data = array(
                                "uniacid" => $uniacid,
                                "orderid" => '',
                                "suid" => $userinfo['id'],
                                "type" => "add",
                                "score" => $result1['score_feedback'],
                                "message" => "会员等级回馈积分",
                                "creattime" => time()
                            );
                            $res = Db::name('wd_xcx_score')->insert($score_data);

                        }
                    }

                    if ($result1['coupon_flag'] == 1) {
                        $coupon_give = unserialize($result1['coupon_give']);
                        if (count($coupon_give) > 0) {
                            $receive['coupon'] = [];
                            foreach ($coupon_give as $k => $v) {
                                for ($i = 0; $i < $v['coupon_num']; $i++) {
                                    $coup = [];
                                    $cid = $v['coupon_id'];
                                    //判断优惠券是否为系统发放
                                    $couponinfo = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where('id', $cid)->where('give_type', 'neq', 2)->find();
                                    if($couponinfo){
                                        $use_contents = unserialize($couponinfo['use_contents']);

                                        $couponinfo['use_goods_contents'] = unserialize($couponinfo['use_goods_contents']);
                                        $couponinfo['use_type'] = $use_contents['use_type'];
                                        $coup['uniacid'] = $uniacid;
                                        $coup['suid'] = $suid;
                                        $coup['cid'] = $cid;
                                        if($use_contents['use_type'] == 1) {
                                            $coup['btime'] = strtotime(date("Y-m-d")); //当天开始时间戳
                                            $coup['etime'] = strtotime(date("Y-m-d")) + 3600 * 24 * $use_contents['use_time'];
                                        }else if($use_contents['use_type'] == 2){
                                            $coup['btime'] = strtotime(date("Y-m-d")) + 3600 * 24; //次日开始时间戳为今天开始时间戳加一天时间戳
                                            $coup['etime'] = strtotime(date("Y-m-d")) + 3600 * 24 * ($use_contents['use_time'] + 1); //今天0点时间戳加上n+1天的时间戳
                                        }else{
                                            $use_time = explode(',', $use_contents['use_time']);
                                            $coup['btime'] = $use_time[0];
                                            $coup['etime'] = $use_time[1];
                                        }
                                        $coup['title'] = $couponinfo['title'];
                                        $coup['pay_money'] = $couponinfo['pay_money'];
                                        $coup['price'] = $couponinfo['price'];
                                        $coup['color'] = $couponinfo['color'];
                                        $coup['ltime'] = time();
                                        $coupon_id = Db::name('wd_xcx_coupon_user')->insertGetId($coup);
                                    }
                                }
                                $receive['coupon'][$k]['coupon_id'] = $coupon_id;
                                $receive['coupon'][$k]['coupon_num'] = $v['coupon_num'];
                            }
                            $receive['coupon'] = serialize($receive['coupon']);
                        }
                    }
                    $receive['suid'] = $suid;
                    Db::name('wd_xcx_vip_receive')->insert($receive);
                }

                $result = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update($data);
                $res = array();
                if (!$result) {
                    $res['data'] = 2;
                    return json_encode($res);
                } else {
                    $vipdata = array(
                        'openid' => $openid,
                        'suid' => $suid,
                        'uniacid' => $uniacid,
                        'vipid' => $vipid,
                        'source' => $source,
                        'fid' => $fid,
                        'formid' => $formId,
                        'flag' => 4,
                        'applytime' => date("Y-m-d H:i:s", time())
                    );
                    Db::name('wd_xcx_vip_apply')->insert($vipdata);

                    if ($source != 3) {
                        if ($source == 1) {
                            $user_info = Db::name('wd_xcx_user')->where('suid', $suid)->find();
                            $jsons = [];
                            $jsons['nickname'] = $user_info['nickname'];
                            $jsons['tel'] = $userinfo['phone'];
                            $jsons = serialize($jsons);
                            sendSubscribe($uniacid, 8, $openid, $jsons);  //模板消息发送
                        } else if ($source == 6) {
                            $openid = Db::name('wd_xcx_qq_user')->where('suid', $suid)->value('openid');
                            $jsons = ['vipid' => $vipid, 'cardname' => input("cardname"), 'name' => input('name')];
                            $jsons = serialize($jsons);
                            tpl_send($uniacid, 3, $openid, $source, $formId, $jsons);  //模板消息发送
                        } else if ($source == 5) {
                            $openid = Db::name('wd_xcx_toutiao_user')->where('suid', $suid)->value('openid');
                            $jsons = ['vipid' => $vipid, 'cardname' => input("cardname"), 'name' => input('name')];
                            $jsons = serialize($jsons);
                            tpl_send($uniacid, 3, $openid, $source, $formId, $jsons);  //模板消息发送
                        }
                    }
                    $res['data'] = 3;
                    return json_encode($res);
                }
            } else {
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update($data);
                $vipdata = array(
                    'openid' => $openid,
                    'suid' => $suid,
                    'uniacid' => $uniacid,
                    'vipid' => $vipid,
                    'fid' => $fid,
                    'formid' => $formId,
                    'source' => $source,
                    'applytime' => date("Y-m-d H:i:s", time())
                );
                $res = Db::name('wd_xcx_vip_apply')->insert($vipdata);
                $result = [];
                if ($res) {
                    $result['data'] = 1;
                    return json_encode($result);
                } else {
                    $result['data'] = 2;
                    return json_encode($result);
                }
            }
        }
    }

    //查看个人vip信息
    public function doPagegetVIPinfo()
    {
        $uniacid = input('uniacid');
        $openid = input('openid');
        $suid = input('suid');
        $info = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->field("truename as realname,phone as mobile,birth,address,vipid,vipcreatetime")->find();
        $info['address'] = str_replace('|', '', $info['address']);
        $info['year'] = date('Y', $info['vipcreatetime']);
        $info['month_day'] = date('m/d', $info['vipcreatetime']);
        $weeks = ['MON', 'TUE', 'WED', 'THUR', 'FRI', 'SAT', 'SUN'];
        $index = date('w', $info['vipcreatetime']);
        $info['week'] = $weeks[$index];
        $data['data'] = $info;
        return json_encode($data);
    }

    //检查会员卡设置
    public function doPagecheckvip()
    {
        $uniacid = input('uniacid');
        $suid = input('suid');
        $kwd = input('kwd');
        $id = input('id');

        $userinfo = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->field("vipid,grade")->find();
        $vipid = $userinfo['vipid'];
        $grade = $userinfo['grade'];

        if ($kwd == 'bargain') {
            $proinfo = Db::name('wd_xcx_bargain_pro')->where('uniacid', $uniacid)->where('id', $id)->field('vipconfig')->find();
        } else if ($kwd == 'pt') {
            $proinfo = Db::name('wd_xcx_pt_pro')->where('uniacid', $uniacid)->where('id', $id)->field('vipconfig')->find();
        } else {
            $proinfo = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $id)->field('vipconfig')->find();
        }

        if (!empty($proinfo)) {
            $vipconfig = unserialize($proinfo['vipconfig']);

        } else {
            $vipconfig = [];
        }

        $gz = input('gz'); //新规则会员等级购买20190308

        if (empty($vipid)) {
            if ($vipconfig && isset($vipconfig['set1']) && $vipconfig['set1'] == 1) {
                if ($vipconfig['set2'] == 1) {
                    if ($gz == 1) {
                        $result['needgrade'] = isset($vipconfig['set3']) ? intval($vipconfig['set3']) : 0;
                        $result['vipname'] = Db::name('wd_xcx_vipgrade')->where('uniacid', $uniacid)->where('grade', $result['needgrade'])->field('name')->find()['name'];
                        $result['grade'] = $grade;
                    } else {
                        $result = false;
                    }
                    $res['data'] = $result;
                    return json_encode($res);
                } else {
                    $result = true;
                    $res['data'] = $result;
                    return json_encode($res);
                }
            } else {
                $needvip = Db::name('wd_xcx_vip_config')->where('uniacid', $uniacid)->field($kwd)->find()[$kwd];
                //不是会员  会员可进
                if ($needvip == 1) {
                    $result = false;
                    $res['data'] = $result;
                    return json_encode($res);
                } else {
                    $result = true;
                    $res['data'] = $result;
                    return json_encode($res);
                }
            }
        } else {
            if ($gz == 1) {
                if ($vipconfig['set1'] == 1) {
                    if ($vipconfig['set2'] == 1) {
                        $result['needgrade'] = isset($vipconfig['set3']) ? intval($vipconfig['set3']) : 0;
                        $result['vipname'] = Db::name('wd_xcx_vipgrade')->where('uniacid', $uniacid)->where('grade', $result['needgrade'])->field('name')->find()['name'];
                        $result['grade'] = $grade;
                    } else {
                        $result = true;
                    }
                    $res['data'] = $result;
                    return json_encode($res);
                } else {
                    $result = true;
                }
            } else {
                $result = true;
            }
            $res['data'] = $result;
            return json_encode($res);
        }
    }

    //获取商店列表
    public function doPageselectShopList()
    {
        $uniacid = input("uniacid");
        $option1 = input("option1");
        $option2 = input("option2");
        $option3 = input("option3");
        $cid = input('cid');
        $le = input("latitude");
        $ne = input("longitude");
        $page = input('page');
        $prefix = config('database.prefix');
        if ($le && $ne) {
            $sql = "select id,uniacid,name,logo,tel,address,(2 * 6378.137 * ASIN(SQRT(POW(SIN(PI()*(" . $le . "-latitude)/360),2)+COS(PI()*" . $le . "/180)* COS(latitude * PI()/180)*POW(SIN(PI()*(" . $ne . "-longitude)/360),2)))) as distance FROM  {$prefix}wd_xcx_shops_shop WHERE uniacid = {$uniacid} and flag =1 and status=1";
        } else {
            $sql = "select id,uniacid,name,logo,tel,address FROM  {$prefix}wd_xcx_shops_shop WHERE uniacid = {$uniacid} and flag =1 and status=1";
        }

        if (!empty($option1) && ($option1 != '全部分类')) {
            if (empty($cid)) {
                $cid = Db::name('wd_xcx_shops_cate')->where("uniacid", $uniacid)->where("name", $option1)->where("flag", 1)->field("id")->find()['id'];
            }
            $sql .= ' and cid = ' . $cid;
        }
        if ($option3 == '优选商家') {
            $sql .= ' and hot = 1';
        }
        if ($option2 == '综合排序' || !$option2) {
            $sql .= ' order by star desc, num desc';
        }
        if ($option2 == '距离最近') {
            $sql .= ' ORDER BY distance ASC, num desc';
        }
        $shop_size = Db::name('wd_xcx_shops_set')->where("uniacid", $uniacid)->field("num")->find()['num'];
        // $sql .= ' LIMIT 0,'.$shop_size;
        $temp_lists = Db::query($sql);
        $count = count($temp_lists);
        // dump($count);

        if ($page) {
            $temp = ($page - 1) * 6;
            if ($temp < $count + 1) {
                $sql .= " LIMIT $temp,6";
            } else {
                $result['data'] = array();
                return json_encode($result);
            }

        } else {
            $sql .= ' LIMIT 0,6 ';
        }
        // $sql .= ' LIMIT 0,6 ';
        $lists = Db::query($sql);
        // var_dump($sql);
        // var_dump($options);
        foreach ($lists as $key => &$res) {
            $res['linktype'] = 'page';
            $res['logo'] = remote($uniacid, $res['logo'], 1);
            if (isset($res['distance'])) {
                $res['distance'] = $this->beautifyDistance($res['distance']);
            } else {
                $res['distance'] = '暂无信息';
            }

        }
        $result['data'] = $lists;
        return json_encode($result);
    }

    public function beautifyDistance($distance)
    {
        if ($distance < 1) {
            $distance = number_format(floatval($distance) * 1000, 2);
            return "{$distance}m";
        } else {
            $d = number_format(floatval($distance), 2);
            return "{$d}km";
        }
    }

    public function doPagestorelist()
    {
        $uniacid = input("uniacid");
        $store['catelist'] = Db::name('wd_xcx_shops_cate')->where("uniacid", $uniacid)->where("flag", 0)->order("num desc")->select();
        $tjnum = Db::name('wd_xcx_shops_set')->where("uniacid", $uniacid)->field("tjnum")->find()['tjnum'];
        $store['storeHot'] = Db::name('wd_xcx_shops_shop')->where('uniacid', $uniacid)->where("hot", 1)->where("flag", 1)->order("id DESC")->field("id,uniacid,name,logo,hot")->limit(0, $tjnum)->select();
        $num2 = count($store['storeHot']);
        for ($i = 0; $i < $num2; $i++) {
            if (stristr($store['storeHot'][$i]['logo'], 'http')) {
                $store['storeHot'][$i]['logo'] = $store['storeHot'][$i]['logo'];
            } else {
                $store['storeHot'][$i]['logo'] = remote($uniacid, $store['storeHot'][$i]['logo'], 1);
            }
        }
        $result['data'] = $store;
        return json_encode($result);
    }

    public function doPageShowstore_W()
    {
        $uniacid = input("uniacid");
        $id = input("id");
        $store = Db::name('wd_xcx_shops_shop')->where("uniacid", $uniacid)->where("id", $id)->order("id desc")->find();
        if (stristr($store['logo'], 'http')) {
            $store['logo'] = $store['logo'];
        } else {
            $store['logo'] = remote($uniacid, $store['logo'], 1);
        }
        if (stristr($store['bg'], 'http')) {
            $store['bg'] = $store['bg'];
        } else {
            $store['bg'] = remote($uniacid, $store['bg'], 1);
        }
        if ($store['images']) {
            $newimgs = array();
            $imgs = unserialize($store['images']);
            foreach ($imgs as $key => &$res) {
                if (stristr($res, 'http')) {
                    $newimgs[] = $res;
                } else {
                    $newimgs[] = remote($uniacid, $res, 1);
                }
            }
            $store['text'] = $newimgs;
        }
        $goods = Db::name('wd_xcx_shops_goods')->where("uniacid", $uniacid)->where("flag", 1)->where("sid", $id)->where("status", 1)->order("num desc")->select();
        foreach ($goods as $key => &$value) {
            if (stristr($value['thumb'], 'http')) {
                $value['thumb'] = $value['thumb'];
            } else {
                $value['thumb'] = remote($uniacid, $value['thumb'], 1);
            }
        }
        $store['goods'] = $goods;
        $result['data'] = $store;
        return json_encode($result);
    }
    //商品生成订单页面
    // public function doPageDingd(){
    //  $uniacid = input("uniacid");
    //  $id = input("id");
    //  $openid = input("openid");
    //  $flags = true;
    //  //获得用户信息
    //  $user = Db::name('wd_xcx_user')->where("openid",$openid)->where("uniacid",$uniacid)->find();
    //  //获得商品信息
    //  $pro = Db::name('wd_xcx_products')->where("id",$id)->where("uniacid",$uniacid)->find();
    //  if($pro['more_type_num']){
    //      $more_type_num = unserialize($pro['more_type_num']);
    //  }
    //  if($pro['is_more']=="1" or $pro['is_more']== 1 ){    //多规格产品处理
    //      $num = input("num");
    //      $newnum = explode(',',substr($num, 1,strlen($num)-2));
    //      $numarr = array();
    //      foreach ($newnum as $rec) {
    //                $nnn = explode(':',$rec);
    //                $numarr[] = $nnn[1];
    //            }
    //      $guig = unserialize($pro['more_type_x']);
    //      foreach ($guig as $key => &$rec) {
    //          $rec[] = $numarr[$key];
    //      }
    //      $newgg =  serialize($guig);
    //      $order = input("order");
    //      if($order){
    //          $order = input("order");
    //      }else{
    //          $now = time();
    //          $order = date("Y",$now).date("m",$now).date("d",$now).date("H",$now).date("i",$now).date("s",$now).rand(1000,9999);
    //      }
    //      // $cydat = input('chuydate']." ".input('chuytime'];
    //      // $zzcy = strtotime($cydat);
    //      $overtime = time() + 30*60;
    //      $data = array(
    //          "uniacid" => input("uniacid"),
    //          "order_id" => $order,
    //          "suid" => $user['id'],
    //          "openid" =>input("openid"),
    //          "pid" => input("id"),
    //          "thumb"=>$pro['thumb'],
    //          "product"=>$pro['title'],
    //          "yhq" => input("youhui"),
    //          "true_price" => input("zhifu"),
    //          "creattime" =>time(),
    //          "flag"=>0,
    //          "pro_user_name"=>input("pro_name")['pro_name'],
    //          "pro_user_tel"=>input("pro_tel"),
    //          "pro_user_add"=>input("pro_address"),
    //          "pro_user_txt"=>input("pro_txt"),
    //          "overtime"=>$overtime,
    //          "is_more"=>1,
    //          "order_duo"=>$newgg,
    //          "coupon"=>input("yhqid"),
    //      );
    //      // 新增自定义表单数据接收
    //      if($pagedata && $pagedata!=="NULL"){
    //          $forms = stripslashes(html_entity_decode($pagedata));
    //          $forms = json_decode($forms,TRUE);
    //          $data['beizhu_val'] = serialize($forms);
    //      }
    //      // echo "<pre>";
    //      // var_dump($data);
    //      // echo "</pre>";
    //      // die();
    //      if($order){
    //          // die();
    //          $res = Db::name('wd_xcx_order')->where("order_id",$order)->where("uniacid",$uniacid)->update($data);
    //          //var_dump("11--");
    //          //var_dump($res);
    //      }else{
    //          // die();
    //          $res = Db::name('wd_xcx_order')->insert($data);
    //          //var_dump("22--");
    //          //var_dump($res);
    //      }
    //      if($res){
    //          $data['success'] = 1;
    //          $data['xg'] = $pro['pro_xz'];
    //          $result['data'] = $data;
    //          return json_encode($result);
    //      }
    //  }
    //  //20170925  新增我的购买量
    //  $openid = input("openid");
    //  $pid = $orders['pid'];
    //  $myorders = Db::name('wd_xcx_order')->where("pid",$pid)->where("openid",$openid)->where("uniacid",$uniacid)->where("flag",">=",0)->select();
    //  // pdo_fetchall("SELECT * FROM ".tablename('sudu8_page_order')." WHERE pid = :pid and openid = :openid and uniacid = :uniacid and flag>=0" , array(':pid' => $pid ,':openid' => $openid ,':uniacid' => $uniacid));
    //  $my_num = 0;
    //  if($myorders){
    //      foreach ($myorders as $res) {
    //          $my_num+= $res['num'];
    //      }
    //  }
    //  //1.生成订单之前再判断次该商品有没有下架及库存剩余量
    //  $num = input("count");
    //  $orderid = input("order");
    //  if(!$orderid){                              //新下单的情况
    //      if($pro['pro_kc']==-1){                 //不限库存
    //          $flags = true;
    //          $syl = $pro['pro_kc'];
    //      }else{                                  //限制库存
    //          if($pro['pro_kc']+$my_num == 0){    //库存为空
    //              $syl = 0;
    //              $flags = false;
    //          }
    //              if( $pro['pro_kc']+$my_num !=0 ){   //库存不为空
    //                  if($pro['pro_xz']==0){          //限量不限购
    //                      if($num > $pro['pro_kc']){
    //                      $syl = $pro['pro_kc'];
    //                      $flags = false;
    //                  }
    //                  }else{                          //限量又限购
    //                      if($my_num + $num > $pro['pro_xz'] || $num > $pro['pro_kc']){
    //                      $syl = $pro['pro_kc'];
    //                      $flags = false;
    //                  }
    //                  }
    //          }
    //      }
    //  }else{
    //      $oinfo = Db::name('wd_xcx_order')->where("order_id",$order)->where("uniacid",$uniacid)->field("num,uniacid,order_id")->find();
    //      // pdo_fetch("SELECT num,uniacid,order_id FROM ".tablename('sudu8_page_order')." WHERE order_id = :order and uniacid = :uniacid" , array(':order' => $orderid ,':uniacid' => $uniacid));
    //      $ddnum = $oinfo['num'];
    //      if($pro['pro_kc']==-1){   //不限库存
    //          $flags = true;
    //          $syl = $pro['pro_kc'];
    //      }else{
    //          $cha = $ddnum - $num;  //订单号里面的数值相差几个
    //          $new_num = $my_num - $cha;  //获得现在新提交数
    //          if($new_num < 0){   //又增加了购买量
    //              $absnum = abs($new_num);
    //              if( $my_num + $absnum > $pro['pro_xz'] || $absnum > $pro['pro_kc']){
    //                  $syl = $pro['pro_kc'];
    //                  $flags = false;
    //              }
    //          }else{
    //              $flags = true;
    //          }
    //      }
    //  }
    //  if($flags && $pro['pro_kc']>=0){    //限制库存 且有库存剩余
    //      if($order){
    //          $order = input("order");
    //          //修改订单的时候商品总数变化
    //          $oinfo = Db::name('wd_xcx_order')->where("order_id",$order_id)->where("uniacid",$uniacid)->find();
    //          // pdo_fetch("SELECT num,uniacid,order_id FROM ".tablename('sudu8_page_order')." WHERE order_id = :order and uniacid = :uniacid" , array(':order' => $order ,':uniacid' => $uniacid));
    //          $onum = $oinfo['num'];
    //          $newnum = $num - $onum;
    //          $ndata['pro_kc'] = $pro['pro_kc'] - $newnum;
    //          Db::name('wd_xcx_products')->where("id",$id)->where("uniacid",$uniacid)->update($ndata);
    //      }else{
    //          $now = time();
    //          $order = date("Y",$now).date("m",$now).date("d",$now).date("H",$now).date("i",$now).date("s",$now).rand(1000,9999);
    //          //新下单的同时立即把商品数量减去
    //          $ndata['pro_kc'] = $pro['pro_kc'] - $num;
    //          Db::name('wd_xcx_products')->where("id",$id)->where("uniacid",$uniacid)->update($ndata);
    //      }
    //      $overtime = time() + 30*60;
    //      $data = array(
    //          "uniacid" => input("uniacid"),
    //          "order_id" => $order,
    //          "suid" => $user['id'],
    //          "openid" =>input("openid"),
    //          "pid" => input("id"),
    //          "thumb"=>$pro['thumb'],
    //          "product"=>$pro['title'],
    //          "price" => input("price"),
    //          "num" => input("count")['count'],
    //          "yhq" => input("youhui"),
    //          "true_price" => input("zhifu"),
    //          "creattime" =>time(),
    //          "flag"=>0,
    //          "pro_user_name"=>input("pro_name"),
    //          "pro_user_tel"=>input("pro_tel"),
    //          "pro_user_add"=>input("pro_address"),
    //          "pro_user_txt"=>input("pro_txt"),
    //          "overtime"=>$overtime,
    //          "coupon"=>input("yhqid")
    //      );
    //      // 新增自定义表单数据接收
    //      if($pagedata]&& $pagedata=="NULL"){
    //          $forms = stripslashes(html_entity_decode($pagedata));
    //          $forms = json_decode($forms,TRUE);
    //          $data['beizhu_val'] = serialize($forms);
    //      }
    //      if($order){
    //          $res = Db::name('wd_xcx_order')->where("order_id",$order)->where("uniacid",$uniacid)->update($data);
    //      }else{
    //          $res = Db::name('wd_xcx_order')->insert($data);
    //      }
    //      if($res){
    //          $data['success'] = 1;
    //          $data['xg'] = $pro['pro_xz'];
    //          $result['data'] = $data;
    //          return json_encode($result);
    //      }
    //  }
    //  if($flags && $pro['pro_kc']<0){    //不限制库存
    //      if($order){
    //          $order = input("order");
    //      }else{
    //          $now = time();
    //          $order = date("Y",$now).date("m",$now).date("d",$now).date("H",$now).date("i",$now).date("s",$now).rand(1000,9999);
    //      }
    //      $overtime = time() + 30*60;
    //      $data = array(
    //          "uniacid" => input("uniacid"),
    //          "order_id" => $order,
    //          "suid" => $user['id'],
    //          "openid" =>input("openid"),
    //          "pid" => input("id"),
    //          "thumb"=>$pro['thumb'],
    //          "product"=>$pro['title'],
    //          "price" => input("price"),
    //          "num" => input("count"),
    //          "yhq" => input("youhui"),
    //          "true_price" => input("zhifu"),
    //          "creattime" =>time(),
    //          "flag"=>0,
    //          "pro_user_name"=>input("pro_name"),
    //          "pro_user_tel"=>input("pro_tel"),
    //          "pro_user_add"=>input("pro_address"),
    //          "pro_user_txt"=>input("pro_txt"),
    //          "overtime"=>$overtime,
    //          "coupon"=>input("yhqid")
    //      );
    //      // 新增自定义表单数据接收
    //      if($pagedata] && $pagedata!=="NULL"){
    //          $forms = stripslashes(html_entity_decode($pagedata));
    //          $forms = json_decode($forms,TRUE);
    //          $data['beizhu_val'] = serialize($forms);
    //      }
    //      if($order]){
    //          $res = Db::name('wd_xcx_order')->where("order_id",$order)->where("uniacid",$uniacid)->update($data);
    //      }else{
    //          $res = Db::name('wd_xcx_order')->insert($data);
    //      }
    //      if($res){
    //          $data['success'] = 1;
    //          $data['xg'] = $pro['pro_xz'];
    //          $result['data'] = $data;
    //          return json_encode($result);
    //      }
    //  }
    //  if(!$flags){
    //      $data['success'] = 0;
    //      $data['syl'] = $syl;
    //      $data['id'] = $id;
    //      $result['data'] = $data;
    //      return json_encode($result);
    //  }
    // }
    //新增评价功能 18.02.22
    public function doPageComment()
    {
        $uniacid = input("uniacid");
        $id = intval(input("id"));
        $pinglun_t = input("pinglun_t");
        $openid = input("openid");
        $data = array(
            'aid' => $id,
            'text' => $pinglun_t,
            'openid' => $openid,
            'uniacid' => $uniacid,
            'createtime' => time()
        );
        $result = Db::name('wd_xcx_comment')->insert($data);
        if ($result == 1) {
            return json_encode(array('result' => 1));
        } else {
            return json_encode(array('result' => 2));
        }
    }

    //页面加载时获取文章id全部评论
    public function doPagecommentFollow()
    {
        $uniacid = input("uniacid");
        $id = intval(input("id"));
        $follow = Db::name('wd_xcx_comment')->where("uniacid", $uniacid)->where("id", $id)->field("id,follow")->find();
        $follow = intval($follow['follow']) + 1;
        $data = array(
            'id' => $id,
            'follow' => $follow,
        );
        $result = Db::name('wd_xcx_comment')->where("id", $id)->update($data);
        return json_encode(array('result' => 1));
    }

    public function doPageGetComment()
    {
        $uniacid = input("uniacid");
        $source = input("source");
        $id = intval(input("id"));
        $flag = intval(input("comms"));
        if ($flag == 1) {
            $comment = Db::name('wd_xcx_comment')->alias('a')->join('wd_xcx_superuser b', 'a.suid = b.id and a.uniacid = b.uniacid', 'left')->where("a.uniacid", $uniacid)->where("a.aid", $id)->where("a.flag", 1)->order("a.follow desc,a.id desc")->field("a.id,a.text,a.createtime,a.follow,b.id as userid")->select();
        } else {
            $comment = Db::name('wd_xcx_comment')->alias('a')->join('wd_xcx_superuser b', 'a.suid = b.id and a.uniacid = b.uniacid', 'left')->where("a.uniacid", $uniacid)->where("a.aid", $id)->where("a.flag", 'neq', 2)->order("a.follow desc, a.id desc")->field("a.id,a.text,a.createtime,a.follow,b.id as userid")->select();
        }
        if ($comment) {
            foreach ($comment as $k => $v) {
                $userinfo = $this->getnameandavatar($source, $uniacid, $v['userid']);
                $comment[$k]['avatar'] = $userinfo['avatar'];
                $comment[$k]['nickname'] = $userinfo['nickname'];
                $comment[$k]['ctime'] = date('Y-m-d H:i:s', $v['createtime']);
            }
        }
        $result['data'] = $comment;
        return json_encode($result);
    }

    public function doPagegetslide_m()
    {
        $uniacid = input("uniacid");
        $set = Db::name('wd_xcx_shops_set')->where("uniacid", $uniacid)->find();
        if (stristr($set['bg'], 'http')) {
            $set['bg'] = $set['bg'];
        } else {
            $set['bg'] = remote($uniacid, $set['bg'], 1);
        }
        // $set['system_name'] = Db::name('wd_xcx_base')->where("uniacid", $uniacid)->field('name')->find()['name'];
        $set['system_name'] = Db::name('wd_xcx_applet')->where("id", $uniacid)->field('name')->find()['name'];
        $set['category'] = Db::name('wd_xcx_shops_cate')->where("uniacid", $uniacid)->field("id,name")->select();
        $result['data'] = $set;
        return json_encode($result);
    }

    //$_W怎么变换
    public function doPageis_apply()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        if ($uniacid && $suid) {
            $shop = Db::name('wd_xcx_shops_shop')->where(["uniacid" => $uniacid, "suid" => $suid])->find();
            if (!empty($shop) && $shop['status'] == '2') {
                Db::name('wd_xcx_shops_shop')->where("uniacid", $uniacid)->where('suid', $suid)->delete();
                return json_encode(array('is_apply' => 3));
            } else if (!empty($shop) && $shop['status'] == '1') {
                $data = array(
                    'username' => $shop['username'],
                    'password' => $shop['password'],
                    'url' => ROOT_HOST . '/index/login/bizlogin.html',
                );
                return json_encode(array('is_apply' => 2, 'data' => $data));
            } else if (!empty($shop) && $shop['status'] == '0') {
                return json_encode(array('is_apply' => 1));
            } else {
                return json_encode(array('is_apply' => 0));
            }
        }

    }

    //上传图片不知道怎么改
    public function doPageuploadImg()
    {
        $uniacid = input("uniacid");
        load()->func('file');
        dump($_FILES['file']);
        die;
        // exit;
        // if(input('setting']['remote']['type'] == 0){
        //   $path = file_upload($_FILES['file']);
        //   $path = $path['path'];
        // }else{
        //   $path = file_upload($_FILES['file']);
        //   $rpath = $path['path'];
        //   $path = file_remote_upload($rpath,false);
        //   $path = input('attachurl_remote'].$rpath;
        // }
        // if(strpos($path,'http')===false){
        //   $path = remote($uniacid,$path,1);
        // }
        $result['data'] = $path;
        return json_encode($result);
    }

    public function doPageshopApply()
    {
        $uniacid = input("uniacid");
        $openid = input('openid');
        $suid = input('suid');
        $source = input('source');
        $formdata = htmlspecialchars_decode(input("formdata"));
        $formdata = json_decode($formdata, true);
        $formdata['uniacid'] = $uniacid;
        $formdata['createtime'] = time();
        $formdata['formid'] = input('formID');
        $formdata['latitude'] = '';
        $formdata['longitude'] = '';
        if (isset($formdata['latlong'])) {
            $latlong = explode(',', $formdata['latlong']);
            unset($formdata['latlong']);
            $formdata['latitude'] = $latlong[0];
            $formdata['longitude'] = $latlong[1];
        }
        $formdata['suid'] = $suid;
        $formdata['source'] = $source;
        $formdata['openid'] = $openid;
        $res = Db::name('wd_xcx_shops_shop')->where('username', $formdata['username'])->select();
        if (count($res) > 0) {
            return json_encode(array('data' => -1));
        } else {
            $apply = Db::name('wd_xcx_shops_set')->where('uniacid', $uniacid)->value('apply');
            if (intval($apply) == 2) {
                $formdata['status'] = 1;
            }
            $data = Db::name('wd_xcx_shops_shop')->insert($formdata);
            if ($data > 0) {
                return json_encode(array('data' => 1));
            }
        }
    }

    public function doPageshowPro_W()
    {
        $uniacid = input("uniacid");
        $id = intval(input("id"));
        $suid = input('suid');
        $pro = Db::name('wd_xcx_shops_goods')->where("uniacid", $uniacid)->where("id", $id)->find();

        $videourl = $pro['video'];
        if ($pro['video'] != '') {
            if (strpos($videourl, ".mp4") !== false || strpos($videourl, ".MP4") !== false) {
                $pro['video'] = $videourl;
            } else {
                include 'videoInfo.php';
                $videoInfo = new videoInfo();
                if (preg_match("/^(http:\/\/|https:\/\/).*$/", $pro['video'])) {
                    $videodata = $videoInfo->getVideoInfo($pro['video']);
                    $pro['video'] = $videodata['url'];
                } else {
                    $pro['video'] = '';
                }
            }
        }
        if ($pro['sid']) {
            $pro['shopinfo'] = Db::name('wd_xcx_shops_shop')->where('uniacid', $uniacid)->where('id', $pro['sid'])->find();
        }
        $data = array(
            'pageview' => $pro['pageview'] + 1,
        );
        Db::name('wd_xcx_shops_goods')->where("uniacid", $uniacid)->where("id", $id)->update($data);
        $num = 0;
        if($pro['images']){
            $pro['images'] = unserialize($pro['images']);
            $num = count($pro['images']);
            for ($i = 0; $i < $num; $i++) {
                if (stristr($pro['images'][$i], 'http')) {
                    $pro['images'][$i] = $pro['images'][$i];
                } else {
                    $pro['images'][$i] = remote($uniacid, $pro['images'][$i], 1);
                }
            }
        }else{
            $pro['images'] = [];
        }
        if (stristr($pro['thumb'], 'http')) {
            $pro['thumb'] = $pro['thumb'];
        } else {
            $pro['thumb'] = remote($uniacid, $pro['thumb'], 1);
        }
        //判断我又没有收藏过
        $collectcount = 0;
        if ($suid) {
            $collect = Db::name('wd_xcx_collect')->where("uniacid", $uniacid)->where("suid", $suid)->where("type", 'shopsPro')->where("cid", $id)->count();
            if ($collect) {
                $collectcount = 1;
            }
        }
        $pro['collectcount'] = $collectcount;

        //获取万能表单信息
        $formset = $pro['formset'];
        if ($formset != 0 && $formset != "") {
            $forms = Db::name('wd_xcx_formlist')->where('id', $formset)->find();
            $forms2 = unserialize($forms['tp_text']);
            $pro['formdescs'] = $forms['descs'];
            $tp_text = [];
            if ($forms2) {
                foreach ($forms2 as $key => &$res) {
                    if ($key > 0) {
                        $tp_key = $key - 1;
                        if ($res['required'] == true) {
                            $tp_text[$tp_key]['ismust'] = 1;
                        } else {
                            $tp_text[$tp_key]['ismust'] = 0;
                        }
                        $tp_text[$tp_key]['name'] = $res['label'];
                        if ($res['field_type'] == '单行文本') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0]['yval'] = 0;
                        } else if ($res['field_type'] == '多行文本') {
                            $tp_text[$tp_key]['type'] = 1;
                            $tp_text[$tp_key]['tp_text'] = '';
                        } else if ($res['field_type'] == '多选' || $res['field_type'] == '单选') {
                            if ($res['field_type'] == '多选') {
                                $tp_text[$tp_key]['type'] = 3;
                            } else {
                                $tp_text[$tp_key]['type'] = 4;
                            }
                            foreach ($res['field_options']['options'] as $key1 => &$rec1) {
                                $rec1['yval'] = $rec1['label'];
                                unset($rec1['label']);
                            }
                            $tp_text[$tp_key]['tp_text'] = $res['field_options']['options'];
                        } else if ($res['field_type'] == '下拉选') {
                            $tp_text[$tp_key]['type'] = 2;
                            $tp_text[$tp_key]['tp_text'] = [];
                            foreach ($res['field_options']['options'] as $key2 => &$rec2) {
                                array_push($tp_text[$tp_key]['tp_text'], $rec2['label']);
                            }
                        } else if ($res['field_type'] == '日期') {
                            $tp_text[$tp_key]['type'] = 7;
                        } else if ($res['field_type'] == '时间') {
                            $tp_text[$tp_key]['type'] = 11;
                        } else if ($res['field_type'] == '图片') {
                            $tp_text[$tp_key]['type'] = 5;
                            $tp_text[$tp_key]['tp_text'] = $res['field_options']['maxpic'];
                            $tp_text[$tp_key]['z_val'] = array();
                        } else if ($res['field_type'] == '手机号') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0]['yval'] = 1;
                        } else if ($res['field_type'] == '身份证') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0]['yval'] = 7;
                        }
                        $tp_text[$tp_key]['val'] = '';
                    }
                }
            }
            $pro['forms'] = $tp_text;
        } else {
            $pro['formdescs'] = '';
        }

        $result['data'] = $pro;
        return json_encode($result);
    }

    //生成订单
    public function doPageDingd_W()
    {
        $uniacid = input("uniacid");
        $source = input('source');
        $suid = input('suid');
        $id = input("id");
        $openid = input("openid");
        $flags = true;
        //获得用户信息
        $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->find();
        //获得商品信息
        $pro = Db::name('wd_xcx_shops_goods')->where("uniacid", $uniacid)->where("id", $id)->find();

        $count = input("count");
        $storage = $pro['storage'];
        // dump($pro);die;
        if ($count > $storage || $pro['flag'] == '0') {
            $flags = false;
        }
        if ($flags) {
            if (input("order") != '') {
                $order = input("order");
                //修改订单的时候商品总数变化
                $oinfo = Db::name('wd_xcx_duo_products_order')->where("order_id", $order)->where("uniacid", $uniacid)->find();
                $detail = unserialize($oinfo['jsondata']);
                $newnum = $count - $detail['num'];
                $ndata['storage'] = $pro['storage'] - $newnum;
                Db::name('wd_xcx_shops_goods')->where("id", $id)->where("uniacid", $uniacid)->update($ndata);
            } else {
                $now = time();
                $order = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
                // dump($order);die;
                //新下单的同时立即把商品数量减去
                $ndata['storage'] = $pro['storage'] - $count;
                //增加销量
                $ndata['rsales'] = $pro['rsales'] + $count;
                Db::name('wd_xcx_shops_goods')->where("id", $id)->where("uniacid", $uniacid)->update($ndata);
            }
            $sid = Db::name('wd_xcx_shops_goods')->where("uniacid", $uniacid)->where("id", $id)->find()['sid'];
            $jsondata[0] = array(
                'is_from_shops' => true,
                'creattime' => time(),
                'uniacid' => $uniacid,
                'suid' => $user['id'],
                'num' => $count,
            );
            $jsondata[0]['proinfo'] = Db::name('wd_xcx_shops_goods')->where("uniacid", $uniacid)->where("id", $id)->field("id,sid,title,pageview,rsales,sellprice,marketprice,storage,thumb")->find();
            $jsondata[0]['pid'] = $jsondata[0]['proinfo']['id'];
            if (stristr($jsondata[0]['proinfo']['thumb'], 'http')) {
                $jsondata[0]['proinfo']['thumb'] = $jsondata[0]['proinfo']['thumb'];
            } else {
                $jsondata[0]['proinfo']['thumb'] = remote($uniacid, $jsondata[0]['proinfo']['thumb'], 1);
            }
            $jsondata[0]['proinfo']['pid'] = $jsondata[0]['proinfo']['id'];
            unset($jsondata[0]['proinfo']['id']);
            $jsondata[0]['proinfo']['kc'] = $jsondata[0]['proinfo']['storage'];
            unset($jsondata[0]['proinfo']['storage']);
            $jsondata[0]['proinfo']['price'] = $jsondata[0]['proinfo']['sellprice'];
            unset($jsondata[0]['proinfo']['sellprice']);
            $jsondata[0]['baseinfo'] = array(
                'id' => $jsondata[0]['proinfo']['pid'],
                'title' => $jsondata[0]['proinfo']['title']
            );
            unset($jsondata[0]['proinfo']['title']);
            if (stristr($jsondata[0]['proinfo']['thumb'], 'http')) {
                $jsondata[0]['baseinfo']['thumb'] = $jsondata[0]['proinfo']['thumb'];
                $jsondata[0]['proinfo']['thumb'] = $jsondata[0]['proinfo']['thumb'];
            } else {
                $jsondata[0]['baseinfo']['thumb'] = remote($uniacid, $jsondata[0]['proinfo']['thumb'], 1);
                $jsondata[0]['proinfo']['thumb'] = remote($uniacid, $jsondata[0]['proinfo']['thumb'], 1);
            }
            $m_address['address'] = input("pro_address");
            $m_address['name'] = input("pro_name");
            $m_address['mobile'] = input("pro_tel");
            // dump($order);die;
            $data = array(
                "order_id" => $order,
                "suid" => $suid,
                "source" => $source,
                "suid" => $user['id'],
                "openid" => input("openid"),
                'sid' => $sid,
                'price' => input("zhifu"),
                'jsondata' => serialize($jsondata),
                'coupon' => input("yhqid"),
                'jf' => 0,
                'address' => 0,
                'm_address' => serialize($m_address),
                'liuyan' => input("pro_txt"),
                'formid' => input("formid"),
            );
            if ($user['money'] < input('zhifu')) {
                $data['payprice'] = input('zhifu') - $user['money'];
            } else {
                $data['payprice'] = 0;
            }
            if ($pro['kuaidi'] == 2) {
                $data['nav'] = input('nav');
            } else {
                if ($pro['kuaidi'] == 0) {
                    $data['nav'] = 1;
                } else {
                    $data['nav'] = 2;
                }
            }
            if ($data['nav'] == 2) {
                $shopinfo = Db::name('wd_xcx_shops_shop')->where("uniacid", $uniacid)->where('id', $sid)->field('name, address, tel, worktime')->find();
                $store_info = [
                    'store_name' => $shopinfo['name'],
                    'store_tel' => $shopinfo['tel'],
                    'store_address' => $shopinfo['address'],
                    'store_hours' => $shopinfo['worktime'],
                ];
                $data['store_info'] = serialize($store_info);
            }
            if (input('order')) {
                $res = Db::name('wd_xcx_duo_products_order')->where("uniacid", $uniacid)->where("suid", $user['id'])->update($data);
            } else {
                $data['uniacid'] = $uniacid;
                $data['flag'] = 0;
                $data['creattime'] = time();
                $res = Db::name('wd_xcx_duo_products_order')->insert($data);
            }
            if ($res) {
                $data['success'] = 1;
                $result['data'] = $data;
                return json_encode($result);
            }

        }
        if (!$flags) {
            $data['success'] = 0;
            $data['syl'] = $storage;
            $data['id'] = $id;
            $result['data'] = $data;
            return json_encode($result);
        }
    }

    //多商户余额支付
    public function doPageyuzhifu_w()
    {
        $uniacid = input('uniacid');
        $suid = input('suid');
        $openid = input('openid');
        $userinfo = Db::name('wd_xcx_superuser')->where('id', $suid)->field('money')->find();
        $money = input('money');
        $order_id = input('order_id');
        $formId = input('form_id');  //模板formId
        //支付流水
        $data = array(
            'uniacid' => $uniacid,
            'suid' => $suid,
            'orderid' => $order_id,
            'suid' => $suid,
            'score' => $money,
            'creattime' => time(),
            'type' => 'del',
            'message' => '消费'
        );
        Db::name('wd_xcx_money')->insert($data);
        //支付完成更新状态
        if ($userinfo['money'] < $money) {
            return json_encode(array('data' => -1));
        } else {
            $user_money = $userinfo['money'] - $money;
            $user_money = $user_money < 0 ? 0 : $user_money;
            Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update(['money' => $user_money]);
        }
        $sdata = array(
            "flag" => 1
        );
        $res = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update($sdata);
        $orderinfo = Db::name('wd_xcx_duo_products_order')->where('order_id', $order_id)->find();
        //处理优惠券
        if ($orderinfo['coupon']) {
            Db::name('wd_xcx_coupon_user')->where('id', $orderinfo['coupon'])->update(['flag' => 1]);
        }

        $source = input('source');
        if ($source != 3 && $source != 1) {
            $jsondata = unserialize($orderinfo['jsondata']);
            $jsons = array(
                'orderid' => $order_id,
                'fprice' => $orderinfo['price']
            );

            $fmsg = "产品：" . $jsondata[0]['baseinfo']['title'] . " 购买数：" . $jsondata[0]['num'] . " 购买单价：" . $jsondata[0]['proinfo']['price'] . "元 ";
            $jsons['fmsg'] = $fmsg;
            $jsons = serialize($jsons);
            tpl_send($uniacid, 1, $openid, $source, $formId, $jsons);

        }

        $this->sendMailToAdmin($uniacid, $order_id, 'duoshop');
        //发送订单短信给商家
        $this->sendSms($uniacid, $money);

        $result['data'] = $res;
        return json_encode($result);

    }

    //多商户微信支付
    public function doPagezhifu_W()
    {
        $uniacid = input("uniacid");
        $openid = input("openid");
        $suid = input("suid");
        $money = input("money");
        $types = input("types");
        $order_id = input("order_id");
        $userinfo = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->find();
        $formId = input('form_id');
        $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->find();
        include 'WeixinPay.php';
        $appid = $app['appID'];
        $openid = $openid;
        $mch_id = $app['mchid'];
        $key = $app['signkey'];
        $out_trade_no = $order_id; //订单号
        $body = "账户充值";
        $total_fee = $money * 100;
        if (isset($app['identity'])) {
            $identity = $app['identity'];
        } else {
            $identity = 1;
        }
        if (isset($app['sub_mchid'])) {
            $sub_mchid = $app['sub_mchid'];
        } else {
            $sub_mchid = 0;
        }
        $info = 'duo' . "|" . $formId . "|" . $uniacid;
        $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, $identity, $sub_mchid, $info);
        $return = $weixinpay->pay();
        $prepay_id = explode('=', $return['package'])[1];
        Db::name('wd_xcx_duo_products_order')->where('order_id', $order_id)->update(['pay_info' => serialize($return), 'prepayid' => $prepay_id]);

        $return['order_id'] = $order_id;
        $adata['data'] = $return;
        $adata['message'] = "success";
        return json_encode($adata);
    }

    //支付成功
    public function doPagezhifuSuccess_W()
    {
        $uniacid = input("uniacid");
        $order_id = input("order_id");
        $openid = input("openid");
        $suid = input("suid");
        $userinfo = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->find();
        Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update(['money' => 0]);
        //消费流水
        $price = Db::name('wd_xcx_duo_products_order')->where('order_id', $order_id)->field('price')->find()['price'];
        $data = array(
            'uniacid' => $uniacid,
            'orderid' => $order_id,
            'suid' => $userinfo['id'],
            'score' => $price,
            'creattime' => time(),
            'type' => 'del',
            'message' => '消费'
        );

        Db::name('wd_xcx_money')->insert($data);
        $data = array(
            "flag" => 1
        );
        $res = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update($data);
        $result['data'] = $res;
        return json_encode($result);
    }

    //多商户订单信息
    public function doPageGetShopOrderInfo()
    {
        $uniacid = input("uniacid");
        $orderid = input('orderid');

        $orderinfo = Db::name('wd_xcx_duo_products_order')->where([
            'uniacid' => $uniacid,
            'order_id' => $orderid,
            'flag' => 0
        ])->find();

        if ($orderinfo) {
            $jsondata = unserialize($orderinfo['jsondata']);
            $orderinfo['jsondata'] = $jsondata;
            $orderinfo['m_address'] = unserialize($orderinfo['m_address']);

            $datas = [
                'thumb' => $jsondata[0]['proinfo']['thumb'],
                'title' => $jsondata[0]['baseinfo']['title'],
                'sellprice' => $jsondata[0]['proinfo']['price'],
                'storage' => $jsondata[0]['proinfo']['kc'],
                'num' => $jsondata[0]['num'],
                'hjjg' => $jsondata[0]['proinfo']['price'] * $jsondata[0]['num']
            ];
            if ($orderinfo['coupon']) {
                $coupon = Db::name('wd_xcx_coupon_user')->alias('a')->join('wd_xcx_coupon b', 'a.cid=b.id')->where('a.uniacid', $uniacid)->where("a.id", $orderinfo['coupon'])->field('b.*')->find();
                $datas['cou_price'] = $coupon['price'];
            }

            $shopinfo = Db::name('wd_xcx_shops_shop')->where('uniacid', $uniacid)->where('id', $orderinfo['sid'])->field('name, tel, address')->find();
            $datas['shopinfo'] = $shopinfo;

            $orderinfo['datas'] = $datas;
            $result = ['error' => 0, 'data' => $orderinfo];
            return json_encode($result);

        } else {
            $result = ['error' => 1, 'msg' => '订单不存在或已过期'];
            return json_encode($result);
        }
    }


    //满减优惠
    public function doPgaegetmoneyoff()
    {
        $uniacid = input("uniacid");
        $moneyoff = Db::name('wd_xcx_moneyoff')->where("uniacid", $uniacid)->order("reach asc")->select();

        $formset = Db::name('wd_xcx_duo_products_yunfei')->where('uniacid', $uniacid)->field('formset')->find();
        if ($formset) {
            $result['formset'] = $formset['formset'];
            $forms = Db::name('wd_xcx_formlist')->where('id', $formset['formset'])->find();
            $forms2 = unserialize($forms['tp_text']);
            if ($formset['formset'] > 0) {
                $tp_text = [];
                if ($forms2) {
                    foreach ($forms2 as $key => &$res) {
                        if ($key > 0) {
                            $tp_key = $key - 1;
                            if ($res['required'] == true) {
                                $tp_text[$tp_key]['ismust'] = 1;
                            } else {
                                $tp_text[$tp_key]['ismust'] = 0;
                            }
                            $tp_text[$tp_key]['name'] = $res['label'];
                            if ($res['field_type'] == '单行文本') {
                                $tp_text[$tp_key]['type'] = 0;
                                $tp_text[$tp_key]['tp_text'][0] = 0;
                            } else if ($res['field_type'] == '多行文本') {
                                $tp_text[$tp_key]['type'] = 1;
                                $tp_text[$tp_key]['tp_text'] = '';
                            } else if ($res['field_type'] == '多选' || $res['field_type'] == '单选') {
                                if ($res['field_type'] == '多选') {
                                    $tp_text[$tp_key]['type'] = 3;
                                } else {
                                    $tp_text[$tp_key]['type'] = 4;
                                }
                                $tp_text[$tp_key]['tp_text'] = [];
                                foreach ($res['field_options']['options'] as $key1 => &$rec1) {
                                    array_push($tp_text[$tp_key]['tp_text'], $rec1['label']);
                                }
                            } else if ($res['field_type'] == '下拉选') {
                                $tp_text[$tp_key]['type'] = 2;
                                $tp_text[$tp_key]['tp_text'] = [];
                                foreach ($res['field_options']['options'] as $key2 => &$rec2) {
                                    array_push($tp_text[$tp_key]['tp_text'], $rec2['label']);
                                }
                            } else if ($res['field_type'] == '日期') {
                                $tp_text[$tp_key]['type'] = 7;
                            } else if ($res['field_type'] == '时间') {
                                $tp_text[$tp_key]['type'] = 11;
                            } else if ($res['field_type'] == '图片') {
                                $tp_text[$tp_key]['type'] = 5;
                                $tp_text[$tp_key]['tp_text'] = $res['field_options']['maxpic'];
                                $tp_text[$tp_key]['z_val'] = array();
                            } else if ($res['field_type'] == '手机号') {
                                $tp_text[$tp_key]['type'] = 0;
                                $tp_text[$tp_key]['tp_text'][0] = 1;
                            } else if ($res['field_type'] == '身份证') {
                                $tp_text[$tp_key]['type'] = 0;
                                $tp_text[$tp_key]['tp_text'][0] = 7;
                            }
                            $tp_text[$tp_key]['val'] = '';
                        }
                    }
                }

                $result['forms'] = $tp_text;
                $result['descs'] = $forms['descs'];
            }

        } else {
            $result['formset'] = 0;
        }
        $result['data'] = $moneyoff;
        return json_encode($result);
    }

    //支付之前（所有订单公用接口）
    public function dopagebeforepay()
    {
        $uniacid = input("uniacid");
        $openid = input('openid');
        $suid = input('suid');
        $types = input("types");
        if ($types == "vipgrade") {
            $order_id = input('order_id');
            $order = Db::name("wd_xcx_vip_order")->where("uniacid", $uniacid)->where("order_id", $order_id)->find();
            $pay_price = floatval($order['wxpay']);
            $openid = input('openid');
            if ($order['pay_info']) {
                $weixinpay = unserialize($order['pay_info']);
            } else {
                $body = '会员等级升级支付';
                $weixinpay = $this->getweixinpayinfo($uniacid, $openid, $order_id, $pay_price, $body, $types . "|" . input('formId') . "|" . $uniacid);  //最后一个参数为附加参数，这里存订单类型+formId
                //将支付信息保存
                Db::name("wd_xcx_vip_order")->where("uniacid", $uniacid)->where("order_id", $order_id)->update(['pay_info' => serialize($weixinpay)]);
            }

            $weixinpay['err'] = 0;
            $result['data'] = $weixinpay;
            return json_encode($result);
        }
        if ($types == "bargain") {
            $order_id = input('order_id');
            $order = Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("order_id", $order_id)->find();
            $pay_price = floatval($order['true_price']);
            $openid = input('openid');
            $kucun = Db::name("wd_xcx_bargain_pro")->where("uniacid", $uniacid)->where("id", $order['pid'])->value("kc");
            if (intval($kucun) == 0) {
                $results['data'] = array('err' => 4, 'message' => "库存不足！剩余0件");
                return json_encode($results);
            }
            if ($order['pay_info']) {
                $weixinpay = unserialize($order['pay_info']);
            } else {
                $body = '砍价商品支付';
                $weixinpay = $this->getweixinpayinfo($uniacid, $openid, $order_id, $pay_price, $body, $types . "|" . input('formId') . "|" . $uniacid);  //最后一个参数为附加参数，这里存订单类型+formId
                //将支付信息保存
                Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("order_id", $order_id)->update(['pay_info' => serialize($weixinpay)]);
            }

            $weixinpay['err'] = 0;
            $result['data'] = $weixinpay;
            return json_encode($result);
        }
        if ($types == 'duo') {
            $order_id = input("order_id");
            $order = Db::name('wd_xcx_duo_products_order')->where("uniacid", $uniacid)->where("order_id", $order_id)->find();
            $price = round(floatval($order['price']), 2);
            $payprice = round(floatval($order['payprice']), 2);
            $gpc_price = floatval(input("price"));
            $openid = input("openid");
            $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->find();
            $yue = floatval($user['money']);
            if ($order['sid'] != 0) {
                $body = "商品支付";
                if ($order['pay_info']) {
                    $weixinpay = unserialize($order['pay_info']);
                } else {
                    $weixinpay = $this->getweixinpayinfo($uniacid, $openid, $order_id, $payprice, $body, $types . "|" . input('formId') . "|" . $uniacid);  //最后一个参数为附加参数，这里存订单类型+formId
                    //将支付信息保存
                    Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update(['pay_info' => serialize($weixinpay)]);
                }

                $weixinpay['err'] = 0;
                $result['data'] = $weixinpay;
                return json_encode($result);
                exit;
            } else {
                if ($price == $gpc_price && $price > $yue && round($price - $yue, 2) . '' == $payprice . '') {
                    //支付之前处理过期的优惠券
                    $this->overtimeyhq($uniacid, $user['id']);
                    //支付之前判断下优惠券有没有在其他地方使用或者过期
                    if ($order['coupon'] != 0) {
                        $coupon = Db::name('wd_xcx_coupon_user')->where("uniacid", $uniacid)->where("id", $order['coupon'])->find();
                        $couponinfo = Db::name('wd_xcx_coupon')->where("uniacid", $uniacid)->where("id", $coupon['cid'])->find();
                        if ($coupon['flag'] == 1) {
                            $this->checkthisyhq($uniacid, $order_id, $order['price'], $couponinfo['price'], $types);
                            $data = array(
                                'err' => 2,
                                'message' => '该优惠券已被使用'
                            );
                            $result['data'] = $data;
                            return json_encode($result);
                            exit;
                        }
                        if ($coupon['flag'] == 2) {
                            $this->checkthisyhq($uniacid, $order_id, $order['price'], $couponinfo['price'], $types);
                            $data = array(
                                'err' => 3,
                                'message' => '该优惠劵已过期'
                            );
                            $result['data'] = $data;
                            return json_encode($result);
                            exit;
                        }
                    }
                    //支付前判断库存
                    $jsondata = unserialize($order['jsondata']);
                    foreach ($jsondata as $key => &$value) {
                        $buy_proinfo = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $value['pvid'])->find();
                        if ($buy_proinfo) {
                            if ($buy_proinfo['use_more'] == 1) {
                                $kc = Db::name('wd_xcx_duo_products_type_value')->where("id", $value['proinfo']['id'])->find()['kc'];
                            } else {
                                $kc = $buy_proinfo['pro_kc'];
                            }
                        } else {
                            $kc = $value['proinfo']['kc'];
                        }
                        if ($value['num'] > $kc) {
                            $message = $value['baseinfo']['title'] . "(" . chop($value['proinfo']['ggz'], ',') . ")库存不足";
                            $data = array(
                                'message' => $message,
                                'err' => 4
                            );
                            $result['data'] = $data;
                            return json_encode($result);
                            exit;
                        }
                    }
                    $body = "商品支付";
                    if ($order['pay_info']) {
                        $weixinpay = unserialize($order['pay_info']);
                    } else {
                        $weixinpay = $this->getweixinpayinfo($uniacid, $openid, $order_id, $payprice, $body, $types . "|" . input('formId') . "|" . $uniacid);  //最后一个参数为附加参数，这里存订单类型+formId
                        //将支付信息保存
                        Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update(['pay_info' => serialize($weixinpay)]);
                    }

                    $weixinpay['err'] = 0;
                    $result['data'] = $weixinpay;
                    return json_encode($result);
                    exit;
                }
            }
            $data = array(
                'err' => 1,
                'message' => '价格出错',
            );
            $result['data'] = $data;
            return json_encode($result);
        }

        //新版商品(单，多规格)订单支付
        if ($types == 'mainShop') {
            $openid = input('openid');
            $formId = input('formId');
            $order_id = input('order_id');
            $price = input('price');

            $order = Db::name('wd_xcx_main_shop_order')->where('order_id', $order_id)->find();
            if ($order) {
                if($order['is_change_price'] == 1){
                    $pay_money = $order['change_price'];
                }else{
                    $pay_money = $order['pay_money'];
                }
                if ($price * 100 == $pay_money * 100) {
                    $body = "商品支付";
                    if($order['is_change_price'] == 1){
                        $order_id_new = $order_id . rand(10, 99);
                        $weixinpay = $this->getweixinpayinfo($uniacid, $openid, $order_id_new, $price, $body, $types . "|" . $formId . "|" . $uniacid . "|" . $suid);
                        if (isset($weixinpay['return_code'])) {
                            return json_encode(['data' => ['err' => 2, 'msg' => $weixinpay['return_msg']]]);
                        }
                        $weixinpay['order_id_new'] = $order_id_new;
                        //将支付信息保存
                        Db::name('wd_xcx_main_shop_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update(['payment_info' => serialize($weixinpay)]);

                    }else{
                        if ($order['payment_info']) {
                            $weixinpay = unserialize($order['payment_info']);
                        } else {
                            $weixinpay = $this->getweixinpayinfo($uniacid, $openid, $order_id, $price, $body, $types . "|" . $formId . "|" . $uniacid . "|" . $suid);
                            if (isset($weixinpay['return_code'])) {
                                return json_encode(['data' => ['err' => 2, 'msg' => $weixinpay['return_msg']]]);
                            }
                            //将支付信息保存
                            Db::name('wd_xcx_main_shop_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update(['payment_info' => serialize($weixinpay)]);
                        }
                    }

                    $weixinpay['err'] = 0;
                    $result['data'] = $weixinpay;
                    return json_encode($result);

                } else {
                    return json_encode(['data' => ['err' => 2, 'msg' => '支付价格不正确！']]);
                }
            } else {
                return json_encode(['data' => ['err' => 1, 'msg' => '订单不存在！']]);
            }
        }

        if ($types == "miaosha") {
            $suid = input('suid');
            $order_id = input("order_id");
            $order = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->find();
            $price = floatval($order['true_price']);
            $pay_price = floatval(input("price"));
            $gpc_price = floatval(input("price"));
            $openid = input("openid");
            $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            $yue = floatval($user['money']);

            if ($price == $gpc_price) {
                //支付之前处理过期的优惠券
                $this->overtimeyhq($uniacid, $user['id']);

                //支付之前判断下优惠券有没有在其他地方使用或者过期
                if ($order['coupon'] != 0) {
                    $coupon = Db::name('wd_xcx_coupon_user')->where("uniacid", $uniacid)->where("id", $order['coupon'])->find();
                    $couponinfo = Db::name('wd_xcx_coupon')->where("uniacid", $uniacid)->where("id", $coupon['cid'])->find();
                    if ($coupon['flag'] == 1) {
                        $data['data'] = array('err' => 2, 'message' => '该优惠券已被使用');
                        return json_encode($data);
                    }
                    if ($coupon['flag'] == 2) {
                        $data['data'] = array('err' => 3, 'message' => '该优惠券已过期');
                        return json_encode($data);
                    }
                }
                //获取微信支付所需要的参数（所有订单公用接口）   $out_trade_no为订单号, $price必须是微信支付的金额!!!  $types标志订单类型 多规格为'duo' $body支付描述 如：商品支付
                $kucun = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $order['pid'])->field('pro_kc')->find();
                $kucun = $kucun['pro_kc'];
                if ($order['num'] > $kucun && intval($kucun) != -1) {
                    $data['data'] = array('err' => 4, 'message' => "库存不足！剩余" . $kucun . "件");
                    return json_encode($data);
                }
                $body = "商品支付";
                if ($order['pay_info']) {
                    $weixinpay = unserialize($order['pay_info']);
                } else {
                    $weixinpay = $this->getweixinpayinfo($uniacid, $openid, $order_id, $pay_price, $body, $types . "|" . input('formId') . "|" . $uniacid);  //最后一个参数为附加参数，这里存订单类型+formId
                    Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update(['pay_info' => serialize($weixinpay), 'pay_price' => $pay_price]);
                }

                $weixinpay['err'] = 0;
                $data['data'] = $weixinpay;
                return json_encode($data);
            }
            $data['data'] = array('err' => 1, 'message' => '价格出错');
            return json_encode($data);
        }

        if ($types == "reserve") {
            $order_id = input('order_id');
            $order = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->find();
            $price = floatval($order['true_price']);   //实际支付 = 支付余额+微信支付
            $pay_price = floatval($order['pay_price']); //微信
            $gpc_price = floatval(input('price'));  //总价

            $openid = input('openid');
            $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            $user_money = $user['money'];
            if (floatval($user_money) > 0 && floatval($user_money) < floatval($price)) {  //余额小于实付金额并且余额大于0，修改余额为0
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update(['money' => 0]);
            }

            //支付之前处理过期的优惠券
            $this->overtimeyhq($uniacid, $user['id']);
            //支付之前判断下优惠券有没有在其他地方使用或者过期

            if ($order['coupon'] != 0) {
                $coupon = Db::name('wd_xcx_coupon_user')->where("uniacid", $uniacid)->where("id", $order['coupon'])->find();
                $couponinfo = Db::name('wd_xcx_coupon')->where("uniacid", $uniacid)->where("id", $coupon['cid'])->find();
                if ($coupon['flag'] == 1) {
                    $data['data'] = array('err' => 2, 'message' => '该优惠券已被使用');
                    return json_encode($data);
                }
                if ($coupon['flag'] == 2) {
                    $data['data'] = array('err' => 3, 'message' => '该优惠券已过期');
                    return json_encode($data);
                }
            }


            $product = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $order['pid'])->find();
            $num = $order['num'];


            if ($pay_price > 0) { // 微信支付
                $body = "商品支付";
                if ($order['pay_info']) {
                    $weixinpay = unserialize($order['pay_info']);
                } else {
                    $weixinpay = $this->getweixinpayinfo($uniacid, $openid, $order_id, $pay_price, $body, $types . "|" . input('formId') . "|" . $uniacid);  //最后一个参数为附加参数，这里存订单类型+formId
                    Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update(['pay_info' => serialize($weixinpay)]);
                }

                $weixinpay['err'] = 0;
                $data['data'] = $weixinpay;
                return json_encode($data);
            }
            $data['data'] = array('err' => 1, 'message' => '价格出错');
            return json_encode($data);
        }

        if ($types == 'pt') {   //拼团
            $order_id = input('order_id');
            $price = input('price');
            $formId = input('formId');
            $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            $order = Db::name('wd_xcx_pt_order')->where('order_id', $order_id)->where('uniacid', $uniacid)->find();
            if ($order) {
                //支付之前处理过期的优惠券
                $this->overtimeyhq($uniacid, $suid);
                //支付之前判断下优惠券有没有在其他地方使用或者过期

                if ($order['coupon'] != 0) {
                    $coupon = Db::name('wd_xcx_coupon_user')->where("uniacid", $uniacid)->where("id", $order['coupon'])->find();
                    $couponinfo = Db::name('wd_xcx_coupon')->where("uniacid", $uniacid)->where("id", $coupon['cid'])->find();
                    if ($coupon['flag'] == 1) {
                        $data['data'] = array('err' => 2, 'message' => '该优惠券已被使用');
                        return json_encode($data);
                    }
                    if ($coupon['flag'] == 2) {
                        $data['data'] = array('err' => 3, 'message' => '该优惠券已过期');
                        return json_encode($data);
                    }
                }

                //判断积分
                if ($order['jf'] > 0) {
                    if ($order['jf'] > $user['score']) {
                        $data['data'] = array('err' => 5, 'message' => '积分不足');
                        return json_encode($data);
                    }
                }

                //判断库存
                //支付前判断库存
                $jsondata = unserialize($order['jsondata']);
                $shouldpay = 0;
                foreach ($jsondata as $key => &$value) {
                    $pro_val = Db::name('wd_xcx_pt_pro_val')->where('id', $value['proinfo'])->find();
                    if ($order['types'] == 1) {  //拼团1
                        $shouldpay = $shouldpay + $value['num'] * $pro_val['price'];
                    } elseif ($order['types'] == 2) {//立即购买
                        $shouldpay = $shouldpay + $value['num'] * $pro_val['dprice'];
                    }
                    if ($value['num'] > $pro_val['kc']) {
                        $data = array(
                            'message' => '改规格库存不足',
                            'err' => 4
                        );
                        $result['data'] = $data;
                        return json_encode($result);
                    }
                }

                if ($price == $shouldpay) {
                    $body = "拼团商品支付";
                    if ($order['pay_info']) {
                        $weixinpay = unserialize($order['pay_info']);
                    } else {
                        $weixinpay = $this->getweixinpayinfo($uniacid, $openid, $order_id, $price, $body, $types . "|" . $formId . "|" . $uniacid);  //最后一个参数为附加参数，这里存订单类型+formId
                        Db::name('wd_xcx_pt_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update(['pay_info' => serialize($weixinpay)]);
                    }

                    $weixinpay['err'] = 0;
                    $data['data'] = $weixinpay;
                    return json_encode($data);
                } else {
                    $data['data'] = array('err' => 1, 'message' => '价格出错');
                    return json_encode($data);
                }
            } else {
                $data['data'] = array('err' => 6, 'message' => '订单不存在');
                return json_encode($data);
            }
        }


        if ($types == 'fabu') {   //微同城发布支付
            $price = input('price');
            $order_id = input('order_id');
            $formid = input('formId');
            $openid = input('openid');

            $body = '发布支付';
            $weixinpay = $this->getweixinpayinfo($uniacid, $openid, $order_id, $price, $body, $types . "|" . $formid . "|" . $uniacid);
            $weixinpay['err'] = 0;
            $result['data'] = $weixinpay;
            return json_encode($result);
        }

        if ($types == 'settop') {     //微同城置顶支付
            $price = input('price');
            $order_id = input('order_id');
            $formid = input('formId');
            $openid = input('openid');

            $body = '置顶支付';
            $weixinpay = $this->getweixinpayinfo($uniacid, $openid, $order_id, $price, $body, $types . "|" . $formid . "|" . $uniacid);
            $weixinpay['err'] = 0;
            $result['data'] = $weixinpay;
            return json_encode($result);
        }


        if ($types == 'supfabu') {    //供求关系发布支付
            $price = input('price');
            $order_id = input('order_id');
            $formid = input('formId');
            $openid = input('openid');

            $body = '发布支付';
            $weixinpay = $this->getweixinpayinfo($uniacid, $openid, $order_id, $price, $body, $types . "|" . $formid . "|" . $uniacid);
            $weixinpay['err'] = 0;
            $result['data'] = $weixinpay;
            return json_encode($result);
        }

        if ($types == 'supsettop') {     //供求关系置顶支付
            $price = input('price');
            $order_id = input('order_id');
            $formid = input('formId');
            $openid = input('openid');

            $body = '置顶支付';
            $weixinpay = $this->getweixinpayinfo($uniacid, $openid, $order_id, $price, $body, $types . "|" . $formid . "|" . $uniacid);
            $weixinpay['err'] = 0;
            $result['data'] = $weixinpay;
            return json_encode($result);
        }

        if ($types == 'food') {     //餐饮支付
            $suid = input('suid');
            $order_id = input("order_id");
            $order = Db::name('wd_xcx_food_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->find();
            $score_info = unserialize($order['score_info']);
            $price = floatval($order['price']);
            $pay_price = floatval($order['wx_price']);
            // $gpc_price = floatval(input("price"));
            $openid = input("openid");
            $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            $yue = floatval($user['money']);
            if ($price > $yue && round($price - $yue - $score_info['score_money'], 2) . '' == $pay_price . '') {
                $body = "餐饮支付";
                if ($order['pay_info']) {
                    $weixinpay = unserialize($order['pay_info']);
                } else {
                    $weixinpay = $this->getweixinpayinfo($uniacid, $openid, $order_id, $pay_price, $body, $types . "|" . input('formId') . "|" . $uniacid);  //最后一个参数为附加参数，这里存订单类型+formId
                    Db::name('wd_xcx_food_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update(['pay_info' => serialize($weixinpay)]);
                }

                $weixinpay['err'] = 0;
                $data['data'] = $weixinpay;
                return json_encode($data);
            }
            $data['data'] = array('err' => 1, 'message' => '价格出错');
            return json_encode($data);
        }

        if ($types == 'shoppay') {     //店内支付
            $order_id = input("order_id");
            $pay_price = input("price");  //微信支付的钱
            if ($order_id) {
                $body = "店内支付";
                // if($order['pay_info']){
                //     $weixinpay = unserialize($order['pay_info']);
                // }else{
                //
                $weixinpay = $this->getweixinpayinfo($uniacid, $openid, $order_id, $pay_price, $body, $types . "|formId|" . $uniacid);  //最后一个参数为附加参数，这里存订单类型+formId
                // }
                $weixinpay['err'] = 0;
                $data['data'] = $weixinpay;
                return json_encode($data);
            }
            $data['data'] = array('err' => 1, 'message' => '价格出错');
            return json_encode($data);
        }
        if ($types == 'recharge') {     //店内支付
            $order_id = input("order_id");
            $pay_price = input("price");  //微信支付的钱
            if ($order_id) {
                $body = "充值";
                // if($order['pay_info']){
                //     $weixinpay = unserialize($order['pay_info']);
                // }else{
                //
                $weixinpay = $this->getweixinpayinfo($uniacid, $openid, $order_id, $pay_price, $body, $types . "|formId|" . $uniacid . "|" . $suid);  //最后一个参数为附加参数，这里存订单类型+formId
                // }
                $weixinpay['err'] = 0;
                $data['data'] = $weixinpay;
                return json_encode($data);
            }
            $data['data'] = array('err' => 1, 'message' => '价格出错');
            return json_encode($data);
        }


    }

    //支付之前处理过期的优惠券（所有订单公用接口）
    public function overtimeyhq($uniacid, $suid)
    {
        $yhqs = Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where("suid", $suid)->where("flag", 0)->where("etime", 'gt', 0)->select();
        foreach ($yhqs as $key => &$resi) {
            // $etime = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where("id", $value['cid'])->field("etime")->find()['etime'];
            // if ($etime < time()) {
            //     Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where("id", $value['id'])->update(array("flag" => 2));
            // }
            if ($resi['etime'] != 0) {
                if (time() > $resi['etime'] && $resi['flag'] == 0) {
                    $kdata = array(
                        "flag" => 2
                    );
                    Db::name('wd_xcx_coupon_user')->where("id", $resi['id'])->update($kdata);
                }
            }
        }
    }

    //支付之前检查当前订单的优惠券有没有在其他地方使用或者过期,价格改回（所有订单公用接口）
    public function checkthisyhq($uniacid, $order_id, $price, $coupon_price, $types)
    {
        $newprice = $price + $coupon_price;
        $data = array(
            "price" => $newprice,
            "coupon" => 0
        );
        if ($types == 'duo') {
            Db::name('wd_xcx_duo_products_order')->where("uniacid", $uniacid)->where("order_id", $order_id)->update($data);
        }
    }

    //保存微信统一下单接口返回的prepayid，可以发三次模板消息
    public function doPagesavePrepayid()
    {
        $uniacid = input("uniacid");
        $prepayid = input("prepayid");
        $types = input("types");
        $order_id = input("order_id");
        $prepayid = explode("=", $prepayid);
        $prepayid = $prepayid[1];
        if ($types == 'duo') {
            Db::name('wd_xcx_duo_products_order')->where("uniacid", $uniacid)->where("order_id", $order_id)->update(array("prepayid" => $prepayid));
        } else if ($types == "bargain") {
            Db::name('wd_xcx_bargain_order')->where("uniacid", $uniacid)->where("order_id", $order_id)->update(array("prepayid" => $prepayid));
        } else {
            Db::name('wd_xcx_order')->where("uniacid", $uniacid)->where("order_id", $order_id)->update(array("prepayid" => $prepayid));
        }
        $data = array(
            'message' => 'ok',
        );
        $result['data'] = $data;
        return json_encode($result);
    }


    public function sendTplMessage($uniacid, $flag, $openid, $formId, $types, $data)
    {

        $applet = Db::name('wd_xcx_applet')->where("id", $uniacid)->find();
        $appid = $applet['appID'];
        $appsecret = $applet['appSecret'];
        if ($applet) {
            $mid = Db::name('wd_xcx_message')->where("uniacid", $uniacid)->where("flag", $flag)->find();
            if ($mid && $mid['mid'] != "") {
                $mids = $mid['mid'];
                $url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=" . $appid . "&secret=" . $appsecret;
                $a_token = $this->_requestGetcurl($url);
                if ($a_token) {
                    $url_m = "https://api.weixin.qq.com/cgi-bin/message/wxopen/template/send?access_token=" . $a_token['access_token'];
                    $ftime = date('Y-m-d H:i:s', time());
                    $furl = $mid['url'];
                    if ($types == 'duo_zf') {
                        $post_info = '{ 
                              "touser": "' . $openid . '",  
                              "template_id": "' . $mids . '", 
                              "page": "' . $furl . '",         
                              "form_id": "' . $formId . '",         
                              "data": {
                                  "keyword1": {
                                      "value": "' . $data['orderid'] . '", 
                                      "color": "#173177"
                                      }, 
                                      "keyword2": {
                                          "value": "' . $data['fprice'] . '元", 
                                          "color": "#173177"
                                          }, 
                                          "keyword3": {
                                              "value": "' . $data['fmsg'] . '", 
                                              "color": "#173177"
                                              } , 
                                              "keyword4": {
                                                  "value": "' . $ftime . '", 
                                                  "color": "#173177"
                                              } 
                                              },
                                              "emphasis_keyword": "" 
                                          }';
                    }
                    if ($types == 'duo_th') {
                        $post_info = '{ 
                                          "touser": "' . $openid . '",  
                                          "template_id": "' . $mids . '", 
                                          "page": "' . $furl . '",         
                                          "form_id": "' . $formId . '",         
                                          "data": {
                                              "keyword1": {
                                                  "value": "' . $data['orderid'] . '", 
                                                  "color": "#173177"
                                                  }, 
                                                  "keyword2": {
                                                      "value": "' . $data['fprice'] . '元", 
                                                      "color": "#173177"
                                                      }, 
                                                      "keyword4": {
                                                          "value": "' . $ftime . '", 
                                                          "color": "#173177"
                                                      } 
                                                      },
                                                      "emphasis_keyword": "" 
                                                  }';
                    }
                    if ($types == 'deposit') {
                        $post_info = '{
                                                    "touser": "' . $openid . '",
                                                    "template_id": "' . $mids . '",
                                                    "page": "' . $furl . '",
                                                    "form_id": "' . $formId . '",
                                                    "data": {
                                                        "keyword1": {
                                                            "value": "' . $data['auctionname'] . '",
                                                            "color": "#173177"
                                                            },
                                                            "keyword2": {
                                                                "value": "' . $data['msg'] . '",
                                                                "color": "#173177"
                                                            }
                                                            },
                                                            "emphasis_keyword": ""
                                                        }';
                    }
                    $response = $this->_requestPost($url_m, $post_info);
                }
            }
        }
    }

    //付款成功邮件提醒，发送邮件给商家（所有订单公用接口）
    public function sendMailToAdmin($uniacid, $order_id, $types)
    {
        $formsConfig = Db::name('wd_xcx_forms_config')->where("uniacid", $uniacid)->field("mail_sendto,mail_user,mail_password,mail_user_name")->find();
        $mail_sendto = array();
        $mail_sendto = explode(",", $formsConfig['mail_sendto']);
        $row_mail_user = $formsConfig['mail_user'];
        $row_mail_pass = $formsConfig['mail_password'];
        $row_mail_name = $formsConfig['mail_user_name'];

        if ($formsConfig['mail_sendto'] == "" || $row_mail_user == "" || $row_mail_pass == "" || $row_mail_name == "") {
            return 1;
            exit;
        }
        if ($types == 'duoshop') {
            $ord = Db::name('wd_xcx_duo_products_order')->where("uniacid", $uniacid)->where("order_id", $order_id)->find();
            $row_oid = "订单编号：" . $ord['order_id'] . "<br />";
            $jsondata = unserialize($ord['jsondata']);
            $row_pro = "";
            $row_pro .= "产品名称：" . $jsondata[0]['baseinfo']['title'] . "<br />";
            $row_pro .= "产品价格：￥" . $jsondata[0]['proinfo']['price'] . " X " . $jsondata[0]['num'] . " = ￥" . round($jsondata[0]['proinfo']['price'] * $jsondata[0]['num'], 2) . "<br />";
            if (!empty($ord['yhinfo'])) {
                $yhInfo = unserialize($ord['yhinfo']);
                $row_pro .= "运费：￥" . $yhInfo['yunfei'] . "<br>";
                if ($yhInfo['mj']['money'] > 0) {
                    $row_pro .= "满减：" . $yhInfo['mj']['msg'] . "<br>";
                }
                if ($yhInfo['yhq']['money'] > 0) {
                    $row_pro .= "优惠券：" . $yhInfo['yhq']['msg'] . "<br>";
                }
                if ($yhInfo['score']['money'] > 0) {
                    $row_pro .= "积分：" . $yhInfo['score']['msg'] . "<br>";
                }
            }
            $row_pro .= "实付金额：" . $ord['price'] . "<br />";

            $row_prc = "<br />";
            $form_id = $ord['formid'];//表单提交信息id
            if (intval($form_id) > 0) {
                $row_prc .= "===================表单信息===================<br />";
                $biaodan = Db::name("wd_xcx_formcon")->where("uniacid", $uniacid)->where("id", $form_id)->value("val");

                $biaodan = unserialize($biaodan);
                for ($i = 0; $i < count($biaodan); $i++) {
                    if ($biaodan[$i]['val']) {
                        if ($biaodan[$i]['type'] == 5) {
                            for ($j = 0; $j < count($biaodan[$i]['z_val']); $j++) {
                                $row_prc .= $biaodan[$i]['name'] . ": <img src='" . $biaodan[$i]['z_val'][$j] . "'/><br />";
                            }
                        } else if ($biaodan[$i]['type'] == 3) {
                            $row_prc .= $biaodan[$i]['name'] . ": " . implode(',', $biaodan[$i]['val']) . "<br />";
                        } else {
                            $row_prc .= $biaodan[$i]['name'] . ":" . $biaodan[$i]['val'] . "<br />";
                        }
                    }
                }
            }
        }
        if ($types == "duo") {
            $ord = Db::name('wd_xcx_duo_products_order')->where("uniacid", $uniacid)->where("order_id", $order_id)->find();
            $row_oid = "订单编号：" . $ord['order_id'] . "<br />";
            $pro = unserialize($ord['jsondata']);
            $row_pro = "";
            foreach ($pro as $key5 => &$resb) {
                $row_pro .= "产品名称：" . $resb['baseinfo']['title'] . "<br />";
                $row_pro .= "产品规格：" . $resb['proinfo']['ggz'] . "<br />";
                $row_pro .= "产品价格：￥" . $resb['proinfo']['price'] . " X " . $resb['num'] . " = ￥" . $resb['proinfo']['price'] * $resb['num'] . "<br />";
            }
            if ($ord['discounts'] > 0) {
                $row_pro .= "会员折扣：" . $ord['discounts'] . "折<br>";
            }
            if ($ord['discounts_price'] > 0) {
                $row_pro .= "会员折扣优惠：￥" . $ord['discounts_price'] . "<br>";
            }
            if (!empty($ord['yhinfo'])) {
                $yhInfo = unserialize($ord['yhinfo']);
                $row_pro .= "运费：￥" . $yhInfo['yunfei'] . "<br>";
                if ($yhInfo['mj']['money'] > 0) {
                    $row_pro .= "满减：" . $yhInfo['mj']['msg'] . "<br>";
                }
                if ($yhInfo['yhq']['money'] > 0) {
                    $row_pro .= "优惠券：" . $yhInfo['yhq']['msg'] . "<br>";
                }
                if ($yhInfo['score']['money'] > 0) {
                    $row_pro .= "积分：" . $yhInfo['score']['msg'] . "<br>";
                }
            }
            $row_pro .= "实付金额：" . $ord['price'] . "<br />";

            $row_prc = "<br />";
            $form_id = $ord['formid'];//表单提交信息id
            if (intval($form_id) > 0) {
                $row_prc .= "===================表单信息===================<br />";
                $biaodan = Db::name("wd_xcx_formcon")->where("uniacid", $uniacid)->where("id", $form_id)->value("val");

                $biaodan = unserialize($biaodan);
                for ($i = 0; $i < count($biaodan); $i++) {
                    if ($biaodan[$i]['val']) {
                        if ($biaodan[$i]['type'] == 5) {
                            for ($j = 0; $j < count($biaodan[$i]['z_val']); $j++) {
                                $row_prc .= $biaodan[$i]['name'] . ": <img src='" . $biaodan[$i]['z_val'][$j] . "'/><br />";
                            }
                        } else if ($biaodan[$i]['type'] == 3) {
                            $row_prc .= $biaodan[$i]['name'] . ": " . implode(',', $biaodan[$i]['val']) . "<br />";
                        } else {
                            $row_prc .= $biaodan[$i]['name'] . ":" . $biaodan[$i]['val'] . "<br />";
                        }
                    }
                }
            }
        }
        if ($types == "mainShop") {
            $ord = Db::name('wd_xcx_main_shop_order')->where("uniacid", $uniacid)->where("order_id", $order_id)->find();
            $row_oid = "订单编号：" . $ord['order_id'] . "<br />";
            $order_items = Db::name('wd_xcx_main_shop_order_item')->where('order_id', $order_id)->select();
            $row_pro = "";
            foreach ($order_items as $k => $item) {
                $row_pro .= "产品名称：" . $item['pro_title'] . "，<br />";
                if ($item['pro_attr']) {
                    $row_pro .= "产品规格：" . $item['pro_attr'] . "，<br />";
                }
                $row_pro .= "产品价格：￥" . $item['pro_price'] . " X " . $item['num'] . "元，<br />";
                if ($item['pro_discounts'] > 0) {
                    $row_pro .= "会员折扣：" . $item['pro_discounts'] . "折，<br>";
                    $row_pro .= "会员折扣后价格：￥" . $item['pro_discounts_price'] . "元，<br>";
                }
                $row_pro .= "-------------------------------------<br />";
            }
            $row_pro .= "配送费：￥" . $ord['freight_money'] . "元，<br>";

            if ($ord['coupon_id'] > 0)
                $row_pro .= "优惠券：减" . $ord['coupon_use'] . "元，<br>";
            if ($ord['score_use'] > 0) {
                $row_pro .= "积分：抵扣" . $ord['score_money'] . "元，<br>";
            }

            if ($ord['is_change_price'] == 1) { //修改了价格
                $row_pro .= "实付金额：" . $ord['change_price'] . "元(修改价格)。<br />";
            } else {
                $row_pro .= "实付金额：" . $ord['pay_money'] . "元。<br />";
            }


            $row_prc = "<br />";
            $form_id = $ord['formcon_id'];//表单提交信息id
            if (intval($form_id) > 0) {
                $row_prc .= "===================表单信息===================<br />";
                $biaodan = Db::name("wd_xcx_formcon")->where("uniacid", $uniacid)->where("id", $form_id)->value("val");

                $biaodan = unserialize($biaodan);
                for ($i = 0; $i < count($biaodan); $i++) {
                    if ($biaodan[$i]['val']) {
                        if ($biaodan[$i]['type'] == 5) {
                            for ($j = 0; $j < count($biaodan[$i]['z_val']); $j++) {
                                $row_prc .= $biaodan[$i]['name'] . ": <img src='" . $biaodan[$i]['z_val'][$j] . "'/><br />";
                            }
                        } else if ($biaodan[$i]['type'] == 3) {
                            $row_prc .= $biaodan[$i]['name'] . ": " . implode(',', $biaodan[$i]['val']) . "<br />";
                        } else {
                            $row_prc .= $biaodan[$i]['name'] . ":" . $biaodan[$i]['val'] . "<br />";
                        }
                    }
                }
            }

            if ($ord['delivery_type'] == 2) {
                $row_prc .= "===================自取信息===================<br />";
                $self_taking = unserialize($ord['self_taking_info']);
                $self_taking_shop = unserialize($self_taking['self_taking_shop_info']);
                $row_prc .= "联系电话：" . $self_taking['self_taking_contact'] . "<br />";
                $row_prc .= "自取时间：" . $self_taking['self_taking_time'] . "<br />";
                $row_prc .= "自取门店：" . $self_taking_shop['title'] . "<br />";
            } else {
                $row_prc .= "===================配送信息===================<br />";
                $address = unserialize($ord['address_info']);
                $row_prc .= "联系姓名：" . $address['name'] . "<br />";
                $row_prc .= "联系电话：" . $address['mobile'] . "<br />";
                $row_prc .= "联系地址：" . $address['address'] . "<br />";
                $row_prc .= "详细地址：" . $address['more_address'] . "<br />";
                $row_prc .= "邮编：" . $address['postalcode'] . "<br />";
            }

            if ($ord['user_remark']) {
                $row_prc .= "买家留言：" . $ord['user_remark'] . "<br />";
            }
        }
        if ($types == "miaosha") {
            $ord = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->find();
            $row_oid = "订单编号（秒杀）：" . $ord['order_id'] . "<br />";
            $pro = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $ord['pid'])->find();
            $row_pro = "";
            $row_pro .= "产品名称：" . $pro['title'] . "<br />";
            $row_pro .= "产品价格：￥" . $pro['price'] . " X " . $ord['num'] . " = ￥" . $pro['price'] * $ord['num'] . "<br />";
            if (!empty($ord['yhinfo'])) {
                $yhInfo = unserialize($ord['yhinfo']);
                $row_pro .= "运费：￥" . $yhInfo['yunfei'] . "<br>";
                if ($yhInfo['mj']['money'] > 0) {
                    $row_pro .= "满减：" . $yhInfo['mj']['msg'] . "<br>";
                }
                if ($yhInfo['yhq']['money'] > 0) {
                    $row_pro .= "优惠券：" . $yhInfo['yhq']['msg'] . "<br>";
                }
                if ($yhInfo['score']['money'] > 0) {
                    $row_pro .= "积分：" . $yhInfo['score']['msg'] . "<br>";
                }
            }
            $row_pro .= "实付金额：￥" . $ord['true_price'] . "<br />";

            $row_prc = "<br />";
            $form_id = $ord['formid'];//表单提交信息id
            if (intval($form_id) > 0) {
                $row_prc .= "===================表单信息===================<br />";
                $biaodan = Db::name("wd_xcx_formcon")->where("uniacid", $uniacid)->where("id", $form_id)->value("val");

                $biaodan = unserialize($biaodan);
                for ($i = 0; $i < count($biaodan); $i++) {
                    if ($biaodan[$i]['val']) {
                        if ($biaodan[$i]['type'] == 5) {
                            for ($j = 0; $j < count($biaodan[$i]['z_val']); $j++) {
                                $row_prc .= $biaodan[$i]['name'] . ": <img src='" . $biaodan[$i]['z_val'][$j] . "'/><br />";
                            }
                        } else if ($biaodan[$i]['type'] == 3) {
                            $row_prc .= $biaodan[$i]['name'] . ": " . implode(',', $biaodan[$i]['val']) . "<br />";
                        } else {
                            $row_prc .= $biaodan[$i]['name'] . ":" . $biaodan[$i]['val'] . "<br />";
                        }
                    }
                }
            }
        }

        if ($types == "reserve") {
            $ord = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->find();
            $row_oid = "订单编号（预约预定）：" . $ord['order_id'] . "<br />";
            $pro = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $ord['pid'])->find();
            $row_pro = "";
            $row_pro .= "产品名称：" . $pro['title'] . "<br />";
            $row_pro .= "订单总计：" . $ord['price'] . "<br />";
            if (!empty($ord['yhinfo'])) {
                $yhInfo = unserialize($ord['yhinfo']);
                if ($yhInfo['mj']['money'] > 0) {
                    $row_pro .= "满减：" . $yhInfo['mj']['msg'] . "<br>";
                }
                if ($yhInfo['yhq']['money'] > 0) {
                    $row_pro .= "优惠券：" . $yhInfo['yhq']['msg'] . "<br>";
                }
                if ($yhInfo['score']['money'] > 0) {
                    $row_pro .= "积分：" . $yhInfo['score']['msg'] . "<br>";
                }
            }
            $row_pro .= "实付金额：￥" . $ord['true_price'] . "<br />";

            $row_prc = "<br />";
            $row_prc .= "===================订单联系信息===================<br />";

            if ($ord['pro_user_name']) {
                $row_prc .= "联系姓名：" . $ord['pro_user_name'] . "<br />";
            }
            if ($ord['pro_user_tel']) {
                $row_prc .= "联系电话：" . $ord['pro_user_tel'] . "<br />";
            }
            if ($ord['pro_user_add']) {
                $row_prc .= "联系地址：" . $ord['pro_user_add'] . "<br />";
            }
            if ($ord['appoint_date']) {
                $row_prc .= "预约时间" . date("Y-m-d", $ord['appoint_date']) . "<br />";
            }
            if ($ord['pro_user_txt']) {
                $row_prc .= "备注信息" . $ord['pro_user_txt'] . "<br />";
            }

            $biaodan = unserialize($ord['beizhu_val']);

            if ($biaodan != 'NULL') {
                $row_prc .= "===================表单信息===================<br />";
                for ($i = 0; $i < count($biaodan); $i++) {
                    if ($biaodan[$i]['val']) {
                        if ($biaodan[$i]['type'] == 5) {
                            for ($j = 0; $j < count($biaodan[$i]['z_val']); $j++) {
                                $row_prc .= $biaodan[$i]['name'] . ": <img src='" . $biaodan[$i]['z_val'][$j] . "'/><br />";
                            }

                        }else if ($biaodan[$i]['type'] == 3) {
                            $row_prc .= $biaodan[$i]['name'] . ": " . implode(',', $biaodan[$i]['val']) . "<br />";
                        } else {
                            $row_prc .= $biaodan[$i]['name'] . ":" . $biaodan[$i]['val'] . "<br />";
                        }
                    }
                }
            }

        }

        if ($types == "bargain") {
            $ord = Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("order_id", $order_id)->find();
            $row_oid = "订单编号（砍价）：" . $ord['order_id'] . "<br />";
            $pro = Db::name("wd_xcx_bargain_pro")->where("uniacid", $uniacid)->where("id", $ord['pid'])->find();
            $row_pro = "";
            $row_pro .= "产品名称：" . $pro['title'] . "<br />";
            $row_pro .= "订单总计：￥" . $pro['price'] . "<br />";
            $row_pro .= "运费金额：￥" . $ord['yunfei'] . "<br />";
            $row_pro .= "砍掉金额：￥" . ($pro['price'] - ($ord['true_price'] - $ord['yunfei'])) . "<br />";
            $row_pro .= "微信支付：￥" . $ord['wx_price'] . "<br />";
            $row_pro .= "余额支付：￥" . $ord['yue_price'] . "<br />";
            $row_pro .= "实付金额：￥" . $ord['true_price'] . "<br />";
            $row_prc = "<br />";
            $form_id = $ord['form_id'];//表单提交信息id
            if (intval($form_id) > 0) {
                $row_prc .= "===================表单信息===================<br />";
                $biaodan = Db::name("wd_xcx_formcon")->where("uniacid", $uniacid)->where("id", $form_id)->value("val");

                $biaodan = unserialize($biaodan);
                for ($i = 0; $i < count($biaodan); $i++) {
                    if ($biaodan[$i]['val']) {
                        if ($biaodan[$i]['type'] == 5) {
                            for ($j = 0; $j < count($biaodan[$i]['z_val']); $j++) {
                                $row_prc .= $biaodan[$i]['name'] . ": <img src='" . $biaodan[$i]['z_val'][$j] . "'/><br />";
                            }
                        } else if ($biaodan[$i]['type'] == 3) {
                            $row_prc .= $biaodan[$i]['name'] . ": " . implode(',', $biaodan[$i]['val']) . "<br />";
                        } else {
                            $row_prc .= $biaodan[$i]['name'] . ":" . $biaodan[$i]['val'] . "<br />";
                        }
                    }
                }
            }
        }

        if ($types == "pt") {
            $ord = Db::name('wd_xcx_pt_order')->where("uniacid", $uniacid)->where("order_id", $order_id)->find();
            $row_oid = "订单编号（拼团）：" . $ord['order_id'] . "<br />";
            $pro = unserialize($ord['jsondata']);
            $row_pro = "";
            foreach ($pro as $key5 => &$resb) {
                $pro_belong = Db::name("wd_xcx_pt_pro")->where("id", $resb['pvid'])->find();
                $row_pro .= "产品名称：" . $pro_belong['title'] . "<br />";
                $row_pro .= "产品规格：" . $resb['proval_ggz'] . "<br />";
                $row_pro .= "产品价格：￥" . $resb['proval_price'] . " X " . $resb['num'] . " = ￥" . $resb['proval_price'] * $resb['num'] . "<br />";
            }
            $row_pro .= "购买数量：" . $resb['num'] . "<br />";
            $row_pro .= "支付金额：" . $ord['price'] . "<br />";

            $row_prc = "<br />";
            $form_id = $ord['formid'];//表单提交信息id

            if (intval($form_id) > 0) {
                $row_prc .= "===================表单信息===================<br />";
                $biaodan = Db::name("wd_xcx_formcon")->where("uniacid", $uniacid)->where("id", $form_id)->value("val");
                $biaodan = unserialize($biaodan);
                for ($i = 0; $i < count($biaodan); $i++) {
                    if ($biaodan[$i]['val']) {
                        if ($biaodan[$i]['type'] == 5) {
                            for ($j = 0; $j < count($biaodan[$i]['z_val']); $j++) {
                                $row_prc .= $biaodan[$i]['name'] . ": <img src='" . $biaodan[$i]['z_val'][$j] . "'/><br />";
                            }
                        } else if ($biaodan[$i]['type'] == 3) {
                            $row_prc .= $biaodan[$i]['name'] . ": " . implode(',', $biaodan[$i]['val']) . "<br />";
                        } else {
                            $row_prc .= $biaodan[$i]['name'] . ":" . $biaodan[$i]['val'] . "<br />";
                        }
                    }
                }
            }

        }

        // 去查询订单的收货地址
        if ($types != "reserve" && $types != "mainShop") {
            $row_prc .= "<br />";
            if ($ord['nav'] == 2) {//到店自提
                $row_prc .= "到店自提<br />";
            } else {
                $row_prc .= "===================订单地址===================<br />";
                if ($types == "duoshop") {
                    $address = unserialize($ord['m_address']);
                    $row_prc .= "联系姓名：" . $address['name'] . "<br />";
                    $row_prc .= "联系电话：" . $address['mobile'] . "<br />";
                    $row_prc .= "联系地址：" . $address['address'] . "<br />";
                } else {
                    if ($types == "bargain") {
                        $ord['address'] = $ord['addressId'];
                    }
                    $address = Db::name('wd_xcx_duo_products_address')->where("id", $ord['address'])->find();
                    $row_prc .= "联系姓名：" . $address['name'] . "<br />";
                    $row_prc .= "联系电话：" . $address['mobile'] . "<br />";
                    $row_prc .= "联系地址：" . $address['address'] . "<br />";
                    $row_prc .= "详细地址：" . $address['more_address'] . "<br />";
                    $row_prc .= "邮编：" . $address['postalcode'] . "<br />";
                }
            }
            if ($types == "miaosha") {
                if ($ord['beizhu_val'] != "" || $ord['beizhu_val'] != null) {
                    $row_prc .= "买家留言：" . $ord['beizhu_val'] . "<br />";
                }
            } else if ($types == 'duo' || $types == 'duoshop' || $types == 'pt') {
                $row_prc .= "买家留言：" . $ord['liuyan'] . "<br />";
            } else if ($types == 'bargain') {
                $row_prc .= "买家留言：" . $ord['buyerMsg'] . "<br />";
            }
        }


        $mail = new PHPMailer();
        $mail->CharSet = "utf-8";
        $mail->Encoding = "base64";
        $mail->SMTPSecure = "ssl";
        $mail->IsSMTP();
        $mail->Port = 465;
        $mail->Host = "smtp.qq.com";
        $mail->SMTPAuth = true;
        $mail->SMTPDebug = false;
        $mail->Username = $row_mail_user;
        $mail->Password = $row_mail_pass;
        $mail->setFrom($row_mail_user, $row_mail_name);
        foreach ($mail_sendto as $v) {
            $mail->AddAddress($v);
        }
        $mail->Subject = "新订单 - " . date("Y-m-d H:i:s", time());
        $mail->isHTML(true);
        $mail->Body = "<div style='height:40px;line-height:40px;font-size:16px;font-weight:bold;background:#7030A0;color:#fff;text-indent:10px;'>订单详情：</div><div style='line-height:30px;padding:15px;background:#f6f6f6'>" . $row_oid . $row_pro . $row_prc . "<div style='line-height:40px;margin-top:10px;text-align:center;color:#888;font-size:12px'>" . $row_mail_name . "</div></div>";
        if (!$mail->send()) {
            $result = "send_err";
        } else {
            $result = "send_ok";
        }
    }

    //新版生成订单（所有订单公用接口）
    public function dopagecreateorder()
    {
        $uniacid = input('uniacid');
        $suid = input('suid');
        $source = input('source');  //下单来源  1 微信 2 支付宝  3 H5
        $types = input('types');

        //vip订单
        if ($types == 'vipgrade') {
            $open_grade = input('open_grade');
            $ordermoeny = round(input('ordermoeny'), 2); // 订单的钱
            $yuemoney = round(input('yuemoney'), 2);//余额支付的钱
            $money = round(input('money'), 2);//微信支付的钱
            $now = time();
            $order_id = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
            Db::name('wd_xcx_vip_order')->where('uniacid', $uniacid)->where('suid', $suid)->where('flag', 1)->delete();
            $data = array(
                'uniacid' => $uniacid,
                'order_id' => $order_id,
                'allpay' => $ordermoeny,
                'yue' => $yuemoney,
                'wxpay' => $money,
                'suid' => $suid,
                'createtime' => date("Y-m-d H:i:s", $now),
                'grade' => $open_grade,
            );
            $res = Db::name('wd_xcx_vip_order')->insert($data);
            if ($res > 0) {

                $result['data'] = $order_id;
            } else {
                $result['data'] = 0;
            }
            return json_encode($result);
        }
        if ($types == "bargain") {
            $orderid = input('orderid');
            $again = input('again');
            $openid = input('openid');
            $true_price = floatval(input('true_price'));
            $yue_price = floatval(input('yue_price'));
            $wx_price = floatval(input('wx_price'));
            $addressId = intval(input('addressId'));
            $buyerMsg = input('buyerMsg');
            $nav = input('nav'); //配送方式 0快递配送 1到店自取
            $form_id = input('form_id');//万能消息id
            $formId = input('formId');//模板消息id
            $yunfei = floatval(input('yunfei'));
            $pid = input('pid');
            $num = intval(input('num'));
            $userinfo = Db::name("wd_xcx_superuser")->where("uniacid", $uniacid)->where("id", $suid)->find();
            $suid = $userinfo['id'];
            $product_kc = Db::name("wd_xcx_bargain_pro")->where("uniacid", $uniacid)->where("id", $pid)->value("kc");
            $product = Db::name("wd_xcx_bargain_pro")->where("uniacid", $uniacid)->where("id", $pid)->find();
            if (intval($product_kc) == 0) {
                $cannot['data'] = array("errcode" => 4, "err" => "商品已经下架或库存不足！!");
                return json_encode($cannot);
                exit;
            }

            //判断修改库存&销量
            if (intval($product['kc']) == -1) {
                $kucun = -1;
            } else {
                if (intval($product['kc']) < intval($num)) {
                    $results['data'] = array('message' => '失败');
                    return json_encode($results);
                    exit;
                }
                $kucun = intval($product['kc']) >= intval($num) ? intval($product['kc']) - intval($num) : 0;
            }
            $realSaleVolume = $product['realSaleVolume'] + $num;
            Db::name("wd_xcx_bargain_pro")->where("uniacid", $uniacid)->where("id", $product['id'])->update(array("kc" => $kucun, "realSaleVolume" => $realSaleVolume));


            if ($again == 0) {
                $now = time();
                $order_id = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
                $m_address = [];
                if ($addressId > 0) {
                    $addressinfo = Db::name("wd_xcx_duo_products_address")->where("id", $addressId)->find();
                    if (!empty($addressinfo)) {
                        $m_address['address'] = $addressinfo['address'] . ' ' . $addressinfo['more_address'];
                        $m_address['name'] = $addressinfo['name'];
                        $m_address['postalcode'] = $addressinfo['postalcode'];
                        $m_address['mobile'] = $addressinfo['mobile'];
                    } else {
                        $cannot['data'] = array("errcode" => 1, "err" => "收货地址不存在！!");
                        return json_encode($cannot);
                        exit;
                    }
                }

                $store_info = '';
                $self_taking_info = '';
                if ($nav == 2) {
                    $self_taking_shop_id = input('shop_id');
                    $self_taking_contact = input('default_concat');
                    if($self_taking_shop_id > 0){
                        $self_taking_shop_info = Db::name('wd_xcx_store') ->where('id', $self_taking_shop_id) ->find();
                    }else{
                        $baseinfo = Db::name('wd_xcx_base')->where('uniacid', $uniacid)->field('name, tel, address')->find();
                        if($baseinfo){
                            $self_taking_shop_info = ['id' => 0, 'title' => $baseinfo['name'], 'tel' => $baseinfo['tel'], 'province' => '', 'city' => '', 'country' => $baseinfo['address'], 'times' => ''];
                        }else{
                            $self_taking_shop_info = '';
                        }
                    }
                    $self_taking_info = [
                        'self_taking_shop_id' => $self_taking_shop_id,
                        'self_taking_contact' => $self_taking_contact,
                        'self_taking_shop_info' => serialize($self_taking_shop_info),
                        'self_taking_time' => input('self_taking_time'),
                    ];
                    $self_taking_info = serialize($self_taking_info);

                    // $store_name = input('store_name');
                    // $store_tel = input('store_tel');
                    // $store_address = input('store_address');
                    // $store_hours = input('store_hours');
                    // $store_info = [
                    //     'store_name' => $store_name,
                    //     'store_tel' => $store_tel,
                    //     'store_address' => $store_address,
                    //     'store_hours' => $store_hours,
                    // ];
                }

                $data = array(
                    "uniacid" => $uniacid,
                    "suid" => $suid,
                    "openid" => $openid,
                    "pid" => $pid,
                    "title" => $product['title'],
                    "thumb" => $product['thumb'],
                    "nav" => $nav,
                    "num" => $num,
                    "price" => $product['price'],
                    "miniPrice" => $product['miniPrice'],
                    "true_price" => $true_price,
                    "wx_price" => $wx_price,
                    "yue_price" => $yue_price,
                    "yunfei" => $yunfei,
                    "flag" => 0,
                    "form_id" => $form_id,
                    "formId" => $formId,
                    "addressId" => $addressId,
                    "m_address" => count($m_address) > 0 ? serialize($m_address) : '',
                    "buyerMsg" => $buyerMsg,
                    "creattime" => time(),
                    "overtime" => time() + 30 * 60,
                    "source" => $source,
                    "store_info" => $store_info ? serialize($store_info) : '',
                    "self_taking_info" => $self_taking_info
                );
            }
            if ($orderid) {
                if ($again == 0) {
                    Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("order_id", $orderid)->update($data);
                } else if ($again == 1) {
                    if ($buyerMsg != '') {
                        $arr['buyerMsg'] = $buyerMsg;
                        Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("order_id", $orderid)->update($arr);
                    }
                }
                $hh['data'] = $orderid;
                return json_encode($hh);
            } else {
                $data['order_id'] = $order_id;
                $bargainOrderId = Db::name("wd_xcx_bargain_bargain_order")->where("uniacid", $uniacid)->where("proId", $pid)->where("suid", $suid)->where("flag", "lt", 3)->order("id desc")->value("id");
                if ($bargainOrderId) {
                    Db::name("wd_xcx_bargain_bargain_order")->where("uniacid", $uniacid)->where("id", $bargainOrderId)->update(array('order_id' => $order_id, 'flag' => 3));
                }
                Db::name("wd_xcx_bargain_order")->insert($data);
                $hh['data'] = $order_id;
                return json_encode($hh);
            }
            $results['data'] = array("errcode" => 1, "err" => "生成订单失败！");
            return json_encode($results);
        }
        if ($types == 'duo') {
            $openid = input('openid');
            $couponid = input('couponid');
            $price = input('price');
            $dkscore = input('dkscore');
            $address = input('address');
            $mjly = input('mjly');
            $nav = input('nav');
            $formid = input('formid');
            $yunfei = input('yunfei');
            $discounts = input('discounts');

            // $userinfo = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->find();
            $userinfo = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            $money = $userinfo['money'];
            $jsdata = html_entity_decode(input('jsdata'));
            $jsdatass = json_decode($jsdata, true);
            $payprice = 0;
            $yhInfo = array();
            //原价
            foreach ($jsdatass as $key => &$value) {
                if ($value['proinfo'] == -1) {
                    $singleprice = Db::name('wd_xcx_products')->where('id', $value['pvid'])->value('price');
                } else {
                    $singleprice = Db::name('wd_xcx_duo_products_type_value')->where('id', $value['proinfo'])->field('price')->find()['price'];
                }
                $payprice += floatval($singleprice) * intval($value['num']);
            }
            if ($discounts > 0 && $payprice > 0) {
                $payprice = $payprice * $discounts / 10;
                if ($payprice < 0.01) {
                    $payprice = 0.01;
                }
            }
            $discount_all_price = floatval(input('discount_all_price')); //购物车订单会员折扣优惠
            if ($discount_all_price) {
                $payprice = $payprice - $discount_all_price;
            }
            //满减
            $moneyoff = Db::name('wd_xcx_moneyoff')->where('uniacid', $uniacid)->ORDER('reach desc')->select();
            $yhInfo['mj']['msg'] = "";
            $yhInfo['mj']['money'] = 0;
            $yhInfo['yunfei'] = $yunfei;
            foreach ($moneyoff as $k => &$v) {
                if ($payprice >= $v['reach']) {
                    $payprice -= $v['del'];
                    $yhInfo['mj']['msg'] = "满" . $v['reach'] . "减" . $v['del'];
                    $yhInfo['mj']['money'] = $v['del'];
                    break;
                }
            }

            $payprice = $payprice + floatval($yunfei);
            //优惠券
            if ($couponid != '0' && !empty($couponid)) {
                $coupon_user = Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where('id', $couponid)->where('suid', $suid)->where('flag', 0)->find();
                if ($coupon_user) {
                    $coupon = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where('id', $coupon_user['cid'])->find();
                    if ($payprice >= floatval($coupon['pay_money'])) {
                        if (floatval($coupon['price']) >= $payprice + floatval($yunfei)) {
                            $payprice = 0;
                        } else {
                            $payprice -= floatval($coupon['price']);
                        }
                        $yhInfo['yhq']['msg'] = "满" . floatval($coupon['pay_money']) . "减" . floatval($coupon['price']);
                        $yhInfo['yhq']['money'] = floatval($coupon['price']);
                    }
                }
            } else {
                $yhInfo['yhq']['msg'] = "未使用优惠券";
                $yhInfo['yhq']['money'] = 0;
            }
            //积分抵扣
            if ($dkscore != '0' && !empty($dkscore)) {
                $jfgz = Db::name('wd_xcx_rechargeconf')->where('uniacid', $uniacid)->find();
                $payprice -= floatval($dkscore) * floatval($jfgz['money']) / floatval($jfgz['score']);
                $yhInfo['score']['msg'] = $dkscore . "积分抵扣" . floatval($dkscore) * floatval($jfgz['money']) / floatval($jfgz['score']);
                $yhInfo['score']['money'] = floatval($dkscore) * floatval($jfgz['money']) / floatval($jfgz['score']);
            } else {
                $yhInfo['score']['msg'] = "未使用积分";
                $yhInfo['score']['money'] = 0;
            }
            //判断算出来的价格与实付价格是否相等
            //bccomp(round($payprice, 2) + $yunfei, $price) == 0


            if (round($payprice, 2) == floatval($price)) {
                foreach ($jsdatass as $key12 => &$res) {
                    $probaseinfo = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $res['baseinfo'])->find();
                    if ($probaseinfo['is_sale'] == 1) {
                        $result['data'] = array('errcode' => 4, 'err' => '商品已经下架！');
                        return json_encode($result);
                    }
                    $newproinfo['id'] = $probaseinfo['id'];
                    $newproinfo['title'] = $probaseinfo['title'];
                    $newproinfo['thumb'] = $probaseinfo['thumb'];
                    $res['baseinfo'] = $newproinfo;
                    if ($probaseinfo['use_more'] == 1) { //多规格
                        $proproinfo = Db::name('wd_xcx_duo_products_type_value')->where('id', $res['proinfo'])->field("id,price,thumb,comment,type1,type2,type3,kc")->find();
                        $newproinfo['id'] = $proproinfo['id'];
                        $newproinfo['price'] = $proproinfo['price'];
                        $newproinfo['thumb'] = $proproinfo['thumb'];
                        $newproinfo['kc'] = $proproinfo['kc'];
                        $gg = $proproinfo['comment'];
                        $ggarr = explode(",", $gg);
                        $str = "";
                        foreach ($ggarr as $index => $rec) {
                            $i = $index + 1;
                            $kk = "type" . $i;
                            $str .= $rec . ":" . $proproinfo[$kk] . ",";
                        }

                        if ($res['num'] > $proproinfo['kc']) {
                            $result = [];
                            $result['data'] = array('errcode' => 2, 'err' => '库存不足！', 'title' => $probaseinfo['title'] . '(' . chop($str, ',') . ')', 'kc' => $proproinfo['kc']);
                            return json_encode($result);
                            exit;
                        }
                        $newproinfo['ggz'] = $str;
                        $res['proinfo'] = $newproinfo;
                    } else {  //单规格
                        if ($res['num'] > $probaseinfo['pro_kc']) {
                            $result = [];
                            $result['data'] = array('errcode' => 2, 'err' => '库存不足！', 'title' => $probaseinfo['title'], 'kc' => $probaseinfo['pro_kc']);
                            return json_encode($result);
                            exit;
                        }
                        $newproinfo['id'] = -1;
                        $newproinfo['price'] = $probaseinfo['price'];
                        $newproinfo['thumb'] = $probaseinfo['thumb'];
                        $newproinfo['kc'] = $probaseinfo['pro_kc'];
                        $newproinfo['ggz'] = '';
                        $res['proinfo'] = $newproinfo;
                    }
                }
                $now = time();
                $order_id = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
                if ($money >= $price) {
                    $realprice = 0;
                } else {
                    $realprice = round(floatval($price) - floatval($money), 2);
                }
                $m_address = [];
                $addressinfo = Db::name("wd_xcx_duo_products_address")->where("id", $address)->find();
                if (!empty($addressinfo)) {
                    $m_address['address'] = $addressinfo['address'] . ' ' . $addressinfo['more_address'];
                    $m_address['name'] = $addressinfo['name'];
                    $m_address['mobile'] = $addressinfo['mobile'];
                }
                $score_bei = Db::name('wd_xcx_vipgrade')->alias('a')->join('wd_xcx_superuser b', 'a.grade = b.grade')->where('b.id', $suid)->where('a.uniacid', $uniacid)->where('b.uniacid', $uniacid)->where('a.score_flag', 1)->field('a.score_bei')->find()['score_bei'];
                $store_info = '';
                if ($nav == 2) {
                    $store_name = input('store_name');
                    $store_tel = input('store_tel');
                    $store_address = input('store_address');
                    $store_hours = input('store_hours');
                    $store_info = [
                        'store_name' => $store_name,
                        'store_tel' => $store_tel,
                        'store_address' => $store_address,
                        'store_hours' => $store_hours,
                    ];
                }
                $data = array(
                    "suid" => $suid,
                    "source" => $source,
                    "uniacid" => $uniacid,
                    "openid" => $openid,
                    "order_id" => $order_id,
                    "jsondata" => serialize($jsdatass),
                    "coupon" => $couponid,
                    "creattime" => time(),
                    "price" => $price,
                    "payprice" => $realprice,
                    "flag" => 0,
                    "jf" => $dkscore,
                    "address" => $address,
                    "m_address" => count($m_address) > 0 ? serialize($m_address) : $m_address,
                    "liuyan" => $mjly,
                    "nav" => $nav,
                    "formid" => empty($formid) ? 0 : $formid,
                    "yhinfo" => serialize($yhInfo),
                    'score_flag' => 0,
                    'discounts' => $discounts,
                    'discounts_price' => $discount_all_price,
                    "store_info" => $store_info ? serialize($store_info) : ''
                );
                if (intval($score_bei) > 0) {
                    $data['score_bei'] = $score_bei;
                } else {
                    $data['score_bei'] = 0;
                }
                Db::name('wd_xcx_duo_products_order')->insert($data);
                $result['data'] = array('errcode' => 3, 'order_id' => $order_id);
                return json_encode($result);
            }
            $result['data'] = array('errcode' => 1, 'err' => '生成订单失败！');
            return json_encode($result);

        }

        if ($types == "miaosha") {
            $orderid = input('orderid');
            $zf_type = input('zf_type'); //支付方式 0余额 1线上
            $again = input('again');
            $suid = input('suid');
            $couponid = input('couponid');
            $price = floatval(input('price'));
            $dkscore = floatval(input('dkscore'));
            $address = input('address') ? input('address') : 0;
            $mjly = input('mjly');
            $nav = input('nav');
            $formid = input('formid');
            $yunfei = floatval(input('yunfei'));
            $pid = input('pid');
            $num = intval(input('num'));
            $yhInfo = array();
            $userinfo = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            $money = floatval($userinfo['money']);
            $product = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $pid)->find();
            if ($product['is_sale'] == 1) {
                $b['data'] = array("errcode" => 4, "err" => "商品已经下架");
                return json_encode($b);
            }
            $payprice = round(floatval($product['price']) * $num + $yunfei, 2);

            //满减
            $yhInfo['yunfei'] = $yunfei;
            $moneyoff = Db::name('wd_xcx_moneyoff')->where('uniacid', $uniacid)->order('reach desc')->select();
            $yhInfo['mj']['msg'] = "";
            $yhInfo['mj']['money'] = 0;
            // foreach ($moneyoff as $k => &$v) {
            //     if ($payprice >= $v['reach']) {
            //         $payprice -= $v['del'];
            //         $yhInfo['mj']['msg'] = "满" . $v['reach'] . "减" . $v['del'];
            //         $yhInfo['mj']['money'] = $v['del'];
            //         break;
            //     }
            // }
            //优惠券
            // if ($couponid != '0' && !empty($couponid)) {
            //     $coupon_user = Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where('id', $couponid)->where('suid', $suid)->where('flag', 0)->find();
            //     if ($coupon_user) {
            //         $coupon = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where('id', $coupon_user['cid'])->find();
            //         if ($payprice >= floatval($coupon['pay_money'])) {
            //             if (floatval($coupon['price']) >= $payprice) {
            //                 $payprice = 0;
            //             } else {
            //                 $payprice -= floatval($coupon['price']);
            //             }
            //             $yhInfo['yhq']['msg'] = "满" . floatval($coupon['pay_money']) . "减" . floatval($coupon['price']);
            //             $yhInfo['yhq']['money'] = floatval($coupon['price']);
            //         }
            //     }
            // } else {
                $yhInfo['yhq']['msg'] = "未使用优惠券";
                $yhInfo['yhq']['money'] = 0;
            // }

            //积分抵扣
            // if ($dkscore != '0' && !empty($dkscore)) {
            //     $jfgz = Db::name('wd_xcx_rechargeconf')->where('uniacid', $uniacid)->find();
            //     $payprice -= floatval($dkscore) * floatval($jfgz['money']) / floatval($jfgz['score']);
            //     $yhInfo['score']['msg'] = $dkscore . "积分抵扣" . floatval($dkscore) * floatval($jfgz['money']) / floatval($jfgz['score']);
            //     $yhInfo['score']['money'] = floatval($dkscore) * floatval($jfgz['money']) / floatval($jfgz['score']);
            // } else {
                $yhInfo['score']['msg'] = "未使用积分";
                $yhInfo['score']['money'] = 0;
            // }


            //判断算出来的价格与实付价格是否相等
            if (round($payprice, 2) == $price || $again == 1) {
                $my_num = Db::name('wd_xcx_order')->where('pid', $pid)->where('suid', $suid)->where('uniacid', $uniacid)->where('flag', 'EGT', 0)->sum('num');
                if (intval($product['pro_xz']) > 0 && intval($my_num) + $num > intval($product['pro_xz'])) {
                    $can_buy = intval($product['pro_xz']) - intval($my_num);
                    $a['data'] = array("errcode" => 2, "err" => "您的累计购买量已超该商品限购数量！", "can_buy" => $can_buy);
                    return json_encode($a);
                }
                if (intval($product['pro_kc']) !== -1 && $num > intval($product['pro_kc'])) {
                    $b['data'] = array("errcode" => 3, "err" => "库存不足！", "kc" => intval($product['pro_kc']));
                    return json_encode($b);
                }
                if ($again == 0) {
                    $now = time();
                    $order_id = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);

                    // if ($money >= $price) {
                    //     $realprice = 0;
                    // } else {
                    //     $realprice = round($price - $money, 2);
                    // }


                    if ($couponid == 0) {
                        $yhq = 0;
                    } else {
                        $yhq = $coupon['price'];
                    }
                    if ($mjly == 'undefined') {
                        $mjly = '';
                    }
                    $m_address = [];
                    $addressinfo = Db::name("wd_xcx_duo_products_address")->where("id", $address)->find();
                    if (!empty($addressinfo)) {
                        $m_address['address'] = $addressinfo['address'] . ' ' . $addressinfo['more_address'];
                        $m_address['name'] = $addressinfo['name'];
                        $m_address['mobile'] = $addressinfo['mobile'];
                    }
                    $score_bei = Db::name('wd_xcx_vipgrade')->alias('a')->join('wd_xcx_superuser b', 'a.grade = b.grade')->where('b.id', $suid)->where('a.uniacid', $uniacid)->where('b.uniacid', $uniacid)->where('a.score_flag', 1)->field('a.score_bei')->find()['score_bei'];
                    $store_info = '';
                    $self_taking_info = '';
                    if ($nav == 2) {
                        $self_taking_shop_id = input('shop_id');
                        $self_taking_contact = input('default_concat');
                        if($self_taking_shop_id > 0){
                            $self_taking_shop_info = Db::name('wd_xcx_store') ->where('id', $self_taking_shop_id) ->find();
                        }else{
                            $baseinfo = Db::name('wd_xcx_base')->where('uniacid', $uniacid)->field('name, tel, address')->find();
                            if($baseinfo){
                                $self_taking_shop_info = ['id' => 0, 'title' => $baseinfo['name'], 'tel' => $baseinfo['tel'], 'province' => '', 'city' => '', 'country' => $baseinfo['address'], 'times' => ''];
                            }else{
                                $self_taking_shop_info = '';
                            }
                        }
                        $self_taking_info = [
                            'self_taking_shop_id' => $self_taking_shop_id,
                            'self_taking_contact' => $self_taking_contact,
                            'self_taking_shop_info' => serialize($self_taking_shop_info),
                            'self_taking_time' => input('self_taking_time'),
                        ];
                        $self_taking_info = serialize($self_taking_info);

                        // $store_name = input('store_name');
                        // $store_tel = input('store_tel');
                        // $store_address = input('store_address');
                        // $store_hours = input('store_hours');
                        // $store_info = [
                        //     'store_name' => $store_name,
                        //     'store_tel' => $store_tel,
                        //     'store_address' => $store_address,
                        //     'store_hours' => $store_hours,
                        // ];
                    }
                    $data = array(
                        "suid" => $suid,
                        "pid" => $pid,
                        "thumb" => $product['thumb'],
                        "product" => $product['title'],
                        "price" => $price,
                        "num" => $num,
                        "yhq" => $yhq,
                        "true_price" => $price,
                        "pay_price" => $zf_type != 0 ? $price : 0,
                        "dkscore" => $dkscore,
                        "creattime" => time(),
                        "flag" => 0,
                        "is_more" => 0,
                        "overtime" => time() + 30 * 60,
                        "coupon" => $couponid,
                        "address" => $address,
                        "m_address" => count($m_address) > 0 ? serialize($m_address) : $m_address,
                        "nav" => $nav,
                        "formid" => $formid,
                        "beizhu_val" => $mjly,
                        "yhinfo" => serialize($yhInfo),
                        'source' => input('source'),
                        'score_flag' => 0,
                        "store_info" => $store_info ? serialize($store_info) : '',
                        "self_taking_info" => $self_taking_info
                    );
                    if (intval($score_bei) > 0) {
                        $data['score_bei'] = $score_bei;
                    } else {
                        $data['score_bei'] = 0;
                    }
                }
                // $storeInfo = Db::name('wd_xcx_base')->where('uniacid',$uniacid)->field('hwq')->find();
                // if($orderid && $orderid != 'undefined'){
                //     if($again == 0){
                //         $data['hwq'] = $storeInfo['hwq'] == 1 ? 1 : 0;
                //         Db::name('wd_xcx_order') ->where('uniacid', $uniacid) ->where('order_id', $orderid) ->update($data);
                //     }else if($again == 1){
                //         if($mjly != 'undefined'){
                //             $arr['beizhu_val'] = $mjly;
                //             $arr['hwq'] = $storeInfo['hwq'] == 1 ? 1 : 0;

                //             Db::name('wd_xcx_order') ->where('uniacid', $uniacid) ->where('order_id', $orderid)->update($arr);
                //         }
                //     }
                //     $d['data'] = array("errcode"=>-1, "orderid"=>$orderid);
                //     return json_encode($d);
                // }else{
                $data['uniacid'] = $uniacid;
                $data['order_id'] = $order_id;
                //     $data['hwq'] = $storeInfo['hwq'] == 1 ? 1 : 0;
                Db::name('wd_xcx_order')->insert($data);
                if($product['pro_kc'] !== -1){
                    $pro_upd = [];
                    $pro_upd['pro_kc'] = $product['pro_kc'] - $num;
                }
                $pro_upd['sale_tnum'] = $product['sale_tnum'] + $num;
                Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $pid)->update($pro_upd);
                $e['data'] = array("errcode" => -1, "orderid" => $order_id);
                return json_encode($e); 
                // }
            }
            $c['data'] = array("errcode" => 1, "err" => "生成订单失败！");
            return json_encode($c);
        }

        if ($types == "reserve") {
            $suid = input('suid');
            $userinfo = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            // $suid = $userinfo['id'];
            $pid = input('id');
            $product = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $pid)->find();
            $money = $userinfo['money'];
            $dkscore = input('dkscore');
            $dkmoney = input('dkmoney');
            $orderid = input('order');
            $num = input('num');
            $yhInfo = array();
            $yhInfo['yunfei'] = 0;
            $yhInfo['mj']['msg'] = "";
            $yhInfo['mj']['money'] = 0;
            $yhInfo['yhq']['msg'] = "未使用优惠券";
            $yhInfo['yhq']['money'] = 0;
            $yhInfo['score']['msg'] = "未使用积分";
            $yhInfo['score']['money'] = 0;

            $discounts = input('discounts');   //折扣
            $allprice = input('hjjg');   //总计
            if ($discounts > 0) {
                $payprice = input('hjjg') * $discounts / 10;   //总计
                if ($payprice < 0.01) {
                    $payprice = 0.01;
                }
            } else {
                $payprice = input('hjjg');
            }
            $price = input('zhifu');  //总支付（去除各种优惠）

            $zf_type = input('zf_type');  //支付方式  0余额 1微信
            $zf_money = input('zf_money');  //实付  如果余额不足，则为扣除余额后金额
            if ($zf_type == 1) {
                if ($price > $zf_money) {  //  $zf_money  微信支付金额
                    $wxprice = $zf_money;
                } else {
                    $wxprice = $price;
                }
            } else {
                $wxprice = 0;
            }


            //满减
            $moneyoff = Db::name('wd_xcx_moneyoff')->where('uniacid', $uniacid)->order('reach desc')->select();
            foreach ($moneyoff as $k => &$v) {
                if ($payprice >= $v['reach']) {
                    $payprice -= $v['del'];
                    $yhInfo['mj']['msg'] = "满" . $v['reach'] . "减" . $v['del'];
                    $yhInfo['mj']['money'] = $v['del'];
                    break;
                }
            }

            $couponid = input('yhqid');

            //优惠券
            if ($couponid != '0' && !empty($couponid)) {
                $coupon_user = Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where('id', $couponid)->where('suid', $suid)->where('flag', 0)->find();
                if ($coupon_user) {
                    $coupon = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where('id', $coupon_user['cid'])->find();
                    if (floatval($allprice) >= floatval($coupon['pay_money'])) {
                        $payprice -= floatval($coupon['price']);
                        $yhInfo['yhq']['msg'] = "满" . floatval($coupon['pay_money']) . "减" . floatval($coupon['price']);
                        $yhInfo['yhq']['money'] = floatval($coupon['price']);
                    }
                }
            }

            //积分抵扣
            if ($dkscore != '0' && !empty($dkscore)) {
                $payprice -= floatval($dkmoney);
                $yhInfo['score']['msg'] = $dkscore . "积分抵扣" . floatval($dkmoney);
                $yhInfo['score']['money'] = floatval($dkmoney);
            }
            // $storeInfo = Db::name('wd_xcx_base')->where('uniacid',$uniacid)->field('hwq')->find();

            if ($product['tableis'] == '1' && $product['tableid'] && input('type') == 'table' && input('NowSelectStr') && input('appoint_date')) {
                //查找出当前日期的已选择座位
                $appoint_date = input('appoint_date');
                $selectinfo = Db::name('wd_xcx_tableselect')->where('uniacid', $uniacid)->where('pid', $product['id'])->where('appoint_date', $appoint_date)->where('flag', 1)->field('select_str')->select();
                $hasselect = array();
                if ($selectinfo) {
                    foreach ($selectinfo as $key => $value) {
                        $temp_info = explode(',', $value['select_str']);
                        $hasselect = array_merge($hasselect, $temp_info);
                    }
                    $temp_now_select = explode(',', input('NowSelectStr'));
                    foreach ($temp_now_select as $key => $value) {
                        if (in_array($value, $hasselect)) {
                            $cannot['data'] = array("errcode" => 1, "err" => "座位已被选择!");
                            return json_encode($cannot);
                            exit;
                        }
                    }
                }

                $order = input('order');
                if (input('order')) {
                    $order = input('order');
                } else {
                    $now = time();
                    $order = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
                }
                $overtime = time() + 30 * 60;
                $store_name = input('store_name');
                $store_tel = input('store_tel');
                $store_address = input('store_address');
                $store_hours = input('store_hours');
                $store_info = [
                    'store_name' => $store_name,
                    'store_tel' => $store_tel,
                    'store_address' => $store_address,
                    'store_hours' => $store_hours,
                ];
                $data = array(
                    "uniacid" => $uniacid,
                    "order_id" => $order,
                    // "suid" => $userinfo['id'],
                    "suid" => input('suid'),
                    "pid" => input('id'),
                    "thumb" => $product['thumb'],
                    "product" => $product['title'],
                    "price" => $allprice,
                    "yhq" => input('youhui') ? input('youhui') : 0,
                    "true_price" => input('zhifu'),
                    "pay_price" => $wxprice,
                    "creattime" => time(),
                    "flag" => 0,
                    "pro_user_name" => input('pro_name'),
                    "pro_user_tel" => input('pro_tel'),
                    "pro_user_add" => input('pro_address'),
                    "pro_user_txt" => input('pro_txt'),
                    "overtime" => $overtime,
                    "is_more" => 1,
                    "coupon" => input('yhqid'),
                    'appoint_date' => strtotime(input('appoint_date')),
                    "yhinfo" => serialize($yhInfo),
                    "dkscore" => $dkscore,
                    'source' => input('source'),
                    'discounts' => $discounts,
                    "store_info" => $store_info ? serialize($store_info) : ''
                );

                if (input('pagedata') && input('pagedata') !== "NULL") {
                    $forms = stripslashes(html_entity_decode(input('pagedata')));
                    $forms = json_decode($forms, TRUE);
                    $data['beizhu_val'] = serialize($forms);
                }


                if (input('order')) {
                    // $data['hwq'] = $storeInfo['hwq'] == 1 ? 1 : 0;
                    $res = Db::name('wd_xcx_order')->where('order_id', $order)->where('uniacid', $uniacid)->update($data);
                } else {
                    $tableselect = array(
                        'uniacid' => $uniacid,
                        'suid' => $suid,
                        'pid' => $product['id'],
                        'tid' => $product['tableid'],
                        'select_str' => input('NowSelectStr'),
                        'appoint_date' => input('appoint_date'),
                        'createtime' => time(),
                        'flag' => 0
                    );
                    // $data['hwq'] = $storeInfo['hwq'] == 1 ? 1 : 0;

                    $tsid = Db::name('wd_xcx_tableselect')->insertGetId($tableselect);

                    $data['tsid'] = $tsid;

                    $table = Db::name('wd_xcx_table')->where('uniacid', $uniacid)->where('id', $product['tableid'])->find();
                    $table_x = explode(",", chop($table['columnstr'], ","));
                    $table_y = explode(",", chop($table['rowstr'], ","));
                    $nss = explode(",", input('NowSelectStr'));
                    for ($i = 0; $i < count($nss); $i++) {
                        $z = explode("a", $nss[$i]);
                        $duo[$i][0] = $table_y[intval($z[0]) - 1] . "," . $table_x[intval($z[1]) - 1] . " (" . input('appoint_date') . ")";
                        $duo[$i][1] = $product['price'];
                        $duo[$i][4] = 1;
                    }
                    $data['order_duo'] = serialize($duo);
                    $data['num'] = count(explode(",", input('NowSelectStr')));
                    $res = Db::name('wd_xcx_order')->insert($data);

                    $select_count = input('NowSelectStr');
                    $select_count = explode(',', $select_count);
                    $select_count = count($select_count);

                    $product['sale_tnum'] = $product['sale_tnum'] + $select_count;
                    Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $pid)->update(['sale_tnum' => $product['sale_tnum']]);
                }
                if ($res) {

                    //增加真实销量  座位数增加

                    //处理积分
                    if ($dkscore != '0' && !empty($dkscore)) {
                        $score = floatval($userinfo['score']) - floatval($dkscore);
                        if ($score < 0) {
                            $score = 0;
                        }
                        $order_userinfo['score'] = $score;

                        Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update($order_userinfo);
                    }

                    //处理优惠券
                    if ($couponid != '0' && !empty($couponid)) {
                        Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where('id', $couponid)->update(['flag' => 1, 'utime' => time()]);
                    }

                    //积分流水
                    if ($dkscore != '0' > 0) {
                        $xfscore = array(
                            "uniacid" => $uniacid,
                            "orderid" => $order,
                            "suid" => $suid,
                            "type" => "del",
                            "score" => $dkscore,
                            "message" => "消费",
                            "creattime" => time()
                        );
                        Db::name('wd_xcx_score')->insert($xfscore);
                    }

                    $g['data'] = array("errcode" => -1, "orderid" => $order);
                    return json_encode($g);
                }
            }

            //判断算出来的价格与实付价格是否相等
            if (round($payprice, 2) == $price) {
                if ($product['more_type_num']) {
                    $more_type_num = unserialize($product['more_type_num']);
                }
                $newnum = explode("&quot;", $num);
                $newnums = "";

                foreach ($newnum as $key => $value) {
                    $newnums .= $value;
                }
                $newnums = explode(',', substr($newnums, 1, strlen($newnums) - 2));

                $numarr = array();
                foreach ($newnums as $rec) {
                    $nnn = explode(':', $rec);
                    $numarr[] = $nnn[1];
                }

                $guig = unserialize($product['more_type_x']);
                foreach ($guig as $key => &$rec) {
                    $rec[] = $numarr[$key];
                }
                $newgg = serialize($guig);

                foreach ($more_type_num as $k => $v) {
                    if ($numarr[$k] > $v['shennum']) {
                        $more_type_x = unserialize($product['more_type_x']);
                        $cannotbuy['data'] = array("errcode" => 1, "err" => "商品" . $more_type_x[$k][0] . "库存不足");
                        return json_encode($cannotbuy);
                        exit;
                    }
                }

                $now = time();
                $order_id = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);

                if ($money >= $price) {
                    $realprice = 0;
                } else {
                    $realprice = round($price - $money, 2);
                }
                if (input('chuydate') || input('chuytime')) {
                    if (input('chuydate')) {
                        $appoint_date = input('chuydate');
                    } else {
                        $appoint_date = date("Y-m-d");
                    }

                    if ($product['pro_flag_time'] == 2) {
                        if (input('chuytime')) {
                            $appoint_date .= " " . input('chuytime');
                        }
                    }

                    $appoint_date = strtotime(date("Y-m-d H:i:s", strtotime($appoint_date)));
                }
                $store_name = input('store_name');
                $store_tel = input('store_tel');
                $store_address = input('store_address');
                $store_hours = input('store_hours');
                $store_info = [
                    'store_name' => $store_name,
                    'store_tel' => $store_tel,
                    'store_address' => $store_address,
                    'store_hours' => $store_hours,
                ];
                $data = array(
                    // "suid" => $suid,
                    "suid" => $suid,
                    "pid" => $pid,
                    "thumb" => $product['thumb'],
                    "product" => $product['title'],
                    "price" => $allprice,  //总计
                    "num" => $num,
                    "true_price" => $price,  //实付（余额+微信）
                    "pay_price" => $wxprice,//微信
                    "dkscore" => $dkscore,
                    "creattime" => time(),
                    "flag" => 0,
                    "is_more" => 1,
                    "overtime" => time() + 30 * 60,
                    "order_duo" => $newgg,
                    "coupon" => $couponid,
                    // "address" => $address,
                    // "nav" => $nav,
                    // "formid" => $formid,
                    // "beizhu_val" => $mjly,
                    "yhinfo" => serialize($yhInfo),
                    "pro_user_name" => input('pro_name'),
                    "pro_user_tel" => input('pro_tel'),
                    "pro_user_add" => input('pro_address'),
                    "pro_user_txt" => input('pro_txt'),
                    "appoint_date" => $appoint_date,
                    "discounts" => $discounts,
                    "source" => input('source'),
                    "store_info" => $store_info ? serialize($store_info) : ''
                );
                // 新增自定义表单数据接收
                if (input('pagedata') && input('pagedata') !== "NULL") {
                    $forms = stripslashes(html_entity_decode(input('pagedata')));
                    $forms = json_decode($forms, TRUE);
                    $data['beizhu_val'] = serialize($forms);
                }

                $data['uniacid'] = $uniacid;
                $data['order_id'] = $order_id;
                // $data['hwq'] = $storeInfo['hwq'] == 1 ? 1 : 0;
                $myres = Db::name('wd_xcx_order')->insert($data);

                if ($myres) {
                    //处理库存与销量
                    if ($product['tableis'] != 1) {
                        //处理库存销量
                        $more_type_num = unserialize($product['more_type_num']);
                        $order_duo = unserialize($newgg);
                        $more_type = unserialize($product['more_type']);
                        $rows = count($more_type) / 4;
                        for ($i = 0; $i < $rows; $i++) {
                            if ($i == 0) {
                                $more_type[2] = $more_type[2] - $order_duo[$i][4];
                            } else {
                                $more_type[2 + $i * 4] = $more_type[2 + $i * 4] - $order_duo[$i][4];
                            }
                        }

                        $now_salenum = 0;
                        if (!empty($order_duo)) {
                            foreach ($order_duo as $kv => $vv) {
                                $now_salenum += $vv[4];
                                $more_type_num[$kv]['salenum'] = $more_type_num[$kv]['salenum'] + $vv[4];
                                $more_type_num[$kv]['shennum'] = $more_type_num[$kv]['shennum'] - $vv[4];
                            }
                        }
                        $sale_tnum = $product['sale_tnum'] + $now_salenum;
                        Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $product['id'])->update(['sale_tnum' => $sale_tnum, 'more_type_num' => serialize($more_type_num), 'more_type' => serialize($more_type)]);
                    }

                    //处理积分
                    //更新积分
                    if ($dkscore != '0' && !empty($dkscore)) {
                        $score = floatval($userinfo['score']) - floatval($dkscore);
                        if ($score < 0) {
                            $score = 0;
                        }
                        $order_userinfo['score'] = $score;
                        Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update($order_userinfo);
                    }


                    //处理优惠券
                    if ($couponid != '0' && !empty($couponid)) {
                        Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where('id', $couponid)->update(['flag' => 1, 'utime' => time()]);
                    }


                    //积分流水
                    if ($dkscore != '0' > 0) {
                        $xfscore = array(
                            "uniacid" => $uniacid,
                            "orderid" => $order_id,
                            "suid" => $suid,
                            "type" => "del",
                            "score" => $dkscore,
                            "message" => "消费",
                            "creattime" => time()
                        );
                        Db::name('wd_xcx_score')->insert($xfscore);
                    }


                }
                $hh['data'] = array("errcode" => -1, "orderid" => $order_id);
                return json_encode($hh);

            }
            $c['data'] = array("errcode" => 1, "err" => "生成订单失败！");
            return json_encode($c);
        }

    }
    /*forum start*/
    //论坛所有功能分类
    public function doPageForumfunc()
    {
        $uniacid = input('uniacid');
        $list = Db::name("wd_xcx_forum_func")->where('uniacid', $uniacid)->where('status', 1)->order('num desc,id desc')->select();
        foreach ($list as $key => &$value) {
            $value['func_img'] = remote($uniacid, $value['func_img'], 1);
        }
        $result['data'] = $list;
        return json_encode($result);
    }

    //论坛的基本设置
    public function doPageForumSet()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $set = Db::name("wd_xcx_forum_set")->where("uniacid", $uniacid)->find();
        $mymoney = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->field('money')->find()['money'];
        $result = [];
        if ($set) {
            $set['mymoney'] = $mymoney;
            $result['data'] = $set;
        } else {
            $result['data'] = array(
                'release_money' => 0.00,
                'stick_money' => 10.00,
                'mymoney' => $mymoney
            );
        }
        return json_encode($result);
    }

    //发布页获取所有功能分类
    public function doPageGetFuncAll()
    {
        $uniacid = input("uniacid");
        $funcAll = Db::name("wd_xcx_forum_func")->where("uniacid", $uniacid)->where("status", 1)->order("num desc, id desc")->select();  //全部功能分类
        $funcTitleArr = [];
        foreach ($funcAll as $key => $value) {
            array_push($funcTitleArr, $value['title']);
        }
        $result = [];
        $result['data']['funcAll'] = $funcAll;
        $result['data']['funcTitleArr'] = $funcTitleArr;
        return json_encode($result);
    }

    //论坛发布信息提交
    public function doPageReleaseSub()
    {
        $uniacid = input("uniacid");
        $cons = input("cons");
        $title = input("title");
        $release_money = input("release_money");
        $release_audit = input("release_audit");
        $suid = input('suid');
        $source = input('source');
        $haspay = input('haspay');
        $orderid = input('orderid');

        $telphone = input("telphone");
        if ($telphone == "undefined") {
            $telphone = "";
        }
        $address = input("address");
        $release_img = input("release_img");
        if ($release_img) {
            $release_img = stripslashes(html_entity_decode($release_img));
            $release_img = json_decode($release_img, TRUE);
            if ($release_img) {
                foreach ($release_img as $key => &$value) {
                    $value = moveurl($value);
                }
                $release_img = serialize($release_img);
            }
        }
        $data = array(
            "uniacid" => $uniacid,
            "suid" => $suid,
            "source" => $source,
            "fid" => input("fid"),
            "content" => $cons,
            "img" => $release_img,
            "release_money" => $release_money,
            "address" => $address,
            "telphone" => $telphone,
            "title" => $title
        );
        $release_audit = Db::name('wd_xcx_forum_set')->where('uniacid', $uniacid)->field('release_audit')->find();
        if (isset($release_audit['release_audit'])) {
            if ($release_audit['release_audit'] == 1) {
                $data['shenhe'] = 0;
            } else {
                $data['shenhe'] = 1;
            }
        } else {
            $data['shenhe'] = 1;
        }
        $rid = input("rid"); //发布id
        if ($rid > 0) {  //疑问  置顶之后是否可以续费购买置顶天数
            $data['updatetime'] = date("Y-m-d H:i:s", time());
            $res = Db::name("wd_xcx_forum_release")->where("id", $rid)->update($data);
            if ($res) {
                $res = $rid;
            }
        } else {
            $data['createtime'] = date("Y-m-d H:i:s", time());
            if ($haspay == 2) {  //未支付  数据存入缓存
                $rediscon = $this->GetRediscon();
                $redis = new Redis($rediscon);
                $redis->set($orderid . 'fabu', json_encode($data));
                return;
            } else if ($haspay == 1) {
                $res = Db::name("wd_xcx_forum_release")->insertGetId($data);
                if ($release_money) {
                    $xfmoney = array(
                        "uniacid" => $uniacid,
                        "orderid" => $orderid,
                        "suid" => $suid,
                        "type" => "del",
                        "score" => $release_money,
                        "message" => "微同城发布-余额支付",
                        "creattime" => time()
                    );
                    Db::name('wd_xcx_money')->insert($xfmoney);
                }
                add_all_pay($uniacid, $release_money, $suid);
                check_vip_grade($uniacid, $suid);
            }

        }
        $result = [];
        if ($res) {
            $result['data'] = $res;
        } else {
            $result['data'] = 0;
        }
        return json_encode($result);
    }

    //论坛发布扣除原有余额
    public function doPageUpdateUserMoney()
    {
        $uniacid = input("uniacid");
        $openid = input("openid");
        $res = Db::name("wd_xcx_user")->where("uniacid", $uniacid)->where("openid", $openid)->update(array("money" => 0));
        if ($res) {
            $result = [];
            $result['data'] = 1;
            return json_encode($result);
        }
    }

    //论坛发布列表
    public function doPageReleaseAll()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $fid = input("fid");  //功能类
        $page = input("page");
        $pindex = max(1, intval(input("page")));
        $psize = 10;
        $begin = ($pindex - 1) * $psize;
        $funcAll = Db::name("wd_xcx_forum_func")->where("uniacid", $uniacid)->where("status", 1)->order("num desc,id desc")->select();  //全部功能分类
        //功能页面类型
        $pageType = Db::name("wd_xcx_forum_func")->where("uniacid", $uniacid)->where("id", $fid)->field("page_type")->find()["page_type"];
        $is = Db::name('wd_xcx_forum_func')->where('uniacid', $uniacid)->where("id", $fid)->where('status', 1)->find();
        $result = array();
        if ($is) {
            //列表内容
            $releaseAll = Db::name("wd_xcx_forum_release")->where("uniacid", $uniacid)->where("fid", $fid)->where("shenhe", 1)->order("hot asc,stick asc,id desc")->limit($begin, $psize)->select();
            if ($releaseAll) {
                //获取发布的评论
                foreach ($releaseAll as $key => &$value) {
                    $value['content'] = mb_substr($value['content'], 0, 420);
                    $is_stick = Db::name("wd_xcx_forum_stick")->where("uniacid", $uniacid)->where('rid', $value['id'])->where('stick_status', 1)->find();
                    if (!empty($is_stick)) {
                        $endtime = strtotime($is_stick['stick_time']) + $is_stick['stick_days'] * 24 * 3600;
                        if ($endtime <= time()) { //判断置顶是否过期
                            Db::name('wd_xcx_forum_release')->where('uniacid', $uniacid)->where("id", $value['id'])->update(array('stick' => 2));
                            Db::name('wd_xcx_forum_stick')->where('uniacid', $uniacid)->where("id", $is_stick['id'])->update(array('stick_status' => 2));
                            $value['stick'] = 2;
                        }
                    }
                    if ($value['img']) {
                        $value['img'] = unserialize($value['img']);
                    }
                    if (!empty($value['img'])) {
                        if (count($value['img']) > 0 && is_array($value['img'])) {
                            foreach ($value['img'] as $k => &$v) {
                                $v = remote($uniacid, $v, 1);
                            }
                        }
                    }

                    $value['is_collection'] = Db::name("wd_xcx_forum_collection")->alias("a")->join("wd_xcx_superuser b", "a.suid = b.id")->where("a.uniacid", $uniacid)->where("a.rid", $value['id'])->where("a.collection", 1)->count();
                    $collect_sql = Db::name("wd_xcx_forum_collection")->alias("a")->join("wd_xcx_superuser b", "a.suid = b.id")->where("a.uniacid", $uniacid)->where("b.id", $suid)->where("a.collection", 1)->where("a.rid", $value['id'])->field("a.id")->find();
                    if ($collect_sql) {
                        $value['is_collect'] = 1; //收藏
                    } else {
                        $value['is_collect'] = 2; //收藏
                    }

                    $value['is_likes'] = Db::name("wd_xcx_forum_likes")->where("uniacid", $uniacid)->where("rid", $value['id'])->where("likes", 1)->count();

                    $like_sql = Db::name("wd_xcx_forum_likes")->where("uniacid", $uniacid)->where("suid", $suid)->where("likes", 1)->where("rid", $value['id'])->field("id")->find();

                    if ($like_sql) {
                        $value['is_like'] = 1; //点赞
                    } else {
                        $value['is_like'] = 2; //点赞
                    }

                    $listAll = Db::name("wd_xcx_forum_likes")->where("uniacid", $uniacid)->where("rid", $value['id'])->where("likes", 1)->order("id desc")->field("suid, source")->select();

                    if ($listAll) {
                        foreach ($listAll as $key => $likes_v) {
                            $info_v = $this->getnameandavatar($likes_v['source'], $uniacid, $likes_v['suid']);
                            $value['likesAll'][$key]['nickname'] = $info_v['nickname'];
                        }
                    } else {
                        $value['likesAll'] = null;
                    }

                    if ($pageType != 3) {
                        $commentList = Db::name('wd_xcx_forum_comment')->alias("a")->join("wd_xcx_superuser b", "a.suid = b.id")->where("a.uniacid", $uniacid)->where("a.rid", $value['id'])->limit(4)->order("a.id desc")->field("a.*,b.phone as h5_name")->select(); //获取4条评论
                        if ($commentList) {
                            $value['comment'] = count($commentList);
                            $value['commentList'] = $commentList;
                            foreach ($value['commentList'] as $kvs => $vs) {
                                $info_vs = $this->getnameandavatar($vs['source'], $uniacid, $vs['suid']);
                                $value['commentList'][$kvs]['nickname'] = $info_vs['nickname'];
                            }
                        } else {
                            $value['commentList'] = null;
                            $value['comment'] = 0;
                        }

                    } else {

                        if (!empty($value['img'])) {
                            if (count($value['img']) > 1) {
                                $img = $value['img'][0];
                                $value['img'] = [];
                                $value['img'][0] = $img;
                            }
                        } else {
                            $value['img'] = [];
                        }
                        $value['commentList'] = null;
                        $value['comment'] = 0;
                    }

                    $info_value = $this->getnameandavatar($value['source'], $uniacid, $value['suid']);
                    $value['nickname'] = $info_value['nickname'];
                    $value['avatar'] = $info_value['avatar'];
                }
            } else {
                $releaseAll = [];
            }
            $result['data']['is'] = 1;
        } else {
            $releaseAll = [];
            $result['data']['is'] = 2;
        }
        $result['data']['pageType'] = $pageType;
        $result['data']['funcAll'] = $funcAll;
        $result['data']['releaseAll'] = $releaseAll;
        return json_encode($result);
    }

    //论坛获取发布详情页内容
    public function doPageGetForumCon()
    {
        $uniacid = input("uniacid");
        $rid = input("rid");
        $types = input("types"); //修改：1
        $suid = input("suid");
        $getcon = Db::name("wd_xcx_forum_release")->alias("a")->join("wd_xcx_superuser b", "a.suid = b.id", 'left')->where("a.uniacid", $uniacid)->where("a.id", $rid)->where("a.shenhe", 1)->field("a.*")->find();

        if ($getcon['stick'] == 2) {
            $set = Db::name('wd_xcx_forum_set')->where('uniacid', $uniacid)->find();
            if ($set) {
                if ($set['settop'] == 1) {
                    $getcon['settop'] = 1;
                } else {
                    $getcon['settop'] = 0;
                }
            } else {
                $getcon['settop'] = 1;
            }
        } else {
            $getcon['settop'] = 0;
        }

        $info = $this->getnameandavatar($getcon['source'], $uniacid, $getcon['suid']);
        $getcon['nickname'] = $info['nickname'];
        $getcon['avatar'] = $info['avatar'];


        $is_stick = Db::name("wd_xcx_forum_stick")->where("uniacid", $uniacid)->where('rid', $rid)->where('stick_status', 1)->find();
        if ($is_stick) {
            $endtime = strtotime($is_stick['stick_time']) + $is_stick['stick_days'] * 24 * 3600;
            if ($endtime <= time()) { //判断置顶是否过期
                Db::name('wd_xcx_forum_release')->where('uniacid', $uniacid)->where("id", $rid)->update(array('stick' => 2));
                Db::name('wd_xcx_forum_stick')->where('uniacid', $uniacid)->where("id", $is_stick['id'])->update(array('stick_status' => 2));
                $getcon['stick'] = 2;
            }
        }
        if ($getcon['img']) {
            $getcon['img'] = unserialize($getcon['img']);
            if (count($getcon['img']) > 0 && is_array($getcon['img'])) {
                foreach ($getcon['img'] as $k => &$v) {
                    $v = remote($uniacid, $v, 1);
                }
            }
        }
        $collect_sql = Db::name("wd_xcx_forum_collection")->alias("a")->join("wd_xcx_superuser b", "a.suid = b.id")->where("a.uniacid", $uniacid)->where("b.id", $suid)->where("a.collection", 1)->where("a.rid", $rid)->field("a.id")->find();

        if ($collect_sql) {
            $getcon['is_collect'] = 1; //收藏
        } else {
            $getcon['is_collect'] = 2; //收藏
        }
        $like_sql = Db::name("wd_xcx_forum_likes")->alias("a")->join("wd_xcx_superuser b", "a.suid = b.id")->where("a.uniacid", $uniacid)->where("b.id", $suid)->where("a.likes", 1)->where("a.rid", $rid)->field("a.id")->find();
        if ($like_sql) {
            $getcon['is_like'] = 1; //点赞
        } else {
            $getcon['is_like'] = 2; //点赞
        }
        $result = [];
        $result['data'] = $getcon;
        //增加浏览量
        if ($types != 1) {
            $hits = $getcon['hits'] + 1;
            Db::name("wd_xcx_forum_release")->where("uniacid", $uniacid)->where("id", $rid)->update(array("hits" => $hits));
        }
        return json_encode($result);
    }

    //获取论坛评论
    public function doPageGetForumComment()
    {
        $uniacid = input("uniacid");
        $rid = input("rid");
        $suid = input("suid");
        $page = input("page");
        $pindex = max(1, intval(input("page")));
        $psize = 10;
        $begin = ($pindex - 1) * $psize;
        $count = Db::name('wd_xcx_forum_comment')->alias("a")->join("wd_xcx_superuser b", "a.suid = b.id")->where("a.uniacid", $uniacid)->where("a.rid", $rid)->order('a.id desc')->count();
        $commentList = Db::name('wd_xcx_forum_comment')->alias("a")->join("wd_xcx_superuser b", "a.suid = b.id")->where("a.uniacid", $uniacid)->where("a.rid", $rid)->order('a.id desc')->field("a.*")->limit($begin, $psize)->select();
        foreach ($commentList as $key => &$value) {
            $like_sql = Db::name("wd_xcx_forum_comment_likes")->where("uniacid", $uniacid)->where("suid", $suid)->where("likes", 1)->where("commentId", $value['id'])->field("id")->find();
            if ($like_sql) {
                $value['is_like'] = 1; //点赞
            } else {
                $value['is_like'] = 2; //点赞
            }
            $info = $this->getnameandavatar($value['source'], $uniacid, $value['suid']);
            $value['nickname'] = $info['nickname'];
            $value['avatar'] = $info['avatar'];


            $value['reply'] = Db::name("wd_xcx_forum_reply")->alias("a")->join("wd_xcx_superuser b", "a.release_suid = b.id")->where("a.commentId", $value['id'])->field("a.*, b.id as suid, b.phone as h5_name")->select();

            foreach ($value['reply'] as $k => &$v) {
                $info_v = $this->getnameandavatar($v['source'], $uniacid, $v['suid']);
                $value['reply'][$k]['nickname'] = $info_v['nickname'];
                $value['reply'][$k]['avatar'] = $info_v['avatar'];

                $like_sql2 = Db::name("wd_xcx_forum_reply_likes")->where("uniacid", $uniacid)->where("suid", $suid)->where("likes", 1)->where("replyId", $v['id'])->field("id")->find();
                if ($like_sql2) {
                    $v['is_like'] = 1; //点赞
                } else {
                    $v['is_like'] = 2; //点赞
                }
            }
        }
        $result = [];
        $result['data']['list'] = $commentList;
        $result['data']['count'] = $count;
        return json_encode($result);
    }

    //提交论坛评论的内容
    public function doPageForumCommentSub()
    {
        $uniacid = input("uniacid");
        $rid = input("rid");
        $suid = input("suid");
        $content = input("content");
        $commentId = input("commentId");//回复评论id
        $repto_suid = input('repto_suid');//被回复人uid
        $source = input('source');
        if ($repto_suid > 0) {
            $data = array(
                "commentId" => $commentId,
                "release_suid" => $suid,  //回复人SUID
                "repto_suid" => $repto_suid,       //被回复人suid
                "uniacid" => $uniacid,
                "content" => $content,
                "createtime" => date("Y-m-d H:i:s", time()),
                "source" => $source,
            );
            $res = Db::name("wd_xcx_forum_reply")->insert($data);
            $result = [];
            if ($res) {
                $result['data'] = 1;
            } else {
                $result['data'] = 2;
            }
        } else {
            $data = array(
                "rid" => $rid,
                "suid" => $suid,
                "uniacid" => $uniacid,
                "content" => $content,
                "createtime" => date("Y-m-d H:i:s", time()),
                "source" => $source,
            );
            $res = Db::name("wd_xcx_forum_comment")->insert($data);
            $result = [];
            if ($res) {
                $commentNum = Db::name("wd_xcx_forum_release")->where("uniacid", $uniacid)->where("id", $rid)->field("comment")->find()['comment'] + 1;
                Db::name('wd_xcx_forum_release')->where("uniacid", $uniacid)->where("id", $rid)->update(array("comment" => $commentNum));
                $result['data'] = 1;
            } else {
                $result['data'] = 2;
            }
        }
        return json_encode($result);
    }

    //发布支付
    public function doPageForumOrder()
    {
        $uniacid = input("uniacid");
        $release_money = input("release_money") ? input("release_money") : 0;
        $stick_days = input("stick_days") ? input("stick_days") : 0;
        $stick_money = input("stick_money") ? input("stick_money") : 0;
        $suid = input("suid");
        $now = time();
        $orderid = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);  //订单号
        $data = array(
            "orderid" => $orderid,
            "uniacid" => $uniacid,
            "release_money" => $release_money,
            "stick_money" => $stick_money,
            "stick_days" => $stick_days,
            "suid" => $suid,
            "flag" => 2,
            "createtime" => date("Y-m-d H:i:s", time())
        );


        $res = Db::name("wd_xcx_forum_order")->insertGetId($data);
        if ($res) {
            return json_encode(['orderid' => $orderid]);
        } else {
            return json_encode([0]);
        }
        // if ($orderResId) {
        //     $body = "发布支付";
        //     $user = Db::name("wd_xcx_user")->where("uniacid", $uniacid)->where("openid", $openid)->field("money,id")->find(); //用户余额
        //     if ($user['money'] >= ($release_money + $stick_days * $stick_money)) {
        //         //余额支付
        //         $payprice = $release_money + $stick_days * $stick_money;
        //         if ($payprice == 0) {
        //         } else {
        //             $userMoney = $user['money'] - $payprice; //支付之后剩余余额
        //             $update = Db::name("wd_xcx_user")->where("uniacid", $uniacid)->where("openid", $openid)->update(array("money" => $userMoney));
        //             if ($update) {
        //                 //流水
        //                 $xfmoney = array(
        //                     "uniacid" => $uniacid,
        //                     "orderid" => $orderid,
        //                     "suid" => $user['id'],
        //                     "type" => "del",
        //                     "score" => $payprice,
        //                     "message" => "微同城信息发布",
        //                     "creattime" => time()
        //                 );
        //                 Db::name('wd_xcx_money')->insert($xfmoney);
        //             }
        //         }
        //         $result = [];
        //         $result['data'] = array("type" => 1);
        //         Db::name("wd_xcx_forum_order")->where("uniacid", $uniacid)->where("id", $orderResId)->update(array("flag" => 1));
        //     } else {
        //         //微信支付
        //         $payprice = ($release_money + $stick_money * $stick_days) - $user['money'];
        //         $types = "forum";
        //         $weixinpay = $this->getweixinpayinfo($uniacid, $openid, $orderid, $payprice, $body, $types . "|" . input('formId') . "|" . $uniacid);  //最后一个参数为附加参数，这里存订单类型+formId
        //         $weixinpay['err'] = 0;
        //         $weixinpay['message'] = "success";
        //         $weixinpay['type'] = 2;
        //         $result['data'] = $weixinpay;
        //     }
        //     return json_encode($result);
        // }
    }

    //发布成功  扣除余额
    public function doPageChangemymoney()
    {
        $uniacid = input('uniacid');
        $orderid = input('orderid');
        $release_money = input('release_money');
        $suid = input('suid');

        $mymoney = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->field('money')->find()['money'];

        if ($mymoney >= $release_money) {
            $res = Db::name('wd_xcx_forum_order')->where('uniacid', $uniacid)->where('orderid', $orderid)->update(['flag' => 1]);
            $rr = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update(['money' => $mymoney - $release_money]);
            add_all_pay($uniacid, $release_money, $suid);
            check_vip_grade($uniacid, $suid);
            if ($res && $rr) {
                return json_encode(['data' => 1]);
            }
        } else {
            return json_encode(['data' => 0]);
        }

    }

    //设置置顶
    public function doPageSetStick()
    {
        $uniacid = input("uniacid");
        $stick_money = input("stick_money");
        $stick_days = input("stick_days");
        $orderid = input('orderid');
        $rid = input("rid");
        $suid = input("suid");
        $haspay = input('haspay');

        $data = array(
            "uniacid" => $uniacid,
            "rid" => $rid,
            "stick_money" => $stick_money,
            "stick_days" => $stick_days,
            "stick" => 1,
            "stick_time" => date("Y-m-d H:i:s", time()),
            "stick_status" => 1,
        );

        if ($haspay == 2) {
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $redis->set($orderid . 'settop', json_encode($data));
            return json_encode(['data' => -1]);
        } else {
            if ($stick_money) {
                $xfmoney = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    "suid" => $suid,
                    "type" => "del",
                    "score" => round($stick_money * $stick_days, 2),
                    "message" => "微同城置顶-余额支付",
                    "creattime" => time()
                );
                Db::name('wd_xcx_money')->insert($xfmoney);
            }
            add_all_pay($uniacid, round($stick_money * $stick_days, 2), $suid);
            check_vip_grade($uniacid, $suid);
        }

        Db::name('wd_xcx_forum_stick')->where("uniacid", $uniacid)->where("rid", $rid)->update(array('stick_status' => 2)); //修改所有发布相关置顶为不启用
        Db::name('wd_xcx_forum_order')->where('orderid', $orderid)->update(['flag' => 1]);

        $res = Db::name('wd_xcx_forum_stick')->insert($data);
        if ($res) {
            Db::name('wd_xcx_forum_release')->where("uniacid", $uniacid)->where("id", $rid)->update(array('stick' => 1)); //修改发布表为置顶
            $result['data'] = 1;
        } else {
            $result['data'] = 2;
        }
        return json_encode($result);
    }

    //获取用户余额
    public function doPageGetUserMoney()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $userMoney = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->field("money")->find()['money'];
        $result = [];
        $result['data'] = $userMoney;
        return json_encode($result);
    }

    //改变论坛发布信息的点赞状态
    public function doPageForumLikes()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $rid = input("rid");
        $vs = input("vs");
        $source = input("source");
        $is = Db::name("wd_xcx_forum_likes")->where("uniacid", $uniacid)->where("rid", $rid)->where("suid", $suid)->find();
        if ($is) {
            if ($is['likes'] == 1) {
                $likes = 2;
            } else {
                $likes = 1;
            }
            $res = Db::name("wd_xcx_forum_likes")->where("uniacid", $uniacid)->where("rid", $rid)->where("suid", $suid)->update(array("likes" => $likes));
            if ($res) {
                $likesNum = Db::name("wd_xcx_forum_release")->where("uniacid", $uniacid)->where("id", $rid)->field("likes")->find()['likes'];
                if ($likes == 1) {
                    $likesNum = $likesNum + 1;
                } else {
                    $likesNum = $likesNum - 1;
                }
                Db::name("wd_xcx_forum_release")->where("uniacid", $uniacid)->where("id", $rid)->update(array("likes" => $likesNum));

                $result = [];
                if ($vs) {
                    $result['data']['is_like'] = $likes;
                } else {
                    $result['data'] = $likes;
                }
            }
        } else {
            $data = array(
                "uniacid" => $uniacid,
                "likes" => 1,
                "suid" => $suid,
                "rid" => $rid,
                "source" => $source,
                "createtime" => date("Y-m-d H:i:s", time())
            );
            $res = Db::name("wd_xcx_forum_likes")->insert($data);
            if ($res) {
                $likesNum = Db::name("wd_xcx_forum_release")->where("uniacid", $uniacid)->where("id", $rid)->field("likes")->find()['likes'];
                $likesNum = $likesNum + 1;
                Db::name("wd_xcx_forum_release")->where("uniacid", $uniacid)->where("id", $rid)->update(array("likes" => $likesNum));
                if ($vs) {
                    $result['data']['is_like'] = 1;
                } else {
                    $result['data'] = 1;
                }
            }
        }

        if ($vs) {
            $likesAll = Db::name("wd_xcx_forum_likes")->where("uniacid", $uniacid)->where("rid", $rid)->where("likes", 1)->order("id desc")->select();
            foreach ($likesAll as $key => $value) {
                $likesAll[$key]['nickname'] = $this->getnameandavatar($value['source'], $uniacid, $value['suid'])['nickname'];
            }
            $result['data']['num'] = $likesNum;
            $result['data']['likesAll'] = $likesAll;
        }
        return json_encode($result);
    }

    //改变论坛发布信息的收藏状态
    public function doPageForumCollection()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $rid = input("rid");
        $vs = input("vs");
        $is = Db::name("wd_xcx_forum_collection")->where("uniacid", $uniacid)->where("rid", $rid)->where("suid", $suid)->find();
        if ($is) {
            if ($is['collection'] == 1) {
                $collection = 2;
            } else {
                $collection = 1;
            }
            $res = Db::name("wd_xcx_forum_collection")->where("uniacid", $uniacid)->where("rid", $rid)->where("suid", $suid)->update(array("collection" => $collection));
            if ($res) {
                $collectionNum = Db::name("wd_xcx_forum_release")->where("uniacid", $uniacid)->where("id", $rid)->field("collection")->find()['collection'];
                if ($collection == 1) {
                    $collectionNum = $collectionNum + 1;
                } else {
                    $collectionNum = $collectionNum - 1;
                }
                Db::name("wd_xcx_forum_release")->where("uniacid", $uniacid)->where("id", $rid)->update(array("collection" => $collectionNum));
                $result = [];
                if ($vs) {
                    $result['data']['is_collect'] = $collection;
                } else {
                    $result['data'] = $collection;
                }
            }
        } else {
            $data = array(
                "uniacid" => $uniacid,
                "collection" => 1,
                "suid" => $suid,
                "rid" => $rid,
                "createtime" => date("Y-m-d H:i:s", time())
            );
            $res = Db::name("wd_xcx_forum_collection")->insert($data);
            if ($res) {
                $collectionNum = Db::name("wd_xcx_forum_release")->where("uniacid", $uniacid)->where("id", $rid)->field("collection")->find()['collection'];
                $collectionNum = $collectionNum + 1;
                Db::name("wd_xcx_forum_release")->where("uniacid", $uniacid)->where("id", $rid)->update(array("collection" => $collectionNum));
                if ($vs) {
                    $result['data']['is_collect'] = 1;
                } else {
                    $result['data'] = 1;
                }
            }
        }
        $result['data']['num'] = $collectionNum;
        return json_encode($result);
    }

    //评论点赞size
    public function doPageCommentChangeLikes()
    {
        $uniacid = input("uniacid");
        $commentType = input("commentType");
        $commentid = input("commentid");
        $suid = input("suid");
        $vs = input("vs");
        $is = Db::name("wd_xcx_forum_comment_likes")->where("uniacid", $uniacid)->where("suid", $suid)->where("commentId", $commentid)->find();
        if ($commentType == 1) {
            $likesNum = Db::name("wd_xcx_forum_comment")->where("uniacid", $uniacid)->where("id", $commentid)->field("likesNum")->find()['likesNum'];
            if ($is) {
                if ($is['likes'] == 1) {
                    $likesNum = $likesNum - 1;
                    Db::name("wd_xcx_forum_comment_likes")->where("uniacid", $uniacid)->where("suid", $suid)->where("commentId", $commentid)->update(array("likes" => 2));
                    if ($vs) {
                        $res['data']['is_like'] = 2;
                    } else {
                        $res['data'] = 2;
                    }
                } else if ($is['likes'] == 2) {
                    Db::name("wd_xcx_forum_comment_likes")->where("uniacid", $uniacid)->where("suid", $suid)->where("commentId", $commentid)->update(array("likes" => 1));
                    $likesNum = $likesNum + 1;
                    if ($vs) {
                        $res['data']['is_like'] = 1;
                    } else {
                        $res['data'] = 1;
                    }
                }
            } else {
                Db::name("wd_xcx_forum_comment_likes")->insert(array(
                    "uniacid" => $uniacid,
                    "commentId" => $commentid,
                    "suid" => $suid,
                    "likes" => 1,
                    "createtime" => date("Y-m-d H:i:s", time())
                ));
                $likesNum = $likesNum + 1;
                if ($vs) {
                    $res['data']['is_like'] = 1;
                } else {
                    $res['data'] = 1;
                }
            }
            $res['data']['num'] = $likesNum;
            Db::name("wd_xcx_forum_comment")->where("uniacid", $uniacid)->where("id", $commentid)->update(array("likesNum" => $likesNum));
            return json_encode($res);
            exit;
        }
        $reply_is = Db::name("wd_xcx_forum_reply_likes")->where("uniacid", $uniacid)->where("suid", $suid)->where("replyId", $commentid)->find();
        if ($commentType == 2) {
            $likesNum = Db::name("wd_xcx_forum_reply")->where("uniacid", $uniacid)->where("id", $commentid)->field("likesNum")->find()['likesNum'];
            if ($reply_is) {
                if ($reply_is['likes'] == 1) {
                    $likesNum = $likesNum - 1;
                    Db::name("wd_xcx_forum_reply_likes")->where("uniacid", $uniacid)->where("suid", $suid)->where("replyId", $commentid)->update(array("likes" => 2));
                    if ($vs) {
                        $res['data']['is_like'] = 4;
                    } else {
                        $res['data'] = 4;
                    }
                } else if ($reply_is['likes'] == 2) {
                    Db::name("wd_xcx_forum_reply_likes")->where("uniacid", $uniacid)->where("suid", $suid)->where("replyId", $commentid)->update(array("likes" => 1));
                    $likesNum = $likesNum + 1;
                    if ($vs) {
                        $res['data']['is_like'] = 3;
                    } else {
                        $res['data'] = 3;
                    }
                }
            } else {
                Db::name("wd_xcx_forum_reply_likes")->insert(array(
                    "uniacid" => $uniacid,
                    "replyId" => $commentid,
                    "suid" => $suid,
                    "likes" => 1,
                    "createtime" => date("Y-m-d H:i:s", time())
                ));
                $likesNum = $likesNum + 1;
                if ($vs) {
                    $res['data']['is_like'] = 3;
                } else {
                    $res['data'] = 3;
                }
            }
            Db::name("wd_xcx_forum_reply")->where("uniacid", $uniacid)->where("id", $commentid)->update(array("likesNum" => $likesNum));
            if ($vs) {
                $res['data']['num'] = $likesNum;
            }
            return json_encode($res);
        }
    }

    //发布详情页删除功能
    public function doPageForumPageDel()
    {
        $uniacid = input("uniacid");
        $types = input('types');
        $id = input('id');
        if ($types == 1) {
            $is = Db::name('wd_xcx_forum_release')->where("uniacid", $uniacid)->where("id", $id)->find();
            if ($is) {
                $res = Db::name('wd_xcx_forum_release')->where("uniacid", $uniacid)->where("id", $id)->delete();
                if ($res) {
                    //删除forum_likes表相关数据
                    Db::name('wd_xcx_forum_likes')->where("uniacid", $uniacid)->where("rid", $id)->delete();
                    //删除forum_collection表相关数据
                    Db::name('wd_xcx_forum_collection')->where("uniacid", $uniacid)->where("rid", $id)->delete();
                    //删除forum_comment 和 删除forum_comment_likes 和 forum_reply表相关数据
                    $commentall = Db::name('wd_xcx_forum_comment')->where("uniacid", $uniacid)->where("rid", $id)->select();
                    foreach ($commentall as $key => $value) {
                        Db::name('wd_xcx_forum_comment_likes')->where("uniacid", $uniacid)->where("commentId", $value['id'])->delete();
                        $replyall = Db::name('wd_xcx_forum_reply')->where("uniacid", $uniacid)->where("commentId", $value['id'])->select();
                        foreach ($replyall as $k => $v) {
                            Db::name('wd_xcx_forum_reply_likes')->where("uniacid", $uniacid)->where("replyId", $v['id'])->delete();
                        }
                        Db::name('wd_xcx_forum_reply')->where("uniacid", $uniacid)->where("commentId", $value['id'])->delete();
                    }
                    Db::name('wd_xcx_forum_comment')->where("uniacid", $uniacid)->where("rid", $id)->delete();
                    //删除forum_stick表相关数据
                    Db::name('wd_xcx_forum_stick')->where("uniacid", $uniacid)->where("rid", $id)->delete();
                    $result['data'] = 1;
                }
            } else {
                $result['data'] = 2;
            }
        } else if ($types == 2) {  //删除评论
            $replyall = Db::name('wd_xcx_forum_reply')->where("uniacid", $uniacid)->where("commentId", $id)->select();
            foreach ($replyall as $k => $v) {
                Db::name('wd_xcx_forum_reply_likes')->where("uniacid", $uniacid)->where("replyId", $v['id'])->delete();
            }
            Db::name('wd_xcx_forum_reply')->where("uniacid", $uniacid)->where("commentId", $id)->delete();
            Db::name('wd_xcx_forum_comment')->where("uniacid", $uniacid)->where("id", $id)->delete();
            Db::name('wd_xcx_forum_comment_likes')->where("uniacid", $uniacid)->where("commentId", $id)->delete();
            $result['data'] = 1;
        } else if ($types == 3) {  //删除评论回复
            Db::name('wd_xcx_forum_reply_likes')->where("uniacid", $uniacid)->where("replyId", $id)->delete();
            Db::name('wd_xcx_forum_reply')->where("uniacid", $uniacid)->where("id", $id)->delete();
            $result['data'] = 1;
        }
        return json_encode($result);
    }

    public function doPageGetForumCollect()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $page = input('page');
        $pindex = max(1, intval($page));
        $psize = 15;
        $begin = ($pindex - 1) * $psize;
        $list = Db::name('wd_xcx_forum_collection')->alias('a')->join('wd_xcx_forum_release b', 'b.id = a.rid')->join('wd_xcx_superuser c', 'c.id = a.suid')->where('c.id', $suid)->where("a.uniacid", $uniacid)->where("c.uniacid", $uniacid)->where("a.collection", 1)->order("a.id desc")->limit($begin, $psize)->field('a.*,b.content, b.title')->select();
        $release = Db::name('wd_xcx_forum_release')->where('uniacid', $uniacid)->where('suid', $suid)->limit($begin, $psize)->field('id,title,content,createtime, shenhe')->order("id desc")->select();
        foreach ($list as $key => &$value) {
            $value['content'] = mb_substr($value['content'], 0, 42);
        }
        foreach ($release as $key => &$value) {
            $value['content'] = mb_substr($value['content'], 0, 42);
        }
        $result['list'] = $list;
        $result['release'] = $release;
        return json_encode($result);
    }
    /*forum end*/
    //获取微信支付所需要的参数（所有订单公用接口）   $out_trade_no为订单号, $price必须是微信支付的金额!!!  $types标志订单类型 多规格为'duo' $body支付描述 如：商品支付
    public function getweixinpayinfo($uniacid, $openid, $out_trade_no, $payprice, $body, $info)
    {

        $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->find();
        include 'WeixinPay.php';
        $appid = $app['appID'];
        $openid = $openid;
        $mch_id = $app['mchid'];
        $key = $app['signkey'];
        // $out_trade_no = $out_trade_no; //订单号
        $total_fee = $payprice * 100;
        if (isset($app['identity'])) {
            $identity = $app['identity'];
        } else {
            $identity = 1;
        }
        if (isset($app['sub_mchid'])) {
            $sub_mchid = $app['sub_mchid'];
        } else {
            $sub_mchid = 0;
        }
        $body = $body;
        $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, $identity, $sub_mchid, $info);
        // var_dump($weixinpay);

        return $weixinpay->pay();
    }

    //支付完成回调（所有订单公用接口）
    public function dopagepaynotify()
    {
        $uniacid = input("uniacid");
        $orderid = input("out_trade_no");
        $suid = input("suid");  //微信/支付宝不使用该变量，使用order表或redis中的suid
        $source = input('source');
        $openid = input('openid');
        $payprice = input("payprice");
        $types = input("types");
        $flag = input("flag");
        $formId = input("formId");
        $paytype = input('paytype');
        if (input('paytype')) {
            if (intval(input('paytype')) == 1) {
                $pay_types = "微信消费";
            } else if (intval(input('paytype')) == 2) {
                $pay_types = "支付宝消费";
            } else if (intval(input('paytype')) == 3) {
                $pay_types = "百度消费";
            } else if (intval(input('paytype')) == 4) {
                $pay_types = "QQ消费";
            }
            // $pay_types = intval(input('paytype')) == 1 ? "微信消费" : intval(input('paytype')) == 2 ? '支付宝消费' : intval(input('paytype')) == 4 ? 'QQ消费' : '百度消费';
        } else {
            $pay_types = '余额消费';
        }
        if ($types == "bargain") {
            $order = Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("order_id", $orderid)->find();
            $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $order['suid'])->find();

            $product = Db::name("wd_xcx_bargain_pro")->where("uniacid", $uniacid)->where("id", $order["pid"])->find();

            $data = array();
            //更新余额
            if ($flag == '0') {
                $money = floatval($user['money']) - floatval($payprice);
                $data['money'] = $money;
                Db::name("wd_xcx_superuser")->where("uniacid", $uniacid)->where("id", $user["id"])->update($data);
            }
            // if ($flag == '1') {
            //     $data['money'] = 0;
            // }

            //更新订单状态
            $is_flag = Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("order_id", $orderid)->value("flag");

            // if($is_flag == 1){
            //     $results['data'] = array('message'=>'成功');
            //     return json_encode($results);
            //     exit;
            // }else{


            $is = Db::name('wd_xcx_bargain_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->where('flag', 0)->find();

            if ($is) {
                if ($paytype == 3) {
                    $order['wx_price'] = $payprice;
                    $order['yue_price'] = 0;
                    $pay_info = [
                        'userId' => input('pay_userId'),
                        'orderId' => input('orderId')
                    ];
                    Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("order_id", $orderid)->update(array("flag" => 1, "paytype" => $paytype, 'pay_info' => serialize($pay_info), 'wx_price' => $payprice));
                } else {
                    if($paytype > 0){
                        $order['wx_price'] = $payprice;
                        $order['yue_price'] = 0;
                        $data_s = array("flag" => 1, "paytype" => $paytype, 'wx_price' => $payprice, 'yue_price' => 0);
                    }else{
                        $order['wx_price'] = 0;
                        $order['yue_price'] = $payprice;
                        $data_s = array("flag" => 1, "paytype" => $paytype, 'wx_price' => 0, 'yue_price' => $payprice);
                    }
                    $res = Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("order_id", $orderid)->update($data_s);
                }
            }
            // }

            //金钱流水
            if ($order['wx_price'] > 0) {
                $xfmoney = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    "suid" => $order['suid'],
                    "type" => "del",
                    "score" => $order['wx_price'],
                    "message" => $pay_types,
                    "creattime" => time(),
                    "source" => $order['source']
                );
                Db::name('wd_xcx_money')->insert($xfmoney);
            }
            if ($order['yue_price'] > 0) {
                $xfmoney = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    "suid" => $order['suid'],
                    "type" => "del",
                    "score" => $order['yue_price'],
                    "message" => '余额消费',
                    "creattime" => time(),
                    "source" => $order['source']
                );
                Db::name('wd_xcx_money')->insert($xfmoney);
            }

            //发送模板消息to顾客
            $source = $order['source'];
            if ($source != 3 && $source != 1) {
                $jsons = array(
                    'orderid' => $orderid,
                    'fprice' => $order['true_price']
                );
                if ($source == 5) {
                    $openid = Db::name('wd_xcx_toutiao_user')->where('uniacid', $uniacid)->where('suid', $order['suid'])->value('openid');
                }
   
                $fmsg = "产品：" . $order['title'] . " 购买数：" . $order['num'] . " 购买单价：" . $order['true_price'] . "元 ";
                $jsons['fmsg'] = $fmsg;
                $jsons = serialize($jsons);
                tpl_send($uniacid, 1, $openid, $source, $formId, $jsons);
            }
            //发送邮件提醒to商家
            $is_mail = Db::name("wd_xcx_bargain_set")->where("uniacid", $uniacid)->value("emailStatus");
            if (intval($is_mail) == 1) {
                $this->sendMailToAdmin($uniacid, $orderid, "bargain");
            }
            $this->payoverFxs($uniacid, $orderid, $order['suid'], 'bargain');

            //发送订单短信给商家
            $this->sendSms($uniacid, $payprice);
            $results['data'] = array('message' => '成功');
            return json_encode($results);
        }

        if ($types == 'shoppay') {
            $ddata['uniacid'] = $uniacid;
            $ddata['orderid'] = $orderid;

            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $data = $redis->get($orderid . 's');
            if ($data) {
                $is = Db::name('wd_xcx_money')->where('orderid', $orderid)->find();
                if ($is) {
                    return;
                }
            }
            $suid = $data['suid'];
            $source = $data['source'];
            $sid = $data['sid'];
            $ddata['suid'] = $suid;
            $ddata['type'] = "del";
            $ddata['creattime'] = time();
            $ddata['source'] = $source;

            $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            if ($data['yhq_id'] > 0) {
                Db::name('wd_xcx_coupon_user')->where('id', $data['yhq_id'])->update(array("utime" => time(), "flag" => 1));
            }
            $ddata['sid'] = $sid;

            if ($data['jfscore'] > 0) {
                $s_jf = $user['score'] - $data['jfscore'];
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update(array("score" => $s_jf));
                $ddata['score'] = $data['jfscore'];
                $ddata['message'] = "店内支付积分抵扣";
                Db::name('wd_xcx_score')->insert($ddata);
            }
            if ($data['yue'] > 0) {
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update(array("money" => 0));
                $ddata['score'] = $data['yue'];
                $ddata['message'] = "店内支付扣余额";
                Db::name('wd_xcx_money')->insert($ddata);
            }
            if ($data['money'] > 0) {
                $ddata['score'] = $data['money'];
                $paytype = input('paytype');
                if ($paytype == 1) {
                    $ddata['message'] = "店内支付微信支付";
                } else if ($paytype == 2) {
                    $ddata['message'] = "店内支付支付宝支付";
                } else if ($paytype == 3) {
                    $ddata['message'] = "店内支付百度支付";
                } else if ($paytype == 4) {
                    $ddata['message'] = "店内支付QQ支付";
                }
                Db::name('wd_xcx_money')->insert($ddata);
            }

            $allmoney = floatval($data['money']) + floatval($data['yue']);
            if ($sid > 0) {
                $jiesuan = Db::name('wd_xcx_shops_set')->where('uniacid', $uniacid)->value('jiesuan');
                $tx_money = Db::name('wd_xcx_shops_shop')->where('uniacid', $uniacid)->where('id', $sid)->value('tixian');
                $tx_money = $tx_money + number_format($allmoney - $allmoney * $jiesuan * 0.01, 2);
                Db::name('wd_xcx_shops_shop')->where('uniacid', $uniacid)->where('id', $sid)->update(array('tixian' => $tx_money));
            }
            add_all_pay($uniacid, $allmoney, $suid);
            check_vip_grade($uniacid, $suid);
            $redis->rm($orderid . 's');
        }
        if ($types == 'food') {
            $order = Db::name('wd_xcx_food_order')->where("uniacid", $uniacid)->where("order_id", $orderid)->find();
            if ($paytype == 3) {
                $pay_info = [
                    'userId' => input('pay_userId'),
                    'orderId' => input('orderId')
                ];
                Db::name('wd_xcx_food_order')->where("uniacid", $uniacid)->where("order_id", $orderid)->update(array("flag" => 1, 'paytype' => $paytype, 'pay_info' => serialize($pay_info)));
            } else {
                Db::name('wd_xcx_food_order')->where("uniacid", $uniacid)->where("order_id", $orderid)->update(array("flag" => 1, 'paytype' => $paytype));
            }


            $suid = $order['suid'];
            $source = $order['source'];
            $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->find();

            $data = array();
            $jsondata = unserialize($order['val']);
            $fmsg = "";  //模板消息
            foreach ($jsondata as $key => &$value) {
                $type_value = Db::name('wd_xcx_food_type_value')->where("id", $value[4])->find();
                $data2 = array(
                    'kc' => $type_value['kc'] - $value[3],
                    'salenum' => $type_value['salenum'] + $value[3],
                );
                Db::name('wd_xcx_duo_products_type_value')->where("id", $type_value['id'])->update($data2);
            }

            //更新积分
            if ($order['score_info']) {
                $order['score_info'] = unserialize($order['score_info']);
                $score = floatval($user['score']) - floatval($order['score_info']['score']);
                if ($score < 0) $score = 0;
                $data['score'] = $score;

                $xfscore = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    'suid' => $suid,
                    'source' => $source,
                    "type" => "del",
                    "score" => $order['score_info']['score'],
                    "message" => "消费",
                    "creattime" => time()
                );
                Db::name('wd_xcx_score')->insert($xfscore);
            }
            $data['money'] = 0;

            Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->update($data);

            //金钱流水
            if ($order['yue_price'] > 0) {
                $xfmoney = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    'suid' => $suid,
                    'source' => $source,
                    "type" => "del",
                    "score" => round($order['yue_price'], 2),
                    "message" => '余额消费',
                    "creattime" => time()
                );
                Db::name('wd_xcx_money')->insert($xfmoney);
            }
            if ($order['wx_price'] > 0) {
                $xfmoney = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    'suid' => $suid,
                    'source' => $source,
                    "type" => "del",
                    "score" => round($order['wx_price'], 2),
                    "message" => $pay_types,
                    "creattime" => time()
                );
                Db::name('wd_xcx_money')->insert($xfmoney);
            }

            add_all_pay($uniacid, round($order['yue_price'] + $order['wx_price'], 2), $suid);
            check_vip_grade($uniacid, $suid);

            //打印
            $printlist = Db::name('wd_xcx_print')->where('uniacid', $uniacid)->where('flag', 1)->select();
            if (!empty($printlist)) {
                $print_res = $this->printer($uniacid, $orderid, 'food');
            }

            // //分销
            // $this->payoverFxs($uniacid, $orderid, $suid, 'duo');
            // //发送邮件提醒to商家
            // $this->sendMailToAdmin($uniacid, $orderid, 'duo');

            //模板消息start
            if ($source != 3) {
                $fzh = $order['zh'];

                $fcontent = "";
                foreach ($jsondata as $k => $v) {
                    $foodinfo = $v[2] . $v[5] . ',数量' . $v[3] . ',价格' . $v[1] . '元;';
                    $fcontent .= $foodinfo;
                }
                $score_name = Db::name('wd_xcx_food_sj')->where("uniacid", $uniacid)->field('names')->find();
                $jsons = [
                    'fzh' => $fzh,
                    'forder_id' => $orderid,
                    'fscore_name' => $score_name['names'],
                    'fcontent' => $fcontent,
                    'fpaymoney' => $order['price']
                ];
                $jsons = serialize($jsons);
                tpl_send($uniacid, 10, $openid, $source, input('formId'), $jsons);
            }

            //发送订单短信给商家
            $this->sendSms($uniacid, $payprice);
        }

        if ($types == 'duo') {
            $order = Db::name('wd_xcx_duo_products_order')->where("uniacid", $uniacid)->where("order_id", $orderid)->find();
            if ($order['flag'] != 0) {
                return;
            }
            //更新订单状态
            if ($paytype == 3) {
                $pay_info = [
                    'userId' => input('pay_userId'),
                    'orderId' => input('orderId')
                ];
                Db::name('wd_xcx_duo_products_order')->where("uniacid", $uniacid)->where("order_id", $orderid)->update(array("flag" => 1, 'paytype' => $paytype, 'pay_info' => serialize($pay_info)));
            } else {
                Db::name('wd_xcx_duo_products_order')->where("uniacid", $uniacid)->where("order_id", $orderid)->update(array("flag" => 1, 'paytype' => $paytype));
            }


            $suid = $order['suid'];
            $source = $order['source'];
            $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->find();
            if ($order['sid'] != 0) {
                //多商户商品
                if ($order['payprice'] == 0) {
                    if ($user['money'] < $order['price']) {
                        $dd12['data'] = array('message' => '失败', 'money' => $user['money']);
                        return json_encode($dd12);
                    } else {
                        $duo_money = floatval($user['money']) - floatval($order['price']);
                        Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update(['money' => $duo_money]);
                    }
                } else {
                    Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update(['money' => 0]);
                }

                //消费流水

                $payinfos = Db::name('wd_xcx_duo_products_order')->where('order_id', $orderid)->field('price,payprice')->find();

                $data_r = array(
                    'uniacid' => $uniacid,
                    'orderid' => $orderid,
                    'suid' => $suid,
                    'source' => $source,
                    'score' => $payinfos['payprice'],
                    'creattime' => time(),
                    'type' => 'del',
                    'message' => $pay_types
                );
                Db::name('wd_xcx_money')->insert($data_r);
                $yue_price = round($payinfos['price'] - $payinfos['payprice'], 2);
                if ($yue_price > 0) {
                    $data_r1 = array(
                        'uniacid' => $uniacid,
                        'orderid' => $orderid,
                        'suid' => $suid,
                        'source' => $source,
                        'score' => $yue_price,
                        'creattime' => time(),
                        'type' => 'del',
                        'message' => "余额消费"
                    );
                    Db::name('wd_xcx_money')->insert($data_r1);
                }


                $data_e = array(
                    "flag" => 1
                );
                Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->update($data_e);
                $data = array(
                    'message' => '成功',
                );
                $result['data'] = $data;
                $source = $order['source'];
                if ($source != 3) {
                    $jsondata = unserialize($order['jsondata']);
                    $fmsg = "产品：" . $jsondata[0]['baseinfo']['title'] . " 购买数：" . $jsondata[0]['num'] . " 购买单价：" . $jsondata[0]['proinfo']['price'] . "元 ";
                    $jsons = array(
                        'orderid' => $orderid,
                        'fmsg' => $fmsg,
                        'fprice' => $order['price']
                    );
                    $jsons = serialize($jsons);
                    if ($source == 5) {
                        $openid = Db::name('wd_xcx_toutiao_user')->where('uniacid', $uniacid)->where('suid', $order['suid'])->value('openid');
                    }
                    tpl_send($uniacid, 1, $openid, $source, $formId, $jsons);
                }
                $this->sendMailToAdmin($uniacid, $orderid, 'duoshop');

                //发送订单短信给商家
                $this->sendSms($uniacid, $payprice);
                return json_encode($result);
                exit;
            }
            $data = array();

            $jsondata = unserialize($order['jsondata']);
            $fmsg = "";  //模板消息
            $total_num = 0;
            $total_price = 0;
            foreach ($jsondata as $key => &$value) {
                $total_num += $value['num'];
                $total_price += $value['proinfo']['price'] * $value['num'];
                //如果有购物车，删除对应的购物车
                if ($value['proinfo']['id'] == -1) { //单规格
                    $pro_current = Db::name('wd_xcx_products')->where('id', $value['baseinfo']['id'])->find();
                    if ($pro_current['pro_kc'] < $value['num']) {
                        $data = array(
                            'message' => '失败',
                        );
                        $result['data'] = $data;
                        return json_encode($result);
                    }
                    $fmsg .= "产品：" . $value['baseinfo']['title'] . " 购买数：" . $value['num'] . " 购买单价：" . $value['proinfo']['price'] . "元 ";
                    if ($value['id'] != 0) {
                        Db::name('wd_xcx_duo_products_gwc')->where("uniacid", $uniacid)->where("id", $value['id'])->update(array("flag" => 2));
                    }

                    $data2 = array(
                        'pro_kc' => $pro_current['pro_kc'] - $value['num'],
                        'sale_tnum' => $pro_current['sale_tnum'] + $value['num'],
                    );
                    Db::name('wd_xcx_products')->where("id", $value['baseinfo']['id'])->update($data2);
                } else {  //多规格
                    $type_value = Db::name('wd_xcx_duo_products_type_value')->where("id", $value['proinfo']['id'])->find();
                    $fmsg .= "产品：" . $value['baseinfo']['title'] . " 购买数：" . $value['num'] . " 购买规格：" . $type_value['type1'] . " " . $type_value['type2'] . " " . $type_value['type3'] . " 购买单价：" . $type_value['price'] . "元 ";
                    if ($type_value['kc'] < $value['num']) {
                        $data = array(
                            'message' => '失败',
                        );
                        $result['data'] = $data;
                        return json_encode($result);
                    }

                    if ($value['id'] != 0) {
                        Db::name('wd_xcx_duo_products_gwc')->where("uniacid", $uniacid)->where("id", $value['id'])->update(array("flag" => 2));
                    }

                    $data2 = array(
                        'kc' => $type_value['kc'] - $value['num'],
                        'salenum' => $type_value['salenum'] + $value['num'],
                    );
                    Db::name('wd_xcx_duo_products_type_value')->where("id", $type_value['id'])->update($data2);
                }

            }

            //更新余额
            if ($flag == '0') {
                // $money = floatval($user['money']) - floatval($payprice);
                // $data['money'] = $money;
                if ($user['money'] < $payprice) {
                    $dd12['data'] = array('message' => '失败', 'money' => $user['money']);
                    return json_encode($dd12);
                } else {
                    $money = floatval($user['money']) - floatval($payprice);
                    $data['money'] = $money;
                }
            }
            if ($flag == '1') {
                $data['money'] = 0;
            }
            //更新积分
            if ($order['jf']) {
                $score = floatval($user['score']) - floatval($order['jf']);
                if ($score < 0) $score = 0;
                $data['score'] = $score;
            }
            Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->update($data);

            //更新优惠券使用情况
            if ($order['coupon'] != '0') {
                Db::name('wd_xcx_coupon_user')->where("uniacid", $uniacid)->where("id", $order['coupon'])->update(array("flag" => 1, "utime" => time()));
            }


            //金钱流水
            if ($order['payprice'] > 0) {
                $xfmoney = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    'suid' => $suid,
                    'source' => $source,
                    "type" => "del",
                    "score" => $order['payprice'],
                    "message" => $pay_types,
                    "creattime" => time()
                );
                Db::name('wd_xcx_money')->insert($xfmoney);
            }
            $tk_je = floatval($order['price']) - floatval($order['payprice']);
            if ($tk_je > 0) {
                $xfmoney = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    'suid' => $suid,
                    'source' => $source,
                    "type" => "del",
                    "score" => $tk_je,
                    "message" => '余额消费',
                    "creattime" => time()
                );
                Db::name('wd_xcx_money')->insert($xfmoney);
            }


            //积分流水
            if ($order['jf'] > 0) {
                $xfscore = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    'suid' => $suid,
                    'source' => $source,
                    "type" => "del",
                    "score" => $order['jf'],
                    "message" => "消费",
                    "creattime" => time()
                );
                Db::name('wd_xcx_score')->insert($xfscore);
            }

            //打印
            $printlist = Db::name('wd_xcx_print')->where('uniacid', $uniacid)->where('flag', 1)->select();
            if (!empty($printlist)) {
                $print_res = $this->printer($uniacid, $orderid, 'duo');
            }

            $source = $order['source'];
            if ($source != 3 && $source != 4) {

                $jsons = array(
                    'orderid' => $orderid,
                    'fmsg' => $fmsg,
                    'fprice' => $order['price']
                );

                if (mb_strlen($jsons['fmsg'], 'utf8') > 100) {
                    $jsons['fmsg'] = mb_substr($jsons['fmsg'], 0, 100) . "...";
                }
                $jsons = serialize($jsons);
                if ($source == 5) {
                    $openid = Db::name('wd_xcx_toutiao_user')->where('uniacid', $uniacid)->where('suid', $order['suid'])->value('openid');
                }
                tpl_send($uniacid, 1, $openid, $source, $formId, $jsons);
            }
            //分销
            $this->payoverFxs($uniacid, $orderid, $suid, 'duo');
            //发送邮件提醒to商家
            $this->sendMailToAdmin($uniacid, $orderid, 'duo');

            //发送订单短信给商家
            $this->sendSms($uniacid, $payprice);
        }


        if ($types == 'miaosha') {
            $order = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->find();
            if ($order['flag'] != 0) {
                return;
            }
            $suid = $order['suid'];
            $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            $product = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $order['pid'])->find();

            $data = array();
            //更新余额
            if ($flag == '0') {
                if ($user['money'] < $payprice) {
                    $dd11['data'] = array('message' => '失败', 'money' => $user['money']);
                    return json_encode($dd11);
                } else {
                    $money = floatval($user['money']) - floatval($payprice);
                    $data['money'] = $money;
                }
                $paytype = 2;
                if($order['pay_price'] > 0){
                    Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->update(['pay_info' => '', 'pay_price' => 0]);
                }
            }

            //更新积分
            if ($order['dkscore']) {
                $score = floatval($user['score']) - floatval($order['dkscore']);
                if ($score < 0) $score = 0;
                $data['score'] = $score;
            }
            if(count($data) > 0){
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update($data);
            }
            //更新订单状态

            $is_flag = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->value('flag');
            if ($is_flag == 1) {
                $data = array(
                    'message' => '成功',
                );
                $result['data'] = $data;
                return json_encode($result);
            } else {
                $paytype = input('paytype');
                if ($paytype == 3) {
                    $pay_info = [
                        'userId' => input('pay_userId'),
                        'orderId' => input('orderId')
                    ];
                    Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->update(['flag' => 1, 'paytype' => input('paytype'), 'pay_info' => serialize($pay_info)]);
                } else {
                    if($paytype > 0){
                        $data_s = ['flag' => 1, 'paytype' => input('paytype'), 'pay_price' => $payprice];
                    }else{
                        $data_s = ['flag' => 1, 'paytype' => input('paytype')];
                    }
                    Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->update($data_s);
                }

            }
            //更新优惠券使用情况
            if ($order['coupon'] != '0') {
                Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where('id', $order['coupon'])->update(array('flag' => 1, "utime" => time()));
            }


            //金钱流水
            if ($order['pay_price'] > 0) {
                $xfmoney = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    "suid" => $suid,
                    "type" => "del",
                    "score" => $order['pay_price'],
                    "message" => $pay_types,
                    "creattime" => time()
                );
                Db::name('wd_xcx_money')->insert($xfmoney);
            }
            $yuTk = floatval($order['true_price'] - $order['pay_price']);
            //金钱流水
            if ($yuTk > 0) {
                $xfmoney = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    "suid" => $suid,
                    "type" => "del",
                    "score" => $yuTk,
                    "message" => '余额消费',
                    "creattime" => time()
                );
                Db::name('wd_xcx_money')->insert($xfmoney);
            }

            //积分流水
            if ($order['dkscore'] > 0) {
                $xfscore = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    "suid" => $suid,
                    "type" => "del",
                    "score" => $order['dkscore'],
                    "message" => "消费",
                    "creattime" => time()
                );
                Db::name('wd_xcx_score')->insert($xfscore);
            }
            //发送模板消息to顾客
            $source = $order['source'];
            if ($source != 3 && $source != 1) {
                $jsons = array(
                    'orderid' => $orderid,
                    'fprice' => $order['true_price']
                );
                if ($source == 5) {
                    $openid = Db::name('wd_xcx_toutiao_user')->where('uniacid', $uniacid)->where('suid', $order['suid'])->value('openid');
                }

                $fmsg = "产品：" . $order['product'] . " 购买数：" . $order['num'] . " 购买单价：" . $order['price'] . "元 ";
                $jsons['fmsg'] = $fmsg;
                $jsons = serialize($jsons);
                tpl_send($uniacid, 1, $openid, $source, $formId, $jsons);
            }


            //分销
            $this->payoverFxs($uniacid, $orderid, $suid, 'miaosha');

            //发送邮件提醒to商家
            $send_mail = Db::name('wd_xcx_flashsale_set')->where('uniacid', $uniacid)->field('send_mail')->find();
            if ($send_mail) {
                if ($send_mail['send_mail'] == 2) {
                    $this->sendMailToAdmin($uniacid, $orderid, 'miaosha');
                }
            }

            //打印订单
            $printlist = Db::name('wd_xcx_print')->where('uniacid', $uniacid)->where('flag', 1)->select();
            if (!empty($printlist)) {
                $print_res = $this->printer($uniacid, $orderid, 'miaosha');
            }

            //发送订单短信给商家
            $this->sendSms($uniacid, $payprice);

            $dd['data'] = array('message' => '成功');
            return json_encode($dd);
        }

        if ($types == "reserve") {

            $order = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->find();
            $suid = $order['suid'];
            $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            $product = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $order['pid'])->find();
            if ($order['pay_price'] > 0) {
                $paytype = 1;
            } else {
                $paytype = 2;
            }

            // if($order['hwq'] == 1){
            //     $status = 3;//status订单状态，3：支付完成 4：已发货 5：已退款 100: 已完成
            //     $yunfei = 0;
            //     $kd_id = 9999;
            //     $kuaidi = "暂无物流信息";
            //     $kuaidihao = "暂无物流信息";
            //     $upd_hwq = 0;
            //     if($order['beizhu_val']){
            //         $beizhu_val = unserialize($order['beizhu_val']);
            //     }
            //     $discount_fee = 0;
            //     if(!empty($order['yhinfo'])){
            //         $yhinfo = unserialize($order['yhinfo']);
            //         if(isset($yhinfo['yunfei'])){
            //             $yunfei = $yhinfo['yunfei'];
            //         }
            //         if(isset($yhinfo['score'])){
            //             $discount_fee = $discount_fee + $yhinfo['score']['money'];
            //         }
            //         if(isset($yhinfo['mj'])){
            //             $discount_fee = $discount_fee + $yhinfo['mj']['money'];
            //         }
            //         if(isset($yhinfo['yhq'])){
            //             $discount_fee = $discount_fee + $yhinfo['yhq']['money'];
            //         }
            //     }
            //     if($order['tsid'] > 0){
            //         $num = 1;
            //     }else{
            //         $num = 0;
            //         $order_duo = unserialize($order['order_duo']);
            //         foreach ($order_duo as $key => $value) {
            //             $num = $num + $value[4];
            //         }
            //     }
            //     $this->mall($uniacid,$openid,$orderid,$payprice,$status,$types,$order['pid'],$num,$paytype,$yunfei,$kd_id, $kuaidi, $kuaidihao,$upd_hwq, $beizhu_val, $discount_fee);
            // }
            $data = array();

            //更新余额
            if ($flag == '0') {
                if ($user['money'] < $payprice) {
                    $dd11['data'] = array('message' => '失败', 'money' => $user['money']);
                    return json_encode($dd11);
                } else {
                    $money = floatval($user['money']) - floatval($payprice);
                    $data['money'] = $money;
                }
            }
            if ($flag == '1') {
                $data['money'] = 0;
            }

            Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $user['id'])->update($data);


            //根据是否需要确认订单, 更新订单状态
            $paytype = input('paytype');
            $is_flag = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->value('flag');
            if ($product['pro_flag_ding'] == 1 && $product['tableis'] == 0) {
                if ($is_flag == 3) {
                    $data = array(
                        'message' => '成功',
                    );
                    $result['data'] = $data;
                    return json_encode($result);
                } else {
                    if ($paytype == 3) {
                        $pay_info = [
                            'userId' => input('pay_userId'),
                            'orderId' => input('orderId')
                        ];
                        Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->update(['flag' => 3, 'paytype' => input('paytype'), 'pay_info' => serialize($pay_info)]);
                    } else {
                        Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->update(['flag' => 3, 'paytype' => input('paytype')]);
                    }

                }
            } else {
                if ($is_flag == 1) {
                    $data = array(
                        'message' => '成功',
                    );
                    $result['data'] = $data;
                    return json_encode($result);
                } else {
                    if ($paytype == 3) {
                        $pay_info = [
                            'userId' => input('pay_userId'),
                            'orderId' => input('orderId')
                        ];
                        Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->update(['flag' => 1, 'paytype' => input('paytype'), 'pay_info' => serialize($pay_info)]);
                    } else {
                        Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->update(['flag' => 1, 'paytype' => input('paytype')]);
                    }

                }
            }
            //更新选择座位状态
            if ($order['tsid'] > 0) {
                Db::name('wd_xcx_tableselect')->where('id', $order['tsid'])->update(['flag' => 1]);
                $select_str = Db::name('wd_xcx_tableselect')->where('id', $order['tsid'])->value('select_str');
                $select_arrs = Db::name('wd_xcx_tableselect')->where('id', '<>', $order['tsid'])->where('pid', $product['id'])->field('id')->select();
                foreach ($select_arrs as $kis => $vis) {
                    Db::name('wd_xcx_order')->where('tsid', $vis['id'])->where('flag', 0)->update(['flag' => -2]);
                }
            }
            //更新选择座位状态

            //金钱流水
            if ($order['pay_price'] > 0) {
                $xfmoney = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    "suid" => $user['id'],
                    "type" => "del",
                    "score" => $order['pay_price'],
                    "message" => $pay_types,
                    "creattime" => time()
                );
                Db::name('wd_xcx_money')->insert($xfmoney);
            }
            $order_yue = floatval($order['true_price']) - floatval($order['pay_price']);
            if ($order_yue > 0) {
                $xfmoney = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    "suid" => $user['id'],
                    "type" => "del",
                    "score" => $order_yue,
                    "message" => "余额消费",
                    "creattime" => time()
                );

                Db::name('wd_xcx_money')->insert($xfmoney);
            }

            //发送模板消息to顾客
            $source = $order['source'];
            if ($source != 3 && $source != 1) {
                $jsons = array(
                    'orderid' => $orderid,
                    'fprice' => $order['true_price']
                );

                if ($source == 5) {
                    $openid = Db::name('wd_xcx_toutiao_user')->where('uniacid', $uniacid)->where('suid', $order['suid'])->value('openid');
                }

                $fmsg = "产品：" . $order['product'] . " 购买数：" . $order['num'] . " 购买单价：" . $order['price'] . "元 ";
                $jsons['fmsg'] = $fmsg;
                $jsons = serialize($jsons);
                tpl_send($uniacid, 1, $openid, $source, $formId, $jsons);
            }
            //发送邮件提醒to商家
            $this->sendMailToAdmin($uniacid, $orderid, "reserve");
            $this->payoverFxs($uniacid, $orderid, $suid, 'reserve');

            //打印订单
            $printlist = Db::name('wd_xcx_print')->where('uniacid', $uniacid)->where('flag', 1)->select();
            if (!empty($printlist)) {
                $print_res = $this->printer($uniacid, $orderid, 'reserve');
            }

            //发送订单短信给商家
            $this->sendSms($uniacid, $payprice);

            $www['data'] = array('message' => '成功');
            return json_encode($www);
        }

        if ($types == 'pt') {
            $order_id = input('out_trade_no');
            $order = Db::name("wd_xcx_pt_order")->where("order_id", $order_id)->find();
            $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['suid'])->find();
            if ($order['flag'] != 0) {
                return;
            }
            $paytype = input('paytype');
            $datas = [
                'flag' => 1,
                'paytype' => $paytype,
                'wx_price' => $order['price'],
            ];

            if ($paytype == 3) {
                $pay_info = [
                    'userId' => input('pay_userId'),
                    'orderId' => input('orderId')
                ];
                $datas['pay_info'] = serialize($pay_info);
            }

            Db::name("wd_xcx_pt_order")->where("order_id", $order_id)->update($datas);

            //处理个人信息
            // $userdata['money'] = 0;
            // if ($order['jf'] > 0) {
            //     $score = $user['score'] - $order['jf'];
            //     $userdata['score'] = $score < 0 ? 0 : $score;
            // }
            // Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $order['suid'])->update($userdata);

            //更新优惠券使用情况
            if ($order['coupon'] != '0') {
                Db::name('wd_xcx_coupon_user')->where('uniacid', $uniacid)->where('id', $order['coupon'])->update(array('flag' => 1, "utime" => time()));
            }

            //处理库存
            //支付前判断库存
            $jsondata = unserialize($order['jsondata']);
            $pid = $jsondata[0]['id'];
            foreach ($jsondata as $key => &$value) {
                // Db::name('wd_xcx_pt_pro_val')->where('id', $value['proinfo'])->setDec('kc', $value['num']);  //更新库存
                // Db::name('wd_xcx_pt_pro')->where('id', $value['pvid'])->setInc('xsl', $value['num']);

                $num = $value['num'];
                $spid = $value['proinfo'];
                $pro_val = Db::name("wd_xcx_pt_pro_val")->where("id", $spid)->find();
            }


            // 1.支付金钱流水
            // if ($order['yue_price'] > 0) {
            //     $xfmoney = array(
            //         "uniacid" => $uniacid,
            //         "orderid" => $order_id,
            //         "suid" => $order['suid'],
            //         "type" => "del",
            //         "score" => $order['yue_price'],
            //         "message" => "余额消费",
            //         "creattime" => time()
            //     );
            //     Db::name('wd_xcx_money')->insert($xfmoney);
            // }

            if ($order['true_price'] > 0) {
                $xfmoney = array(
                    "uniacid" => $uniacid,
                    "orderid" => $order_id,
                    "suid" => $order['suid'],
                    "type" => "del",
                    "score" => $order['true_price'],
                    "message" => $pay_types,
                    "creattime" => time()
                );
                Db::name('wd_xcx_money')->insert($xfmoney);
            }


            // 2.支付积分流水

            // if ($order['jf'] > 0) {
            //     $xfscore = array(
            //         "uniacid" => $uniacid,
            //         "orderid" => $order_id,
            //         "suid" => $order['suid'],
            //         "type" => "del",
            //         "score" => $order['jf'],
            //         "message" => "消费",
            //         "creattime" => time()
            //     );
            //     Db::name("wd_xcx_score")->insert($xfscore);
            // }

            // 判断是不是直接购买并且是开团还是参加团购
            // 参加团购的时候更新参与人数
            if ($order['ck'] == 2) {
                $shareid = $order['pt_order'];
                $share = Db::name("wd_xcx_pt_share")->where("shareid", $shareid)->find();
                $share_arr = ["join_count" => $counts];
                if($source == 1){
                    if($share['joiner']){
                        $joiner = unserialize($share['joiner']);
                        array_push($joiner, $suid);
                        $share_arr['joiner'] = serialize($joiner);
                    }else{
                        $joiner = [];
                        array_push($joiner, $suid);
                        $share_arr['joiner'] = serialize($joiner);
                    }
                }
                $counts = $share['join_count'] + 1;
                Db::name("wd_xcx_pt_share")->where("shareid", $shareid)->update($share_arr);
                $ptorderid = $shareid;
            }

            // 开团的时候
            $min_max = Db::name("wd_xcx_pt_pro")->where("id", $pid)->where("uniacid", $uniacid)->find();
            $pt_min = $min_max['pt_min'];
            $pt_max = $min_max['pt_max'];
            if ($order['ck'] == 1) {  //开团
                if ($order['types'] == 1) {
                    //生成开团信息
                    $now = time();
                    $ptorderid = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
                    $data = array(
                        "uniacid" => $uniacid,
                        "shareid" => $ptorderid,
                        "pid" => $pid,
                        "suid" => $order['suid'],
                        "creattime" => time(),
                        "pt_min" => $pt_min,
                        "pt_max" => $pt_max,
                        "flag" => 1,
                        'source' => $order['source']
                    );

                    if($source == 1){
                        $joiner = [];
                        array_push($joiner, $suid);
                        $data['joiner'] = serialize($joiner);
                    }
                    Db::name("wd_xcx_pt_share")->insert($data);

                    // 更新订单跟拼团订单绑定
                    $pdata = array(
                        "pt_order" => $ptorderid
                    );
                    
                    Db::name("wd_xcx_pt_order")->where("order_id", $order_id)->update($pdata);
                } else {
                    $ptorderid = 0;
                }
            }


            //分销
            $this->payoverFxs($uniacid, $order_id, $order['suid'], 'pt');

            //发送模板消息to顾客

            //模板消息

            $source = $order['source'];

            if ($source != 3 && $source != 1) {
                $formId = $order['form_id'];
                if ($order['nav'] == 1) {
                    $fps = "快递";
                } else {
                    $fps = "到店自提";
                }
                $fpro = $min_max['title'] . " " . $pro_val['type1'] . " " . $pro_val['type2'] . " " . $pro_val['type3'];
                if ($order['types'] == 1) {  //1拼团  2单买
                    $fprice = $pro_val['price'] . "元";  //拼团价
                    $fpy = $pro_val['dprice'] . "元";    //原价
                    $fmsg = $min_max['pt_min'] . "人";
                } else {
                    $fprice = $pro_val['dprice'] . "元";  //拼团价
                    $fpy = $pro_val['dprice'] . "元";  //原价
                    $fmsg = "原价单独购买";
                }
                $fnum = $num;
                $fpriceall = $order['price'] . "元";

                $jsons = [
                    'order_id' => $order_id,
                    'fps' => $fps,
                    'fpro' => $fpro,
                    'fprice' => $fprice,
                    'fpy' => $fpy,
                    'fnum' => $fnum,
                    'fpriceall' => $fpriceall,
                    'fmsg' => $fmsg,
                ];
                if ($source == 5) {
                    $openid = Db::name('wd_xcx_toutiao_user')->where('uniacid', $uniacid)->where('suid', $order['suid'])->value('openid');
                }

                $jsons['fmsg'] = $fmsg;
                $jsons = serialize($jsons);
                tpl_send($uniacid, 2, $openid, $source, $formId, $jsons);
            }

            //发送邮件提醒to商家
            $this->sendMailToAdmin($uniacid, $order_id, 'pt');

            //发送订单短信给商家
            $this->sendSms($uniacid, $payprice);
        }

        if ($types == 'art') {
            $is = Db::name("wd_xcx_video_pay")->where('orderid', $orderid)->find();
            if ($is) {
                return;
            }

            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $data = $redis->get($orderid . 'artzf');

            $suid = $data['suid'];

            //余额归零
            Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update(['money' => 0]);

            //发布信息
            Db::name("wd_xcx_video_pay")->insert($data);

            add_all_pay($uniacid, $data['paymoney'], $suid);
            check_vip_grade($uniacid, $suid);

            $redis->rm($orderid . 'artzf');
            $this->payoverFxs($uniacid, $orderid, $suid, 'art');
        }

        if ($types == 'fabu') {  //微同城支付回调发布
            $is = Db::name('wd_xcx_money')->where('orderid', $orderid)->find();
            if ($is) {
                return;
            }
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $data = $redis->get($orderid . 'fabu');
            $suid = $data['suid'];
            $release_money = $data['release_money'];  //发布所需费用
            $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            $wx_money = round($release_money - $user['money'], 2);

            //流水
            $xfmoney = array(
                "uniacid" => $uniacid,
                "orderid" => $orderid,
                "suid" => $suid,
                "type" => "del",
                "score" => $wx_money,
                "message" => "微同城发布-" . $pay_types,
                "creattime" => time()
            );
            Db::name('wd_xcx_money')->insert($xfmoney);
            if ($user['money'] > 0) {
                $xfmoney1 = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    "suid" => $suid,
                    "type" => "del",
                    "score" => $user['money'],
                    "message" => "微同城发布-余额支付",
                    "creattime" => time()
                );
                Db::name('wd_xcx_money')->insert($xfmoney1);
            }

            //余额归零
            Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update(['money' => 0]);

            //发布信息
            Db::name("wd_xcx_forum_release")->insert($data);

            add_all_pay($uniacid, $data['release_money'], $suid);
            check_vip_grade($uniacid, $suid);

            $redis->rm($orderid);
        }

        if ($types == 'settop') {  //微同城置顶回调发布
            $is = Db::name('wd_xcx_money')->where('orderid', $orderid)->find();

            if ($is) {
                return;
            }
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $data = $redis->get($orderid . 'settop');

            //修改所有发布相关置顶为不启用
            Db::name('wd_xcx_forum_stick')->where("uniacid", $uniacid)->where("rid", $data['rid'])->update(array('stick_status' => 2));
            Db::name('wd_xcx_forum_order')->where('orderid', $orderid)->update(['flag' => 1]);

            $res = Db::name('wd_xcx_forum_stick')->insert($data);
            if ($res) {
                //修改发布表为置顶
                Db::name('wd_xcx_forum_release')->where("uniacid", $uniacid)->where("id", $data['rid'])->update(array('stick' => 1));
            }

            $stick_money = $data['stick_money'];  //发布所需费用
            $stick_days = $data['stick_days'];  //发布所需费用

            $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            $wx_money = round($stick_money * $stick_days - $user['money'], 2);

            //流水
            $xfmoney = array(
                "uniacid" => $uniacid,
                "orderid" => $orderid,
                "suid" => $suid,
                "type" => "del",
                "score" => $wx_money,
                "message" => "微同城置顶-" . $pay_types,
                "creattime" => time()
            );
            Db::name('wd_xcx_money')->insert($xfmoney);

            if ($user['money'] > 0) {
                $xfmoney1 = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    "suid" => $suid,
                    "type" => "del",
                    "score" => $user['money'],
                    "message" => "微同城置顶-余额支付",
                    "creattime" => time()
                );
                Db::name('wd_xcx_money')->insert($xfmoney1);
            }
            Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update(['money' => 0]);
            add_all_pay($uniacid, $data['stick_money'], $suid);
            check_vip_grade($uniacid, $suid);
            $redis->rm($orderid . 'settop');

        }

        if ($types == 'supfabu') {  //供求关系回调发布
            $is = Db::name('wd_xcx_money')->where('orderid', $orderid)->find();
            if ($is) {
                return;
            }
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $data = $redis->get($orderid . 'fabu');
            $suid = $data['suid'];


            //发布信息
            Db::name("wd_xcx_supply_release")->insert($data);


            $release_money = $data['release_money'];  //发布所需费用

            $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            $wx_money = round($release_money - $user['money'], 2);

            //余额归零
            Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update(['money' => 0]);
            //流水
            $xfmoney = array(
                "uniacid" => $uniacid,
                "orderid" => $orderid,
                "suid" => $suid,
                "type" => "del",
                "score" => $wx_money,
                "message" => "供求关系发布-" . $pay_types,
                "creattime" => time()
            );
            Db::name('wd_xcx_money')->insert($xfmoney);
            if ($user['money'] > 0) {
                $xfmoney1 = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    "suid" => $suid,
                    "type" => "del",
                    "score" => $user['money'],
                    "message" => "供求关系发布-余额支付",
                    "creattime" => time()
                );
                Db::name('wd_xcx_money')->insert($xfmoney1);
            }

            add_all_pay($uniacid, $data['release_money'], $suid);
            check_vip_grade($uniacid, $suid);
            $redis->rm($orderid);
        }

        if ($types == 'supsettop') {  //供求关系回调置顶
            $is = Db::name('wd_xcx_money')->where('orderid', $orderid)->find();
            if ($is) {
                return;
            }
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $data = $redis->get($orderid . 'settop');

            //修改所有发布相关置顶为不启用
            Db::name('wd_xcx_supply_stick')->where("uniacid", $uniacid)->where("rid", $data['rid'])->update(array('stick_status' => 2));
            Db::name('wd_xcx_supply_order')->where('orderid', $orderid)->update(['flag' => 1]);

            $res = Db::name('wd_xcx_supply_stick')->insert($data);
            if ($res) {
                //修改发布表为置顶
                Db::name('wd_xcx_supply_release')->where("uniacid", $uniacid)->where("id", $data['rid'])->update(array('stick' => 1));
            }

            $stick_money = $data['stick_money'];  //发布所需费用
            $stick_days = $data['stick_days'];  //发布所需费用
            $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            $wx_money = round($stick_money * $stick_days - $user['money'], 2);
            //余额归零
            Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update(['money' => 0]);
            //流水
            $xfmoney = array(
                "uniacid" => $uniacid,
                "orderid" => $orderid,
                "suid" => $suid,
                "type" => "del",
                "score" => $wx_money,
                "message" => "供求关系置顶-" . $pay_types,
                "creattime" => time()
            );
            Db::name('wd_xcx_money')->insert($xfmoney);
            if ($user['money'] > 0) {
                $xfmoney1 = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    "suid" => $suid,
                    "type" => "del",
                    "score" => $user['money'],
                    "message" => "供求关系置顶-余额支付",
                    "creattime" => time()
                );
                Db::name('wd_xcx_money')->insert($xfmoney1);
            }

            add_all_pay($uniacid, $data['stick_money'], $suid);
            check_vip_grade($uniacid, $suid);
            $redis->rm($orderid . 'settop');
        }

        if ($types == "vipgrade") {
            $is = Db::name('wd_xcx_money')->where('orderid', $orderid)->find();
            if ($is) {
                return;
            }

            $orderinfo = Db::name('wd_xcx_vip_order')->alias('a')->join('wd_xcx_vipgrade b', 'a.grade = b.grade')->where('a.uniacid', $uniacid)->where('b.uniacid', $uniacid)->where('a.order_id', $orderid)->field('a.*,b.score_feedback,b.score_feedback_flag,b.id,b.coupon_flag,b.coupon_give,b.upgrade,b.price_flag')->find();
            $suid = $orderinfo['suid'];
            $user = Db::name('wd_xcx_superuser')->where("uniacid", $uniacid)->where("id", $suid)->find();

            if ($orderinfo) {
                if ($orderinfo['score_feedback_flag'] == 1 && $orderinfo['score_feedback'] > 0) {
                    $scoreback_data = array(
                        "uniacid" => $uniacid,
                        "orderid" => $orderid,
                        "suid" => $user['id'],
                        "type" => "add",
                        "score" => $orderinfo['score_feedback'],
                        "message" => "会员等级购买回馈积分",
                        "creattime" => time()
                    );
                    $rs = Db::name('wd_xcx_score')->insert($scoreback_data);
                    $score = $user['score'];
                    $upd['score'] = $score + $orderinfo['score_feedback'];

                }
                $upd['grade'] = $orderinfo['grade'];
                $upd['allpay'] = round($orderinfo['upgrade'] - $user['virtualpay'], 2);
                Db::name('wd_xcx_vip_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->update(array("flag" => 1, 'paytype' => $paytype));


                //流水
                $xfmoney = array(
                    "uniacid" => $uniacid,
                    "orderid" => $orderid,
                    "suid" => $user['id'],
                    "type" => "del",
                    "score" => $orderinfo['allpay'],
                    "message" => "会员等级购买",
                    "creattime" => time()
                );
                Db::name('wd_xcx_money')->insert($xfmoney);
                if ($orderinfo['price_flag'] == 1) {
                    //流水
                    $xfmoney1 = array(
                        "uniacid" => $uniacid,
                        "orderid" => $orderid,
                        "suid" => $user['id'],
                        "type" => "add",
                        "score" => $orderinfo['allpay'],
                        "message" => "会员等级购买充余额",
                        "creattime" => time()
                    );
                    Db::name('wd_xcx_money')->insert($xfmoney1);
                    if ($orderinfo['wxpay'] > 0) {
                        $upd['money'] = $orderinfo['allpay'];
                    }
                } else {
                    if ($orderinfo['wxpay'] > 0) {
                        $upd['money'] = 0;
                    } else {
                        $upd['money'] = round($user['money'] - $orderinfo['allpay'], 2);
                    }
                }
                Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update($upd);

                $receive = [];
                $receive['uniacid'] = $uniacid;
                $receive['suid'] = $suid;
                $receive['vid'] = $orderinfo['id'];
                if ($orderinfo['score_feedback_flag'] == 1 && $orderinfo['score_feedback'] > 0) {
                    $receive['score'] = $orderinfo['score_feedback'];
                }
                if ($orderinfo['coupon_flag'] == 1 && count(unserialize($orderinfo['coupon_give'])) > 0) {
                    $receive['coupon'] = [];
                    $coupon_give = unserialize($orderinfo['coupon_give']);
                    foreach ($coupon_give as $k => $v) {
                        for ($i = 0; $i < $v['coupon_num']; $i++) {
                            $coup = [];
                            $cid = $v['coupon_id'];
                            //判断优惠券是否为系统发放
                            $couponinfo = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where('id', $cid)->where('give_type', 'neq', 2)->find();
                            if($couponinfo){
                                $use_contents = unserialize($couponinfo['use_contents']);

                                $couponinfo['use_goods_contents'] = unserialize($couponinfo['use_goods_contents']);
                                $couponinfo['use_type'] = $use_contents['use_type'];
                                $coup['uniacid'] = $uniacid;
                                $coup['suid'] = $suid;
                                $coup['cid'] = $cid;
                                if($use_contents['use_type'] == 1) {
                                    $coup['btime'] = strtotime(date("Y-m-d")); //当天开始时间戳
                                    $coup['etime'] = strtotime(date("Y-m-d")) + 3600 * 24 * $use_contents['use_time'];
                                }else if($use_contents['use_type'] == 2){
                                    $coup['btime'] = strtotime(date("Y-m-d")) + 3600 * 24; //次日开始时间戳为今天开始时间戳加一天时间戳
                                    $coup['etime'] = strtotime(date("Y-m-d")) + 3600 * 24 * ($use_contents['use_time'] + 1); //今天0点时间戳加上n+1天的时间戳
                                }else{
                                    $use_time = explode(',', $use_contents['use_time']);
                                    $coup['btime'] = $use_time[0];
                                    $coup['etime'] = $use_time[1];
                                }
                                $coup['title'] = $couponinfo['title'];
                                $coup['pay_money'] = $couponinfo['pay_money'];
                                $coup['price'] = $couponinfo['price'];
                                $coup['color'] = $couponinfo['color'];
                                $coup['ltime'] = time();
                                $coupon_id = Db::name('wd_xcx_coupon_user')->insertGetId($coup);
                            }
                        }
                        $receive['coupon'][$k]['coupon_id'] = $coupon_id;
                        $receive['coupon'][$k]['coupon_num'] = $v['coupon_num'];
                    }
                    $receive['coupon'] = serialize($receive['coupon']);
                }
                Db::name('wd_xcx_vip_receive')->insert($receive);
                $result['data'] = array(
                    'message' => '成功'
                );
                return json_encode($result);
            }
        }


        $data = array(
            'message' => '成功',
        );
        $result['data'] = $data;
        return json_encode($result);
    }

    //订单支付回调
    public function payCallBackNotify()
    {
        $uniacid = input('uniacid');
        $suid = input('suid');
        $order_id = input('order_id');
        $types = input('types');
        $pay_to = input('paytype') ? input('paytype') : 0;  //付款到哪里

        $prefix = config('database.prefix');

        if ($pay_to) {
            if (intval($pay_to) == 1) {
                $pay_types = "微信消费";
            } else if (intval($pay_to) == 2) {
                $pay_types = "支付宝消费";
            } else if (intval($pay_to) == 3) {
                $pay_types = "百度消费";
            } else if (intval($pay_to) == 4) {
                $pay_types = "QQ消费";
            }
        } else {
            $pay_types = '余额消费';
        }

        $user = Db::name('wd_xcx_superuser')->where('id', $suid)->find();

        if ($types == 'mainShop') {
            $payprice = input('payprice');
            $order_id_new = $order_id;
            if(strlen($order_id) > 20){
                $order_id = substr($order_id, 0, 20);
            }
            $order = Db::name('wd_xcx_main_shop_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->find();

            $order_price = $order['is_change_price'] == 1 ? $order['change_price'] : $order['pay_money'];
            // if ($order['status'] != 0 || $payprice * 100 != $order_price * 100) {
            //     return json_encode(['data' => ['error' => 1, 'msg' => '订单状态异常']]);
            // }

            //支付信息
            if ($pay_to == 1) {
                $payment_info = serialize([
                    'openid' => input('openid'),
                    'transaction_id' => input('transaction_id'),
                    'order_id_new' => $order_id_new,
                ]);
            } elseif ($pay_to == 3) {
                $payment_info = serialize([
                    'userId' => input('pay_userId'),
                    'orderId' => input('orderId')  //百度商户支付订单
                ]);
            } else {
                $payment_info = '';
            }

            //消费流水
            $money_data = array(
                'uniacid' => $uniacid,
                'orderid' => $order_id,
                'suid' => $suid,
                'source' => $order['source'],
                'score' => $order_price,
                'creattime' => time(),
                'type' => 'del',
                'message' => '商品订单：' . $pay_types
            );

            if ($order['delivery_type'] == 1) {
                $status = 1;  //快递订单 付款后状态为1  待发货
            } else {
                $status = 2;   //自取订单 付款后状态为2   待核销
            }

            Db::startTrans();
            try {
                //改变订单状态
                $order_update_data = [
                    'pay_time' => time(),
                    'status' => $status,
                    'payment_info' => $payment_info,
                    'total_can_tui_money' => $order_price,
                    'pay_to' => $pay_to
                ];
                if ($pay_to != 0) {
                    $order_update_data['pay_type'] = 2;
                } else {
                    $order_update_data['pay_type'] = 1;
                }
                $order_update = Db::name('wd_xcx_main_shop_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update($order_update_data);
                if (!$order_update) {
                    throw new Exception("支付失败，请稍后再试！");
                }

                //插入消费流水
                $money_res = Db::name('wd_xcx_money')->insert($money_data);
                if (!$money_res) {
                    throw new Exception("支付失败，请稍后再试！");
                }

                if ($order_update_data['pay_type'] == 1) { //余额支付
                    $user_money = Db::name('wd_xcx_superuser')->where('id', $suid)->value('money');
                    if ($user_money >= $order_price) {
                        $user_money = $user_money - $order_price;
                        Db::name('wd_xcx_superuser')->where('id', $suid)->update(['money' => $user_money]);
                    } else {
                        throw new Exception("支付失败，余额不足！");
                    }
                }

                //分销
                $fx = $this->createFxOrder($uniacid, $order_id, $suid, 'mainShop');
                if (!$fx) {
                    throw new Exception("支付失败，请稍后再试！");
                }

                Db::commit();

            } catch (\Exception $e) {
                Db::rollback();
                return json_encode(['data' => ['error' => 6, 'msg' => $e->getMessage()]]);
            }
            //改变子订单状态
            $order_items = Db::name('wd_xcx_main_shop_order_item')->where('order_id', $order_id)->select();
            foreach ($order_items as $k => $v) {
                $order_item_logs = unserialize($v['order_item_log']);
                $order_item_log = ['time' => time(), 'log' => '订单支付完成'];
                array_push($order_item_logs, $order_item_log);
                Db::name('wd_xcx_main_shop_order_item')->where('id', $v['id'])->update(['status' => $status, 'order_item_log' => serialize($order_item_logs)]);
            }


            //打印
            $printlist = Db::name('wd_xcx_print')->where('uniacid', $uniacid)->where('flag', 1)->select();
            if (!empty($printlist)) {
                $print_res = $this->printer($uniacid, $order_id, 'mainShop');
            }

            $fmsg = '商品订单';

            $source = $order['source'];
            if ($source != 3 && $source != 4 && $source != 2) {

                $jsons = array(
                    'orderid' => $order_id,
                    'fmsg' => $fmsg,
                    'fprice' => $order['pay_money']
                );

                if (mb_strlen($jsons['fmsg'], 'utf8') > 100) {
                    $jsons['fmsg'] = mb_substr($jsons['fmsg'], 0, 100) . "...";
                }
                $jsons = serialize($jsons);
                if ($source == 5) {
                    $openid = Db::name('wd_xcx_toutiao_user')->where('uniacid', $uniacid)->where('suid', $order['suid'])->value('openid');
                } elseif ($source == 1) {
                    $openid = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('suid', $order['suid'])->value('openid');
                } elseif ($source == 6) {
                    $openid = Db::name('wd_xcx_qq_user')->where('uniacid', $uniacid)->where('suid', $order['suid'])->value('openid');
                }
                tpl_send($uniacid, 1, $openid, $source, $order['form_id'], $jsons);
            }

            //发送邮件提醒to商家
            $this->sendMailToAdmin($uniacid, $order_id, 'mainShop');



            //发送订单短信给商家
            $this->sendSms($uniacid, $order_price);
            return json_encode(['data' => ['error' => 0, 'msg' => '下单成功']]);
        }

    }

    //新版创建分销订单
    private function createFxOrder($uniacid, $order_id, $suid, $types)
    {
        if ($types == 'mainShop') {
            $fx_gz = Db::name('wd_xcx_fx_gz')->where('uniacid', $uniacid)->find();
            if ($fx_gz['fx_cj'] == 4) {
                return true;
            }

            $order = Db::name('wd_xcx_main_shop_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->find();
            $user = Db::name('wd_xcx_superuser')->where('id', $suid)->find();

            $order_item = Db::name('wd_xcx_main_shop_order_item')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('pro_fx, order_item_id')->select();
            foreach ($order_item as $key => $v) {
                $value = unserialize($v['pro_fx']);
                if ($value['commission_type'] == 1) {  //1 百分比  2 金额
                    $money_one = round($value['commission_one'] * $value['fx_base_price'] / 100, 2);
                    $money_two = round($value['commission_two'] * $value['fx_base_price'] / 100, 2);
                    $money_three = round($value['commission_three'] * $value['fx_base_price'] / 100, 2);
                } else {
                    $money_one = $value['commission_one'];
                    $money_two = $value['commission_two'];
                    $money_three = $value['commission_three'];
                }
//                $value['pro_fx_info'] = [];
//                //计算分销信息  存入子订单
//                if ($user['parent_id']) {
//                    $parent = getNameAvatar($user['parent_id'], $uniacid, 1);
//                    $fx_parent = [
//                        'nickname' => $parent['nickname'],
//                        'avatar' => $parent['avatar'],
//                        'money' => number_format($money_one, 2)
//                    ];
//                    $value['pro_fx_info'][1] = $fx_parent;
//                }
//                if ($user['p_parent_id']) {
//                    $parent = getNameAvatar($user['p_parent_id'], $uniacid, 1);
//                    $fx_p_parent = [
//                        'nickname' => $parent['nickname'],
//                        'avatar' => $parent['avatar'],
//                        'money' => number_format($money_two, 2)
//                    ];
//                    $value['pro_fx_info'][2] = $fx_p_parent;
//                }
//                if ($user['p_p_parent_id']) {
//                    $parent = getNameAvatar($user['p_p_parent_id'], $uniacid, 1);
//                    $fx_p_p_parent = [
//                        'nickname' => $parent['nickname'],
//                        'avatar' => $parent['avatar'],
//                        'money' => number_format($money_three, 2)
//                    ];
//                    $value['pro_fx_info'][3] = $fx_p_p_parent;
//                }
                Db::name('wd_xcx_main_shop_order_item')->where('order_item_id', $v['order_item_id'])->update(['pro_fx' => serialize($value)]);

                if($user['parent_id'] || $user['p_parent_id'] || $user['p_p_parent_id']){
                    $lsdata = array(
                        "uniacid" => $uniacid,
                        "suid" => $suid,
                        "parent_id" => 0,
                        "parent_id_get" => 0,
                        "p_parent_id" => 0,
                        "p_parent_id_get" => 0,
                        "p_p_parent_id" => 0,
                        "p_p_parent_id_get" => 0,
                        "order_id" => $v['order_item_id'],
                        "source" => $order['source'],
                        "creattime" => time(),
                        'types' => $types
                    );

                    if ($fx_gz['fx_cj'] > 0) {
                        $lsdata['parent_id'] = $user['parent_id'];
                        $lsdata['parent_id_get'] = $money_one;
                    }

                    if ($fx_gz['fx_cj'] > 1) {
                        $lsdata['p_parent_id'] = $user['p_parent_id'];
                        $lsdata['p_parent_id_get'] = $money_two;
                    }

                    if ($fx_gz['fx_cj'] > 2) {
                        $lsdata['p_p_parent_id'] = $user['p_p_parent_id'];
                        $lsdata['p_p_parent_id_get'] = $money_three;
                    }
                    $res = Db::name('wd_xcx_fx_ls')->insert($lsdata);
                }
            }
            return true;
        }
    }

    public function payoverFxs($uniacid, $orderid, $suid, $types)
    {
        $new_userinfo = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
        $guiz = Db::name('wd_xcx_fx_gz')->where('uniacid', $uniacid)->find();
        if ($types == 'duo') {
            $order = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->find();
            $jsondata = unserialize($order['jsondata']);

            //计算一级、二级、三级佣金
            $onemoney = 0;
            $twomoney = 0;
            $threemoney = 0;


            //总数量
            $allnum = 0;
            $allprice = 0;
            foreach ($jsondata as $k => $v) {
                $allnum += $v['num'];
            }

            $yunfei_avg = 0;
            $score_avg = 0;
            $coupon_avg = 0;
            $discounts = $order['discounts'];
            $mj_avg = 0;
            if ($order['yhinfo']) {
                $yhinfo = unserialize($order['yhinfo']);
                $yunfei_avg = round($yhinfo['yunfei'] / $allnum, 2);
                $score_avg = round($yhinfo['score']['money'] / $allnum, 2);
                $coupon_avg = round($yhinfo['yhq']['money'] / $allnum, 2);
                $mj_avg = round($yhinfo['mj']['money'] / $allnum, 2);
            }

            foreach ($jsondata as $key => &$value) {
                $product = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $value['baseinfo']['id'])->field('fx_uni,commission_type,commission_one,commission_two,commission_three')->find();
                $singleprice = Db::name('wd_xcx_duo_products_type_value')->where('id', $value['proinfo']['id'])->value('price');
                if ($product['fx_uni'] == 1 && $product['commission_type'] == 1) {  //商品独立分销，比例
                    $discounts_avg = 0;
                    if ($discounts > 0) {
                        $discounts_avg = $singleprice - ($singleprice * $discounts * 0.1);
                    }
                    $onemoney += round(($singleprice + $yunfei_avg - $score_avg - $coupon_avg - $mj_avg - $discounts_avg) * $product['commission_one'] * $value['num'] / 100, 2);
                    $twomoney += round(($singleprice + $yunfei_avg - $score_avg - $coupon_avg - $mj_avg - $discounts_avg) * $product['commission_two'] * $value['num'] / 100, 2);
                    $threemoney += round(($singleprice + $yunfei_avg - $score_avg - $coupon_avg - $mj_avg - $discounts_avg) * $product['commission_three'] * $value['num'] / 100, 2);
                } else if ($product['fx_uni'] == 1 && $product['commission_type'] == 2) {  //商品独立分销，固定
                    $onemoney += $product['commission_one'] * $value['num'];
                    $twomoney += $product['commission_two'] * $value['num'];
                    $threemoney += $product['commission_three'] * $value['num'];
                } else {
                    $discounts_avg = 0;
                    if ($discounts > 0) {
                        $discounts_avg = $singleprice - ($singleprice * $discounts * 0.1);
                    }                                                            //全局分销比例
                    $onemoney += round(($singleprice + $yunfei_avg - $score_avg - $coupon_avg - $mj_avg - $discounts_avg) * $guiz['one_bili'] * $value['num'] / 100, 2);
                    $twomoney += round(($singleprice + $yunfei_avg - $score_avg - $coupon_avg - $mj_avg - $discounts_avg) * $guiz['two_bili'] * $value['num'] / 100, 2);
                    $threemoney += round(($singleprice + $yunfei_avg - $score_avg - $coupon_avg - $mj_avg - $discounts_avg) * $guiz['three_bili'] * $value['num'] / 100, 2);
                }
            }
        }

        if ($types == 'pt') {
            $order = Db::name('wd_xcx_pt_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->find();
            $jsondata = unserialize($order['jsondata']);

            //计算一级、二级、三级佣金
            $onemoney = 0;
            $twomoney = 0;
            $threemoney = 0;

            foreach ($jsondata as $key => &$value) {
                $product = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $value['baseinfo']['id'])->field('fx_uni,commission_type,commission_one,commission_two,commission_three')->find();
                // $price = Db::name('wd_xcx_pt_pro_val')->where('id', $value['proinfo'])->field('price, dprice') ->find();
                // if($order['types'] == 1){
                //     $singleprice = $price['price'];
                // }else{
                //     $singleprice = $price['dprice'];
                // }
                if ($product['fx_uni'] == 1 && $product['commission_type'] == 1) {  //商品独立分销，比例
                    $onemoney += round($order['price'] * $product['commission_one'] / 100, 2);
                    $twomoney += round($order['price'] * $product['commission_two'] / 100, 2);
                    $threemoney += round($order['price'] * $product['commission_three'] / 100, 2);
                    break;
                } else if ($product['fx_uni'] == 1 && $product['commission_type'] == 2) {  //商品独立分销，固定
                    $onemoney += $product['commission_one'] * $value['num'];
                    $twomoney += $product['commission_two'] * $value['num'];
                    $threemoney += $product['commission_three'] * $value['num'];
                } else {                                                              //全局分销比例
                    $onemoney += round($order['price'] * $guiz['one_bili'] / 100, 2);
                    $twomoney += round($order['price'] * $guiz['two_bili'] / 100, 2);
                    $threemoney += round($order['price'] * $guiz['three_bili'] / 100, 2);
                    break;
                }
            }
        }

        if ($types == 'miaosha') {
            $order = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->find();

            //计算一级、二级、三级佣金
            $onemoney = 0;
            $twomoney = 0;
            $threemoney = 0;

            $product = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $order['pid'])->field('fx_uni,commission_type,commission_one,commission_two,commission_three')->find();
            if ($product['fx_uni'] == 1 && $product['commission_type'] == 1) {  //商品独立分销，比例
                $onemoney += round($order['true_price'] * $product['commission_one'] * $order['num'] / 100, 2);
                $twomoney += round($order['true_price'] * $product['commission_two'] * $order['num'] / 100, 2);
                $threemoney += round($order['true_price'] * $product['commission_three'] * $order['num'] / 100, 2);
            } else if ($product['fx_uni'] == 1 && $product['commission_type'] == 2) {  //商品独立分销，固定
                $onemoney += $product['commission_one'] * $order['num'];
                $twomoney += $product['commission_two'] * $order['num'];
                $threemoney += $product['commission_three'] * $order['num'];
            } else {                                                              //全局分销比例
                $onemoney += round($order['true_price'] * $guiz['one_bili'] * $order['num'] / 100, 2);
                $twomoney += round($order['true_price'] * $guiz['two_bili'] * $order['num'] / 100, 2);
                $threemoney += round($order['true_price'] * $guiz['three_bili'] * $order['num'] / 100, 2);
            }

        }

        if ($types == 'reserve') {
            $order = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->find();

            //计算一级、二级、三级佣金
            $onemoney = 0;
            $twomoney = 0;
            $threemoney = 0;

            //全局分销比例
            $onemoney += round($order['true_price'] * $guiz['one_bili'] * $order['num'] / 100, 2);
            $twomoney += round($order['true_price'] * $guiz['two_bili'] * $order['num'] / 100, 2);
            $threemoney += round($order['true_price'] * $guiz['three_bili'] * $order['num'] / 100, 2);

        }

        if ($types == 'bargain') {
            $order = Db::name('wd_xcx_bargain_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->find();

            //计算一级、二级、三级佣金
            $onemoney = 0;
            $twomoney = 0;
            $threemoney = 0;
            //全局分销比例
            $onemoney += round($order['true_price'] * $guiz['one_bili'] * $order['num'] / 100, 2);
            $twomoney += round($order['true_price'] * $guiz['two_bili'] * $order['num'] / 100, 2);
            $threemoney += round($order['true_price'] * $guiz['three_bili'] * $order['num'] / 100, 2);

        }

        if ($guiz['fx_cj'] == 1) {
            if ($new_userinfo['parent_id'] != '0') {
                $fxsstop1 = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $new_userinfo['parent_id'])->where('fxs', 2)->value('fxsstop');
                if ($fxsstop1 == 1) {
                    $lsdata = array(
                        "uniacid" => $uniacid,
                        "suid" => $suid,
                        "parent_id" => $new_userinfo['parent_id'],
                        "parent_id_get" => $onemoney,
                        "p_parent_id" => 0,
                        "p_parent_id_get" => 0,
                        "p_p_parent_id" => 0,
                        "p_p_parent_id_get" => 0,
                        "order_id" => $orderid,
                        "source" => $order['source'],
                        "creattime" => time(),
                        'types' => $types
                    );
                    Db::name('wd_xcx_fx_ls')->insert($lsdata);
                }
            }
        }
        if ($guiz['fx_cj'] == 2) {
            if ($new_userinfo['parent_id'] != '0' || $new_userinfo['p_parent_id'] != '0') {
                $fxsstop1 = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $new_userinfo['parent_id'])->where('fxs', 2)->value('fxsstop');
                $fxsstop2 = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $new_userinfo['p_parent_id'])->where('fxs', 2)->value('fxsstop');

                if ($fxsstop1 == 1 || $fxsstop2 == 1) {
                    if ($fxsstop1 == 2) {
                        $new_userinfo['parent_id'] = 0;
                    }
                    if ($fxsstop2 == 2) {
                        $new_userinfo['p_parent_id'] = 0;
                    }
                    $lsdata = array(
                        "uniacid" => $uniacid,
                        "suid" => $suid,
                        "parent_id" => $new_userinfo['parent_id'] == '0' ? 0 : $new_userinfo['parent_id'],
                        "parent_id_get" => $new_userinfo['parent_id'] == '0' ? 0 : $onemoney,
                        "p_parent_id" => $new_userinfo['p_parent_id'] == '0' ? 0 : $new_userinfo['p_parent_id'],
                        "p_parent_id_get" => $new_userinfo['p_parent_id'] == '0' ? 0 : $twomoney,
                        "p_p_parent_id" => 0,
                        "p_p_parent_id_get" => 0,
                        "order_id" => $orderid,
                        "source" => $order['source'],
                        "creattime" => time(),
                        'types' => $types
                    );
                    Db::name('wd_xcx_fx_ls')->insert($lsdata);
                }
            }
        }
        if ($guiz['fx_cj'] == 3) {
            if ($new_userinfo['parent_id'] != '0' || $new_userinfo['p_parent_id'] != '0' || $new_userinfo['p_p_parent_id'] != '0') {
                $fxsstop1 = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $new_userinfo['parent_id'])->where('fxs', 2)->value('fxsstop');
                $fxsstop2 = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $new_userinfo['p_parent_id'])->where('fxs', 2)->value('fxsstop');
                $fxsstop3 = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $new_userinfo['p_p_parent_id'])->where('fxs', 2)->value('fxsstop');

                if ($fxsstop1 == 1 || $fxsstop2 == 1 || $fxsstop3 == 1) {
                    if ($fxsstop1 == 2) {
                        $new_userinfo['parent_id'] = 0;
                    }
                    if ($fxsstop2 == 2) {
                        $new_userinfo['p_parent_id'] = 0;
                    }
                    if ($fxsstop3 == 2) {
                        $new_userinfo['p_p_parent_id'] = 0;
                    }
                    $lsdata = array(
                        "uniacid" => $uniacid,
                        "suid" => $suid,
                        "parent_id" => $new_userinfo['parent_id'] == '0' ? 0 : $new_userinfo['parent_id'],
                        "parent_id_get" => $new_userinfo['parent_id'] == '0' ? 0 : $onemoney,
                        "p_parent_id" => $new_userinfo['p_parent_id'] == '0' ? 0 : $new_userinfo['p_parent_id'],
                        "p_parent_id_get" => $new_userinfo['p_parent_id'] == '0' ? 0 : $twomoney,
                        "p_p_parent_id" => $new_userinfo['p_p_parent_id'] == '0' ? 0 : $new_userinfo['p_p_parent_id'],
                        "p_p_parent_id_get" => $new_userinfo['p_p_parent_id'] == '0' ? 0 : $threemoney,
                        "order_id" => $orderid,
                        "source" => $order['source'],
                        "creattime" => time(),
                        'types' => $types
                    );
                    Db::name('wd_xcx_fx_ls')->insert($lsdata);
                }
            }
        }

        if ($new_userinfo['fxs'] == 1 && $types != 'art') {
            $val = $guiz['fxs_sz_val'];
            if ($guiz['fxs_sz'] == 4) {
                if ($types == "duo") {
                    $total_price = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('suid', $suid)->where('flag', 'in', [1, 2, 4])->sum('price');
                }
                //else if($types == "miaosha"){
                //$total_price = pdo_fetchcolumn("SELECT sum(true_price) FROM ".tablename("sudu8_page_order")." WHERE uniacid = :uniacid and openid = :openid and flag in (1,2,4)",
                //array(":uniacid"=>$uniacid, ":openid"=>$openid));
                //}
                if (floatval($total_price) >= floatval($val)) {
                    Db::name('wd_xcx_superuser')->where('id', $suid)->where('uniacid', $uniacid)->update(array('fxs' => 2, 'fxstime' => time()));
                }
            }
        }
    }

    //摇一摇相关开始
    public function doPageshareSuccess()
    {
        $uniacid = input('uniacid');
        $aid = input('id');
        $suid = input('suid');
        $openid = input('openid');
        if (!empty($aid) && !empty($openid)) {
            $where = [
                'uniacid' => $uniacid,
                'flag' => 1,
                'suid' => $suid,
                'aid' => $aid,
            ];
            $share_num = Db::name('wd_xcx_lottery_share')->where($where)->whereTime('createtime', 'today')->count();
            $total_share_num = Db::name('wd_xcx_lottery_share')->where($where)->count();
            $activity = Db::name('wd_xcx_lottery_activity')->where('uniacid', $uniacid)->where('id', $aid)->find();
            $base = unserialize($activity['base']);
            if ($share_num >= $base['everyday_share'] || $total_share_num >= $base['total_share']) {
                $flag = false;
            } else {
                $data = array(
                    'uniacid' => $uniacid,
                    'aid' => $aid,
                    'suid' => $suid,
                    'createtime' => time(),
                    'flag' => 1
                );
                Db::name('wd_xcx_lottery_share')->insert($data);
                $flag = true;
            }
            return json_encode($flag);
        }
    }

    public function doPagegetConfig()
    {
        $uniacid = input('uniacid');
        $aid = input('id');
        $suid = input('suid');
        $source = input('source');
        $config = Db::name('wd_xcx_lottery_activity')->where('uniacid', $uniacid)->where('id', $aid)->find();
        $config['share'] = intval($config['share']);
        $config['browse'] = intval($config['browse']);
        $config['win'] = intval($config['win']);
        $config['participate'] = intval($config['participate']);
        $config['base'] = unserialize($config['base']);
        $config['zjtext'] = $config['zjtext'];
        $config['fxtext'] = $config['fxtext'];
        if (empty($config['base']) || $config['status'] == '0') {
            $config['flag'] = 0; //活动未开启
        } else if (time() < $config['begin']) {
            $config['flag'] = 1; //活动尚未开始
        } else if (time() > $config['end']) {
            $config['flag'] = 2; //活动已结束
        } else {
            $config['flag'] = 3;
        }
        $config['bg_changed'] = false;
        if (!strstr($config['bg'], "image/bg.jpg")) {
            $config['bg_changed'] = true;
        }
        if ($config['bg'] && !strstr($config['bg'], "http")) {
            $config['bg'] = ROOT_HOST . $config['bg'];
        }
        if ($config['text_img1'] && !strstr($config['text_img1'], "http")) {
            $config['text_img1'] = ROOT_HOST . $config['text_img1'];
        }
        if ($config['text_img2'] && !strstr($config['text_img2'], "http")) {
            $config['text_img2'] = ROOT_HOST . $config['text_img2'];
        }
        $config['remaintime'] = ($config['end'] - time()) * 1000;
        $config['begin'] = date("Y-m-d H:i:s", $config['begin']);
        $config['end'] = date("Y-m-d H:i:s", $config['end']);

        $config['fill_info'] = true;
        $config['is_vip'] = false;
        $record_num = $win_num = $share_num = $total_share_num = null;
        $config['userinfo'] = [];
        $prizesrecord = [];
        $config['user_jifen'] = 0;
        if ($suid) {
            $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            $user['realname'] = $user['truename'];
            $user['mobile'] = $user['phone'];
            $_user = $this->getnameandavatar($source, $uniacid, $suid);
            $user['nickname'] = $_user['nickname'];
            $user['avatar'] = $_user['avatar'];
            //用户是否是vip
            $config['is_vip'] = $user['vipid'];
            if ($config['is_vip']) {
                $config['is_vip'] = true;
            } else {
                $config['is_vip'] = false;
            }
            if (!$config['is_vip']) {
                if (empty($user['mobile']) || empty($user['address']) || empty($user['realname'])) {
                    $config['fill_info'] = false;
                }
            }
            $record_num = Db::name('wd_xcx_lottery_record')->where('uniacid', $uniacid)->where('suid', $user['id'])->whereTime('createtime', 'today')->count();
            $win_num = Db::name('wd_xcx_lottery_record')->where('uniacid', $uniacid)->where('suid', $user['id'])->where('aid', $aid)->where('status', 'in', [1, 2])->count();
            $share_num = Db::name('wd_xcx_lottery_share')->where('uniacid', $uniacid)->where('flag', 1)->where('suid', $user['id'])->whereTime('createtime', 'today')->count();
            $total_share_num = Db::name('wd_xcx_lottery_share')->where('uniacid', $uniacid)->where('flag', 1)->where('suid', $user['id'])->count();
            $config['userinfo'] = array(
                'id' => $user['id'],
                'realname' => $user['realname'],
                'mobile' => $user['mobile'],
                'address' => $user['address'],
                'avatar' => $user['avatar'],
                'nickname' => $user['nickname'],
            );
            $prizesrecord = Db::name('wd_xcx_staff_record')->where('uniacid', $uniacid)->where('operid', $user['id'])->where('type', 'NEQ', 1)->where('type', 'NEQ', 2)->whereTime('createtime', 'today')->select();
            $config['user_jifen'] = intval($user['score']);

        }
        if (empty($record_num)) {
            $record_num = 0;
        }
        if (empty($win_num)) {
            $win_num = 0;
        }
        if (empty($share_num)) {
            $share_num = 0;
        }
        if (empty($total_share_num)) {
            $total_share_num = 0;
        }
        $config['record_num'] = intval($record_num);
        $config['share_num'] = intval($share_num);
        $config['total_share_num'] = intval($total_share_num);
        $config['win_num'] = intval($win_num);

        $config['fail_img'] = ROOT_HOST . "/image/fail.png";
        $config['success_img'] = ROOT_HOST . "/image/success1.png";
        $config['deng_img'] = ROOT_HOST . "/image/deng.gif";


        $prizescount = 0;
        foreach ($prizesrecord as $key => $value) {
            $prizescount = $prizescount + intval($value['prize']);
        }

        $config['prizescount'] = intval($prizescount);

        $data['data'] = $config;
        return json_encode($data);
    }

    public function doPagedrawLottery()
    {
        $uniacid = input('uniacid');
        $aid = input('id');
        $suid = input('suid');
        //增加一次参与人数
        Db::name('wd_xcx_lottery_activity')->where('uniacid', $uniacid)->where('id', $aid)->setInc('participate');
        $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
        $activity = Db::name('wd_xcx_lottery_activity')->where('uniacid', $uniacid)->where('id', $aid)->find();
        $activity['base'] = unserialize($activity['base']);
        //扣除积分
        $jifen = array(
            'score' => floatval($user['score']) - floatval($activity['base']['jifen'])
        );
        $res = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $user['id'])->update($jifen);
        $delScore = [
            'uniacid' => $uniacid,
            'orderid' => '',
            'suid' => $suid,
            'score' => floatval($activity['base']['jifen']),
            'creattime' => time(),
            'type' => 'del',
            'message' => '抽奖使用积分'
        ];
        Db::name('wd_xcx_score')->insert($delScore);

        for ($i = 1; $i <= 8; $i++) {
            $temp = Db::name('wd_xcx_lottery_prize')->where('uniacid', $uniacid)->where('aid', $aid)->where('num', 'like', "%$i%")->field('id,title,chance,storage,types,detail')->find();
            if (!empty($temp)) {
                $prizes[$i] = $temp;
            } else {
                $empty[$i] = $i;
            }
        }
        $data = array(
            "uniacid" => $uniacid,
            "aid" => $aid,
            "suid" => $user['id'],
            "createtime" => time(),
            "status" => 0
        );
        //抽奖随机数
        $lucky = rand(1, 10000);
        //1~10000
        for ($i = 1; $i <= 10000; $i++) {
            $rand_array[$i] = 0;
        }
        $prizes2 = $prizes; //保存$prizes到后面使用
        $prizes_num = count($prizes);
        for ($i = 1; $i <= $prizes_num; $i++) {
            $index = array_rand($prizes, 1);
            $prize = $prizes[$index];        //从奖品中随机取出一个
            unset($prizes[$index]);        //取出后从数组中删除
            if ($prize['chance'] != 0) {
                $luckys = array_rand($rand_array, $prize['chance']);
                if (!is_array($luckys)) {
                    $luckys = array($luckys);
                }
                $in = in_array($lucky, $luckys);
                if ($in && $prize['storage'] > 0) {  //抽奖随机数在`10000个数中随机取出的chance个数`中,且奖品库存大于0
                    $prize['index'] = $index;
                    $prize['flag'] = true;
                    $data['pid'] = $prize['id'];
                    Db::name('wd_xcx_lottery_prize')->where('uniacid', $uniacid)->where('id', $prize['id'])->setDec('storage');
                    $u = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
                    if ($prize['types'] == '1') {
                        $newJifen = floatval($u['score']) + floatval($prize['detail']);
                        $getScore = [
                            'uniacid' => $uniacid,
                            'orderid' => '',
                            'suid' => $u['id'],
                            'score' => floatval($prize['detail']),
                            'creattime' => time(),
                            'type' => 'add',
                            'message' => '抽奖获得积分'
                        ];
                        Db::name('wd_xcx_score')->insert($getScore);
                        Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $u['id'])->update(['score' => $newJifen]);
                        $data['status'] = 2;
                    }
                    if ($prize['types'] == '2') {
                        $newYue = floatval($u['money']) + floatval($prize['detail']);
                        $getMoney = [
                            'uniacid' => $uniacid,
                            'orderid' => '',
                            'suid' => $u['id'],
                            'score' => floatval($prize['detail']),
                            'creattime' => time(),
                            'type' => 'add',
                            'message' => '抽奖获得金额'
                        ];
                        Db::name('wd_xcx_money')->insert($getMoney);
                        Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $u['id'])->update(['money' => $newYue]);
                        $data['status'] = 2;
                    }
                    if ($prize['types'] == '4') {
                        $coupon = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where('id', intval($prize['detail']))->find();
                        $coupon_user = array(
                            'uniacid' => $uniacid,
                            'suid' => $u['id'],
                            'cid' => $coupon['id'],
                            'ltime' => time(),
                            'btime' => $coupon['btime'],
                            'etime' => $coupon['etime'],
                            'flag' => 0,
                            'utime' => 0
                        );
                        Db::name('wd_xcx_coupon_user')->insert($coupon_user);
                        $data['status'] = 2;
                    }
                    if ($prize['types'] == '3') {
                        $data['status'] = 1;
                    }
                    Db::name('wd_xcx_lottery_record')->insert($data);
                    //增加一次中奖人数
                    Db::name('wd_xcx_lottery_activity')->where('uniacid', $uniacid)->where('id', $aid)->setInc('win');
                    $data['data'] = $prize;
                    return json_encode($data);
                }
            }
        }
        $prizes3 = $prizes2;
        $data2 = array(
            "uniacid" => $uniacid,
            "aid" => $aid,
            "suid" => $user['id'],
            "createtime" => time(),
            "status" => 0
        );
        if ($prizes_num == 8) {
            array_multisort(array_column($prizes2, 'chance'), SORT_DESC, $prizes2);
            for ($i = 1; $i <= count($prizes2); $i++) {
                if ($prizes2[$i] && $prizes2[$i]['storage'] > 0) {
                    $priz = $prizes2[$i];
                    for ($j = 1; $j <= count($prizes3); $j++) {
                        if ($priz['id'] == $prizes3[$j]['id']) {
                            $priz['index'] = $j;
                            break;
                        }
                    }
                    $priz['flag'] = true;
                    $data2['pid'] = $priz['id'];
                    Db::name('wd_xcx_lottery_prize')->where('uniacid', $uniacid)->where('id', $priz['id'])->setDec('storage');
                    $u = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
                    if ($priz['types'] == '1') {
                        $newJifen = floatval($u['score']) + floatval($priz['detail']);
                        Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $u['id'])->update(['score' => $newJifen]);
                        $data2['status'] = 2;
                    }
                    if ($priz['types'] == '2') {
                        $newYue = floatval($u['money']) + floatval($priz['detail']);
                        Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $u['id'])->update(['money' => $newYue]);
                        $data2['status'] = 2;
                    }
                    if ($priz['types'] == '4') {
                        $coupon = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where('id', intval($priz['detail']))->find();
                        $coupon_user = array(
                            'uniacid' => $uniacid,
                            'suid' => $u['id'],
                            'cid' => $coupon['id'],
                            'ltime' => time(),
                            'btime' => $coupon['btime'],
                            'etime' => $coupon['etime'],
                            'flag' => 0,
                            'utime' => 0
                        );
                        Db::name('wd_xcx_coupon_user')->insert($coupon_user);
                        $data2['status'] = 2;
                    }
                    if ($priz['types'] == '3') {
                        $data2['status'] = 1;
                    }
                    Db::name('wd_xcx_lottery_record')->insert($data2);
                    //增加一次中奖人数
                    Db::name('wd_xcx_lottery_activity')->where('uniacid', $uniacid)->where('id', $aid)->setInc('win');
                    $data['data'] = $priz;
                    return json_encode($data);
                }
            }
        }
        Db::name('wd_xcx_lottery_record')->insert($data);
        $data['data'] = array('flag' => false, 'empty' => array_rand($empty, 1));
        return json_encode($data);
    }

    public function doPagechangeUserinfo()
    {
        $uniacid = input('uniacid');
        $openid = input('openid');
        $suid = input('suid');
        $data = array(
            'truename' => input('name'),
            'phone' => input('mobile'),
            'address' => input('address')
        );
        Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update($data);
        $data['data'] = array('ok');
        return json_encode($data);
    }

    public function doPageshowThreeLucky()
    {
        $uniacid = input('uniacid');
        $id = input('id');
        $source = input('source');
        $threeRecord = Db::name('wd_xcx_lottery_record')->alias('a')->join('wd_xcx_lottery_prize b', 'a.pid = b.id')->join('wd_xcx_superuser c', 'a.suid = c.id')->where('a.uniacid', $uniacid)->where('a.aid', $id)->where('a.status', 'neq', 0)->field('b.detail,b.types,a.suid')->order('a.createtime desc')->limit(3)->select();
        if (empty($threeRecord)) {
            $prize = Db::name('wd_xcx_lottery_prize')->where('uniacid', $uniacid)->where('aid', $id)->where('num', 'neq', '')->order('chance desc')->find();
            if ($prize['types'] == '4') {
                $coupon = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where('id', intval($prize['detail']))->find();
                $prize['detail'] = $coupon['title'];
            }
            for ($i = 0; $i <= 2; $i++) {
                $threeRecord[$i]['types'] = $prize['types'];
                $threeRecord[$i]['detail'] = $prize['detail'];
            }
            $threeRecord[0]['nickname'] = "王**";
            $threeRecord[1]['nickname'] = "m**";
            $threeRecord[2]['nickname'] = "s**";
        } else {
            foreach ($threeRecord as $key => &$value) {
                $_user = $this->getnameandavatar($source, $uniacid, $value['suid']);
                $value['nickname'] = $_user['nickname'];
                if ($value['types'] == '4') {
                    $coupon = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where('id', intval($value['detail']))->find();
                    $value['detail'] = $coupon['title'];
                }
            }
        }
        $data['data'] = $threeRecord;
        return json_encode($data);
    }

    public function doPagegetRecordList()
    {
        $uniacid = input('uniacid');
        $id = input('id');
        $suid = input('suid');
        $source = input('source');
        $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
        $user['realname'] = $user['truename'];
        $_user = $this->getnameandavatar($source, $uniacid, $suid);
        $user['nickname'] = $_user['nickname'];
        $user['avatar'] = $_user['avatar'];
        $records = Db::name('wd_xcx_lottery_record')->alias('a')->join('wd_xcx_lottery_prize b', 'a.pid = b.id')->where('a.uniacid', $uniacid)->where('a.aid', $id)->where('a.suid', $user['id'])->where('a.status', 'neq', 0)->order('a.createtime desc')->field('a.status,a.createtime,b.detail,b.types')->select();
        foreach ($records as $key => &$value) {
            if ($value['types'] == '1') {
                $value['detail'] .= '积分';
            }
            if ($value['types'] == '2') {
                $value['detail'] .= '元';
            }
            if ($value['types'] == '4') {

                $value['detail'] = "优惠券-" . Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where('id', $value['detail'])->value('title');
            }
            $value['createtime'] = date("Y-m-d H:i:s", $value['createtime']);
        }

        $data['data'] = array("records" => $records, "userinfo" => $user);
        return json_encode($data);
    }

    public function doPagegetPrizeList()
    {
        $uniacid = input('uniacid');
        $id = input('id');
        for ($i = 1; $i <= 8; $i++) {
            $temp = Db::name('wd_xcx_lottery_prize')->where('uniacid', $uniacid)->where('aid', $id)->where('num', 'like', "%$i%")->find();
            if ($temp) {
                $prizes[] = $temp;
            }
        }
        foreach ($prizes as $key => &$value) {
            if ($value['thumb']) {
                $value['thumb'] = remote($uniacid, $value['thumb'], 1);
            }
            if ($value['types'] == '1') {
                $value['detail'] .= '积分';
            }
            if ($value['types'] == '2') {
                $value['detail'] .= '元';
            }
            if ($value['types'] == '4') {
                $c = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where('id', $value['detail'])->find();
                $value['detail'] = $c['title'];
            }
        }
        array_multisort(array_column($prizes, 'chance'), SORT_ASC, $prizes);
        $data['data'] = $prizes;
        return json_encode($data);
    }

    public function doPagegetPrizes()
    {
        $uniacid = input('uniacid');
        $id = input('id');
        //每进入一次只会请求一次，所以可以作为浏览量的依据
        $result = Db::name('wd_xcx_lottery_activity')->where('uniacid', $uniacid)->where('id', $id)->setInc('browse');
        $prizes = [];
        for ($i = 1; $i <= 8; $i++) {
            $prizes[$i] = Db::name('wd_xcx_lottery_prize')->where('uniacid', $uniacid)->where('aid', $id)->where('num', 'like', "%$i%")->find();
            if (!$prizes[$i]) {
                $prizes[$i]['detail'] = "";
                $prizes[$i]['thumb'] = "";
                $prizes[$i]['types'] = "";
            }
        }
        $a = request()->domain();
        foreach ($prizes as $key => &$value) {
            if ($value['thumb']) {
                $value['thumb'] = remote($uniacid, $value['thumb'], 1);
            }
            if ($value['types'] == '1') {
                $value['detail'] .= '积分';
            }
            if ($value['types'] == '2') {
                $value['detail'] .= '元';
            }
            if ($value['types'] == '4') {
                $c = Db::name('wd_xcx_coupon')->where('uniacid', $uniacid)->where('id', $value['detail'])->find();
                $value['detail'] = $c['title'];
            }
        }
        $data['data'] = $prizes;
        return json_encode($data);
    }

    //增加分享次数
    public function doPageaddsharenum()
    {
        $uniacid = input('uniacid');
        $id = input('id');
        Db::name('wd_xcx_lottery_activity')->where('uniacid', $uniacid)->where('id', $id)->setInc('share');
        $data['data'] = array('ok');
        return json_encode($data);
    }

    //获取积分规则
    public function doPagescoreget()
    {
        $uniacid = input('uniacid');
        $guiz = Db::name('wd_xcx_score_get')->where('uniacid', $uniacid)->order('id asc')->select();
        $data['data'] = array("guiz" => $guiz);
        return json_encode($data);
    }
    //修改会员信息
    //摇一摇相关结束

    //获取会员卡申请页表单
    public function doPageRegisterFrom()
    {
        $uniacid = input('uniacid');
        $openid = input('openid');
        $suid = input('suid');
        $is_apply = Db::name('wd_xcx_vip_apply')->where('uniacid', $uniacid)->where('suid', $suid)->where('flag', 2)->order('id desc')->field('beizhu')->find();
        if ($is_apply) {
            $data['beizhu'] = $is_apply['beizhu'];
        } else {
            $data['beizhu'] = "";
        }
        $is = Db::name('wd_xcx_vip_config')->where('uniacid', $uniacid)->field('formid,form_status')->find();
        if ($is) {
            $formid = $is['formid'];
        } else {
            $formid = 0;
        }
        if ($formid > 0) {
            $forminfo = Db::name('wd_xcx_formlist')->where('id', $formid)->find();
            $form2 = "";
            $data['formdescs'] = $forminfo['descs'];
            if ($forminfo) {
                $forms2 = unserialize($forminfo['tp_text']);
            }
            if ($forms2) {
                $tp_text = [];
                foreach ($forms2 as $key => &$res) {
                    if ($key > 0) {
                        $tp_key = $key - 1;
                        if ($res['required'] == true) {
                            $tp_text[$tp_key]['ismust'] = 1;
                        } else {
                            $tp_text[$tp_key]['ismust'] = 0;
                        }
                        $tp_text[$tp_key]['name'] = $res['label'];
                        if ($res['field_type'] == '单行文本') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0]['yval'] = 0;
                        } else if ($res['field_type'] == '多行文本') {
                            $tp_text[$tp_key]['type'] = 1;
                            $tp_text[$tp_key]['tp_text'] = '';
                        } else if ($res['field_type'] == '多选' || $res['field_type'] == '单选') {
                            if ($res['field_type'] == '多选') {
                                $tp_text[$tp_key]['type'] = 3;
                            } else {
                                $tp_text[$tp_key]['type'] = 4;
                            }
                            foreach ($res['field_options']['options'] as $key1 => &$rec1) {
                                $rec1['yval'] = $rec1['label'];
                                unset($rec1['label']);
                            }
                            $tp_text[$tp_key]['tp_text'] = $res['field_options']['options'];
                        } else if ($res['field_type'] == '下拉选') {
                            $tp_text[$tp_key]['type'] = 2;
                            $tp_text[$tp_key]['tp_text'] = [];
                            foreach ($res['field_options']['options'] as $key2 => &$rec2) {
                                array_push($tp_text[$tp_key]['tp_text'], $rec2['label']);
                            }
                        } else if ($res['field_type'] == '日期') {
                            $tp_text[$tp_key]['type'] = 7;
                        } else if ($res['field_type'] == '时间') {
                            $tp_text[$tp_key]['type'] = 11;
                        } else if ($res['field_type'] == '图片') {
                            $tp_text[$tp_key]['type'] = 5;
                            $tp_text[$tp_key]['tp_text'] = $res['field_options']['maxpic'];
                            $tp_text[$tp_key]['z_val'] = array();
                        } else if ($res['field_type'] == '手机号') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0]['yval'] = 1;
                        } else if ($res['field_type'] == '身份证') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0]['yval'] = 7;
                        }
                        $tp_text[$tp_key]['val'] = '';
                    }
                }
            }
            $data['form'] = $tp_text;
            $data['flag'] = 1;
            $data['fid'] = $formid;
            $data['form_status'] = $is['form_status'];

        } else {
            $data['form'] = [];
            $data['flag'] = 2;
            $data['formdescs'] = "";
            $data['fid'] = 0;
            $data['form_status'] = 1;
        }
        $result['data'] = $data;
        return json_encode($result);
    }

    //手机号自动获取时的sessionkey
    public function doPagegetNewSessionkey()
    {
        $uniacid = input('uniacid');
        $app = Db::name('wd_xcx_applet')->where("id", $uniacid)->find();
        $appid = $app['appID'];
        $appsecret = $app['appSecret'];
        $code = input('code');
        $url = "https://api.weixin.qq.com/sns/jscode2session?appid=" . $appid . "&secret=" . $appsecret . "&js_code=" . $code . "&grant_type=authorization_code";
        $weixin = file_get_contents($url);
        $jsondecode = json_decode($weixin); //对JSON格式的字符串进行编码
        $array = get_object_vars($jsondecode);//转换成数组
        $sessionKey = $array['session_key'];
        $result['data'] = $sessionKey;
        return json_encode($result);
    }

    public function dopagejiemiNew()
    {
        $uniacid = input('uniacid');
        $app = Db::name('wd_xcx_applet')->where("id", $uniacid)->find();
        $appid = $app['appID'];
        $sessionKey = input('newSessionKey');
        $encryptedData = input('encryptedData');
        $iv = input('iv');
        include_once "wxBizDataCrypt.php";
        $pc = new WXBizDataCrypt($appid, $sessionKey);
        $errCode = $pc->decryptData($encryptedData, $iv, $data);
        $arrdata = json_decode($data, TRUE);
        $tel = $arrdata['phoneNumber'];
        $result['data'] = $tel;
        return json_encode($result);
    }

    // 点击确认收货按钮（秒杀）
    public function dopagedanshouhuo()
    {
        $uniacid = input('uniacid');
        $orderid = input('orderid');
        $suid = input('suid');
        $adata = array(
            "custime" => time(),
            "flag" => 2
        );
        Db::name('wd_xcx_order')->where("order_id", $orderid)->update($adata);

        $info = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->find();
        add_all_pay($uniacid, $info['true_price'], $suid);
        check_vip_grade($uniacid, $suid);

        if($info['source'] == 1){
            $openid = Db::name("wd_xcx_user")->where("suid", $suid)->value('openid');
            $jsons = [
                'fprice' => $info['true_price']
            ];
            $jsons = serialize($jsons);
            sendSubscribe($uniacid, 2, $openid, $jsons);
        }

        $fxsorder = Db::name("wd_xcx_fx_ls")->where("uniacid", $uniacid)->where("order_id", $orderid)->find();
        if ($fxsorder) {
            $this->dopagegivemoney($uniacid, $suid, $orderid);
        }
    }

    // 点击确认收货按钮（拼团）
    public function doPageptshouhuo()
    {
        $uniacid = input('uniacid');
        $orderid = input('orderid');
        $suid = input('suid');
        $adata = array(
            "flag" => 2
        );
        Db::name('wd_xcx_pt_order')->where("order_id", $orderid)->update($adata);
        $fxsorder = Db::name("wd_xcx_fx_ls")->where("uniacid", $uniacid)->where("order_id", $orderid)->find();
        $ptorder = Db::name("wd_xcx_pt_order")->where("uniacid", $uniacid)->where("order_id", $orderid)->find();
        $allprice = $ptorder['yue_price'] + $ptorder['wx_price'];
        add_all_pay($uniacid, $allprice, $suid);
        check_vip_grade($uniacid, $suid);
        $openid = Db::name("wd_xcx_user")->where("suid", $suid)->value('openid');
        $jsons = [
            'fprice' => $ptorder['price']
        ];
        $jsons = serialize($jsons);
        sendSubscribe($uniacid, 2, $openid, $jsons);
        if ($fxsorder) {
            $this->dopagegivemoney($uniacid, $suid, $orderid);
        }
    }

    public function doPagegetduoOrderDetail()
    {
        $uniacid = input('uniacid');
        $order_id = input('order_id');
        $order = Db::name('wd_xcx_duo_products_order')->where("uniacid", $uniacid)->where("order_id", $order_id)->find();
        $order['store_info'] = $order['store_info'] ? unserialize($order['store_info']) : '';

        $order['jsondata'] = unserialize($order['jsondata']);
        $hjjg = 0;

        foreach ($order['jsondata'] as $key => &$value) {

            if ($value['baseinfo']) {

                if ($value['baseinfo']['thumb'] && !strstr($value['baseinfo']['thumb'], "http")) {
                    $order['thumb'] = remote($uniacid, $value['baseinfo']['thumb'], 1);
                }
            }
            if ($value['proinfo']) {
                if ($value['proinfo']['thumb'] && !strstr($value['proinfo']['thumb'], "http")) {
                    $order['thumb'] = remote($uniacid, $value['proinfo']['thumb'], 1);
                    $value['proinfo']['thumb'] = remote($uniacid, $value['proinfo']['thumb'], 1);
                }
            }
            $hjjg += floatval($value['proinfo']['price']) * $value['num'];
            $order['num'] = $value['num'];
        }

        $order['hjjg'] = $hjjg;
        if ($order['address'] > 0) {
            $order['addressinfo'] = Db::name('wd_xcx_duo_products_address')->where("id", $order['address'])->find();
        }

        if ($order['coupon']) {
            $coupon_user = Db::name('wd_xcx_coupon_user')->where("uniacid", $uniacid)->where("id", $order['coupon'])->find();
            $order['couponinfo'] = Db::name('wd_xcx_coupon')->where("uniacid", $uniacid)->where("id", $coupon_user['cid'])->find();
        }

        if ($order['jf'] > 0) {
            $rechargeConf = Db::name('wd_xcx_rechargeconf')->where("uniacid", $uniacid)->find();
            $order['jf_money'] = intval($order['jf'] * $rechargeConf['money'] / $rechargeConf['score']);
        }

        $order['pay_yue'] = round($order['price'] - $order['payprice'], 2);
        $order['creattime'] = date("Y-m-d H:i:s", $order['creattime']);
        $order['true_price'] = $order['payprice'] * 1 + $order['pay_yue'] * 1;
        $order['seller_tel'] = Db::name('wd_xcx_base')->where("uniacid", $uniacid)->field("tel")->find()['tel'];
        if (!empty($order['yhinfo'])) {
            $yhInfo = unserialize($order['yhinfo']);
            $order['yhInfo_yunfei'] = $yhInfo['yunfei'];
            $order['yhInfo_score'] = $yhInfo['score'];
            $order['yhInfo_yhq'] = $yhInfo['yhq'];
            $order['yhInfo_mj'] = $yhInfo['mj'];
        } else {
            if ($order['sid'] != 0) {
                $order['yhInfo_yunfei'] = '';
                $order['yhInfo_score'] = '';
                $order['yhInfo_yhq'] = '';
                $order['yhInfo_mj'] = '';
            } else {
                $order['yhInfo_yunfei'] = 0;
                if ($order['dkscore'] > 0) {
                    $jfgz = Db::name('sudu8_page_rechargeconf')->where('uniacid', $uniacid)->find();
                    $order['yhInfo_score']['msg'] = $order['jf'] . "积分抵扣" . floatval($order['jf']) * floatval($jfgz['money']) / floatval($jfgz['scroe']);
                    $order['yhInfo_score']['money'] = floatval($order['jf']) * floatval($jfgz['money']) / floatval($jfgz['scroe']);
                } else {
                    $order['yhInfo_score']['msg'] = "未使用积分";
                    $order['yhInfo_score']['money'] = 0;
                }
                if ($order['couponinfo']) {
                    $order['yhInfo_yhq']['msg'] = $order['couponinfo']['title'];
                    $order['yhInfo_yhq']['money'] = $order['couponinfo']['price'];
                } else {
                    $order['yhInfo_yhq']['msg'] = "未使用优惠券";
                    $order['yhInfo_yhq']['money'] = 0;
                }
                $order['yhInfo_mj']['msg'] = "";
                $order['yhInfo_mj']['money'] = 0;
            }
        }

        $result['data'] = $order;

        return json_encode($result);
    }


    //秒杀订单详情页
    public function doPagegetOrderDetail()
    {
        $uniacid = input('uniacid');
        $order_id = input('order_id');
        $suid = input('suid');
        $order = Db::name('wd_xcx_order')->where("uniacid", $uniacid)->where("order_id", $order_id)->find();
        $order['store_info'] = $order['store_info'] ? unserialize($order['store_info']) : '';
        $order['hjjg'] = $order['price'] * $order['num'];
        if ($order['thumb'] && !strstr($order['thumb'], "http")) {
            $order['thumb'] = remote($uniacid, $order['thumb'], 1);
        }
        if($order['m_address']){
            $order['addressinfo'] = unserialize($order['m_address']);
        }else if ($order['address'] > 0) {
            $order['addressinfo'] = Db::name('wd_xcx_duo_products_address')->where("id", $order['address'])->find();
        }
        if($order['self_taking_info']){
            $order['self_taking_info'] = unserialize($order['self_taking_info']);
            $order['self_taking_info']['self_taking_shop_info'] = unserialize($order['self_taking_info']['self_taking_shop_info']);
        }
        if ($order['coupon']) {
            $coupon_user = Db::name('wd_xcx_coupon_user')->where("uniacid", $uniacid)->where("id", $order['coupon'])->find();
            $order['couponinfo'] = Db::name('wd_xcx_coupon')->where("uniacid", $uniacid)->where("id", $coupon_user['cid'])->find();
        }
        if ($order['dkscore'] > 0) {
            $rechargeConf = Db::name('wd_xcx_rechargeconf')->where("uniacid", $uniacid)->find();
            $order['jf_money'] = intval($order['dkscore'] * $rechargeConf['money'] / $rechargeConf['score']);
        }
        $order['pay_yue'] = round($order['true_price'] - $order['pay_price'], 2);
        $order['creattime'] = date("Y-m-d H:i:s", $order['creattime']);
        $order['seller_tel'] = Db::name('wd_xcx_base')->where("uniacid", $uniacid)->field("tel")->find()['tel'];
        if (!empty($order['yhinfo'])) {
            $yhInfo = unserialize($order['yhinfo']);
            $order['yhInfo_yunfei'] = $yhInfo['yunfei'];
            $order['yhInfo_score'] = $yhInfo['score'];
            $order['yhInfo_yhq'] = $yhInfo['yhq'];
            $order['yhInfo_mj'] = $yhInfo['mj'];
        } else {
            $order['yhInfo_yunfei'] = 0;
            if ($order['dkscore'] > 0) {
                $jfgz = pdo_get("sudu8_page_rechargeconf", array("uniacid" => $uniacid));
                $order['yhInfo_score']['msg'] = $order['dkscore'] . "积分抵扣" . floatval($order['dkscore']) * floatval($jfgz['money']) / floatval($jfgz['scroe']);
                $order['yhInfo_score']['money'] = floatval($order['dkscore']) * floatval($jfgz['money']) / floatval($jfgz['scroe']);
            } else {
                $order['yhInfo_score']['msg'] = "未使用积分";
                $order['yhInfo_score']['money'] = 0;
            }
            if ($order['couponinfo']) {
                $order['yhInfo_yhq']['msg'] = $order['couponinfo']['title'];
                $order['yhInfo_yhq']['money'] = $order['couponinfo']['price'];
            } else {
                $order['yhInfo_yhq']['msg'] = "未使用优惠券";
                $order['yhInfo_yhq']['money'] = 0;
            }
            $order['yhInfo_mj']['msg'] = "";
            $order['yhInfo_mj']['money'] = 0;
        }

        $result['data']['detail'] = $order;
        $result['data']['mymoney'] = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where("id", $suid)->value('money');
        return json_encode($result);
    }

    //新版取消订单（秒杀）
    public function doPagemiaoshatk()
    {
        $uniacid = input('uniacid');
        $order_id = input('order_id');
        $formId = input('formId');
        if ($order_id && $order_id != 'undefined') {
            Db::name('wd_xcx_order')->where("uniacid", $uniacid)->where("order_id", $order_id)->update(array("flag" => 6, "qx_formid" => $formId));
            $data = array("flag" => 0, "message" => "申请成功！");
            $result = [];
            $result['data'] = $data;
            return json_encode($result);
        } else {
            $mobile = Db::name('wd_xcx_base')->where("uniacid", $uniacid)->field("tel")->find()['tel'];
            $data = array("flag" => 1, "message" => "取消订单申请失败", "mobile" => $mobile);
            $result = [];
            $result['data'] = $data;
        }
        return json_encode($result);
    }

    //商品详情显示
    public function doPageshowPro11()
    {
        $uniacid = input('uniacid');
        $id = intval(input('id'));
        $type = input('types') ? input('types') : 'showPro';
        $pro = Db::name('wd_xcx_products')->where('id', $id)->where('uniacid', $uniacid)->find();
        // if ($pro['stores']) {
        //     $stores = explode(',', $pro['stores']);
        //     $stores_info = [];
        //     $i = 0;
        //     foreach ($stores as $vsi) {
        //         $info = Db::name('wd_xcx_store')->where("uniacid", $uniacid)->where('id', $vsi)->field("id, title, tel, province, city, country, times")->find();
        //         if ($info) {
        //             $stores_info[$i] = $info;
        //             $i++;
        //         }
        //     }
        //     $pro['stores'] = count($stores_info) > 0 ? $stores_info : '';
        // } else {
        //     $pro['stores'] = '';
        // }
        $videourl = $pro['video'];
        if ($pro['video'] != '') {
            if (strpos($videourl, ".mp4") !== false || strpos($videourl, ".MP4") !== false) {
                $pro['video'] = $videourl;
            } else {
                include 'videoInfo.php';
                $videoInfo = new videoInfo();
                if (preg_match("/^(http:\/\/|https:\/\/).*$/", $pro['video'])) {
                    $videodata = $videoInfo->getVideoInfo($pro['video']);
                    $pro['video'] = $videodata['url'];
                } else {
                    $pro['video'] = '';
                }
            }
        }
        $pro['is_saletwo'] = $pro['is_sale'];
        $pro['sale_end_time_copy'] = $pro['sale_end_time'];
        $pro['sale_end_time'] = intval($pro['sale_end_time']);
        if ($pro['sale_end_time'] != 0) {
            $pro['sale_end_time'] = $pro['sale_end_time'] - time();
            if ($pro['sale_end_time'] < 0) {
                $pro['sale_end_time'] = 0;
            }
        }

        if ($pro['sale_time'] > time()) {
            $pro['timetobegin'] = ($pro['sale_time'] - time()) * 1000;
        } else {
            $pro['timetobegin'] = 0;
        }
        if (input('orderid')) {
            $pro['order_num'] = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', input('orderid'))->field('num')->find();
            $pro['order_num'] = intval($pro['order_num']['num']);
            $pro['nav'] = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', input('orderid'))->field('nav')->find();
            $pro['nav'] = $pro['nav']['nav'];
        }
        $data = array(
            'hits' => $pro['hits'] + 1,
        );
        Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $id)->update($data);
        $pro['text'] = $pro['text'] ? unserialize($pro['text']) : [];
        $num = count($pro['text']);
        for ($i = 0; $i < $num; $i++) {
            $pro['text'][$i] = remote($uniacid, $pro['text'][$i], 1);
        }

        //20170925  新增我的购买量
        $suid = input('suid');
        $pro['userinfo'] = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->field('money, score, vipid')->find();
        $myorders = Db::name('wd_xcx_order')->where('pid', $id)->where('suid', $suid)->where('uniacid', $uniacid)->where('flag', 'EGT', 0)->select();
        $my_num = 0;
        //判断我又没有收藏过
        $collectcount = 0;
        if ($suid) {
            $collect = Db::name('wd_xcx_collect')->where('uniacid', $uniacid)->where('suid', $suid)->where('type', $type)->where('cid', $id)->count();

            if ($collect > 0) {
                $collectcount = 1;
            }
        }
        $pro['collectcount'] = $collectcount;
        //判断我有没有收藏过
        $collectcount = 0;
        //刷新所有商品已过期订单且未支付
        if ($pro['pro_kc'] >= 0 && $pro['is_more'] == 0) {
            $now = time();
            $onum = 0;
            $allorders = Db::name('wd_xcx_order')->where('pid', $id)->where('uniacid', $uniacid)->where('flag', 0)->where('overtime', 'lt', $now)->select();
            if ($allorders) {
                foreach ($allorders as $rec) {
                    $onum += $rec['num'];
                    $kdata['flag'] = -1;
                    $kdata['reback'] = 1;
                    Db::name('wd_xcx_order')->where('order_id', $rec['order_id'])->where('uniacid', $uniacid)->update($kdata);
                }
                $ndata['pro_kc'] = $pro['pro_kc'] + $onum;
                $ndata['sale_tnum'] = $pro['sale_tnum'] - $onum;
                Db::name('wd_xcx_products')->where('id', $id)->where('uniacid', $uniacid)->update($ndata);
            }
        } else if ($pro['pro_kc'] < 0 && $pro['is_more'] == 0) {
            $now = time();
            $allorders = Db::name('wd_xcx_order')->where('pid', $id)->where('uniacid', $uniacid)->where('flag', 0)->where('overtime', 'lt', $now)->select();
            if ($allorders) {
                foreach ($allorders as $rec) {
                    $onum += $rec['num'];
                    $kdata['flag'] = -1;
                    $kdata['reback'] = 1;
                    // pdo_update('sudu8_page_order', $kdata, array('order_id' => $rec['order_id'] ,'uniacid' => $uniacid));
                    Db::name('wd_xcx_order')->where('order_id', $rec['order_id'])->where('uniacid', $uniacid)->update($kdata);
                }
                $ndata['sale_tnum'] = $pro['sale_tnum'] - $onum;
                Db::name('wd_xcx_products')->where('id', $id)->where('uniacid', $uniacid)->update($ndata);
            }
        }





        if ($myorders) {
            foreach ($myorders as $res) {
                $my_num += $res['num'];
            }
        }
        $pro['my_num'] = $my_num;
        $now = time();
        if ($pro['sale_time'] == 0) {
            $pro['is_sale'] = 1;
        } else {
            if ($pro['sale_time'] > $now) {
                $pro['is_sale'] = 0;
            } else {
                $pro['is_sale'] = 1;
            }
        }

        $pro['thumb'] = remote($uniacid, $pro['thumb'], 1);
        if ($pro['labels'] && $pro['is_more'] == 0) {
            $labels = explode(",", $pro['labels']);
            $pro['labels'] = $labels;
        } elseif ($pro['labels'] && $pro['is_more'] == 1) {
            $labels = unserialize($pro['labels']);
            $arrkk = array();
            foreach ($labels as $key => $res) {
                $vvkk = array($key, $res);
                array_push($arrkk, $vvkk);
            }
            $pro['labels'] = $arrkk;
        } else {
            $pro['labels'] = '';
        }
        if ($pro['more_type']) {
            $more_type = unserialize($pro['more_type']);
            $newmore = array_chunk($more_type, 4);
            $pro['more_type'] = $newmore;
        }
        if ($pro['more_type_x']) {
            $more_type_x = unserialize($pro['more_type_x']);
            $pro['more_type_x'] = $more_type_x;
        }
        if ($pro['more_type_num']) {
            $more_type_num = unserialize($pro['more_type_num']);
            $pro['more_type_num'] = $more_type_num;
        }

        if ($pro['pro_flag_data_name']) {
            $pro['pro_flag_data_name'] = explode(";", $pro['pro_flag_data_name']);
            if (count($pro['pro_flag_data_name']) > 3) {
                $pro['afterdays'] = intval($pro['pro_flag_data_name'][1]);
                $pro['beforedays'] = intval($pro['pro_flag_data_name'][2]);
                $pro['modifydays'] = intval($pro['pro_flag_data_name'][3]);
                if ($pro['afterdays'] > 0) {
                    $pro['start_date'] = date("Y-m-d", time() + $pro['afterdays'] * 3600 * 24);
                }
            }

            $pro['pro_flag_data_name'] = $pro['pro_flag_data_name'][0];

        }
        $formset = $pro['formset'];
        if ($formset != 0 && $formset != "") {
            $forms = Db::name('wd_xcx_formlist')->where('id', $formset)->find();
            $forms2 = unserialize($forms['tp_text']);
            $pro['formdescs'] = $forms['descs'];
            $tp_text = [];
            if ($forms2) {
                foreach ($forms2 as $key => &$res) {
                    if ($key > 0) {
                        $tp_key = $key - 1;
                        if ($res['required'] == true) {
                            $tp_text[$tp_key]['ismust'] = 1;
                        } else {
                            $tp_text[$tp_key]['ismust'] = 0;
                        }
                        $tp_text[$tp_key]['name'] = $res['label'];
                        if ($res['field_type'] == '单行文本') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0]['yval'] = 0;
                        } else if ($res['field_type'] == '多行文本') {
                            $tp_text[$tp_key]['type'] = 1;
                            $tp_text[$tp_key]['tp_text'] = '';
                        } else if ($res['field_type'] == '多选' || $res['field_type'] == '单选') {
                            if ($res['field_type'] == '多选') {
                                $tp_text[$tp_key]['type'] = 3;
                            } else {
                                $tp_text[$tp_key]['type'] = 4;
                            }
                            foreach ($res['field_options']['options'] as $key1 => &$rec1) {
                                $rec1['yval'] = $rec1['label'];
                                unset($rec1['label']);
                            }
                            $tp_text[$tp_key]['tp_text'] = $res['field_options']['options'];
                        } else if ($res['field_type'] == '下拉选') {
                            $tp_text[$tp_key]['type'] = 2;
                            $tp_text[$tp_key]['tp_text'] = [];
                            foreach ($res['field_options']['options'] as $key2 => &$rec2) {
                                array_push($tp_text[$tp_key]['tp_text'], $rec2['label']);
                            }
                        } else if ($res['field_type'] == '日期') {
                            $tp_text[$tp_key]['type'] = 7;
                        } else if ($res['field_type'] == '时间') {
                            $tp_text[$tp_key]['type'] = 11;
                        } else if ($res['field_type'] == '图片') {
                            $tp_text[$tp_key]['type'] = 5;
                            $tp_text[$tp_key]['tp_text'] = $res['field_options']['maxpic'];
                            $tp_text[$tp_key]['z_val'] = array();
                        } else if ($res['field_type'] == '手机号') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0]['yval'] = 1;
                        } else if ($res['field_type'] == '身份证') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0]['yval'] = 7;
                        }
                        $tp_text[$tp_key]['val'] = '';
                    }
                }
            }
        } else {
            $tp_text = "NULL";
            $pro['formdescs'] = '';
        }

        $pro['forms'] = $tp_text;

        $xsl = $pro['sale_num'] + $pro['sale_tnum'];

        if($xsl == 0){
            $detail_buyuser = [
                [
                    'nickname' => '用户***',
                    'avatar' => ROOT_HOST . STATIC_ROOT . '/image/static/pay_list_person.png'
                ]
            ];
        }else{
            $detail_buyuser = $this->detail_buyuser($uniacid, $id, $pro['sale_num'], 'flashsale');
        }
        $pro['detail_buyuser'] = $detail_buyuser;
        $source = input('source');
        $pro['detail_evaluate'] = $this->detail_evaluate($uniacid, $id, $source);

        // 获取会员开启设置
        // if(empty($pro['userinfo']['vipid'])){

        //     if(!empty($pro['vipconfig'])){
        //         $vipconfig = unserialize($pro['vipconfig']);

        //         if($vipconfig['set1'] == 1){
        //             $pro['vip_config'] = $vipconfig['set2'];
        //         }else{
        //             $vip_config = Db::name('wd_xcx_vip_config')->where("uniacid", $uniacid)->find();
        //             if(!empty($vip_config)){
        //                 $pro['vip_config'] = $vip_config['miaosha'];
        //             }
        //         }
        //     }else{
        //         $vip_config = Db::name('wd_xcx_vip_config')->where("uniacid", $uniacid)->find();
        //         if(!empty($vip_config)){
        //             $pro['vip_config'] = $vip_config['miaosha'];
        //         }
        //     }
        // }

        $pro['data'] = $pro;
        return json_encode($pro);
    }
    public function detail_evaluate($uniacid, $pid, $source)
    {
        $count = Db::name('wd_xcx_evaluate')->where('uniacid', $uniacid)->where('pid', $pid)->where('type', 'miaosha')->count();
        $val = '';
        if($count > 0){
            $val = Db::name('wd_xcx_evaluate')->where('uniacid', $uniacid)->where('pid', $pid)->where('type', 'miaosha')->order('id desc')->field('creattime, suid, imgs, content')->find();
            $val['creattime'] = date('Y-m-d', strtotime($val['creattime']));
            $info = $this->getnameandavatar($source, $uniacid, $val['suid']);
            $val['nickname'] = $info['nickname'];
            $val['avatar'] = $info['avatar'];

            if(!empty($val['imgs'])){
                $imgs = unserialize($val['imgs']);
                foreach ($imgs as &$v) {
                    $v = remote($uniacid, $v, 1);
                }
                $val['imgs'] = $imgs;
            }
        }
        $result = [
            'count' => $count,
            'info' => $val,
        ];
        return $result;
    }
    //秒杀购买人头像
    public function detail_buyuser($uniacid, $pid, $xn_num, $type){
        if($type == 'flashsale'){
            $list = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('pid', $pid)->where('is_more', 0)->field('suid, source')->order('id desc') ->limit(6)->select();
        }else if($type == 'bargain'){
            $list = Db::name('wd_xcx_bargain_order')->where('uniacid', $uniacid)->where('pid', $pid)->field('suid, source')->order('id desc') ->limit(6)->select();
        }

        $buyuser = [];
        if(count($list)>=6){
            foreach ($list as $k => &$v) {
                $info = $this->getnameandavatar($v['source'], $uniacid, $v['suid']);
                $buyuser[$k]['nickname'] = $info['nickname'];
                $buyuser[$k]['avatar'] = $info['avatar'];
            }
        }else{
            $num = count($list) + $xn_num;
            foreach ($list as $k => &$v) {
                $info = $this->getnameandavatar($v['source'], $uniacid, $v['suid']);
                $buyuser[$k]['nickname'] = $info['nickname'];
                $buyuser[$k]['avatar'] = $info['avatar'];
            }
            if($num <= 6){
                $num = $xn_num;
            }else{
                $num = 6 - count($list);
            }

            for($i=0; $i<$num; $i++){
                $temp = [
                    'nickname' => '用户***',
                    'avatar' => ROOT_HOST . STATIC_ROOT . '/image/static/avatar'.$i.'.png'
                ];
                array_push($buyuser, $temp);
            }

        }

        return $buyuser;
    }

    //秒杀商品积分抵扣
    public function doPagescoreDeduction()
    {
        $uniacid = input('uniacid');
        $suid = input('suid');
        $id = input('id');
        $num = input('num');
        $proinfo = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $id)->field('is_more')->find();
        if ($proinfo['is_more']) {
            $score_max = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $id)->field('score_num')->find();
            $score_max['score'] = $score_max['score_num'];
        } else {
            $score_max = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $id)->field('score')->find();
        }
        $score_max = intval($score_max['score']) * intval($num);
        if ($score_max == null || $score_max == 0) {
            $moneycl = 0;
            $jf = 0;
            $gzscore = 0;
            $gzmoney = 0;
        } else {
            //积分转换成金钱
            $jf_gz = Db::name('wd_xcx_rechargeconf')->where('uniacid', $uniacid)->find();
            if (!$jf_gz) {
                $gzscore = 100;
                $gzmoney = 1;
            } else {
                $gzscore = intval($jf_gz['score']);
                $gzmoney = intval($jf_gz['money']);
            }
            $score = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->field('score')->find();
            $score = $score['score'];
            if ($score_max && $score >= $score_max) {
                $zhmoney = ($score_max * $gzmoney) / $gzscore;
            } else {
                $zhmoney = ($score * $gzmoney) / $gzscore;
            }
            $moneycl = floor($zhmoney);
            $jf = $moneycl * $gzscore;
        }
        $data = array("moneycl" => $moneycl, "jf" => $jf, "gzscore" => $gzscore, "gzmoney" => $gzmoney);
        return json_encode($data);
    }

    public function doPagegetmoneyoff()
    {
        $uniacid = input('uniacid');
        $moneyoff = Db::name('wd_xcx_moneyoff')->where('uniacid', $uniacid)->order('reach asc')->select();
        $data['data'] = $moneyoff;
        return json_encode($data);
    }

    //新版取消订单（多规格）
    public function doPageduotk()
    {
        $uniacid = input('uniacid');

        $formId = input('formId');
        $order_id = input('order_id');

        if ($order_id && $order_id != 'undefined') {
            Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update(['flag' => 6, 'qx_formid' => $formId]);
            $data['data'] = array("flag" => 0, "message" => "申请成功！");
            return json_encode($data);
        } else {
            $mobile = Db::name('wd_xcx_base')->where('uniacid', $uniacid)->field('tel')->find();
            $data['data'] = array("flag" => 1, "message" => "取消订单申请失败", "mobile" => $mobile['tel']);
            return json_encode($data);
        }

    }


    public function doPageProTable()
    {
        $uniacid = input('uniacid');
        $tableid = input('tableid');
        $table = Db::name('wd_xcx_table')->where('id', $tableid)->where('uniacid', $uniacid)->find();
        $table['columnstr'] = explode(",", substr($table['columnstr'], 0, strlen($table['columnstr']) - 1));
        $table['rowstr'] = explode(",", substr($table['rowstr'], 0, strlen($table['rowstr']) - 1));
        $table['selectstr'] = explode(",", substr($table['selectstr'], 0, strlen($table['selectstr']) - 1));
        $data['data'] = $table;
        return json_encode($data);
    }


    public function doPagegetSelected()
    {
        $uniacid = input('uniacid');
        $date = input('date');
        $id = input('id');

        $select_strs = Db::name('wd_xcx_tableselect')->where('uniacid', $uniacid)->where('pid', $id)->where('appoint_date', $date)->where('flag', 1)->select();
        $select_str = '';
        if ($select_strs) {
            foreach ($select_strs as $key => $value) {
                $select_str .= $value['select_str'] . ',';
            }
            $select_str = chop($select_str, ',');
            $data['data'] = $select_str;
        } else {
            $data['data'] = "";
        }
        return json_encode($data);

    }

    //新版取消订单（预约预定）
    public function doPagelvtuikuan()
    {
        $uniacid = input('uniacid');

        $formId = input('formId');
        $order_id = input('order_id');
        $pid = input('pid');

        if ($order_id && $order_id != 'undefined') {
            $beforedays = Db::name('wd_xcx_products')->where('uniacid', $uniacid)->where('id', $pid)->field('pro_flag_data_name')->find();
            $beforedays = $beforedays['pro_flag_data_name'];
            $temp_days = explode(";", $beforedays);
            if (count($temp_days) > 1) {
                $beforedays = explode(";", $beforedays)[2];
            } else {
                $beforedays = 0;
            }

            $order = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->find();
            $appoint_date = $order['appoint_date'];

            if ($beforedays > 0 && ($appoint_date - 3600 * 24 * $beforedays < time())) {
                $mobile = Db::name('wd_xcx_base')->where('uniacid', $uniacid)->field('tel')->find();
                $data['data'] = array(
                    "flag" => 1,
                    "message" => "距离预约日期不到" . $beforedays . "天，无法直接退款",
                    "mobile" => $mobile['tel']
                );
                return json_encode($data);
            } else {
                Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update(['flag' => 6, 'qx_formid' => $formId]);
            }
        }
        $data['data'] = array("flag" => 0, "message" => "申请成功！");
        return json_encode($data);


    }


    public function doPageapplyModifyAppointInfo()
    {
        // global $_GPC, $_W;
        $uniacid = input('uniacid');
        $order_id = input('order_id');

        if (input('chuydate') || input('chuytime')) {
            if (input('chuydate')) {
                $appoint_date = input('chuydate');
            } else {
                $appoint_date = date("Y-m-d");
            }

            if (input('chuytime')) {
                $appoint_date .= " " . input('chuytime');
            }

            $appoint_date = strtotime(date("Y-m-d H:i:s", strtotime($appoint_date)));
        }

        $data = array(
            'flag' => 1,
            'pro_name' => input('pro_name'),
            'pro_tel' => input('pro_tel'),
            'pro_address' => input('pro_address'),
            'appoint_date' => $appoint_date,
            'creattime' => time()
        );

        $data = serialize($data);
        Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update(['modify_info' => $data]);
        $data = $appoint_date;
        return json_encode($data);

    }


    //获取所有员工
    public function doPagegetStaffs()
    {
        $uniacid = input('uniacid');

        $info = Db::name('wd_xcx_staff')->where('uniacid', $uniacid)->order('sort desc')->select();

        foreach ($info as $key => &$value) {
            $value['pic'] = remote($uniacid, $value['pic'], 1);
        }

        $data['data'] = $info;
        return json_encode($data);
    }

    //获取员工设置信息
    public function doPagegetStaffset()
    {
        $uniacid = input('uniacid');

        $staffset = Db::name('wd_xcx_staffset')->where('uniacid', $uniacid)->find();

        //处理底部菜单
        $baseInfo['tabbar_bg'] = $staffset['tabbar_bg'];
        $baseInfo['is_share'] = $staffset['is_share'];
        $baseInfo['tabbar_tc'] = $staffset['tabbar_tc'];
        $baseInfo['tabbar_tca'] = $staffset['tabbar_tca'];
        $baseInfo['color_bar'] = "1px solid " . $staffset['color_bar'];
        $baseInfo['tabbar_t'] = $staffset['tabbar_t'];
        $baseInfo['tabbar'] = unserialize($staffset['tabbar']);
        $baseInfo['tabnum'] = $staffset['tabnum'];
        if (count($baseInfo['tabbar']) > 0) {
            // for ($i=0; $i<count($baseInfo['tabbar']); $i++) {
            // $baseInfo['tabbar'][$i] = unserialize($baseInfo['tabbar'][$i]);
            // if(is_numeric($baseInfo['tabbar'][$i]['tabbar_linktype'])){
            //     $cate_type = Db::name('wd_xcx_cate') ->where('uniacid', $uniacid) ->where('id', $baseInfo['tabbar'][$i]['tabbar_linktype']) ->field('id, type, list_type') ->find();
            //     if( $cate_type['type'] == "page"){
            //         $baseInfo['tabbar'][$i]['type']= 'page';
            //     }
            //     if( $cate_type['type'] == "coupon"){
            //         $baseInfo['tabbar'][$i]['type']= 'coupon';
            //     }
            //     if($cate_type['list_type'] == 0 && $cate_type['type'] != "page"){
            //         $baseInfo['tabbar'][$i]['type']= 'listCate';
            //     }elseif($cate_type['list_type'] == 1 && $cate_type['type'] != "page"){
            //         $baseInfo['tabbar'][$i]['type']= 'list'.substr($cate_type['type'],4,strlen($cate_type['type']));
            //     }
            // }

            // if($baseInfo['tabbar'][$i]['tabbar_linktype'] == "webpage"){
            //     $baseInfo['tabbar'][$i]['tabbar_url']= urlencode($baseInfo['tabbar'][$i]['tabbar_url']);
            // }


            // if(isset($baseInfo['tabbar'][$i]['tabimginput_1'])){
            //     $baseInfo['tabbar'][$i]['tabimginput_1']=remote($uniacid,$baseInfo['tabbar'][$i]['tabimginput_1'],1);
            // }
            // if(isset($baseInfo['tabbar'][$i]['tabimginput_2'])){
            //     $baseInfo['tabbar'][$i]['tabimginput_2']=remote($uniacid,$baseInfo['tabbar'][$i]['tabimginput_2'],1);
            // }

            // $baseInfo['tabbar'][$i]['tabbar_type'] = 'Article';
            // }
            for ($i = 0; $i < 5; $i++) {
                if (isset($baseInfo['tabbar'][$i])) {
                    $baseInfo['tabbar'][$i] = unserialize($baseInfo['tabbar'][$i]);
                    if ($baseInfo['tabbar'][$i]) {
                        if ($baseInfo['tabbar'][$i]['tabbar'] == 1) {
                            if (!empty($baseInfo['tabbar'][$i]['tabimginput_1'])) {
                                $baseInfo['tabbar'][$i]['tabimginput_1'] = remote($uniacid, $baseInfo['tabbar'][$i]['tabimginput_1'], 1);
                            }
                            if (!empty($baseInfo['tabbar'][$i]['tabimginput_2'])) {
                                $baseInfo['tabbar'][$i]['tabimginput_2'] = remote($uniacid, $baseInfo['tabbar'][$i]['tabimginput_2'], 1);
                            }
                        }
                        if ($baseInfo['tabbar'][$i]['tabbar_linktype'] == "tel") {
                            $baseInfo['tabbar'][$i]['tabbar_type'] = "tel";
                        } elseif ($baseInfo['tabbar'][$i]['tabbar_linktype'] == "map") {
                            $baseInfo['tabbar'][$i]['tabbar_type'] = "map";
                        } elseif ($baseInfo['tabbar'][$i]['tabbar_linktype'] == "web") {
                            $baseInfo['tabbar'][$i]['tabbar_type'] = "web";
                        } elseif ($baseInfo['tabbar'][$i]['tabbar_linktype'] == "server") {
                            $baseInfo['tabbar'][$i]['tabbar_type'] = "server";
                        } else {
                            $baseInfo['tabbar'][$i]['tabbar_type'] = "Article";
                        }
                    }
                } else {
                    $baseInfo['tabbar'][$i] = '';
                }
            }
        }
        $staffset['baseInfo'] = $baseInfo;

        $data['data'] = $staffset;
        return json_encode($data);
    }


    //获取员工信息
    public function dopagegetStaffInfo()
    {
        $uniacid = input('uniacid');
        $id = input('id');
        $suid = input('suid');
        $source = input('source');
        $oldinfo = Db::name('wd_xcx_staff')->where('uniacid', $uniacid)->where('id', $id)->find();
        $oldinfo['visitor'] = unserialize($oldinfo['visitor']);
        $oldvisitor = $oldinfo['visitor'];
        if ($suid) {
            $userinfo = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
            //记录访问者信息
            if (!$oldvisitor) {
                $oldvisitor = ['0' => ['suid' => $userinfo['id'], 'source' => $source]];
            } else {
                if (!in_array($userinfo['id'], array_map('reset', $oldvisitor))) {
                    if (count($oldvisitor) > 7) {
                        unset($oldvisitor[7]);
                        array_unshift($oldvisitor, array('suid' => $userinfo['id'], 'source' => $source));
                    } else {
                        array_unshift($oldvisitor, array('suid' => $userinfo['id'], 'source' => $source));
                    }
                }
            }
            $data1 = array(
                'visitor' => serialize($oldvisitor)
            );
            Db::name('wd_xcx_staff')->where('uniacid', $uniacid)->where('id', $id)->update($data1);
        }


        $info = Db::name('wd_xcx_staff')->where('uniacid', $uniacid)->where('id', $id)->find();
        if ($info) {
            if ($info['pic'] && strpos($info['pic'], 'http') === false) {
                $info['pic'] = remote($uniacid, $info['pic'], 1);
            }
            if ($info['voice'] && strpos($info['voice'], 'http') === false) {
                $info['voice'] = remote($uniacid, $info['voice'], 1);
            }

            if ($info['visitor']) {
                $info['visitor'] = unserialize($info['visitor']);
            } else {
                $info['visitor'] = [];
                $visitors = [];
                $nameandavatar = '';
            }
            $nowvisitor = $info['visitor'];
            foreach ($info['visitor'] as $key => $value) {
                $nameandavatar = $this->getnameandavatar($value['source'], $uniacid, $value['suid']);
                $visitors[] = array(
                    'id' => $value['suid'],
                    'pic' => $nameandavatar['avatar'],
                );
            }
            $expand = array();

            $info['expand'] = unserialize($info['expand']);
            if ($info['expand']) {
                for ($i = 0; $i < count($info['expand']); $i++) {
                    if ($i % 2 == 0) {
                        $e['title'] = [$info['expand'][$i]];
                    } else {
                        $e['content'] = [$info['expand'][$i]];
                        array_unshift($expand, $e);
                    }

                }
            }
            $info['expand'] = $expand;
            $info['visitor'] = $visitors;
        }
        $user_info['nickname'] = $nameandavatar ? $nameandavatar['nickname'] : '';
        $user_info['avatar'] = $nameandavatar ? $nameandavatar['avatar'] : '';
        $data = array(
            'staffinfo' => $info,
            'userinfo' => $user_info,
        );
        if ($suid) {
            //查询是否已点赞
            $haszan = Db::name('wd_xcx_staff_zans')->where('uniacid', $uniacid)->where('suid', $userinfo['id'])->where('sid', $id)->find();
            if ($haszan) {
                if ($haszan['zans'] == 0) {
                    $data['haszan'] = 0;
                } else {
                    $data['haszan'] = 1;
                }
            } else {
                $data['haszan'] = 0;
            }
        } else {
            $data['haszan'] = 0;
        }
        $resu['data'] = $data;
        return json_encode($resu);
    }


    //增加访问量
    public function doPageaddVisit()
    {
        $uniacid = input('uniacid');
        $id = input('id');
        $prefix = config('database.prefix');
        // //增加访问量
        Db::execute("UPDATE {$prefix}wd_xcx_staff set visit = visit + 1 where uniacid = " . $uniacid . " and id = " . $id);

    }


    //点赞
    public function doPagestaffzan()
    {
        $uniacid = input('uniacid');
        $id = input('id');
        $iszan = input('iszan');
        $suid = input('suid');

        $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
        $staff_zan = array(
            'suid' => $suid,
            'uniacid' => $uniacid,
            'zans' => 1,
            'sid' => $id,
            'createtime' => time()
        );
        $prefix = config('database.prefix');
        if ($iszan == 0) { //点赞
            Db::execute("UPDATE {$prefix}wd_xcx_staff set zan = zan + 1 where uniacid = " . $uniacid . " and id = " . $id);

            $staffinfo = Db::name('wd_xcx_staff')->where('uniacid', $uniacid)->where('id', $id)->field('zan')->find();
            $data = array(
                'zan' => $staffinfo['zan'],
                'result' => 1
            );

            $record = Db::name('wd_xcx_staff_zans')->where('uniacid', $uniacid)->where('suid', $user['id'])->where('sid', $id)->find();
            if ($record) {
                $zan1 = array(
                    'zans' => 1,
                    'createtime' => time(),
                );
                Db::name('wd_xcx_staff_zans')->where('uniacid', $uniacid)->where('suid', $record['suid'])->where('sid', $id)->update($zan1);

            } else {
                Db::name('wd_xcx_staff_zans')->insert($staff_zan);
            }
            $result1['data'] = $data;
            return json_encode($result1);

        } else { //取消赞

            Db::execute("UPDATE {$prefix}wd_xcx_staff set zan = zan - 1 where uniacid = " . $uniacid . " and id = " . $id);

            $staffinfo = Db::name('wd_xcx_staff')->where('uniacid', $uniacid)->where('id', $id)->field('zan')->find();
            $zan = array(
                'zans' => 0,
                'createtime' => time()
            );
            Db::name('wd_xcx_staff_zans')->where('uniacid', $uniacid)->where('suid', $user['id'])->where('sid', $id)->update($zan);
            $data1 = array(
                'zan' => $staffinfo['zan'],
                'result' => 0
            );
            $result2['data'] = $data1;
            return json_encode($result2);
        }
    }


    //保存名片获取抽奖次数与积分
    public function doPagesavecard()
    {
        $uniacid = input('uniacid');
        $id = input('id');  //员工id
        $suid = input('suid');  //保存者openid

        //查找当天是否已有对改员工的保存操作
        $c = Db::name('wd_xcx_staff_record')->where('uniacid', $uniacid)->where('staffid', $id)->where('type', 'save')->whereTime('createtime', 'today')->count();
        if ($c > 0) {
            $data['data'] = 10;
            return json_encode($data);
        } else {
            //查找出操作人id
            $oper = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();

            //查找出是否已操作保存过改员工
            $morecount = Db::name('wd_xcx_staff_record')->where('uniacid', $uniacid)->where('operid', $oper['id'])->where('staffid', $id)->where('type', 2)->where('createtime', 'today')->count();
            if ($morecount > 0) {
                $data['data'] = 10;
                return json_encode($data);
            }

            $moredate = array(
                'uniacid' => $uniacid,
                'operid' => $oper['id'],
                'staffid' => $id,
                'type' => 2,
                'createtime' => time()
            );

            //根据小程序id 获取员工设置参数
            $staffset = Db::name('wd_xcx_staffset')->where('uniacid', $uniacid)->field('is_save, save_score, save_scount, save_prize, save_pcount')->find();

            if ($staffset['is_save'] == 1) {

                $data = array(
                    'uniacid' => $uniacid,
                    'operid' => $oper['id'],
                    'staffid' => $id,
                    'type' => 'save',
                    'score' => $staffset['save_score'],
                    'prize' => $staffset['save_prize'],
                    'createtime' => time()
                );

                $s = intval(intval($oper['score']) + intval($staffset['save_score']));

                $score = array(
                    'score' => $s,
                );
                // 分享获得积分 - 积分流水
                $xfscore = array(
                    "uniacid" => $uniacid,
                    "orderid" => "",
                    "suid" => $oper['id'],
                    "type" => "add",
                    "score" => $staffset['save_score'],
                    "message" => "分享获得积分",
                    "creattime" => time()
                );


                //判断保存操作的次数, 超过设定的次数返回提示
                $savecount = Db::name('wd_xcx_staff_record')->where('uniacid', $uniacid)->where('operid', $oper['id'])->where('type', 'save')->whereTime('createtime', 'today')->count();

                if ($staffset['save_scount'] == $staffset['save_pcount']) {    //两个上限相等
                    if ($savecount < $staffset['save_scount']) {
                        Db::name('wd_xcx_staff_record')->insert($data);
                        Db::name('wd_xcx_superuser')->where('id', $oper['id'])->update($score);
                        Db::name('wd_xcx_score')->insert($xfscore);
                        $data['data'] = 0;
                        return json_encode($data);
                    } else {
                        if ($morecount < 1) {
                            Db::name('wd_xcx_staff_record')->insert($moredate);
                        }
                        $data['data'] = 1;
                        return json_encode($data);
                    }
                } elseif ($staffset['save_scount'] < $staffset['save_pcount']) {  //积分次数上限小于抽奖次数上限
                    if ($savecount < $staffset['save_scount']) {
                        Db::name('wd_xcx_staff_record')->insert($data);
                        Db::name('wd_xcx_superuser')->where('id', $oper['id'])->update($score);
                        Db::name('wd_xcx_score')->insert($xfscore);
                        $data['data'] = 0;
                        return json_encode($data);
                    } elseif ($savecount < $staffset['save_pcount']) {
                        Db::name('wd_xcx_staff_record')->insert($data);
                        $data['data'] = 2;
                        return json_encode($data);
                    } else {
                        if ($morecount < 1) {
                            Db::name('wd_xcx_staff_record')->insert($moredate);
                        }
                        $data['data'] = 1;
                        return json_encode($data);
                    }

                } else {
                    if ($savecount < $staffset['save_pcount']) {
                        Db::name('wd_xcx_staff_record')->insert($data);
                        Db::name('wd_xcx_superuser')->where('id', $oper['id'])->update($score);
                        Db::name('wd_xcx_score')->insert($xfscore);
                        $data['data'] = 0;
                        return json_encode($data);
                    } elseif ($savecount < $staffset['save_scount']) {
                        Db::name('wd_xcx_superuser')->where('id', $oper['id'])->update($score);
                        Db::name('wd_xcx_score')->insert($xfscore);
                        $data['data'] = 3;
                        return json_encode($data);
                    } else {
                        if ($morecount < 1) {
                            Db::name('wd_xcx_staff_record')->insert($moredate);
                        }
                        $data['data'] = 1;
                        return json_encode($data);
                    }

                }
            } else {
                $data['data'] = 12;
                return json_encode($data);
            }
        }


    }

    //分享名片成功
    public function doPagesharecardSuccess()
    {
        $uniacid = input('uniacid');
        $id = input('id');  //员工id
        $shareopenid = input('sharesuid');  //分享者suid
        $openid = input('openid');
        $suid = input('suid');
        //查找出操作人id
        $oper = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $shareopenid)->find();

        //查找出点击人id
        $read = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->find();
        $c = Db::name('wd_xcx_staff_record')->where('uniacid', $uniacid)->where('readid', $read['id'])->where('staffid', $id)->where('type', 'share')->whereTime('createtime', 'today')->count();

        if ($c > 0) {
            // return $this->result(0, 'success', 10);
            $data['data'] = 10;
            return json_encode($data);
        } else {

            //分享量加1   ->whereTime('createtime', 'today')
            $morecount = Db::name('wd_xcx_staff_record')->where('uniacid', $uniacid)->where('operid', $oper['id'])->where('readid', $read['id'])->where('staffid', $id)->where('type', 1)->whereTime('createtime', 'today')->count();

            if ($morecount < 1) {
                $prefix = config('database.prefix');
                Db::execute("UPDATE {$prefix}wd_xcx_staff set forward = forward + 1 where uniacid = " . $uniacid . " and id = " . $id);
            }


            $moredate = array(
                'uniacid' => $uniacid,
                'operid' => $oper['id'],
                'readid' => $read['id'],
                'staffid' => $id,
                'type' => 1,
                'createtime' => time()
            );

            //根据小程序id 获取员工设置参数
            $staffset = Db::name('wd_xcx_staffset')->where('uniacid', $uniacid)->field('is_share, share_score, share_scount, share_prize, share_pcount')->find();

            if ($staffset['is_share'] == 1) {

                $data = array(
                    'uniacid' => $uniacid,
                    'operid' => $oper['id'],
                    'readid' => $read['id'],
                    'staffid' => $id,
                    'type' => 'share',
                    'score' => $staffset['share_score'],
                    'prize' => $staffset['share_prize'],
                    'createtime' => time()
                );

                $s = intval(intval($oper['score']) + intval($staffset['share_score']));

                $score = array(
                    'score' => $s
                );
                // 分享获得积分 - 积分流水
                $xfscore = array(
                    "uniacid" => $uniacid,
                    "orderid" => "",
                    "suid" => $oper['id'],
                    "type" => "add",
                    "score" => $staffset['share_score'],
                    "message" => "分享获得积分",
                    "creattime" => time()
                );

                //判断保存操作的次数, 超过设定的次数返回提示
                $savecount = Db::name('wd_xcx_staff_record')->where('uniacid', $uniacid)->where('operid', $oper['id'])->where('type', 'share')->whereTime('createtime', 'today')->count();

                if ($staffset['share_scount'] == $staffset['share_pcount']) {    //两个上限相等
                    if ($savecount < $staffset['share_scount']) {
                        Db::name('wd_xcx_staff_record')->insert($data);
                        Db::name('wd_xcx_superuser')->where('id', $oper['id'])->update($score);
                        Db::name('wd_xcx_score')->insert($xfscore);
                        $data['data'] = 0;
                        return json_encode($data);
                    } else {
                        if ($morecount < 1) {
                            Db::name('wd_xcx_staff_record')->insert($moredate);
                        }
                        $data['data'] = 1;
                        return json_encode($data);
                    }
                } elseif ($staffset['share_scount'] < $staffset['share_pcount']) {  //积分次数上限小于抽奖次数上限
                    if ($savecount < $staffset['share_scount']) {
                        Db::name('wd_xcx_staff_record')->insert($data);
                        Db::name('wd_xcx_superuser')->where('id', $oper['id'])->update($score);
                        Db::name('wd_xcx_score')->insert($xfscore);
                        $data['data'] = 0;
                        return json_encode($data);
                    } elseif ($savecount < $staffset['share_pcount']) {
                        Db::name('wd_xcx_staff_record')->insert($data);
                        $data['data'] = 2;
                        return json_encode($data);
                    } else {
                        if ($morecount < 1) {
                            Db::name('wd_xcx_staff_record')->insert($moredate);
                        }
                        $data['data'] = 1;
                        return json_encode($data);
                    }

                } else {
                    if ($savecount < $staffset['share_pcount']) {
                        Db::name('wd_xcx_staff_record')->insert($data);
                        Db::name('wd_xcx_superuser')->where('id', $oper['id'])->update($score);
                        Db::name('wd_xcx_score')->insert($xfscore);
                        $data['data'] = 0;
                        return json_encode($data);
                    } elseif ($savecount < $staffset['share_scount']) {
                        Db::name('wd_xcx_superuser')->where('id', $oper['id'])->update($score);
                        Db::name('wd_xcx_score')->insert($xfscore);
                        $data['data'] = 3;
                        return json_encode($data);
                    } else {
                        if ($morecount < 1) {
                            Db::name('wd_xcx_staff_record')->insert($moredate);
                        }
                        $data['data'] = 1;
                        return json_encode($data);
                    }

                }
            } else {
                if ($morecount < 1) {
                    Db::name('wd_xcx_staff_record')->insert($moredate);
                }
                $data['data'] = 1;
                return json_encode($data);
            }

        }

    }

    public function doPagetoPrizes()
    {
        $uniacid = input('uniacid');

        $now = time();
        //查找出当前表中的活动
        $activity = Db::name('wd_xcx_lottery_activity')->where('uniacid', $uniacid)->where('status', 1)->where('begin', 'ELT', $now)->where('end', 'GT', $now)->order('id desc')->limit(1)->find();
        if ($activity) {
            $data['data'] = $activity['id'];
            return json_encode($data);
        } else {
            $data['data'] = -1;
            return json_encode($data);
        }

    }


    //分享生成二维码时获取员工信息
    public function doPagestaffDetail()
    {
        $uniacid = input('uniacid');
        $id = input('id');
        $openid = input('openid');

        $staff = Db::name('wd_xcx_staff')->where('uniacid', $uniacid)->where('id', $id)->find();

        if ($staff['pic'] && strpos($staff['pic'], 'http') === false) {
            $staff['pic'] = remote($uniacid, $staff['pic'], 1);
        }
        $data['data'] = $staff;
        return json_encode($data);
    }

    //生成动态名片二维码分享
    public function dopagesharecard()
    {
        $uniacid = input('uniacid');
        $id = input('id');
        $shareopenid = input('openid');
        $types = input('types');
        $frompage = input('frompage');

        $userinfo = Db::name('wd_xcx_staff')->where('uniacid', $uniacid)->where('id', $id)->find();

        $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->find();
        $appid = $app['appID'];
        $appsecret = $app['appSecret'];
        $url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=" . $appid . "&secret=" . $appsecret;
        $weixin = file_get_contents($url);
        $jsondecode = json_decode($weixin); //对JSON格式的字符串进行编码
        $array = get_object_vars($jsondecode);//转换成数组
        $access_token = $array['access_token'];//输出token
        $ewmurl = "https://api.weixin.qq.com/wxa/getwxacode?access_token=" . $access_token;

        $sharepath = 'pages/staff_card/staff_card?id=' . $id . "&shareopenid=" . $shareopenid;
        $data = array(
            "path" => $sharepath,
            "width" => '80'
        );
        $datas = json_encode($data);
        $result = $this->_Postrequest($ewmurl, $datas);
        $root = ROOT_PATH;
        $path = "public/image/{$uniacid}" . date('Ym/');
        $newpath = $root . $path;
        $sjc = time() . rand(1000, 9999);
        if (!file_exists($newpath)) {
            mkdir($newpath);
        }
        $imgpath = ROOT_HOST . "/image/{$uniacid}" . date('Ym') . "/" . $uniacid . date('Ym') . $sjc . ".jpg";
        if (strpos($imgpath, 'https') === false) {
            $imgpath = "https" . substr($imgpath, 4);
        }
        Db::name('wd_xcx_staff')->where('uniacid', $uniacid)->where('id', $id)->update(['qrcode' => $imgpath]);
        // }
        $results['data'] = $imgpath;
        return json_encode($results);
    }


    //拍卖
    public function doPageGetappindex()
    {
        $uniacid = input('uniacid');
        $type = input('type');
        $classification = Db::name('wd_xcx_auction_column')->where("uniacid", $uniacid)->select();

        $backpage = array();
        $date = date("Y-m-d H:i:s");
        foreach ($classification as $key => $v) {
            $where = '';
            //进行中
            if ($type == 1) {
                $where = "AND starttime < {$date} AND endtime > {$date} AND stat =1";
            } //展拍
            elseif ($type == 2) {
                $where = "AND starttime > {$date}  AND stat =1";
            } //所有
            else {
                $where = " AND stat =1";
            }
            $templist = array();
            $prefix = config('database.prefix');
            $goods = Db::query("SELECT * FROM {$prefix}wd_xcx_auction_goodslist WHERE uniacid = {$uniacid} and cid = {$v['id']} and isindex = 1 {$where}");
            for ($i = 0; $i < count($goods); $i++) {

                $pnum = Db::name("wd_xcx_auction_log")->where("auction_id", $goods[$i]['id'])->select();
                $goods[$i]['pnum'] = count($pnum);
                if ($type == 1 || $type == 3) {
                    if (strtotime($date) > strtotime($goods[$i]['starttime'])) {
                        $goods[$i]['time'] = strtotime($goods[$i]['endtime']) - strtotime($date);
                    }
                }
                if ($type == 2) {

                }
                $goods[$i]['img'] = remote($uniacid, $goods[$i]['img'], 1);
                array_push($templist, $goods[$i]);
            }
            if (count($templist) > 0) {
                array_push($backpage, ['column' => $v['name'], 'id' => $v['id']]);
                for ($j = 0; $j < count($templist); $j++) {
                    array_push($backpage, $templist[$j]);
                }
            }
        }
        $results['list'] = $backpage;
        return json_encode($results);
    }

    public function doPageAuctionlist()
    {
        $uniacid = input('uniacid');
        $cid = input('cid');
        $stat = input('stat');
        $pagey = input('pagey');
        $errno = "";

        if ($cid == 0) {
            $cid = '%%';
        }
        if ($pagey < 1 || $pagey == 'null') {
            $pagey = 1;
        }
        $pagey = ($pagey - 1) * 10;
        $errno = "" . $pagey;
        $time = date("Y-m-d H:i:s");
        $data = array();
        $prefix = config('database.prefix');
        if ($stat == 0) {//未开始
            $d = Db::query("SELECT * FROM {$prefix}wd_xcx_auction_goodslist WHERE starttime > '{$time}' and stat = 1 and uniacid = {$uniacid} and cid like {$cid} order by id desc limit {$pagey},10");
            for ($j = 0; $j < sizeof($d); $j++) {
                $st = strtotime($d[$j]['starttime']);
                $et = strtotime($d[$j]['endtime']);
                $d[$j]['time'] = $st - strtotime($time);
                $d[$j]['timebegin'] = $st;
            }
            if (sizeof($d) < 1) {
                $errno = "nothing";
            }
            $data = array('list' => $d);
        } elseif ($stat == 1) {
            $d = Db::query("SELECT * FROM {$prefix}wd_xcx_auction_goodslist WHERE starttime < '{$time}' and endtime > '{$time}' and uniacid = {$uniacid} and cid like {$cid} order by id desc limit {$pagey},10");
            for ($j = 0; $j < sizeof($d); $j++) {
                $st = strtotime(date("Y-m-d H:i:s"));
                $et = strtotime($d[$j]['endtime']);
                $d[$j]['time'] = $et - $st;
            }
            if (sizeof($d) < 1) {
                $errno = "nothing";
            }

        } elseif ($stat == 2) {
            $d = Db::query("SELECT * FROM {$prefix}wd_xcx_auction_goodslist WHERE endtime < '{$time}' and stat = 2 and uniacid = {$uniacid} and cid like {$cid} order by id desc limit {$pagey},10");
            if (sizeof($d) < 1) {
                $errno = "nothing";
            }
        } elseif ($stat == 3) {
            $d = Db::query("SELECT * FROM {$prefix}wd_xcx_auction_goodslist WHERE stat = 3 and uniacid = {$uniacid} and cid like {$cid} order by id desc limit {$pagey},10");
            if (sizeof($d) < 1) {
                $errno = "nothing";
            }
        }
        for ($j = 0; $j < sizeof($d); $j++) {
            $dnum = Db::name('wd_xcx_auction_log')->where("uniacid", $uniacid)->where('auction_id', $d[$j]['id'])->count();
            $d[$j]['pnum'] = $dnum;
            $d[$j]['img'] = remote($uniacid, $d[$j]['img'], 1);
        }
        $data = array('list' => $d);
        $results['data'] = $data;
        return json_encode($results);
    }

    //物品完成
    public function doPageAuctionthisok()
    {
        $uniacid = input('uniacid');
        $goodsid = input('goodsid');
        $ccc = Db::name('wd_xcx_auction_goodslist')->where("id", $goodsid)->find();
        if ($ccc['stat'] < 2) {
            $d = Db::name('wd_xcx_auction_goodslist')->where("id", $goodsid)->find();
            $stat = 0;//最终的物品状态
            $user = $d['max_user'];
            if ($d['max_user'] == '') {
                $stat = 3;
            } else {
                $stat = 2;
            }
            Db::name('wd_xcx_auction_goodslist')->where("uniacid", $uniacid)->where("id", $goodsid)->update(array('stat' => $stat));
            if ($stat == 2) {
                $xfmoney = array('user_id' => $user,
                    'cost' => $d['max_cost'],
                    'auction_id' => $goodsid,
                    'created_at' => date('Y-m-d H:i:s'),
                    'update_at' => date('Y-m-d H:i:s'),
                    'stat' => 0,
                    'uniacid' => $uniacid
                );
                Db::name('wd_xcx_auction_order')->insert($xfmoney);
            }
        }
        $results = 1;
        return json_encode($results);
    }

    // public function doPageAuctionpage(){
    //     $uniacid = input('uniacid');
    //     $id = input('id');
    //     $openid = input('openid');
    //     $message="开始执行";
    //     $d=Db::name('wd_xcx_auction_goodslist')->where('id', $id)->select();

    //     $thistime=strtotime(date("Y-m-d H:i:s"));
    //     for ($i=0; $i <sizeof($d); $i++) {
    //         $d[$i]['introduce']=str_replace('&amp;', '&', $d[$i]['introduce']);
    //         $d[$i]['introduce']=str_replace('&lt;', '<', $d[$i]['introduce']);
    //         $d[$i]['introduce']=str_replace('&gt;', '>', $d[$i]['introduce']);
    //         $d[$i]['introduce']=str_replace('&quot;', '\"', $d[$i]['introduce']);
    //         $d[$i]['introduce']=str_replace('&nbsp;', " ", $d[$i]['introduce']);
    //         $d[$i]['introduce']=str_replace('\\', "", $d[$i]['introduce']);
    //         $d[$i]['imglist']=unserialize($d[$i]['imglist']);
    //         $data['test1']=$d[$i]['imglist'];
    //         $username=Db::name('wd_xcx_user')->where('openid', $d[$i]['max_user'])->where('uniacid', $uniacid)->find();
    //         // if(substr($username['nickname'], 0, 1) == '%'){
    //             $xin = ['赵','钱','孙','李','周','吴','郑','王','姜','沈'];
    //             $d[$i]['username']= $xin[intval(rand(0,10))].'**';
    //         // }else{
    //         //  $d[$i]['username']= mb_substr($username['nickname'], 0, 1).'**';
    //         // }

    //         if ($d[$i]['max_cost']==0) {
    //             $d[$i]['max_cost']=$d[$i]['basc_cost'];
    //         }
    //         //取消原来浏览量获取，直接增加在商品表中
    //         //$dnum=pdo_fetchall("select count(*) as 'num' from {$prefix}wd_xcx_auction_log where auction_id = :gid AND uniacid= :uid ",array(':uid'=>$_W['uniacid'],':gid'=>$d[$i]['id']));
    //         //$num=end($dnum);
    //         //$d[$i]['num']=$num['num'];

    //         //增加拍卖量
    //         $dnum=Db::name('wd_xcx_auction_log')->where('auction_id', $d[$i]['id'])->where('uniacid', $uniacid)->count();
    //         $d[$i]['pnum']=$dnum;
    //         for ($j=0; $j <sizeof($d[$i]['imglist']) ; $j++) {
    //              $d[$i]['imglist'][$j]=array('src'=>remote($uniacid, $d[$i]['imglist'][$j], 1));
    //         }
    //         $timebegin=strtotime($d[$i]['starttime'])-$thistime;
    //         $timeend=strtotime($d[$i]['endtime'])-$thistime;
    //         $d[$i]['time_begin']=$timebegin;
    //         $d[$i]['time_end']=$timeend;
    //         //增加访问量
    //         $newflow=$d[$i]['flow']+1;
    //     }
    //     $data=array('pdata'=>$d);
    //     $d= Db::name('wd_xcx_auction_remind')->where('auction_id', $id)->where('user_id', $openid)->where('uniacid', $uniacid)->find();

    //     $re=1;
    //     if ($d==false) {
    //         $re=0;
    //     }
    //     $data['re']=$re;
    //     Db::name('wd_xcx_auction_goodslist')->where('id', $id)->where('uniacid', $uniacid)->update(array('flow'=>$newflow));
    //     $results['data'] = $data;
    //     return json_encode($results);
    // }

    // public function doPageAuctionorderpay(){//保证金支付支付
    //     $uniacid = input('uniacid');
    //     $payprice = input('price');
    //     $openid = input('openid');
    //     $goodsid = input('goodsid');
    //     $form_id = input('formId');
    //     $deposit = input('deposit');
    //     $cc = input('cc');

    //     $out_trade_no='1870'.rand(10000,99999).strtotime(date("Y-m-d H:i:s")).$goodsid.rand(1000,9999);
    //     $out_refund_no ='1520'.rand(10000,99999).strtotime(date("Y-m-d H:i:s")).$goodsid.rand(1000,9999);
    //     $d=Db::name('wd_xcx_auction_deposit')->where('user_id', $openid)->where('auction_id', $goodsid)->where('stat', '<>',0)->select();

    //     if(count($d)<1){
    //         if ($cc==null) {
    //             $user=Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->find();
    //             $money=$user['money'];
    //             if ($money>$deposit) {
    //                 $message="您需要从余额扣除".$deposit."元作为保证金，是否参与拍卖？";
    //             }
    //             elseif ($deposit==0) {
    //                 $this->setdeposit($uniacid,$openid,2,$deposit,0,$goodsid,$out_trade_no,$out_refund_no,'','');
    //                 $ddd=Db::name('wd_xcx_auction_goodslist')->where('id', $goodsid)->find();
    //                 if ($payprice<=$ddd['max_cost']) {
    //                     $data['errno'] = 0;
    //                     $data['message'] = 'nonono';
    //                     $data['data']['errno'] = 0;
    //                 }else {
    //                     $this->setofferlog($uniacid,$openid,$goodsid,$payprice);
    //                     Db::name('wd_xcx_auction_goodslist')->where('id', $goodsid)->where('uniacid', $uniacid)->update(array('max_cost'=>$payprice,'max_user'=>$openid));
    //                     $data['errno'] = 0;
    //                     $data['message'] = 'nopay';
    //                     $data['data']['errno'] = 0;
    //                 }
    //             }
    //             else {
    //                 if ($money=='') {
    //                     $money=0;
    //                 }
    //                 $message="您需要从余额扣除".$money."元并且需要从微信支付".($deposit-$money)."元作为保证金！";
    //             }
    //             $data['errno'] = 0;
    //             $data['message'] = $message;
    //             $data['data']['errno'] = 1;
    //             $data['data']['formid'] = $form_id;
    //             return json_encode($data);
    //         }
    //         elseif ($cc=='readytopay') {//付款前的准备
    //             $user=Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->find();
    //             $money=0;
    //             if ($user!=false) {
    //                 $money=$user['money'];
    //             }
    //             if ($money>$deposit) {
    //                 Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->update(array('money'=>$money-$deposit));
    //                 $this->setdeposit($uniacid,$openid,2,$deposit,0,$goodsid,$out_trade_no,$out_refund_no,'','');
    //                 $data['errno'] = 0;
    //                 $data['message'] = 'ok';
    //                 $data['data']['errno'] = 0;
    //                 //余额支付发送模板消息
    //                 $d=Db::name('wd_xcx_auction_goodslist')->where('id', $goodsid)->field('name')->find();
    //                 $r_data=array('auctionname'=>$d['name'],
    //                         'msg'=>"您缴纳拍卖保证金成功");
    //                 $formId=$form_id;
    //                 $this->sendTplMessage($uniacid, 'deposit', $openid, $formId, 'deposit', $r_data);
    //                 return json_encode($data);
    //             }else {
    //                 $info="{"."auction"."}|{".$form_id."}|{".$uniacid."}";
    //                 $deposit_wx=$deposit-$money;
    //                 $pay=$this-> getweixinpayinfo($uniacid, $openid, $out_trade_no, $deposit_wx, '商品支付', $info);
    //                 $pay['err']=0;
    //                 $pay['$openid']=$openid;
    //                 $pay['$info']=$info;
    //                 $pay['order_id']=$out_trade_no;
    //                 $pay['pmoney']=$money;
    //                 $pay['money_wx']=$deposit_wx;

    //                 $temp1=$pay['package'];
    //                 $temp1=explode('=', $temp1);
    //                 $temp1=$temp1[1];
    //                 $pay['testpayid']=$temp1;
    //                 $this->setdeposit($uniacid,$openid,0,$money,$deposit_wx,$goodsid,$out_trade_no,$out_refund_no,$form_id,$temp1);
    //                 $pay['errno']=2;//移植后追加
    //                 $data['errno'] = 0;
    //                 $data['data'] = $pay;
    //                 return json_encode($data);
    //             }

    //         }
    //         elseif ($cc=='wxpayok') {
    //             $user=Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->find();
    //             $money=$user['money'];
    //             Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->update(array('money'=>$money-$deposit));
    //             $this->setdeposit($uniacid,$openid,2,$money,$deposit-$money,$goodsid,$out_trade_no,$out_refund_no,$form_id,'');
    //             $data['errno'] = 0;
    //             $data['message'] = 'ok';
    //             $data['data']['errno'] = 0;

    //             return json_encode($data);
    //         }

    //     }else {
    //         $ddd=Db::name('wd_xcx_auction_goodslist')->where('id', $goodsid)->find();
    //         if ($payprice<=$ddd['max_cost']) {
    //             $data['errno'] = 0;
    //             $data['message'] = 'nonono';
    //             $data['data']['errno'] = 0;
    //             return json_encode($data);
    //         }else {
    //             $this->setofferlog($uniacid,$openid,$goodsid,$payprice);

    //             Db::name('wd_xcx_auction_goodslist')->where('uniacid', $uniacid)->where('id', $goodsid)->update(array('max_cost'=>$payprice,'max_user'=>$openid));
    //             $data['errno'] = 0;
    //             $data['message'] = 'nopay';
    //             $data['data']['errno'] = 0;
    //             return json_encode($data);
    //         }
    //     }

    // }
    //写入出价记录
    public function setofferlog($uniacid, $user, $goods, $price)
    {
        $time = date("Y-m-d H:i:s");
        $data = array('user_id' => $user,
            'auction_id' => $goods,
            'createtime' => $time,
            'cost' => $price,
            'uniacid' => $uniacid,
        );
        Db::name('wd_xcx_auction_log')->insert($data);
    }

    //保证金写入 $deposit 保证金
    public function setdeposit($uniacid, $openid, $stat, $deposit, $deposit_wx, $goodsid, $inorder, $outorder, $form_id, $payid)
    {
        $data = array('user_id' => $openid,
            'auction_id' => $goodsid,
            'out_trade_no' => $inorder,
            'out_refund_no' => $outorder,
            'createtime' => date("Y-m-d H:i:s"),
            'deposit' => $deposit,
            'deposit_wx' => $deposit_wx,
            'uniacid' => $uniacid,
            'stat' => $stat,
            'form_id' => $form_id,
            'prepayid' => $payid
        );
        Db::name('wd_xcx_auction_deposit')->insert($data);
    }

    public function doPageGetstatbyid()
    {
        $uniacid = input('uniacid');
        $id = input('id');
        $d = Db::name('wd_xcx_auction_goodslist')->where('id', $id)->find();
        $st = $d['starttime'];
        $et = $d['endtime'];
        $st = strtotime($st);
        $et = strtotime($et);
        $n = strtotime(date('Y-m-d H:i:s'));
        if ($st > $n) {
            $results['data']['stat'] = 1;
            return json_encode($results);//未开始
        } elseif ($st < $n && $n < $et) {
            $results['data']['stat'] = 2;
            return json_encode($results);//拍卖中
        } elseif ($et < $n) {
            $results['data']['stat'] = 3;
            return json_encode($results);//结束
        } else {
            $results['data']['stat'] = 3;
            return json_encode($results);//结束
        }
    }

    //获取拍卖记录
    // public function doPageAuctionlog(){
    //     $uniacid = input('uniacid');
    //     $goodsid = input('goodsid');
    //     $openid = input('openid');

    //     if ($openid!=null) {
    //         $d=Db::name('wd_xcx_auction_log')->where('auction_id', $goodsid)->where('uniacid', $uniacid)->where('user_id', $openid)->order('id desc')->limit(10)->select();
    //     }else {
    //         $d=Db::name('wd_xcx_auction_log')->where('auction_id', $goodsid)->where('uniacid', $uniacid)->order('id desc')->limit(10)->select();
    //     }
    //     for ($i=0; $i <sizeof($d) ; $i++) {
    //         $dd=$d[$i];
    //         $username = Db::name('wd_xcx_user')->where('openid', $dd['user_id'])->where('uniacid', $uniacid)->limit(10)->select();
    //         $username=end($username);
    //         $username=rawurldecode($username['nickname']);
    //         $d[$i]['nickname']=$username;
    //         $d[$i]['user_id']="";
    //         if($i==0){
    //             $d[$i]['stat']="领先";
    //         }else {
    //             $d[$i]['stat']='出局';
    //         }
    //     }
    //     $results['data'] = $d;
    //     return json_encode($results);
    // }

    //支付成功
    // public function doPagePaydesok(){
    //     $uniacid = input('uniacid');
    //     $gid = input('gid');
    //     $openid = input('openid');
    //     $money = input('money');
    //     if($money > 0){   //更新用户余额
    //         Db::name('wd_xcx_user') ->where('uniacid', $uniacid) ->where('openid', $openid) ->update(array('money' => 0));
    //     }
    //     Db::name('wd_xcx_auction_deposit')->where('user_id', $openid)->where('auction_id', $gid)->where('uniacid', $uniacid)->limit(10)->update(array('stat'=>2));

    //     //模板消息发送
    //     $d=Db::name('wd_xcx_auction_goodslist')->where('id', $gid)->find();
    //     $data=array('auctionname'=>$d['name'],
    //                 'msg'=>"您缴纳拍卖保证金成功");
    //     $formId=Db::name('wd_xcx_auction_deposit')->where('uniacid', $uniacid)->where('auction_id', $gid)->where('user_id', $openid)->find();
    //     $formId=$formId['form_id'];
    //     $back= $this->sendTplMessage($uniacid,'deposit', $openid, $formId, 'deposit', $data);
    //     $results = 1;
    //     return json_encode($results);
    // }

    // //支付失败/坏单
    // public function doPagePaydesbad(){
    //     $uniacid = input('uniacid');
    //     Db::name('wd_xcx_auction_deposit')->where('stat', 0)->delete();
    //     $results = 1;
    //     return json_encode($results);
    // }

    //设置提醒
    public function doPageGuagua()
    {
        $uniacid = input('uniacid');
        $gid = input('gid');
        $openid = input('openid');
        $formid = input('formid');
        $cc = input('cc');

        $d = Db::name('wd_xcx_auction_remind')->where('uniacid', $uniacid)->where('auction_id', $gid)->where('user_id', $openid)->find();
        $message = 'bad';
        if ($cc == 'set') {
            if ($d == false) {
                $data = array('uniacid' => $uniacid, 'user_id' => $openid, 'auction_id' => $gid, 'formid' => $formid);
                Db::name('wd_xcx_auction_remind')->insert($data);
                $message = 'ok';
            }
        } elseif ($cc == 'del') {
            Db::name('wd_xcx_auction_remind')->where('uniacid', $uniacid)->where('auction_id', $gid)->where('user_id', $openid)->delete();
            $message = 'ok';
        }
        $results['message'] = $message;
        return json_encode($results);
    }

    //拍卖订单支付
    // public function doPageTopaygoods(){
    //     $uniacid = input('uniacid');
    //     $gid = input('gid');
    //     $openid = input('openid');
    //     $formid = input('formId');
    //     $price = input('price');
    //     $cc = input('cc');
    //     $other = input('other');

    //     $d=Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $user)->find();
    //     $money=$d['money'];//用户的钱
    //     $indis=Db::name('wd_xcx_auction_deposit')->where('uniacid', $uniacid)->where('user_id', $user)->where('auction_id', $gid)->find();
    //     $indis=$indis['deposit']+$indis['deposit_wx'];
    //     if($cc==null){//判断支付类型 混合以及余额
    //         if ($money>($price-$indis)) {//余额足够支付
    //             Db::name('wd_xcx_auction_order')->where('uniacid', $uniacid)->where('user_id', $user)->where('auction_id', $gid)->update(array('cost_wx'=>0,'cost_purse'=>($price-$indis),'userother'=>$other,'phone'=>$_GPC['phone']));
    //             //pdo_update("sudu8_page_user", array('money'=>$money-$price), array("uniacid"=>$uniacid, "openid"=>$user));
    //             $pay['err']=-1;
    //             $results['data'] = $pay;
    //             return json_encode($results);
    //         }else {//启用微信支付
    //         //  pdo_update("sudu8_page_user", array('money'=>0), array("uniacid"=>$uniacid, "openid"=>$user));
    //             $price=$price-$money-$indis;
    //             $info="{"."auction"."}|{".$formid."}|{".$uniacid."}";
    //             $out_trade_no='6198'.rand(10000,99999).strtotime(date("Y-m-d H:i:s")).$goodsid.rand(1000,9999);
    //             Db::name('wd_xcx_auction_order')->where('uniacid', $uniacid)->where('user_id', $user)->where('auction_id', $gid)->update(array('order_no'=>$out_trade_no,'phone'=>$_GPC['phone'],'formid'=>$formid,'cost_wx'=>$price,'cost_purse'=>$money,'userother'=>$other));
    //             $pay=$this-> getweixinpayinfo($user, $out_trade_no, $price, $info);
    //             $pay['err']=0;
    //             $results['data'] = $pay;
    //             return json_encode($results);
    //         }
    //     }
    //     elseif ($cc=="okpurse") {//余额支付完成
    //         Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $user)->update(array('money'=>$money-$price-$indisindis));
    //         $data=array('stat'=>1,
    //                     'update_at'=>date("Y-m-d H:i:s"),
    //                     'paid_at'=>date("Y-m-d H:i:s"),
    //                     'address'=>$_GPC['address'],
    //                     'address_more'=>$_GPC['address_more'],
    //                     );
    //         Db::name('wd_xcx_auction_order')->where('uniacid', $uniacid)->where('user_id', $user)->where('auction_id', $gid)->update($data);
    //     }
    //     elseif ($cc=="okwx") {//微信支付完成
    //         Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $user)->update(array('money'=>0));
    //         $data=array('stat'=>1,
    //                     'update_at'=>date("Y-m-d H:i:s"),
    //                     'paid_at'=>date("Y-m-d H:i:s"),
    //                     'address'=>$_GPC['address'],
    //                     'address_more'=>$_GPC['address_more'],
    //                     );
    //         Db::name('wd_xcx_auction_order')->where('uniacid', $uniacid)->where('user_id', $user)->where('auction_id', $gid)->update($data);

    //         $d=Db::name('wd_xcx_auction_goodslist')->where('id', $gid)->find();
    //         $dd=Db::name('wd_xcx_auction_order')->where('uniacid', $uniacid)->where('auction_id', $gid)->where('user_id', $user)->find();
    //         $data=array('name'=>$d['name'],
    //                     'cost'=>$d['max_cost'],
    //                     'time'=>date('Y-m-d H:i:s'),
    //                     'other'=>"感谢您的付款!您的物品即将飞奔到您的手中");
    //         $back= $this->sendTplMessage('payok', $dd['user_id'], $dd['formid'], 'payok', $data);
    //         $results['data'] = $back;
    //         return json_encode($results);
    //     }
    // }
    //按id 和 openid 取得账单()
    // public function doPageGetorderbyid(){
    //     $uniacid = input('uniacid');
    //     $user = input('openid');
    //     $id = input('id');

    //     $d=Db::name('wd_xcx_auction_goodslist')->where('uniacid', $uniacid)->where('id', $id)->find();
    //     $d['img']=remote($uniacid, $d['img'], 1);
    //     $d2=Db::name('wd_xcx_auction_order')->where('uniacid', $uniacid)->where('user_id', $user)->where('auction_id', $id)->find();
    //     $d3=Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $user)->find();
    //     $data = array('goods'=>$d,'order'=>$d2,'myinfo'=>$d3);
    //     $results['data'] = $data;
    //     return json_encode($results);
    // }

    //用户参与数据
    public function doPageAuctionjoinlog()
    {
        $uniacid = input('uniacid');
        $openid = input('openid');
        $id = input('id');

        if ($id == 2) {//竞拍中
            $d = Db::name('wd_xcx_auction_log')->alias('a')->join('wd_xcx_auction_goodslist b', 'a.auction_id = b.id')->where('a.user_id', $openid)->where('b.stat', 1)->where('a.uniacid', $uniacid)->order("a.auction_id desc")->field("b.*")->select();
            for ($i = 0; $i < sizeof($d); $i++) {
                $dd = $d[$i];
                $mycost = Db::name('wd_xcx_auction_log')->where('user_id', $openid)->where('uniacid', $uniacid)->where('auction_id', $dd['id'])->find();
                $mycost = $mycost['cost'];
                $d[$i]['mycost'] = $mycost;
            }
        } elseif ($id == 3) {//已拍中
            $d = Db::name('wd_xcx_auction_order')->alias('a')->join('wd_xcx_auction_goodslist b', 'a.auction_id = b.id')->where('a.user_id', $openid)->where('a.stat', 0)->where('a.uniacid', $uniacid)->field("a.created_at,b.*")->select();

            for ($i = 0; $i < sizeof($d); $i++) {
                $d[$i]['lasttime'] = date("Y-m-d H:i:s", strtotime($d[$i]['created_at'] . " + 7 day"));
            }
        } elseif ($id == 4) {//未拍中
            $d = Db::name('wd_xcx_auction_deposit')->alias('a')->join('wd_xcx_auction_goodslist b', 'a.auction_id = b.id')->where('a.user_id', $openid)->where('b.max_user', '<>', $openid)->where('b.stat', 2)->where('a.uniacid', $uniacid)->select();

            for ($i = 0; $i < sizeof($d); $i++) {
                $dd = Db::name('wd_xcx_auction_deposit')->where('uniacid', $uniacid)->where("user_id", $openid)->where('action_id', $d[$i]['action_id'])->find();
                $state = $dd['stat'];
                if ($state == 1) {
                    $state = "已退款";
                } else {
                    $state = "退款中";
                }
                $d[$i]['statedes'] = $state;
            }
        } elseif ($id == 6) {//待发货
            $d = Db::name('wd_xcx_auction_order')->alias('a')->join('wd_xcx_auction_goodslist b', 'a.auction_id = b.id')->where('a.user_id', $openid)->where('a.stat', 1)->where('a.uniacid', $uniacid)->field('b.*')->select();
        } elseif ($id == 7) {//已发货
            $d = Db::name('wd_xcx_auction_order')->alias('a')->join('wd_xcx_auction_goodslist b', 'a.auction_id = b.id')->where('a.user_id', $openid)->where('a.stat', 2)->where('a.uniacid', $uniacid)->field('a.cost,a.id as orderid,b.*')->select();
        } elseif ($id == 9) {//已完成
            $d = Db::name('wd_xcx_auction_order')->alias('a')->join('wd_xcx_auction_goodslist b', 'a.auction_id = b.id')->where('a.user_id', $openid)->where('a.stat', 3)->where('a.uniacid', $uniacid)->field('a.cost,b.*')->select();
        }
        for ($i = 0; $i < sizeof($d); $i++) {
            $d[$i]['img'] = remote($uniacid, $d[$i]['img'], 1);
        }
        $results['data'] = $d;
        return json_encode($results);
    }


    /**
     * 获取物流详情
     */
    public function dopageGetWuliu()
    {
        $uniacid = input('uniacid');
        $kuaidi = input('kuaidi');
        $kuaidihao = input('kuaidihao');
        $order_item_id = input('order_item_id');
        $set = Db::name('wd_xcx_duo_products_yunfei')->where('uniacid', $uniacid)->find();
        if ($order_item_id) {
            if (strpos($order_item_id, '-')) {
                $pro = Db::name('wd_xcx_main_shop_order_item')->where('order_item_id', $order_item_id)->find();
            } else {
                $pro = Db::name('wd_xcx_main_shop_order_item')->where('order_id', $order_item_id)->find();
            }
        } else {
            $pro = '';
        }
        if ($set['api_type'] == 3) {
            if ($set['appcode']) {
                $kd_code = array(
                    '顺丰' => 'SFEXPRESS',
                    '韵达' => 'YUNDA',
                    '天天' => 'TTKDEX',
                    '申通' => 'STO',
                    '圆通' => 'YTO',
                    '中通' => 'ZTO',
                    '国通' => 'GTO',
                    '百世' => 'HTKY',
                    'EMS' => 'EMS',
                    '邮政' => 'CHINAPOST',
                    'FEDEX联邦(国内件)' => 'FEDEX',
                    '宅急送' => 'ZJS',
                    '安捷快递' => 'ANJELEX',
                    '大田物流' => 'DTW',
                    '百福东方' => 'EES',
                    '德邦快运' => 'DEPPON',
                    'D速物流' => 'DEXP',
                    'COE东方快递' => 'COE',
                    '共速达' => 'GSD',
                    '佳怡物流' => 'JIAYI',
                    '京广速递' => 'KKE',
                    '急先达' => 'JOUST',
                    '加运美' => 'TMS',
                    '晋越快递' => 'PEWKEE',
                    '全晨快递' => 'QCKD',
                    '民航快递' => 'CAE',
                    '龙邦快递' => 'LBEX',
                    '联昊通速递' => 'LTS',
                    '全一快递' => 'APEX',
                    '如风达' => 'RFD',
                    '速尔快递' => 'SURE',
                    '盛丰物流' => 'SFWL',
                    '天地华宇' => 'HOAU',
                    'TNT快递' => 'TNT',
                    'UPS' => 'UPS',
                    '万家物流' => 'WANJIA',
                    '信丰物流' => 'XFEXPRESS',
                    '亚风快递' => 'BROADASIA',
                    '优速快递' => 'UC56',
                    '远成物流' => 'YCGWL',
                    '运通快递' => 'YTEXPRESS',
                    '源安达快递' => 'YADEX',
                    '中铁快运' => 'CRE',
                    '中邮快递' => 'CNPL',
                    '安能物流' => 'ANE',
                    '九曳供应链' => 'JIUYESCM',
                    '东骏快捷' => 'DJ56',
                    '万象' => 'EWINSHINE',
                    '芝麻开门' => 'ZMKMEX'
                );
                $kuaidi = $kd_code[$kuaidi];
                $host = "https://wuliu.market.alicloudapi.com";//api访问链接
                $path = "/kdi";//API访问后缀
                $method = "GET";
                $appcode = $set['appcode'];  //阿里云云市场购买的 appcode
                $headers = array();
                array_push($headers, "Authorization:APPCODE " . $appcode);
                $querys = "no=$kuaidihao&type=$kuaidi";  //参数写在这里
                $bodys = "";
                $url = $host . $path . "?" . $querys;//url拼接

                $curl = curl_init();
                curl_setopt($curl, CURLOPT_CUSTOMREQUEST, $method);
                curl_setopt($curl, CURLOPT_URL, $url);
                curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);
                curl_setopt($curl, CURLOPT_FAILONERROR, false);
                curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
                curl_setopt($curl, CURLOPT_HEADER, false);
                if (1 == strpos("$" . $host, "https://")) {
                    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
                    curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false);
                }
                $data = curl_exec($curl);

                curl_close($curl);
                if (strpos($data, '签收') !== false) {
                    $flag = '已签收';
                } else {
                    $flag = '运输中';
                }
                $res = json_decode($data, true);
                if ($res['status'] == 0) {
                    if (count($res['result']['list']) > 0) {
                        $status = 0;
                        $info = $res['result']['list'];
                    } else {
                        $status = -1;
                        $info = '';
                    }
                } else {
                    $status = -1;
                    $info = '';
                }
                return json_encode(array('type' => 'ali', 'list' => $info, 'status' => $status, 'flag' => $flag, 'pro' => $pro));
            }

        } else {

            $kd_code = array(
                '顺丰速运' => 'SF',
                '韵达' => 'YD',
                '天天' => 'HHTT',
                '申通' => 'HLWL',
                '圆通' => 'YTO',
                '中通' => 'ZTO',
                '国通' => 'GTO',
                '百世汇通' => 'HTKY',
                'EMS' => 'EMS',
                '邮政' => 'YZPY',
                'FEDEX联邦(国内件)' => 'FEDEX',
                '宅急送' => 'ZJS',
                '安捷快递' => 'AJ',
                '大田物流' => 'DTWL',
                '百福东方' => 'BFDF',
                '德邦' => 'DBLKY',
                'D速物流' => 'DSWL',
                'COE东方快递' => 'COE',
                '共速达' => 'GSD',
                '佳怡物流' => 'JYWL',
                '京广速递' => 'JGSD',
                '急先达' => 'JXD',
                '加运美' => 'JYM',
                '晋越快递' => 'JYKD',
                '全晨快递' => 'QCKD',
                '民航快递' => 'MHKD',
                '龙邦快递' => 'LB',
                '联昊通速递' => 'LHT',
                '全一快递' => 'UAPEX',
                '如风达' => 'RFD',
                '速尔快递' => 'SURE',
                '盛丰物流' => 'SFWL',
                '天地华宇' => 'HOAU',
                'TNT快递' => 'TNT',
                'UPS' => 'UPS',
                '万家物流' => 'WJWL',
                '信丰物流' => 'XFEX',
                '亚风快递' => 'YFSD',
                '优速' => 'UC',
                '远成物流' => 'YCWL',
                '运通快递' => 'YTKD',
                '源安达快递' => 'YADEX',
                '中铁快运' => 'ZTKY',
                '中邮快递' => 'ZYKD',
                '安能物流' => 'ANE',
                '九曳供应链' => 'JIUYE',
                '晟邦物流' => 'SBWL',
                '东骏快捷' => 'DJKJWL'
            );
            if ($kuaidi) {
                $kuaidi = $kd_code[$kuaidi];
            }
            include 'KdApi.php';
            $kd = new KdApi();
            $res = $kd->getOrderTracesByJson($uniacid, $kuaidi, $kuaidihao);
            if (strpos($res, '签收') !== false) {
                $flag = '已签收';
            } else {
                $flag = '运输中';
            }
            $res = json_decode($res, true);
            if ($res['Success']) {
                if (count($res['Traces']) > 0) {
                    $status = 0;
                    $info = array_reverse($res['Traces']);
                } else {
                    $status = -1;
                    $info = '';
                }
            } else {
                $status = -1;
                $info = '';
            }

            return json_encode(array('type' => 'kdniao', 'list' => $info, 'status' => $status, 'flag' => $flag, 'pro' => $pro));
        }

    }


    public function dopageDataindex()
    {
        $uniacid = input('uniacid');
        $suid = input('suid');
        $hxuser_is = false;

        $hxinfo = Db::name('wd_xcx_hx_user')->where('uniacid', $uniacid)->find();
        if ($hxinfo) {
            $hxuser = unserialize($hxinfo['hxuser']);
            if (in_array($suid, array_column($hxuser, 'suid'))) {
                $hxuser_is = true;
            }
        }
        $items = Db::name('wd_xcx_usercenter_set')->where("uniacid", $uniacid)->find();
        $usercenterset = unserialize($items['usercenterset']);
        $hx_is = false;
        for ($i = 1; $i <= count($usercenterset) / 6; $i++) {
            if ($usercenterset['flag' . $i] == 2 && $usercenterset['num' . $i] == 21) {
                $hx_is = true;
                break;
            }
        }
        $today = strtotime(date("Y-m-d 00:00:00", time()));
        $now = time();
        //获取今日订单总金额
        $dataindex = Db::name('wd_xcx_shops_shop')->where('uniacid', $uniacid)->where('suid', $suid)->field('id, name, logo, status')->find();
        if ($dataindex) {
            if ($dataindex['status'] == 2) {
                return json_encode(array('data' => 2));
            } else if ($dataindex['status'] == 0) {
                return json_encode(array('data' => 0));
            }
        } else {
            return json_encode(array('data' => -1));
        }
        $dataindex['logo'] = remote($uniacid, $dataindex['logo'], 1);
        $sid = $dataindex['id'];
        $todayOrderMoney = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('sid', $sid)->whereTime('creattime', 'today')->where('flag', 'in', [1, 2, 4])->sum('price');
        $allOrderNum = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('sid', $sid)->where('flag', 'in', [1, 2, 4])->count();
        $allProNum = Db::name('wd_xcx_shops_goods')->where('uniacid', $uniacid)->where('sid', $sid)->where('status', 1)->count();
        $dataindex['allViewNum'] = Db::name('wd_xcx_shops_goods')->where('uniacid', $uniacid)->where('sid', $sid)->sum('pageview');
        $dataindex['todayOrderMoney'] = round($todayOrderMoney, 2);
        $dataindex['allOrderNum'] = $allOrderNum;
        $dataindex['allProNum'] = $allProNum;
        $dataindex['hx_is'] = $hx_is;
        $dataindex['hxuser_is'] = $hxuser_is;
        $data['data'] = $dataindex;
        return json_encode($data);
    }

    //多商户获取商品列表
    public function dopageProlist()
    {
        $uniacid = input('uniacid');
        $status = input('status');
        $suid = input('suid');
        $shop = Db::name('wd_xcx_shops_shop')->where('uniacid', $uniacid)->where('suid', $suid)->field('id')->find();
        $sid = $shop['id'];
        $products = Db::name('wd_xcx_shops_goods')->where('uniacid', $uniacid)->where('sid', $sid)->where('status', $status)->field('id,sid,uniacid,title,createtime,flag,thumb,storage,vsales,rsales,sellprice,num,status')->select();
        foreach ($products as $key => &$res) {
            $res['createtime'] = date("Y-m-d H:i:s", $res['createtime']);
            $res['sales'] = $res['vsales'] + $res['rsales'];
            $res['thumb'] = remote($uniacid, $res['thumb'], 1);
        }
        $data['data'] = $products;
        return json_encode($data);
    }


    public function doPageaddPro()
    {
        $uniacid = input('uniacid');
        $upimages = input('images');
        if ($upimages && $upimages !== "NULL") {
            $forms = stripslashes(html_entity_decode(input('images')));
            $images = serialize(json_decode($forms, TRUE));
        } else {
            $images = '';
        }
        // preg_match_all("/http\S*?.jpg/", $upimages, $matches);
        // if($matches){
        //     $images = serialize($matches[0]);
        // }else{
        //     $images = '';
        // }
        // $upimages = str_replace('["', '', $upimages);
        // $upimages = str_replace('"]', '', $upimages);
        // $upimages = str_replace('","', ',', $upimages);
        // $images =explode(',',$upimages);
        $data = array(
            'title' => input('title'),
            'sid' => input('sid'),
            'flag' => input('flag'),
            'kuaidi' => input('kuaidi'),
            'pageview' => input('pageview'),
            'rsales' => input('rsales'),
            'sellprice' => input('sellprice'),
            'marketprice' => input('marketprice'),
            'storage' => input('storage'),
            'thumb' => input('thumb') == 'undefined' ? '' : input('thumb'),
            'video' => input('video'),
            'images' => $images,
            'descp' => input('descp'),
            'num' => input('num'),
            'hot' => 0,
            'vsales' => 0,
            'buy_type' => input('buy_type'),
            'cid' => input('cid')

        );

        $id = input('id');
        if (!empty($id)) {
            $res = Db::name('wd_xcx_shops_goods')->where('id', $id)->where('uniacid', $uniacid)->update($data);
        } else {
            $goods = Db::name('wd_xcx_shops_set')->where('uniacid', $uniacid)->field('goods')->find();
            $data['uniacid'] = $uniacid;
            $data['createtime'] = time();
            $data['status'] = ($goods['goods'] == '1') ? 0 : 1;    //goods为设置表里面的 "添加商品是否需要审核"
            $res = Db::name('wd_xcx_shops_goods')->insert($data);
        }
        if ($res) {
            $data['data'] = 1;
        } else {
            $data['data'] = 0;
        }
        return json_encode($data);
    }


    //商品详情显示
    public function dopageshowShopPro()
    {
        $uniacid = input('uniacid');
        $id = intval(input('id'));
        $suid = input('suid');
        $pro = Db::name('wd_xcx_shops_goods')->where('id', $id)->where('uniacid', $uniacid)->find();
        $data = array(
            'pageview' => $pro['pageview'] + 1,
        );
        Db::name('wd_xcx_shops_goods')->where('id', $id)->where('uniacid', $uniacid)->update($data);
        if ($pro['images']) {
            $pro['images'] = unserialize($pro['images']);
            $num = count($pro['images']);
            for ($i = 0; $i < $num; $i++) {
                $pro['images'][$i] = remote($uniacid, $pro['images'][$i], 1);
            }
        }
        if ($pro['thumb']) {
            $pro['thumb'] = remote($uniacid, $pro['thumb'], 1);
        }


        //判断我又没有收藏过
        $collectcount = 0;
        if ($suid) {
            $collect = Db::name('wd_xcx_collect')->where('uniacid', $uniacid)->where('suid', $suid)->where('type', 'shopsPro')->where('cid', $id)->count();
            if (intval($collect['n']) > 0) {
                $collectcount = 1;
            }
        }
        $pro['collectcount'] = $collectcount;
        $data['data'] = $pro;
        return json_encode($data);

    }

    //删除商品
    public function dopageProdel()
    {
        $uniacid = input('uniacid');
        $pid = input('pid');
        $sid = input('id');
        $res = Db::name('wd_xcx_shops_goods')->where('uniacid', $uniacid)->where('sid', $sid)->where('id', $pid)->delete();
        if ($res) {
            $notice = 1;
        } else {
            $notice = -1;
        }
        $data['data'] = $notice;
        return json_encode($data);
    }

    //商品列表
    public function dopageshanghugoods()
    {
        $uniacid = input('uniacid');
        $id = input('cid');
        $cateinfo = array();
        $shop_set = Db::name('wd_xcx_shops_set')->where('uniacid', $uniacid)->find();

        //所有分类
        if ($id == 0) { //获取全部
            $shopInfo = Db::name('wd_xcx_shops_goods')->where('uniacid', $uniacid)->where('hot', 1)->order('num')->limit($shop_set['tjnum'])->select();
        } else {
            //分类下商品
            $shopInfo = Db::name('wd_xcx_shops_goods')->where('uniacid', $uniacid)->where('hot', 1)->where('cid', $id)->order('num')->limit($shop_set['tjnum'])->select();
        }
        //处理图片
        foreach ($shopInfo as $key => &$row) {
            if (stristr($row['thumb'], 'http')) {
                $row['thumb'] = remote($uniacid, $row['thumb'], 1);
            }
        }
        $data['data'] = $shopInfo;
        return json_encode($data);
    }

    //获取订单列表
    public function dopageShanghuOrderList()
    {
        $uniacid = input('uniacid');
        $nav = input('nav');
        $flag = input('flag');
        $sid = input('id');
        if ($nav == 10 && $flag == 10) {
            $where = "";
        } elseif ($nav == 10) {
            $where = "flag =" . $flag;
        } elseif ($nav == 1 || $nav == 2) {
            $where = "nav =" . $nav . " and flag = " . $flag;
        } else {
            $where = "flag = " . $flag;
        }
        $orderlist = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('sid', $sid)->where($where)->field('id,sid,uniacid,order_id,price,jsondata,creattime,nav,flag,m_address,hxtime,kuadi,kuaidihao')->order('creattime desc')->select();
        foreach ($orderlist as $key => &$res) {
            $res['jsondata'] = unserialize($res['jsondata']);
            $res['m_address'] = unserialize($res['m_address']);
            $res['creattime'] = date("Y-m-d H:i:s", $res['creattime']);
            if ($res['hxtime']) {
                $res['hxtime'] = date("Y-m-d H:i:s", $res['hxtime']);
            }
            switch ($res['flag']) {
                case 0:
                    $res['flagText'] = '待付款';
                    break;
                case 1:
                    $res['flagText'] = '已付款';
                    break;
                case 2:
                    $res['flagText'] = '已完成';
                    break;
                case 3:
                    $res['flagText'] = '已过期';
                    break;
                case 4:
                    $res['flagText'] = '已发货';
                    break;
            }

        }
        $data['data'] = $orderlist;
        return json_encode($data);
    }


    //商户中心页面数据
    public function doPageshopInfo()
    {
        $uniacid = input('uniacid');
        $id = intval(input('id'));
        $item = Db::name('wd_xcx_shops_shop')->where('id', $id)->where('uniacid', $uniacid)->find();
        if (!empty($item['latitude'])) {
            $item['latlong'] = $item['latitude'] . ',' . $item['longitude'];
        }
        $item['images'] = unserialize($item['images']);
        $item['logo'] = remote($uniacid, $item['logo'], 1);

        $cateList = Db::name('wd_xcx_shops_cate')->where('uniacid', $uniacid)->select();
        $data['data'] = [$cateList, $item];
        return json_encode($data);
    }


    public function doPageeditShop()
    {
        $uniacid = input('uniacid');
        $images = explode(",", input('images'));
        $data = array(
            'cid' => intval(input('cid')),   //6
            'username' => trim(input('username')), //4
            'password' => trim(input('password')),  //5
            'logo' => input('logo'),     //7
            'bg' => input('bg'),         //8
            'images' => serialize($images),
            'intro' => input('intro'),
            'worktime' => input('worktime'),
            'name' => input('name'),     //9
            'tel' => input('tel'),      //10
            'address' => input('address'),   //11
            'latitude' => input('latitude'),    //12
            'longitude' => input('longitude'),   //12
            'descp' => input('descp'),   //15
            'title' => input('title'),   //13
        );

        $res = Db::name('wd_xcx_shops_shop')->where('uniacid', $uniacid)->where('id', input('id'))->update($data);
        if ($res) {
            $result = 1;
        } else {
            $result = -1;
        }
        $data['data'] = $result;
        return json_encode($data);
    }


    // 提现页面  获取余额，最低提现
    public function dopagegetMoney()
    {
        $uniacid = input('uniacid');
        $sid = input('id');
        $allMoney = Db::name('wd_xcx_shops_shop')->where('uniacid', $uniacid)->where('id', $sid)->field('tixian')->find()['tixian'];
        $set = Db::name('wd_xcx_shops_set')->where('uniacid', $uniacid)->field('minimum, tixiantype')->find();
        $data['allMoney'] = $allMoney;
        $data['miniNum'] = $set['minimum'];
        $data['tixiantype'] = $set['tixiantype'];
        $data['data'] = $data;
        return json_encode($data);
    }


    // 收支记录
    public function dopagegetSzjl()
    {
        $uniacid = input('uniacid');
        $sid = input('id');
        $openid = input('openid');
        $Txrecords = Db::name('wd_xcx_shops_tixian')->where('uniacid', $uniacid)->where('sid', $sid)->field('createtime as creattime, money, flag, types')->order('createtime desc')->select();
        foreach ($Txrecords as $key => &$value) {
            $value['from'] = 'tx';
        }

        $Szrecords = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('sid', $sid)->where('flag', 'in', [2])->field('price,creattime,flag')->order('creattime desc')->select();
        foreach ($Szrecords as $key => &$value) {
            $value['from'] = 'buy';
        }

        $data['data'] = [$Txrecords, $Szrecords];
        return json_encode($data);
    }

    // 提现记录
    public function dopagegetTxjl()
    {
        $uniacid = input('uniacid');
        $sid = input('id');
        $records = Db::name('wd_xcx_shops_tixian')->where('uniacid', $uniacid)->where('sid', $sid)->order('createtime desc')->select();
        $data['data'] = $records;
        return json_encode($data);
    }

    //多商户提现申请
    public function doPagegoTixian()
    {
        $uniacid = input('uniacid');
        $sid = input('sid');
        $suid = input('suid');
        $source = input('source');
        $openid = input('openid');
        $types = input('buy_type');
        $account = input('account');
        $money = input('money');
        $beizhu = input('beizhu');
        //获取钱包余额
        $tixian = Db::name('wd_xcx_shops_shop')->where('uniacid', $uniacid)->where('id', $sid)->field('tixian')->find()['tixian'];
        //获取最低提现额度
        $minimum = Db::name('wd_xcx_shops_set')->where('uniacid', $uniacid)->field('minimum')->find()['minimum'];
        if (!$types) {
            $message = false;
        } elseif (!$account) {
            $message = false;
        } elseif (!$money) {
            $message = false;
        } elseif ($tixian < $money) {
            $message = false;
        } elseif ($money < $minimum) {
            $message = false;
        } else {
            $message = true;
        }

        if ($message = true) {
            //如果没有错误，执行提现请求
            //减去用户余额
            Db::name('wd_xcx_shops_shop')->where('uniacid', $uniacid)->where('id', $sid)->update(['tixian' => $tixian - $money]);
            $data = array(
                'uniacid' => $uniacid,
                'sid' => $sid,
                'suid' => $suid,
                'openid' => $openid,
                'source' => $source,
                'money' => $money,
                'types' => $types,
                'account' => $account,
                'beizhu' => $beizhu,
                'flag' => 0,
                'createtime' => time(),
                'formID' => input('formID')
            );
            $newid = Db::name('wd_xcx_shops_tixian')->insertGetId($data);
            //开始发邮件
            $formsConfig = Db::name('wd_xcx_forms_config')->where('uniacid', $uniacid)->field('mail_sendto,mail_user,mail_password,mail_user_name')->find();
            $shopname = Db::name('wd_xcx_shops_shop')->where('id', $sid)->field('username')->find()['username'];
            $title = $newid . '---' . $shopname . '申请提现:' . $data['money'] . '元';
            $now = date('Y-m-d H:i:s', time());
            $mail_sendto = array();
            $mail_sendto = explode(",", $formsConfig['mail_sendto']);
            $row_mail_user = $formsConfig['mail_user'];
            $row_mail_pass = $formsConfig['mail_password'];
            $row_mail_name = $formsConfig['mail_user_name'];
            $mail = new PHPMailer();
            $mail->CharSet = "utf-8";
            $mail->Encoding = "base64";
            $mail->SMTPSecure = "ssl";
            $mail->IsSMTP();
            $mail->Port = 465;
            $mail->Host = "smtp.qq.com";
            $mail->SMTPAuth = true;
            $mail->SMTPDebug = false;
            $mail->Username = $row_mail_user;
            $mail->Password = $row_mail_pass;
            $mail->setFrom($row_mail_user, $row_mail_name);
            foreach ($mail_sendto as $v) {
                $mail->AddAddress($v);
            }
            $mail->Subject = $title;
            $mail->isHTML(true);
            $mail->Body = "<div style='height:40px;line-height:40px;font-size:16px;font-weight:bold;background:#7030A0;color:#fff;text-indent:10px;'>提现详情：</div><div style='line-height:30px;padding:15px;background:#f6f6f6'>申请时间:" . $now . "<br>店铺名称:" . $shopname . "<br>提现金额:" . $data['money'] . "元<div style='line-height:40px;margin-top:10px;text-align:center;color:#888;font-size:12px'>" . $row_mail_name . "</div></div>";
            if (!$mail->send()) {
                $result1 = "send_err";
            } else {
                $result1 = "send_ok";
            }

            $re_data['data'] = $result1;
            return json_encode($re_data);

        } else {//如果有错误，直接返回错误信息
            return json_encode(array('data' => $message));
        }
    }


    //多商户小程序端发货
    public function doPagedoSend()
    {
        $uniacid = input('uniacid');
        $id = input('id');
        $sid = input('sid');
        $kdname = input('kdname');
        $kdnum = input('kdnum');

        $order = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('id', $id)->find();
        if ($order['nav'] == 1) {
            $data = array(
                'flag' => 4,
                'kuadi' => $kdname,
                'kuaidihao' => $kdnum,
                'hxtime' => time()
            );
            $result = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('id', $id)->update($data);
            if ($result) {
                return json_encode(array('data' => 1));
            }
        }

    }

//    商品评论开始
    //获取评价商品信息
    public function doPageAssesspro()
    {
        $uniacid = input('uniacid');
        $order_id = input('order_id');
        $type = input('type');
        $count = 0;
        $pid = input('pid');
        if($type == 'mainshop'){
            $order = Db::name("wd_xcx_main_shop_order_item")->where("order_item_id", $order_id)->where("uniacid", $uniacid)->find();
            $pro = [];
            if($order){
                $pro['pid'] = $order['pro_id'];
                $pro['title'] = $order['pro_title'];
                $pro['thumb'] = remote($uniacid, $order['pro_thumb'], 1);
                $count = 1;
            }
        }else if ($type == 'duo') {
            $order = Db::name("wd_xcx_duo_products_order")->where("order_id", $order_id)->where("uniacid", $uniacid)->find();
            $order['jsondata'] = unserialize($order['jsondata']);
            $pro = [];
            if (count($order['jsondata']) > 1) {
                foreach ($order['jsondata'] as $key => &$value) {
                    if ($pid && $value['pvid']) {
                        $pro['pid'] = $value['pvid'];
                        $pro['title'] = $value['baseinfo']['title'];
                        if ($value['proinfo']['thumb'] && !strstr($value['proinfo']['thumb'], "http")) {
                            $pro['thumb'] = remote($uniacid, $value['proinfo']['thumb'], 1);
                        } else {
                            $pro['thumb'] = $value['proinfo']['thumb'];
                        }
                        break;
                    } else {
                        $pro_duo['pid'] = $value['pvid'];
                        $pro_duo['title'] = $value['baseinfo']['title'];
                        if ($value['proinfo']['thumb'] && !strstr($value['proinfo']['thumb'], "http")) {
                            $pro_duo['thumb'] = remote($uniacid, $value['proinfo']['thumb'], 1);
                        } else {
                            $pro_duo['thumb'] = $value['proinfo']['thumb'];
                        }
                        array_push($pro, $pro_duo);
                    }
                }
                if (!$pid) {
                    $count = count($pro);
                }

            } else {
                $pro['pid'] = $order['jsondata'][0]['pvid'];
                $pro['title'] = $order['jsondata'][0]['baseinfo']['title'];
                if ($order['jsondata'][0]['proinfo']['thumb'] && !strstr($order['jsondata'][0]['proinfo']['thumb'], "http")) {
                    $pro['thumb'] = remote($uniacid, $order['jsondata'][0]['proinfo']['thumb'], 1);
                } else {
                    $pro['thumb'] = $order['jsondata'][0]['proinfo']['thumb'];
                }
            }

        } else if ($type == 'shop') {
            $order = Db::name("wd_xcx_duo_products_order")->where("order_id", $order_id)->where("uniacid", $uniacid)->find();
            $order['jsondata'] = unserialize($order['jsondata']);
            foreach ($order['jsondata'] as $key => &$value) {
                if ($type == 'duo') {
                    $pro['pid'] = $value['pvid'];
                } else {
                    $pro['pid'] = $value['pid'];
                }
                $pro['title'] = $value['baseinfo']['title'];
                if ($value['proinfo']['thumb'] && !strstr($value['proinfo']['thumb'], "http")) {
                    $pro['thumb'] = remote($uniacid, $value['proinfo']['thumb'], 1);
                } else {
                    $pro['thumb'] = $value['proinfo']['thumb'];
                }
            }
        } else if ($type == 'miaosha' || $type == 'reserve') {
            $pro = Db::name("wd_xcx_products")->alias('a')->join('wd_xcx_order b', 'a.id = b.pid')->where('b.order_id', $order_id)->field("a.thumb,a.title,a.id as pid")->find();
            if ($pro['thumb'] && !strstr($pro['thumb'], "http")) {
                $pro['thumb'] = remote($uniacid, $pro['thumb'], 1);
            }
        } else if ($type == 'bargain') {
            $pro = Db::name("wd_xcx_bargain_pro")->alias('a')->join("wd_xcx_bargain_order b", "a.id = b.pid")->where("b.order_id", $order_id)->field("a.thumb,a.title,a.id as pid")->find();
            $pro['thumb'] = remote($uniacid, $pro['thumb'], 1);
        }

        return json_encode(['data' => $pro, 'count' => $count]);
    }

    //提交商品订单评价
    public function doPageEvaluateSub()
    {
        $uniacid = input('uniacid');
        $assess = input('assess');
        $evaluatecon = input('evaluatecon');
        $anonymous = input('anonymous');
        $suid = input('suid');
        $pid = input('pid');
        $orderid = input('order_id');
        $type = input('type');
        $add = input('add');
        $imgs = '';
        if (input('imgs')) {
            $imgs = stripslashes(html_entity_decode(input('imgs')));
            $imgs = json_decode($imgs, TRUE);
        }
        if ($add == 1) {
            $data = [
                'append_content' => $evaluatecon,
                'append_imgs' => $imgs ? serialize($imgs) : '',
                'append_creattime' => date('Y-m-d H:i:s', time())
            ];
            $res = Db::name("wd_xcx_evaluate")->where('orderid', $orderid)->where('uniacid', $uniacid)->where('pid', $pid)->update($data);
        } else {
            if ($type == 'duo' || $type == 'shop') {
                Db::name('wd_xcx_duo_products_order')->where('order_id', $orderid)->where('uniacid', $uniacid)->update(array('assess' => 2));
            } else if ($type == 'miaosha' || $type == 'reserve') {
                Db::name('wd_xcx_order')->where('order_id', $orderid)->where('uniacid', $uniacid)->update(array('assess' => 2));
            } else if ($type == 'bargain') {
                Db::name('wd_xcx_bargain_order')->where('order_id', $orderid)->update(array('assess' => 2));
            }
            $data = array(
                'uniacid' => $uniacid,
                'pid' => $pid,
                'orderid' => $orderid,
                'assess' => $assess,
                'content' => $evaluatecon,
                'anonymous' => $anonymous,
                'imgs' => $imgs ? serialize($imgs) : '',
                'suid' => $suid,
                'type' => $type,
                'creattime' => date('Y-m-d H:i:s', time())
            );
            $res = Db::name("wd_xcx_evaluate")->insert($data);
        }
        return json_encode($res);
    }

    //购物车多个商品订单评价提交
    public function doPageDuoEvaluateSub()
    {
        $uniacid = input('uniacid');
        $assess = input('assess');
        $evaluatecon = input('evaluatecon');
        $anonymous = input('anonymous');
        $suid = input('suid');
        $duoPro = input('duoPro');
        $orderid = input('order_id');
        $type = input('type');
        $add = input('add');
        $imgs = '';

        if (input('imgs')) {
            $imgs = stripslashes(html_entity_decode(input('imgs')));
            $imgs = json_decode($imgs, TRUE);
        }

        $assess = json_decode(stripslashes(html_entity_decode(input('assess'))), TRUE);
        $evaluatecon = json_decode(stripslashes(html_entity_decode(input('evaluatecon'))), TRUE);
        $anonymous = json_decode(stripslashes(html_entity_decode(input('anonymous'))), TRUE);
        $duoPro = json_decode(stripslashes(html_entity_decode(input('duoPro'))), TRUE);

        if ($add == 1) {
            $data = [
                'append_content' => $evaluatecon,
                'append_imgs' => $imgs ? serialize($imgs) : '',
                'append_creattime' => date('Y-m-d H:i:s', time())
            ];
            $res = Db::name("wd_xcx_evaluate")->where('orderid', $orderid)->where('uniacid', $uniacid)->update($data);
        } else {
            Db::name('wd_xcx_duo_products_order')->where('order_id', $orderid)->where('uniacid', $uniacid)->update(array('assess' => 2)); //改变状态  已评价
            //处理数据
            $data = [];
            foreach ($duoPro as $key => $value) {
                $arr = [
                    'uniacid' => $uniacid,
                    'pid' => $value['pid'],
                    'orderid' => $orderid,
                    'assess' => $assess[$key]['id'],
                    'content' => $evaluatecon[$key]['evaluatecon'],
                    'anonymous' => $anonymous[$key]['anonymous'],
                    'imgs' => $imgs[$key] ? serialize($imgs[$key]) : '',
                    'suid' => $suid,
                    'type' => 'duo',
                    'creattime' => date('Y-m-d H:i:s', time())
                ];
                array_push($data, $arr);
            }

            $res = Db::name("wd_xcx_evaluate")->insertAll($data);
        }
        return json_encode($res);
    }

    //获取商品评价列表
    public function doPageEvaluateList()
    {
        $uniacid = input('uniacid');
        $flag = input('flag');
        $id = input('id');
        $type = input('protype');
        $flag = input('flag');
        $openid = input('openid');
        $suid = input('suid');
        $source = input('source');
        $user = input('user');
        $where = "";
        if ($flag == 1) {
            $where = " and assess = 1";
        } else if ($flag == 2) {
            $where = " and assess = 2";
        } else if ($flag == 3) {
            $where = " and assess = 3";
        }

        $pindex = max(1, intval(input('page')));
        $psize = 10;
        $prefix = config('database.prefix');
        if ($user == 1) {
            $evaluatelist = Db::query("SELECT * FROM {$prefix}wd_xcx_evaluate WHERE uniacid = {$uniacid} AND suid = '{$suid}' " . $where . "  order by id desc limit " . ($pindex - 1) * $psize . ",{$psize}");
        } else {
            $evaluatelist = Db::query("SELECT * FROM {$prefix}wd_xcx_evaluate WHERE uniacid = {$uniacid} AND pid= {$id} AND type='{$type}' {$where}  order by id desc limit " . ($pindex - 1) * $psize . ",{$psize}");
        }
        if ($evaluatelist) {
            foreach ($evaluatelist as $key => &$value) {
                $is = Db::name("wd_xcx_evaluate_likes")->where('uniacid', $uniacid)->where('eid', $value['id'])->where('suid', $suid)->where("likes", 1)->find();
                if ($is) {
                    $value['addlikes'] = 1;
                } else {
                    $value['addlikes'] = 2;
                }
                $userinfo = $this->getnameandavatar($source, $uniacid, $value['suid']);
                $value['nickname'] = $userinfo['nickname'];
                $value['avatar'] = $userinfo['avatar'];

                if ($value['imgs']) {
                    $value['imgs'] = unserialize($value['imgs']);
                } else {
                    $value['imgs'] = [];
                }
                if ($value['append_imgs']) {
                    $value['append_imgs'] = unserialize($value['append_imgs']);
                } else {
                    $value['append_imgs'] = [];
                }
            }
        }
        return json_encode($evaluatelist);
    }

    //点赞
    public function doPageEvaluatelikes()
    {
        $uniacid = input('uniacid');
        $id = input('id');
        $suid = input('suid');

        $is = Db::name("wd_xcx_evaluate_likes")->where('eid', $id)->where('suid', $suid)->where('uniacid', $uniacid)->find();
        $return = [];
        if ($is) {
            $is = Db::name("wd_xcx_evaluate_likes")->where('eid', $id)->where('suid', $suid)->where('likes', 1)->where('uniacid', $uniacid)->find();
            if ($is) {
                $likes = 2;
                $where = "-";
                $return['likes'] = 2;
            } else {
                $likes = 1;
                $where = "+";
                $return['likes'] = 1;
            }
            Db::name("wd_xcx_evaluate_likes")->where('eid', $id)->where('suid', $suid)->where('uniacid', $uniacid)->update(array("likes" => $likes));
        } else {
            $data = [
                'uniacid' => $uniacid,
                'eid' => $id,
                'likes' => 1,
                'suid' => $suid,
                'creattime' => date('Y-m-d H:i:s', time())
            ];
            Db::name("wd_xcx_evaluate_likes")->insert($data);
            $where = "+";
            $return['likes'] = 1;
        }
        $prefix = config('database.prefix');
        $res = Db::execute("UPDATE {$prefix}wd_xcx_evaluate set likes = likes {$where} 1 WHERE id = {$id} AND uniacid = {$uniacid}");
        if ($res) {
            $return['flag'] = 1;
        } else {
            $return['flag'] = 2;
        }
        return json_encode($return);
    }

    //获取商品详情
    public function doPageEvaluateDetail()
    {
        $uniacid = input('uniacid');
        $id = input('id');
        $openid = input('openid');
        // $suid = input('suid');
        $source = input('source');
        $prefix = config('database.prefix');
        Db::execute("UPDATE {$prefix}wd_xcx_evaluate set hits= hits+1 WHERE id = {$id} AND uniacid = {$uniacid}");

        $info = Db::name("wd_xcx_evaluate")->alias('a')->join("wd_xcx_superuser b", 'a.suid = b.id and a.uniacid = b.uniacid')->where("a.uniacid", $uniacid)->where('a.id', $id)->field("a.*,b.id as userid")->find();
        if ($info) {
            $is = Db::name("wd_xcx_evaluate_likes")->where('eid', $info['id'])->where('suid', $info['userid'])->where('uniacid', $uniacid)->where("likes", 1)->find();
            if ($is) {
                $info['addlikes'] = 1;
            } else {
                $info['addlikes'] = 2;
            }
            $userinfo = $this->getnameandavatar($source, $uniacid, $info['userid']);
            $info['nickname'] = $userinfo['nickname'];
            $info['avatar'] = $userinfo['avatar'];
            if ($info['imgs']) {
                $info['imgs'] = unserialize($info['imgs']);
            }
            if ($info['append_content']) {
                $info['append_days'] = intval((strtotime($info['append_creattime']) - strtotime($info['creattime'])) / 86400);
            }
            if ($info['append_imgs']) {
                $info['append_imgs'] = unserialize($info['append_imgs']);
            }
        }
        return json_encode($info);
    }

    //秒杀再次下单获取订单信息
    public function doPagegetDanOrder()
    {
        $uniacid = input("uniacid");
        $orderid = input("orderid");
        $result = [];
        if ($orderid > 0) {
            $order = Db::name('wd_xcx_order')->where('order_id', $orderid)->where('flag', 0)->where('uniacid', $uniacid)->field('id,yhinfo,coupon,suid,true_price,pay_price,m_address,beizhu_val,nav,dkscore')->find();

            if ($order) {
                $yue = $order['true_price'] - $order['pay_price'];
                if ($yue > 0) {
                    $is = Db::name('wd_xcx_superuser')->where('id', $order['suid'])->where('money', '>=', $yue)->where('uniacid', $uniacid)->field('id')->find();
                    if ($is) {
                        $result['yue'] = $yue;
                    } else {
                        $result['err'] = 1;
                        $res['data'] = $result;
                        return json_encode($result);
                    }
                } else {
                    $result['yue'] = 0;
                }
                if ($order['m_address'] == '') {
                    $result['m_address'] = '';
                    $result['m_address_l'] = 0;
                } else {
                    $result['m_address'] = unserialize($order['m_address']);
                    $result['m_address_l'] = count($result['m_address']);
                }
                $result['beizhu_val'] = $order['beizhu_val'];
                if ($order['yhinfo']) {
                    $yhInfo = unserialize($order['yhinfo']);

                    if ($yhInfo['yhq']['money'] > 0) {
                        $is = Db::name('wd_xcx_coupon_user')->where('id', $order['coupon'])->where('flag', 0)->find();
                        if (!$is) {
                            $result['err'] = 1;
                            $res['data'] = $result;
                            return json_encode($res);
                        }
                    }
                    if ($yhInfo['score']['money'] > 0) {
                        $is = Db::name('wd_xcx_superuser')->where('id', $order['suid'])->where('uniacid', $uniacid)->where('score', '>=', $order['dkscore'])->find();
                        if (!$is) {
                            $result['err'] = 1;
                            $res['data'] = $result;
                            return json_encode($res);
                        }
                    }
                    $result['err'] = 0;
                    $result['yhInfo'] = $yhInfo;
                    $result['true_price'] = $order['true_price'];
                    $result['nav'] = $order['nav'];
                    $res['data'] = $result;
                    return json_encode($res);
                } else {
                    $result['err'] = 0;
                    $result['yhInfo'] = [];
                    $result['true_price'] = $order['true_price'];
                    $result['nav'] = $order['nav'];
                    $res['data'] = $result;
                    return json_encode($res);
                }
            } else {
                $result['err'] = 1;
                $res['data'] = $result;
                return json_encode($res);
            }
        } else {
            $result['err'] = 1;
            $res['data'] = $result;
            return json_encode($res);
        }
    }


    //多商户手机端核销商品
    public function dopageduoshophx()
    {
        $appletid = input("uniacid");
        $order_id = input("order_id");
        $shopid = input('sid');
        $data['hxtime'] = time();
        $data['flag'] = 2;
        $r = Db::name('wd_xcx_duo_products_order')->where("uniacid", $appletid)->where("order_id", $order_id)->update($data);
        if ($shopid != '0') {
            $money = Db::name('wd_xcx_shops_shop')->where("uniacid", $appletid)->where("id", $shopid)->find()['tixian'];
            $add = Db::name('wd_xcx_duo_products_order')->where("uniacid", $appletid)->where("order_id", $order_id)->find()['price'];
            $jiesuan = Db::name('wd_xcx_shops_set')->where('uniacid', $appletid)->find();
            $jiesuan = $jiesuan['jiesuan'];
            if (floatval($jiesuan) > 0) {
                $d = floatval($jiesuan) / 100;
                $c = $add * $d;
                $price = $add - $c;
                $price = round($price, 2);
                $money = $money + $price;
            } else {
                $money = $money + $add;
            }
            $result = Db::name('wd_xcx_shops_shop')->where("uniacid", $appletid)->where("id", $shopid)->update(array('tixian' => $money));
        }
        if ($result && $r) {
            return json_encode(array('data' => 1));
        } else {
            return json_encode(array('data' => -1));
        }
    }

    protected function getNotifyUrl($url)
    {

        $current_url = $_SERVER['HTTP_HOST'] . $url;


        return $current_url;
    }


    //支付宝小程序支付
    public function doPageAlipay()
    {
        $notfiy = $_SERVER['HTTP_HOST'] . STATIC_ROOT . "/alipay.php";
        include_once 'alipaysdk/aop/AopClient.php';
        include_once 'alipaysdk/aop/request/AlipayTradeCreateRequest.php';
        $orderid = input('order_id');

        $uniacid = input('uniacid');
        $suid = input('suid');

        $applet = Db::name('wd_xcx_applet')->where('id', $uniacid)->field('ali_appID, ali_public_key,  ali_private_key')->find();
        $aliuser = Db::name('wd_xcx_ali_user')->where('suid', $suid)->field('user_id')->find();
        $types = input('types');
        $aop = new AopClient ();
        $aop->gatewayUrl = 'https://openapi.alipay.com/gateway.do';
        $aop->appId = $applet['ali_appID'];
        $aop->rsaPrivateKey = $applet['ali_private_key'];
        $aop->alipayrsaPublicKey = $applet['ali_public_key'];
        $aop->apiVersion = '1.0';
        $aop->signType = 'RSA2';
        $aop->postCharset = 'UTF-8';
        $aop->format = 'json';
        $request = new \AlipayTradeCreateRequest();

        if ($types == 'fabu') {
            $money = input('money');
            $body = 'fabu|' . $uniacid . '|fabu|' . $suid;
            $request->setBizContent("{'subject':'微同城发布支付','out_trade_no': '" . $orderid . "','total_amount': '" . $money . "','buyer_id':" . $aliuser['user_id'] . ", 'body': '" . $body . "'}");

        } elseif ($types == 'settop') {
            $money = input('money');
            $body = 'settop|' . $uniacid . '|settop|' . $suid;
            $request->setBizContent("{'subject':'微同城置顶支付','out_trade_no': '" . $orderid . "','total_amount': '" . $money . "','buyer_id':" . $aliuser['user_id'] . ", 'body': '" . $body . "'}");
        } elseif ($types == 'supfabu') {
            $money = input('money');
            $body = 'supfabu|' . $uniacid . '|supfabu|' . $suid;

            $request->setBizContent("{'subject':'供求发布支付','out_trade_no': '" . $orderid . "','total_amount': '" . $money . "','buyer_id':" . $aliuser['user_id'] . ", 'body': '" . $body . "'}");

        } elseif ($types == 'supsettop') {
            $money = input('money');
            $body = 'supsettop|' . $uniacid . '|supsettop|' . $suid;

            $request->setBizContent("{'subject':'供求置顶支付','out_trade_no': '" . $orderid . "','total_amount': '" . $money . "','buyer_id':" . $aliuser['user_id'] . ", 'body': '" . $body . "'}");


        } elseif ($types == 'duo') {
            $orderinfo = Db::name('wd_xcx_duo_products_order')->where('order_id', $orderid)->field('payprice')->find();
            $body = 'duo|' . $uniacid . '|duo|' . $suid;
            $request->setBizContent("{'subject':'商品订单','out_trade_no': '" . $orderid . "','total_amount': '" . $orderinfo['payprice'] . "','buyer_id':" . $aliuser['user_id'] . ", 'body': '" . $body . "'}");

        } elseif ($types == 'mainShop') {
            $orderinfo = Db::name('wd_xcx_main_shop_order')->where('order_id', $orderid)->field('pay_money')->find();
            $body = 'mainShop|' . $uniacid . '|mainShop|' . $suid;
            $request->setBizContent("{'subject':'商品订单','out_trade_no': '" . $orderid . "','total_amount': '" . $orderinfo['pay_money'] . "','buyer_id':" . $aliuser['user_id'] . ", 'body': '" . $body . "'}");

        } elseif ($types == 'miaosha') {
            $orderinfo = Db::name('wd_xcx_order')->where('order_id', $orderid)->field('price')->find();
            $body = 'miaosha|' . $uniacid . '|miaosha|' . $suid;
            $request->setBizContent("{'subject':'商品订单','out_trade_no': '" . $orderid . "','total_amount': '" . $orderinfo['price'] . "','buyer_id':" . $aliuser['user_id'] . ", 'body': '" . $body . "'}");
        } elseif ($types == 'reserve') {
            $orderinfo = Db::name('wd_xcx_order')->where('order_id', $orderid)->field('pay_price')->find();
            $body = 'reserve|' . $uniacid . '|reserve|' . $suid;
            $request->setBizContent("{'subject':'商品订单','out_trade_no': '" . $orderid . "','total_amount': '" . $orderinfo['pay_price'] . "','buyer_id':" . $aliuser['user_id'] . ", 'body': '" . $body . "'}");
        } elseif ($types == 'pt') {
            $orderinfo = Db::name('wd_xcx_pt_order')->where('order_id', $orderid)->field('price')->find();
            $body = 'pt|' . $uniacid . '|pt|' . $suid;
            if ($orderinfo['price'] == input('money')) {
                $request->setBizContent("{'subject':'商品订单','out_trade_no': '" . $orderid . "','total_amount': '" . $orderinfo['price'] . "','buyer_id':" . $aliuser['user_id'] . ", 'body': '" . $body . "'}");
            } else {
                return false;
            }

        } elseif ($types == 'art') {
            // $orderinfo = Db::name('wd_xcx_video_pay') ->where('orderid', $orderid) ->field('paymoney as wx_price') ->find();
            $body = 'art|' . $uniacid . '|art|' . $suid;
            if (input('money')) {
                $request->setBizContent("{'subject':'商品订单','out_trade_no': '" . $orderid . "','total_amount': '" . input('money') . "','buyer_id':" . $aliuser['user_id'] . ", 'body': '" . $body . "'}");
            } else {
                return false;
            }

        } elseif ($types == 'food') {
            $orderinfo = Db::name('wd_xcx_food_order')->where('order_id', $orderid)->field('wx_price')->find();
            $body = 'food|' . $uniacid . '|food|' . $suid;
            $request->setBizContent("{'subject':'餐饮订单','out_trade_no': '" . $orderid . "','total_amount': '" . $orderinfo['wx_price'] . "','buyer_id':" . $aliuser['user_id'] . ", 'body': '" . $body . "'}");

        } elseif ($types == 'shoppay') {
            $money = input('money');
            $body = 'shoppay|' . $uniacid . '|shoppay|' . $suid;
            $request->setBizContent("{'subject':'店内支付','out_trade_no': '" . $orderid . "','total_amount': '" . $money . "','buyer_id':" . $aliuser['user_id'] . ", 'body': '" . $body . "'}");

        } elseif ($types == 'bargain') {
            $money = input('money');
            $body = 'bargain|' . $uniacid . '|bargain|' . $suid;

            $request->setBizContent("{'subject':'砍价订单','out_trade_no': '" . $orderid . "','total_amount': '" . $money . "','buyer_id':" . $aliuser['user_id'] . ", 'body': '" . $body . "'}");
        } elseif ($types == 'recharge') {
            $money = input('money');
            $body = 'recharge|' . $uniacid . '|recharge|' . $suid;
            $request->setBizContent("{'subject':'充值','out_trade_no': '" . $orderid . "','total_amount': '" . $money . "','buyer_id':" . $aliuser['user_id'] . ", 'body': '" . $body . "'}");
        } elseif ($types == 'vipgrade') {
            $money = input('money');
            $body = 'vipgrade|' . $uniacid . '|vipgrade|' . $suid;
            $request->setBizContent("{'subject':'会员等级升级支付','out_trade_no': '" . $orderid . "','total_amount': '" . $money . "','buyer_id':" . $aliuser['user_id'] . ", 'body': '" . $body . "'}");
        } else {
            if ($orderid) {   //有订单号  订单支付
                $orderinfo = Db::name('wd_xcx_duo_products_order')->where('order_id', $orderid)->field('payprice')->find();

                //订单描述
                $body = 'duo|' . $uniacid;

            } else {   //没有订单号,  充值

                $now = time();
                $orderid = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);

                $money = input('money');

                $orderinfo['payprice'] = $money;

                //订单描述
                $body = 'recharge|' . $uniacid . '|recharge|' . $suid;

            }
        }
        $request->setNotifyUrl($notfiy);
        $result = $aop->execute($request);
        $responseNode = str_replace(".", "_", $request->getApiMethodName()) . "_response";
        $resultCode = $result->$responseNode->code;

        if (!empty($resultCode) && $resultCode == 10000) {
            $data['trade_no'] = $result->$responseNode->trade_no;
            return json_encode($data);
            // echo "成功";
        } else {
            return false;
        }
    }

    //


    //支付宝H5支付
    public function doPageHfivepay()
    {
        $orderid = input('order_id');
        $uniacid = input('uniacid');
        $suid = input('suid');
        $types = input('types');

        if ($types == 17) {  //新版商品支付
            $pay_money = Db::name('wd_xcx_main_shop_order')->where('uniacid', $uniacid)->where('order_id', $orderid)->value('pay_money');
            $money = input('money');
            if ($pay_money * 100 == $money * 100) {
                $orderinfo = [
                    'order_id' => $orderid,
                    'payprice' => $pay_money,
                    'uniacid' => $uniacid,
                    'goods_title' => '商品支付',
                    'suid' => $suid,
                ];
                $rediscon = $this->GetRediscon();
                $redis = new Redis($rediscon);
                $redis->set($orderid, json_encode($orderinfo));
                return json_encode(['data' => $orderid, 'flag' => 1]);
            } else {
                return json_encode(['msg' => '支付价格不正确！', 'flag' => 2]);
            }

        }


        if ($types == 3) {  //微同城发布支付
            $orderinfo = [
                'order_id' => $orderid,
                'payprice' => input('money'),
                'uniacid' => $uniacid,
                'goods_title' => '微同城发布支付',
                'suid' => $suid,
            ];
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $redis->set($orderid, json_encode($orderinfo));

            return json_encode(['data' => $orderid, 'flag' => 1]);
        }

        if ($types == 4) {  //微同城置顶支付
            $orderinfo = [
                'order_id' => $orderid,
                'payprice' => input('money'),
                'uniacid' => $uniacid,
                'goods_title' => '微同城置顶支付',
                'suid' => $suid,
            ];
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $redis->set($orderid, json_encode($orderinfo));

            return json_encode(['data' => $orderid, 'flag' => 1]);
        }

        if ($types == 5) {  //供求发布支付
            $orderinfo = [
                'order_id' => $orderid,
                'payprice' => input('money'),
                'uniacid' => $uniacid,
                'goods_title' => '供求发布支付',
                'suid' => $suid,
            ];
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $redis->set($orderid, json_encode($orderinfo));

            return json_encode(['data' => $orderid, 'flag' => 1]);
        }

        if ($types == 6) {  //供求置顶支付
            $orderinfo = [
                'order_id' => $orderid,
                'payprice' => input('money'),
                'uniacid' => $uniacid,
                'goods_title' => '供求置顶支付',
                'suid' => $suid,
            ];
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $redis->set($orderid, json_encode($orderinfo));

            return json_encode(['data' => $orderid, 'flag' => 1]);
        }

        if ($types == 7) {  //秒杀订单支付
            $orderinfo = [
                'order_id' => $orderid,
                'payprice' => input('money'),
                'uniacid' => $uniacid,
                'goods_title' => '秒杀订单支付',
                'suid' => $suid,
            ];
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $redis->set($orderid, json_encode($orderinfo));

            return json_encode(['data' => $orderid, 'flag' => 1]);
        }

        if ($types == 8) {  //多商户订单支付
            $orderinfo = [
                'order_id' => $orderid,
                'payprice' => input('money'),
                'uniacid' => $uniacid,
                'goods_title' => '多商户订单支付',
                'suid' => $suid,
            ];
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $redis->set($orderid, json_encode($orderinfo));

            return json_encode(['data' => $orderid, 'flag' => 1]);
        }

        if ($types == 9) {  //预约预定订单支付
            $orderinfo = [
                'order_id' => $orderid,
                'payprice' => input('money'),
                'uniacid' => $uniacid,
                'goods_title' => '预约预定订单支付',
                'suid' => $suid,
            ];
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $redis->set($orderid, json_encode($orderinfo));

            return json_encode(['data' => $orderid, 'flag' => 1]);
        }

        if ($types == 10) {  //拼团订单支付
            $orderinfo = [
                'order_id' => $orderid,
                'payprice' => input('money'),
                'uniacid' => $uniacid,
                'goods_title' => '拼团订单支付',
                'suid' => $suid,
            ];
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $redis->set($orderid, json_encode($orderinfo));

            return json_encode(['data' => $orderid, 'flag' => 1]);
        }

        if ($types == 11) {  //付费文章订单支付
            $orderinfo = [
                'order_id' => $orderid,
                'payprice' => input('money'),
                'uniacid' => $uniacid,
                'goods_title' => '付费文章订单支付',
                'suid' => $suid,
            ];
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $redis->set($orderid, json_encode($orderinfo));

            return json_encode(['data' => $orderid, 'flag' => 1]);
        }

        if ($types == 12) {  //餐饮订单
            $orderinfo = [
                'order_id' => $orderid,
                'payprice' => input('money'),
                'uniacid' => $uniacid,
                'goods_title' => '餐饮订单支付',
                'suid' => $suid,
            ];
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $redis->set($orderid, json_encode($orderinfo));

            return json_encode(['data' => $orderid, 'flag' => 1]);
        }

        if ($types == 13) {  //店内支付订单
            $orderinfo = [
                'order_id' => $orderid,
                'payprice' => input('money'),
                'uniacid' => $uniacid,
                'goods_title' => '店内支付',
                'suid' => $suid,
            ];
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $redis->set($orderid, json_encode($orderinfo));

            return json_encode(['data' => $orderid, 'flag' => 1]);
        }

        if ($types == 14) {  //砍价订单
            $orderinfo = [
                'order_id' => $orderid,
                'payprice' => input('money'),
                'uniacid' => $uniacid,
                'goods_title' => '砍价订单',
                'suid' => $suid,
            ];
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $redis->set($orderid, json_encode($orderinfo));

            return json_encode(['data' => $orderid, 'flag' => 1]);
        }

        if ($types == 15) {  //充值订单
            $orderinfo = [
                'order_id' => $orderid,
                'payprice' => input('money'),
                'uniacid' => $uniacid,
                'goods_title' => '充值',
                'suid' => $suid,
            ];
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $redis->set($orderid, json_encode($orderinfo));

            return json_encode(['data' => $orderid, 'flag' => 1]);
        }

        if ($types == 16) {  //会员等级升级支付
            $orderinfo = [
                'order_id' => $orderid,
                'payprice' => input('money'),
                'uniacid' => $uniacid,
                'goods_title' => '会员等级升级支付',
                'suid' => $suid,
            ];
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $redis->set($orderid, json_encode($orderinfo));

            return json_encode(['data' => $orderid, 'flag' => 1]);
        }


        $orderinfo = Db::name('wd_xcx_duo_products_order')->where('order_id', $orderid)->find();

        $goods = unserialize($orderinfo['jsondata']);

        if (count($goods) > 1) {
            $orderinfo['goods_title'] = $goods[0]['baseinfo']['title'] . '...';
        } else {
            $orderinfo['goods_title'] = $goods[0]['baseinfo']['title'];
        }

        if ($orderinfo) {
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $redis->set($orderid, json_encode($orderinfo));

            return json_encode(['data' => $orderid, 'flag' => 1]);

        } else {
            $this->error('没有此订单!');
        }
    }


    //支付宝H5充值
    public function doPageH5recharge()
    {
        $money = input('money');
        $uniacid = input('uniacid');
        $suid = input('suid');

        $now = time();
        $order_id = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);

        $orderinfo = [
            'order_id' => $order_id,
            'payprice' => $money,
            'uniacid' => $uniacid,
            'goods_title' => '充值',
            'suid' => $suid,
        ];

        $rediscon = $this->GetRediscon();
        $redis = new Redis($rediscon);
        $redis->set($order_id, json_encode($orderinfo));

        return json_encode(['data' => $order_id, 'flag' => 1]);
    }


    //H5获取显示支付方式
    public function doPageGetH5payshow()
    {
        $uniacid = input('uniacid');
        $res = Db::name('wd_xcx_applet')->where('id', $uniacid)->field('ali_h5_id, ali_h5_private_key, wx_h5_appid, wx_h5_mchid, wx_h5_signkey')->find();
        $result = [];
        if ($res['ali_h5_id'] && $res['ali_h5_private_key']) {
            $result['ali'] = 1;
        } else {
            $result['ali'] = 0;
        }

        if ($res['wx_h5_appid'] && $res['wx_h5_mchid'] && $res['wx_h5_signkey']) {
            $result['wx'] = 1;
        } else {
            $result['wx'] = 0;
        }

        return json_encode(['data' => $result]);
    }


    //微信H5支付
    public function doPageHfiveWxpay()
    {
        $uniacid = input('uniacid');
        $order_id = input('order_id');
        $suid = input('suid');
        $types = input('types');

        include 'WeixinPay.php';
        $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->field('wx_h5_appid, wx_h5_mchid, wx_h5_signkey')->find();

        $appid = $app['wx_h5_appid'];
        $openid = 'openid';
        $mch_id = $app['wx_h5_mchid'];
        $key = $app['wx_h5_signkey'];

        if ($types == 'mainShop') {   //新版商品订单
            $pay_money = Db::name('wd_xcx_main_shop_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->value('pay_money');
            $money = input('money');
            if ($pay_money * 100 == $money * 100) {
                $out_trade_no = $order_id;
                $body = '商品订单支付';
                $total_fee = $money * 100;   //支付费用  分
                $attach = 'mainShop|formid|' . $uniacid . '|' . $suid;

                $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);
                $result = $weixinpay->h5pay();
                if ($result) {
                    if ($result['return_code'] == 'SUCCESS') {
                        return json_encode(['error' => 0, 'order_id' => $order_id, 'mweb_url' => $result['mweb_url']]);
                    } else {
                        return json_encode(['error' => 2, 'msg' => $result['return_msg']]);
                    }
                } else {
                    return json_encode(['error' => 2, 'msg' => '请求失败，请稍后再试！']);
                }
            } else {
                return json_encode(['error' => 1, 'msg' => '支付价格不正确！']);
            }


        }


        if ($types == 'fabu') {
            $money = input('money');

            $out_trade_no = $order_id;
            $body = '微同城发布支付';
            $total_fee = $money * 100;   //支付费用  分
            $attach = 'fabu|formid|' . $uniacid . '|' . $suid;


            $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);

            $result = $weixinpay->h5pay();
            if ($result) {
                if ($result['return_code'] == 'SUCCESS') {
                    $res = [
                        'error' => 0,
                        'order_id' => $order_id,
                        'mweb_url' => $result['mweb_url']
                    ];
                    return json_encode($res);
                }
            }
        }

        if ($types == 'settop') {
            $money = input('money');

            $out_trade_no = $order_id;
            $body = '微同城发布支付';
            $total_fee = $money * 100;   //支付费用  分
            $attach = 'settop|formid|' . $uniacid . '|' . $suid;

            $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);

            $result = $weixinpay->h5pay();
            if ($result) {
                if ($result['return_code'] == 'SUCCESS') {
                    $res = [
                        'error' => 0,
                        'order_id' => $order_id,
                        'mweb_url' => $result['mweb_url']
                    ];
                    return json_encode($res);
                }
            }
        }

        if ($types == 'supfabu') {
            $money = input('money');

            $out_trade_no = $order_id;
            $body = '供求发布支付';
            $total_fee = $money * 100;   //支付费用  分
            $attach = 'supfabu|formid|' . $uniacid . '|' . $suid;

            $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);

            $result = $weixinpay->h5pay();
            if ($result) {
                if ($result['return_code'] == 'SUCCESS') {
                    $res = [
                        'error' => 0,
                        'order_id' => $order_id,
                        'mweb_url' => $result['mweb_url']
                    ];
                    return json_encode($res);
                }
            }
        }

        if ($types == 'supsettop') {
            $money = input('money');

            $out_trade_no = $order_id;
            $body = '供求发布支付';
            $total_fee = $money * 100;   //支付费用  分
            $attach = 'supsettop|formid|' . $uniacid . '|' . $suid;

            $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);

            $result = $weixinpay->h5pay();
            if ($result) {
                if ($result['return_code'] == 'SUCCESS') {
                    $res = [
                        'error' => 0,
                        'order_id' => $order_id,
                        'mweb_url' => $result['mweb_url']
                    ];
                    return json_encode($res);
                }
            }
        }

        if ($types == 'miaosha') {
            $money = input('money');

            $out_trade_no = $order_id;
            $body = '秒杀订单支付';
            $total_fee = $money * 100;   //支付费用  分
            $attach = 'miaosha|formid|' . $uniacid . '|' . $suid;

            $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);

            $result = $weixinpay->h5pay();
            if ($result) {
                if ($result['return_code'] == 'SUCCESS') {
                    $res = [
                        'error' => 0,
                        'order_id' => $order_id,
                        'mweb_url' => $result['mweb_url']
                    ];
                    return json_encode($res);
                }
            }
        }

        if ($types == 'food') {
            $money = input('money');

            $out_trade_no = $order_id;
            $body = '餐饮订单支付';
            $total_fee = $money * 100;   //支付费用  分
            $attach = 'food|food|' . $uniacid . '|' . $suid;

            $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);

            $result = $weixinpay->h5pay();
            if ($result) {
                if ($result['return_code'] == 'SUCCESS') {
                    $res = [
                        'error' => 0,
                        'order_id' => $order_id,
                        'mweb_url' => $result['mweb_url']
                    ];
                    return json_encode($res);
                }
            }
        }
        if ($types == 'shoppay') {
            $money = input('money');

            $out_trade_no = $order_id;
            $body = '店内支付';
            $total_fee = $money * 100;   //支付费用  分
            $attach = 'shoppay|shoppay|' . $uniacid . '|' . $suid;

            $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);

            $result = $weixinpay->h5pay();
            if ($result) {
                if ($result['return_code'] == 'SUCCESS') {
                    $res = [
                        'error' => 0,
                        'order_id' => $order_id,
                        'mweb_url' => $result['mweb_url']
                    ];
                    return json_encode($res);
                }
            }
        }

        if ($types == 'bargain') {
            $money = input('money');

            $out_trade_no = $order_id;
            $body = '砍价订单';
            $total_fee = $money * 100;   //支付费用  分
            $attach = 'bargain|bargain|' . $uniacid . '|' . $suid;

            $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);

            $result = $weixinpay->h5pay();
            if ($result) {
                if ($result['return_code'] == 'SUCCESS') {
                    $res = [
                        'error' => 0,
                        'order_id' => $order_id,
                        'mweb_url' => $result['mweb_url']
                    ];
                    return json_encode($res);
                }
            }
        }

        if ($types == 'duoshop') {
            $money = input('money');

            $out_trade_no = $order_id;
            $body = '锁商户订单支付';
            $total_fee = $money * 100;   //支付费用  分
            $attach = 'duoshop|formid|' . $uniacid . '|' . $suid;

            $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);

            $result = $weixinpay->h5pay();
            if ($result) {
                if ($result['return_code'] == 'SUCCESS') {
                    $res = [
                        'error' => 0,
                        'order_id' => $order_id,
                        'mweb_url' => $result['mweb_url']
                    ];
                    return json_encode($res);
                }
            }
        }
        if ($types == 'reserve') {
            $money = input('money');

            $out_trade_no = $order_id;
            $body = '预约预定订单支付';
            $total_fee = $money * 100;   //支付费用  分
            $attach = 'reserve|formid|' . $uniacid . '|' . $suid;

            $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);

            $result = $weixinpay->h5pay();
            if ($result) {
                if ($result['return_code'] == 'SUCCESS') {
                    $res = [
                        'error' => 0,
                        'order_id' => $order_id,
                        'mweb_url' => $result['mweb_url']
                    ];
                    return json_encode($res);
                }
            }
        }

        if ($types == 'pt') {
            $money = input('money');

            $out_trade_no = $order_id;
            $body = '拼团订单支付';
            $total_fee = $money * 100;   //支付费用  分
            $attach = 'pt|formid|' . $uniacid . '|' . $suid;

            $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);

            $result = $weixinpay->h5pay();
            if ($result) {
                if ($result['return_code'] == 'SUCCESS') {
                    $res = [
                        'error' => 0,
                        'order_id' => $order_id,
                        'mweb_url' => $result['mweb_url']
                    ];
                    return json_encode($res);
                }
            }
        }

        if ($types == 'art') {  //付费文章订单支付
            $money = input('money');

            $out_trade_no = $order_id;
            $body = '付款文章订单支付';
            $total_fee = $money * 100;   //支付费用  分
            $attach = 'art|formid|' . $uniacid . '|' . $suid;

            $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);

            $result = $weixinpay->h5pay();
            if ($result) {
                if ($result['return_code'] == 'SUCCESS') {
                    $res = [
                        'error' => 0,
                        'order_id' => $order_id,
                        'mweb_url' => $result['mweb_url']
                    ];
                    return json_encode($res);
                }
            }
        }
        if ($types == 'recharge') {  //付费文章订单支付
            $money = input('money');
            $out_trade_no = $order_id;
            $body = '充值';
            $total_fee = $money * 100;   //支付费用  分
            $attach = 'recharge|formid|' . $uniacid . '|' . $suid;

            $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);

            $result = $weixinpay->h5pay();
            if ($result) {
                if ($result['return_code'] == 'SUCCESS') {
                    $res = [
                        'error' => 0,
                        'order_id' => $order_id,
                        'mweb_url' => $result['mweb_url']
                    ];
                    return json_encode($res);
                }
            }
        }

        if ($types == 'vipgrade') {
            $money = input('money');

            $out_trade_no = $order_id;
            $body = '会员等级升级支付';
            $total_fee = $money * 100;   //支付费用  分
            $attach = 'vipgrade|formid|' . $uniacid . '|' . $suid;

            $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);

            $result = $weixinpay->h5pay();
            if ($result) {
                if ($result['return_code'] == 'SUCCESS') {
                    $res = [
                        'error' => 0,
                        'order_id' => $order_id,
                        'mweb_url' => $result['mweb_url']
                    ];
                    return json_encode($res);
                }
            }
        }


        if ($order_id == 2) {  //微信H5充值
            $money = input('money');
            $now = time();
            $order_id = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);

            $out_trade_no = $order_id;
            $body = '用户充值';
            $total_fee = $money * 100;   //支付费用  分
            $attach = 'recharge|formid|' . $uniacid . '|' . $suid;

            $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);

            $result = $weixinpay->h5pay();

            if ($result) {
                if ($result['return_code'] == 'SUCCESS') {
                    $res = [
                        'error' => 0,
                        'order_id' => $order_id,
                        'mweb_url' => $result['mweb_url']
                    ];
                    return json_encode($res);
                }
            }


        } else {  //微信H5支付订单

            $pay_price = Db::name('wd_xcx_duo_products_order')->where('order_id', $order_id)->field('payprice, pay_info')->find();

            if ($pay_price['payprice'] > 0) {

                $out_trade_no = $order_id;
                $body = '商品订单';
                $total_fee = $pay_price['payprice'] * 100;   //支付费用  分
                $attach = 'duo|formid|' . $uniacid;

                $weixinpay = new WeixinPay($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);

                $result = $weixinpay->h5pay();

                if ($result) {
                    if ($result['return_code'] == 'SUCCESS') {
                        // Db::name('wd_xcx_duo_products_order') ->where('order_id', $order_id) ->update(['pay_info' => $result['mweb_url']]);   //保存支付信息;
                        $res = [
                            'error' => 0,
                            'order_id' => $order_id,
                            'mweb_url' => $result['mweb_url']
                        ];
                        return json_encode($res);
                    }
                }
            }
        }
    }

    //处理微信H5支付返回的url
    private function H5UrlParmarts($mweb_url){
        // prepay_id=wx3116211925606603de372faf1465334000&package=1734731331
        $mweb_url = explode('?', $mweb_url)[1];
        $arr = explode('&', $mweb_url);
        $prepay_id = explode('=', $arr[0])[1];
        $package = explode('=', $arr[1])[1];

        return [
            'prepayid' => $prepay_id,
            'package' => $package
        ];
    }


    //根据来源获取对应的头像，昵称
    private function getnameandavatar($source, $uniacid, $suid)
    {      // source  1  微信小程序  2  支付宝小程序  3 H5
        $info = [];
        if ($source == 1) {
            $info = Db::name('wd_xcx_user')->where('suid', $suid)->where('uniacid', $uniacid)->field('nickname, avatar')->find();
            if ($info) {
                $info['nickname'] = rawurldecode($info['nickname']);
            }

        } elseif ($source == 2) {
            $info = Db::name('wd_xcx_ali_user')->where('suid', $suid)->where('uniacid', $uniacid)->field('nick_name as nickname, avatar')->find();
        } elseif ($source == 3) {
            $info = Db::name('wd_xcx_superuser')->where('id', $suid)->where('uniacid', $uniacid)->field('phone as nickname')->find();
            $info['nickname'] = substr_replace($info['nickname'], '***', 3, 6);
            if ($info) {
                $info['avatar'] = ROOT_HOST . '/image/pay_list_person.png';
            }
        } elseif ($source == 4) {
            $info = Db::name('wd_xcx_baidu_user')->where('suid', $suid)->where('uniacid', $uniacid)->field('nickname, avatar')->find();
        } elseif ($source == 5) {
            $info = Db::name('wd_xcx_toutiao_user')->where('suid', $suid)->where('uniacid', $uniacid)->field('nickname, avatar')->find();
        } elseif ($source == 6) {
            $info = Db::name('wd_xcx_qq_user')->where('suid', $suid)->where('uniacid', $uniacid)->field('nickname, avatar')->find();
        }

        if (!$info) {
            $info = [
                'nickname' => '用户**',
                'avatar' => ROOT_HOST . '/image/pay_list_person.png'
            ];
        }
        return $info;
    }

    public function doPageGetGoodsCate()
    {
        $uniacid = input("uniacid");
        $id = intval(input('id'));
        $cid = 0;
        $index = 0;
        if ($id > 0) {
            $cid = Db::name('wd_xcx_shops_goods')->where('id', $id)->value('cid');
        }
        $cateinfo = [];


        $listX = Db::name('wd_xcx_goods_cate')->where("flag", 1)->where("uniacid", $uniacid)->where("cid", 0)->order('id desc')->field("id,name")->select();
        foreach ($listX as $key => $val) {
            $id = intval($val['id']);
            $listS = Db::name('wd_xcx_goods_cate')->where("flag", 1)->where("uniacid", $uniacid)->where("cid", $id)->order('id desc')->field("id,name")->select();
            $listX[$key]['sub'] = $listS;
        }
        $list = $listX;
        $cateinfo = [];
        $arr = ['选择所属栏目'];
        foreach ($list as $key => $value) {
            if ($cid == $value['id']) {
                if ($key > 0) {
                    $zcount = 0;
                    for ($i = 0; $i < $key; $i++) {
                        $zcount += count($list[$key - 1]['sub']) + 1;
                    }
                    $index = $zcount + $key;
                } else {
                    $index = $key + 1;
                }
            }
            array_push($arr, $value['name']);
            foreach ($value['sub'] as $ki => $vi) {
                array_push($arr, "--- " . $vi['name']);
                if ($cid == $vi['id']) {
                    if ($key > 0) {
                        $zcount = 0;
                        for ($i = 0; $i < $key; $i++) {
                            $zcount += count($list[$key - 1]['sub']) + 1;
                        }
                        $index = $zcount + $ki + 2;
                    } else {
                        $index = $key + $ki + 2;
                    }
                }
            }
        }
        $cateinfo['arr'] = $arr;
        $cateinfo['index'] = $index;
        $cateinfo['list'] = $list;
        $res['data'] = $cateinfo;
        return json_encode($res);
    }


    //供求关系开始
    public function dopageGetsupply()
    {
        $uniacid = input('uniacid');
        $type = input('type');
        $suid = input('suid');
        $page = input("page");
        $pindex = max(1, intval(input("page")));
        $psize = 10;
        $begin = ($pindex - 1) * $psize;

        $releaseAll = Db::name('wd_xcx_supply_release')->where('uniacid', $uniacid)->where('shenhe', 1)->where('fid', $type)->order("hot asc,stick asc,id desc")->limit($begin, $psize)->select();

        if ($releaseAll) {
            foreach ($releaseAll as $key => &$value) {
                $value['content'] = mb_substr($value['content'], 0, 420);
                $is_stick = Db::name("wd_xcx_supply_stick")->where("uniacid", $uniacid)->where('rid', $value['id'])->where('stick_status', 1)->find();
                if (!empty($is_stick)) {
                    $endtime = strtotime($is_stick['stick_time']) + $is_stick['stick_days'] * 24 * 3600;
                    if ($endtime <= time()) { //判断置顶是否过期
                        Db::name('wd_xcx_supply_release')->where('uniacid', $uniacid)->where("id", $value['id'])->update(array('stick' => 2));
                        Db::name('wd_xcx_supply_stick')->where('uniacid', $uniacid)->where("id", $is_stick['id'])->update(array('stick_status' => 2));
                        $value['stick'] = 2;
                    }
                }
                if ($value['img']) {
                    $value['img'] = unserialize($value['img']);
                }
                if (!empty($value['img'])) {
                    if (count($value['img']) > 0 && is_array($value['img'])) {
                        foreach ($value['img'] as $k => &$v) {
                            $v = remote($uniacid, $v, 1);
                        }
                    }
                }

                $value['is_collection'] = Db::name("wd_xcx_supply_collection")->alias("a")->join("wd_xcx_superuser b", "a.suid = b.id")->where("a.uniacid", $uniacid)->where("a.rid", $value['id'])->where("a.collection", 1)->count();
                $collect_sql = Db::name("wd_xcx_supply_collection")->alias("a")->join("wd_xcx_superuser b", "a.suid = b.id")->where("a.uniacid", $uniacid)->where("b.id", $suid)->where("a.collection", 1)->where("a.rid", $value['id'])->field("a.id")->find();
                if ($collect_sql) {
                    $value['is_collect'] = 1; //收藏
                } else {
                    $value['is_collect'] = 2; //收藏
                }

                $value['commentList'] = Db::name('wd_xcx_supply_comment')->alias("a")->join("wd_xcx_superuser b", "a.suid = b.id")->where("a.uniacid", $uniacid)->where("a.rid", $value['id'])->limit(4)->order("a.id desc")->field("a.*,b.phone as h5_name")->select(); //获取4条评论
                $value['comment'] = count($value['commentList']);
                foreach ($value['commentList'] as $kvs => $vs) {
                    $info_vs = $this->getnameandavatar($vs['source'], $uniacid, $vs['suid']);
                    $value['commentList'][$kvs]['nickname'] = $info_vs['nickname'];
                }


                $info_value = $this->getnameandavatar($value['source'], $uniacid, $value['suid']);
                $value['nickname'] = $info_value['nickname'];
                $value['avatar'] = $info_value['avatar'];
            }
        }

        $result = array();
        $result['data'] = $releaseAll;

        return json_encode($result);

    }


    //发布
    public function doPageSupplyReleaseSub()
    {
        $uniacid = input("uniacid");
        $cons = input("cons");
        $release_money = input("release_money");
        $suid = input('suid');
        $source = input('source');
        $haspay = input('haspay');
        $orderid = input('orderid');
        $title = input('title');

        $telphone = input("telphone");
        if ($telphone == "undefined") {
            $telphone = "";
        }
        $address = input("address");
        $release_img = input("release_img");
        if ($release_img) {
            $release_img = stripslashes(html_entity_decode($release_img));
            $release_img = json_decode($release_img, TRUE);
            if ($release_img) {
                foreach ($release_img as $key => &$value) {
                    $value = moveurl($value);
                }
                $release_img = serialize($release_img);
            }
        }

        $fid = input('fid');
        $data = array(
            "uniacid" => $uniacid,
            "suid" => $suid,
            "source" => $source,
            "title" => $title,
            "fid" => $fid,
            "content" => $cons,
            "img" => $release_img,
            "release_money" => $release_money,
            "address" => $address,
            "telphone" => $telphone
        );
        $release_audit = Db::name('wd_xcx_supply_set')->where('uniacid', $uniacid)->field('release_audit')->find();
        if (isset($release_audit['release_audit'])) {
            if ($release_audit['release_audit'] == 1) {
                $data['shenhe'] = 0;
            } else {
                $data['shenhe'] = 1;
            }
        } else {
            $data['shenhe'] = 1;
        }

        $rid = input("rid"); //发布id
        if ($rid > 0) {  //疑问  置顶之后是否可以续费购买置顶天数
            $data['updatetime'] = date("Y-m-d H:i:s", time());
            $res = Db::name("wd_xcx_supply_release")->where("id", $rid)->update($data);
            if ($res) {
                $res = $rid;
            }
        } else {
            $data['createtime'] = date("Y-m-d H:i:s", time());
            if ($haspay == 2) {  //未支付  数据存入缓存
                $rediscon = $this->GetRediscon();
                $redis = new Redis($rediscon);
                $redis->set($orderid . 'fabu', json_encode($data));
                return;
            } else if ($haspay == 1) {
                $res = Db::name("wd_xcx_supply_release")->insertGetId($data);
                if ($release_money) {
                    $xfmoney = array(
                        "uniacid" => $uniacid,
                        "orderid" => $orderid,
                        "suid" => $suid,
                        "type" => "del",
                        "score" => $release_money,
                        "message" => "供求关系发布-余额支付",
                        "creattime" => time()
                    );
                    Db::name('wd_xcx_money')->insert($xfmoney);
                }
                add_all_pay($uniacid, $release_money, $suid);
                check_vip_grade($uniacid, $suid);
            }

        }
        $result = [];
        if ($res) {
            $result['data'] = $res;
        } else {
            $result['data'] = 0;
        }
        return json_encode($result);
    }

    //发布支付
    public function doPageSupplyOrder()
    {
        $uniacid = input("uniacid");
        $release_money = input("release_money") ? input("release_money") : 0;
        $stick_days = input("stick_days") ? input("stick_days") : 0;
        $stick_money = input("stick_money") ? input("stick_money") : 0;
        $suid = input("suid");
        $now = time();
        $orderid = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);  //订单号
        $data = array(
            "orderid" => $orderid,
            "uniacid" => $uniacid,
            "release_money" => $release_money,
            "stick_money" => $stick_money,
            "stick_days" => $stick_days,
            "suid" => $suid,
            "flag" => 2,
            "createtime" => date("Y-m-d H:i:s", time())
        );

        $res = Db::name("wd_xcx_supply_order")->insertGetId($data);
        if ($res) {
            return json_encode(['orderid' => $orderid]);
        } else {
            return json_encode([0]);
        }

    }

    //发布成功  扣除余额
    public function doPageSupplyChangemymoney()
    {
        $uniacid = input('uniacid');
        $orderid = input('orderid');
        $release_money = input('release_money');
        $suid = input('suid');

        $mymoney = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->field('money')->find()['money'];

        if ($mymoney >= $release_money) {
            $res = Db::name('wd_xcx_supply_order')->where('uniacid', $uniacid)->where('orderid', $orderid)->update(['flag' => 1]);
            $rr = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update(['money' => $mymoney - $release_money]);
            add_all_pay($uniacid, $release_money, $suid);
            check_vip_grade($uniacid, $suid);
            if ($res && $rr) {
                return json_encode(['data' => 1]);
            }
        } else {
            return json_encode(['data' => 0]);
        }

    }


    //改变发布信息的点赞状态
    public function doPageSupplyLikes()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $rid = input("rid");
        $vs = input("vs");
        $is = Db::name("wd_xcx_supply_likes")->where("uniacid", $uniacid)->where("rid", $rid)->where("suid", $suid)->find();
        if ($is) {
            if ($is['likes'] == 1) {
                $likes = 2;
            } else {
                $likes = 1;
            }
            $res = Db::name("wd_xcx_supply_likes")->where("uniacid", $uniacid)->where("rid", $rid)->where("suid", $suid)->update(array("likes" => $likes));
            if ($res) {
                $likesNum = Db::name("wd_xcx_supply_release")->where("uniacid", $uniacid)->where("id", $rid)->field("likes")->find()['likes'];
                if ($likes == 1) {
                    $likesNum = $likesNum + 1;
                } else {
                    $likesNum = $likesNum - 1;
                }
                Db::name("wd_xcx_supply_release")->where("uniacid", $uniacid)->where("id", $rid)->update(array("likes" => $likesNum));

                $result = [];
                if ($vs) {
                    $result['data']['is_like'] = $likes;
                } else {
                    $result['data'] = $likes;
                }
            }
        } else {
            $data = array(
                "uniacid" => $uniacid,
                "likes" => 1,
                "suid" => $suid,
                "rid" => $rid,
                "createtime" => date("Y-m-d H:i:s", time())
            );
            $res = Db::name("wd_xcx_supply_likes")->insert($data);
            if ($res) {
                $likesNum = Db::name("wd_xcx_supply_release")->where("uniacid", $uniacid)->where("id", $rid)->field("likes")->find()['likes'];
                $likesNum = $likesNum + 1;
                Db::name("wd_xcx_supply_release")->where("uniacid", $uniacid)->where("id", $rid)->update(array("likes" => $likesNum));
                if ($vs) {
                    $result['data']['is_like'] = 1;
                } else {
                    $result['data'] = 1;
                }
            }
        }
        if ($vs) {
            $likesAll = Db::name("wd_xcx_supply_likes")->alias("a")->join("wd_xcx_superuser b", "a.suid = b.id")->where("a.uniacid", $uniacid)->where("a.rid", $rid)->where("a.likes", 1)->order("a.id desc")->field("b.id, b.phone as h5_name")->select();
            foreach ($likesAll as $key => $value) {
                $likesAll[$key]['wx_name'] = Db::name('wd_xcx_user')->where('suid', $value['id'])->field('nickname')->find()['nickname'];
                $likesAll[$key]['ali_name'] = Db::name('wd_xcx_ali_user')->where('suid', $value['id'])->field('nick_name')->find()['nick_name'];
            }
            $result['data']['num'] = $likesNum;
            $result['data']['likesAll'] = $likesAll;
        }
        return json_encode($result);
    }

    //改变供求信息的收藏状态
    public function doPageSupplyCollection()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");
        $rid = input("rid");
        $vs = input("vs");
        $is = Db::name("wd_xcx_supply_collection")->where("uniacid", $uniacid)->where("rid", $rid)->where("suid", $suid)->find();
        if ($is) {
            if ($is['collection'] == 1) {
                $collection = 2;
            } else {
                $collection = 1;
            }
            $res = Db::name("wd_xcx_supply_collection")->where("uniacid", $uniacid)->where("rid", $rid)->where("suid", $suid)->update(array("collection" => $collection));
            if ($res) {
                $collectionNum = Db::name("wd_xcx_supply_release")->where("uniacid", $uniacid)->where("id", $rid)->field("collection")->find()['collection'];
                if ($collection == 1) {
                    $collectionNum = $collectionNum + 1;
                } else {
                    $collectionNum = $collectionNum - 1;
                }
                Db::name("wd_xcx_supply_release")->where("uniacid", $uniacid)->where("id", $rid)->update(array("collection" => $collectionNum));
                $result = [];
                if ($vs) {
                    $result['data']['is_collect'] = $collection;
                } else {
                    $result['data'] = $collection;
                }
            }
        } else {
            $data = array(
                "uniacid" => $uniacid,
                "collection" => 1,
                "suid" => $suid,
                "rid" => $rid,
                "createtime" => date("Y-m-d H:i:s", time())
            );
            $res = Db::name("wd_xcx_supply_collection")->insert($data);
            if ($res) {
                $collectionNum = Db::name("wd_xcx_supply_release")->where("uniacid", $uniacid)->where("id", $rid)->field("collection")->find()['collection'];
                $collectionNum = $collectionNum + 1;
                Db::name("wd_xcx_supply_release")->where("uniacid", $uniacid)->where("id", $rid)->update(array("collection" => $collectionNum));
                if ($vs) {
                    $result['data']['is_collect'] = 1;
                } else {
                    $result['data'] = 1;
                }
            }
        }
        $result['data']['num'] = $collectionNum;
        return json_encode($result);
    }


    //获取供求发布详情页内容
    public function doPageGetSupplyCon()
    {
        $uniacid = input("uniacid");
        $rid = input("rid");
        $types = input("types"); //修改：1
        $suid = input("suid");
        $getcon = Db::name("wd_xcx_supply_release")->where("uniacid", $uniacid)->where("id", $rid)->where("shenhe", 1)->find();
        if ($getcon['stick'] == 2) {
            $set = Db::name('wd_xcx_supply_set')->where('uniacid', $uniacid)->find();
            if ($set) {
                if ($set['settop'] == 1) {
                    $getcon['settop'] = 1;
                } else {
                    $getcon['settop'] = 0;
                }
            } else {
                $getcon['settop'] = 1;
            }
        } else {
            $getcon['settop'] = 0;
        }

        $info = $this->getnameandavatar($getcon['source'], $uniacid, $getcon['suid']);
        $getcon['nickname'] = $info['nickname'];
        $getcon['avatar'] = $info['avatar'];


        $is_stick = Db::name("wd_xcx_supply_stick")->where("uniacid", $uniacid)->where('rid', $rid)->where('stick_status', 1)->find();
        if ($is_stick) {
            $endtime = strtotime($is_stick['stick_time']) + $is_stick['stick_days'] * 24 * 3600;
            if ($endtime <= time()) { //判断置顶是否过期
                Db::name('wd_xcx_supply_release')->where('uniacid', $uniacid)->where("id", $rid)->update(array('stick' => 2));
                Db::name('wd_xcx_supply_stick')->where('uniacid', $uniacid)->where("id", $is_stick['id'])->update(array('stick_status' => 2));
                $getcon['stick'] = 2;
            }
        }
        if ($getcon['img']) {
            $getcon['img'] = unserialize($getcon['img']);
            if (count($getcon['img']) > 0 && is_array($getcon['img'])) {
                foreach ($getcon['img'] as $k => &$v) {
                    $v = remote($uniacid, $v, 1);
                }
            }
        }
        $collect_sql = Db::name("wd_xcx_supply_collection")->alias("a")->join("wd_xcx_superuser b", "a.suid = b.id")->where("a.uniacid", $uniacid)->where("b.id", $suid)->where("a.collection", 1)->where("a.rid", $rid)->field("a.id")->find();

        if ($collect_sql) {
            $getcon['is_collect'] = 1; //收藏
        } else {
            $getcon['is_collect'] = 2; //收藏
        }
        $like_sql = Db::name("wd_xcx_supply_likes")->alias("a")->join("wd_xcx_superuser b", "a.suid = b.id")->where("a.uniacid", $uniacid)->where("b.id", $suid)->where("a.likes", 1)->where("a.rid", $rid)->field("a.id")->find();
        if ($like_sql) {
            $getcon['is_like'] = 1; //点赞
        } else {
            $getcon['is_like'] = 2; //点赞
        }
        $result = [];
        $result['data'] = $getcon;
        //增加浏览量
        if ($types != 1) {
            $hits = $getcon['hits'] + 1;
            Db::name("wd_xcx_supply_release")->where("uniacid", $uniacid)->where("id", $rid)->update(array("hits" => $hits));
        }
        return json_encode($result);
    }

    //获取供求详情评论
    public function doPageGetSupplyComment()
    {
        $uniacid = input("uniacid");
        $rid = input("rid");
        $suid = input("suid");
        $page = input("page");
        $pindex = max(1, intval(input("page")));
        $psize = 10;
        $begin = ($pindex - 1) * $psize;
        $count = Db::name('wd_xcx_supply_comment')->alias("a")->join("wd_xcx_superuser b", "a.suid = b.id")->where("a.uniacid", $uniacid)->where("a.rid", $rid)->order('a.id desc')->count();
        $commentList = Db::name('wd_xcx_supply_comment')->alias("a")->join("wd_xcx_superuser b", "a.suid = b.id")->where("a.uniacid", $uniacid)->where("a.rid", $rid)->order('a.id desc')->field("a.*")->limit($begin, $psize)->select();
        foreach ($commentList as $key => &$value) {

            $info = $this->getnameandavatar($value['source'], $uniacid, $value['suid']);
            $value['nickname'] = $info['nickname'];
            $value['avatar'] = $info['avatar'];


            $value['reply'] = Db::name("wd_xcx_supply_reply")->alias("a")->join("wd_xcx_superuser b", "a.release_suid = b.id")->where("a.commentId", $value['id'])->field("a.*, b.id as suid, b.phone as h5_name")->select();

            foreach ($value['reply'] as $k => &$v) {
                $info_v = $this->getnameandavatar($v['source'], $uniacid, $v['suid']);
                $value['reply'][$k]['nickname'] = $info_v['nickname'];
                $value['reply'][$k]['avatar'] = $info_v['avatar'];

            }
        }
        $result = [];
        $result['data']['list'] = $commentList;
        $result['data']['count'] = $count;
        return json_encode($result);
    }

    //提交供求评论的内容
    public function doPageSupplyCommentSub()
    {
        $uniacid = input("uniacid");
        $rid = input("rid");
        $suid = input("suid");
        $content = input("content");
        $commentId = input("commentId");//回复评论id
        $repto_suid = input('repto_suid');//被回复人uid
        $source = input('source');
        if ($repto_suid > 0) {
            $data = array(
                "commentId" => $commentId,
                "release_suid" => $suid,  //回复人SUID
                "repto_suid" => $repto_suid,       //被回复人suid
                "uniacid" => $uniacid,
                "content" => $content,
                "createtime" => date("Y-m-d H:i:s", time()),
                "source" => $source,
            );
            $res = Db::name("wd_xcx_supply_reply")->insert($data);
            $result = [];
            if ($res) {
                $result['data'] = 1;
            } else {
                $result['data'] = 2;
            }
        } else {
            $data = array(
                "rid" => $rid,
                "suid" => $suid,
                "uniacid" => $uniacid,
                "content" => $content,
                "createtime" => date("Y-m-d H:i:s", time()),
                "source" => $source,
            );
            $res = Db::name("wd_xcx_supply_comment")->insert($data);
            $result = [];
            if ($res) {
                $commentNum = Db::name("wd_xcx_supply_release")->where("uniacid", $uniacid)->where("id", $rid)->field("comment")->find()['comment'] + 1;
                Db::name('wd_xcx_supply_release')->where("uniacid", $uniacid)->where("id", $rid)->update(array("comment" => $commentNum));
                $result['data'] = 1;
            } else {
                $result['data'] = 2;
            }
        }
        return json_encode($result);
    }

    //供求基本设置
    public function doPageSupplySet()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $set = Db::name("wd_xcx_supply_set")->where("uniacid", $uniacid)->find();
        $mymoney = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->field('money')->find()['money'];
        $result = [];
        if ($set) {
            $set['mymoney'] = $mymoney;
            $result['data'] = $set;
        } else {
            $result['data'] = array(
                'release_money' => 0.00,
                'stick_money' => 10.00,
                'mymoney' => $mymoney
            );
        }
        return json_encode($result);
    }


    //发布详情页删除功能
    public function doPageSupplyPageDel()
    {
        $uniacid = input("uniacid");
        $types = input('types');
        $id = input('id');
        if ($types == 1) {
            $is = Db::name('wd_xcx_supply_release')->where("uniacid", $uniacid)->where("id", $id)->find();
            if ($is) {
                $res = Db::name('wd_xcx_supply_release')->where("uniacid", $uniacid)->where("id", $id)->delete();
                if ($res) {

                    //删除forum_collection表相关数据
                    Db::name('wd_xcx_supply_collection')->where("uniacid", $uniacid)->where("rid", $id)->delete();
                    //删除forum_comment 和 删除forum_comment_likes 和 forum_reply表相关数据
                    $commentall = Db::name('wd_xcx_supply_comment')->where("uniacid", $uniacid)->where("rid", $id)->select();
                    foreach ($commentall as $key => $value) {
                        Db::name('wd_xcx_supply_reply')->where("uniacid", $uniacid)->where("commentId", $value['id'])->delete();
                    }
                    Db::name('wd_xcx_supply_comment')->where("uniacid", $uniacid)->where("rid", $id)->delete();
                    //删除forum_stick表相关数据
                    Db::name('wd_xcx_supply_stick')->where("uniacid", $uniacid)->where("rid", $id)->delete();
                    $result['data'] = 1;
                }
            } else {
                $result['data'] = 2;
            }
        } else if ($types == 2) {  //删除评论

            Db::name('wd_xcx_supply_reply')->where("uniacid", $uniacid)->where("commentId", $id)->delete();
            Db::name('wd_xcx_supply_comment')->where("uniacid", $uniacid)->where("id", $id)->delete();
            $result['data'] = 1;
        } else if ($types == 3) {  //删除评论回复
            Db::name('wd_xcx_supply_reply')->where("uniacid", $uniacid)->where("id", $id)->delete();
            $result['data'] = 1;
        }
        return json_encode($result);
    }


    //获取我的发布与收藏
    public function dopageGetmycollect()
    {
        $uniacid = input('uniacid');
        $suid = input('suid');
        $type = input('type');
        $page = input("page");
        $pindex = max(1, intval(input("page")));
        $psize = 15;
        $begin = ($pindex - 1) * $psize;

        $data = [];
        $set = Db::name('wd_xcx_supply_set')->where('uniacid', $uniacid)->field('release_audit')->find();
        if ($set) {
            $data['release_audit'] = $set['release_audit'];
        } else {
            $data['release_audit'] = 0;
        }

        if ($type == 1) {
            $all = Db::name('wd_xcx_supply_release')->where('suid', $suid)->where('uniacid', $uniacid)->field('id, title, shenhe, createtime')->order('id desc')->limit($begin, $psize)->select();

        } else if ($type == 2) {
            $all = Db::name('wd_xcx_supply_collection')->alias('a')->join('wd_xcx_supply_release b', 'a.rid = b.id')->where('a.suid', $suid)->where('a.uniacid', $uniacid)->where('a.collection', 1)->field('a.rid, a.createtime,b.title')->order('a.createtime desc')->limit($begin, $psize)->select();
        }

        $data['all'] = $all;
        return json_encode($data);
    }

    //供求设置置顶
    public function doPageSupplySetStick()
    {
        $uniacid = input("uniacid");
        $stick_money = input("stick_money");
        $stick_days = input("stick_days");
        $orderid = input('orderid');
        $rid = input("rid");
        $haspay = input('haspay');
        $suid = input('suid');

        $data = array(
            "uniacid" => $uniacid,
            "rid" => $rid,
            "stick_money" => $stick_money,
            "stick_days" => $stick_days,
            "stick" => 1,
            "stick_time" => date("Y-m-d H:i:s", time()),
            "stick_status" => 1,
        );

        if ($haspay == 2) {
            $rediscon = $this->GetRediscon();
            $redis = new Redis($rediscon);
            $redis->set($orderid . 'settop', json_encode($data));
            return json_encode(['data' => -1]);
        } else {
            add_all_pay($uniacid, round($stick_money * $stick_days, 2), $suid);
            check_vip_grade($uniacid, $suid);
        }
        Db::name('wd_xcx_supply_stick')->where("uniacid", $uniacid)->where("rid", $rid)->update(array('stick_status' => 2)); //修改所有发布相关置顶为不启用
        Db::name('wd_xcx_supply_order')->where('orderid', $orderid)->update(['flag' => 1]);

        //修改用户余额
        $user = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->field('id,money')->find();
        $userMoney = $user['money'] - $stick_money * $stick_days; //支付之后剩余余额
        $update = Db::name("wd_xcx_superuser")->where("uniacid", $uniacid)->where("id", $suid)->update(array("money" => $userMoney));
        if ($update) {
            //流水
            $xfmoney = array(
                "uniacid" => $uniacid,
                "orderid" => $orderid,
                "suid" => $user['id'],
                "type" => "del",
                "score" => $stick_money * $stick_days,
                "message" => "供求关系信息置顶",
                "creattime" => time()
            );
            Db::name('wd_xcx_money')->insert($xfmoney);
        }

        $res = Db::name('wd_xcx_supply_stick')->insert($data);
        if ($res) {
            Db::name('wd_xcx_supply_release')->where("uniacid", $uniacid)->where("id", $rid)->update(array('stick' => 1)); //修改发布表为置顶
            $result['data'] = 1;
        } else {
            $result['data'] = 2;
        }
        return json_encode($result);
    }


    public function printer($uniacid, $order_id, $type)
    {

        $printlist = Db::name('wd_xcx_print')->where('uniacid', $uniacid)->where('flag', 1)->select();
        if ($type == 'food') {
            $orderinfo = Db::name('wd_xcx_food_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->find();
            include("Print.php");
            $print = new Yprint();
            foreach ($printlist as $key => $value) {
                $content = '';
                $content .= '下单时间：' . date('Y-m-d H:i:s', time()) . '\r\n';
                $content .= '订单号：' . $order_id . '\r\n';
                $content .= '标题：' . $value['title'] . '\r\n';
                $content .= '订单类型：餐饮订单\r\n';                      //打印内容
                if ($orderinfo['zh'] != "0") {
                    $content .= '<center>' . $orderinfo['zh'] . '</center>\r\n';
                } else {
                    $content .= '<center>打包/外卖</center>\r\n';
                }
                $content .= '<table>';
                $content .= '<tr><td>商品</td><td>数量</td><td>价格</td></tr>';

                $val = unserialize($orderinfo['val']);
                $allprice = 0;
                foreach ($val as $k => $v) {
                    $content .= '<tr><td>' . $v[2] . '</td><td>x' . $v[3] . '</td><td>' . $v[1] . '</td></tr>';
                    $allprice += round(floatval($v[3] * $v[1]), 2);
                }
                $content .= '</table>\r\n\r\n';
                $content .= '总计：' . $allprice . '元\r\n';                      //打印内容
                $content .= '<FS>实付: ' . round($orderinfo['yue_price'] + $orderinfo['wx_price'], 2) . '元</FS>\r\n\r\n';
                if ($orderinfo['username'] != "") {
                    $content .= '姓名：' . $orderinfo['username'] . '\r\n';
                }
                if ($orderinfo['usertel'] != "") {
                    $content .= '电话：' . $orderinfo['usertel'] . '\r\n';
                }
                if ($orderinfo['address'] != "") {
                    $content .= '地址：' . $orderinfo['address'] . '\r\n';
                }
                if ($orderinfo['usertime'] != "") {
                    $content .= '预约配送时间：' . $orderinfo['usertime'] . '\r\n';
                }
                if ($orderinfo['userbeiz'] != "") {
                    $content .= '备注：' . $orderinfo['userbeiz'];
                }

                $apiKey = $value['apikey'];
                $msign = $value['nkey'];
                //打印
                for ($i = 0; $i < $value['num']; $i++) {
                    $print->action_print($value['uid'], $value['nid'], $content, $apiKey, $msign);
                }
            }
        } else if ($type == 'miaosha') {
            $orderinfo = Db::name('wd_xcx_order')->alias('a')->join('wd_xcx_products b', "a.pid = b.id")->where('a.uniacid', $uniacid)->where('a.order_id', $order_id)->field('a.*,b.title')->find();
            if ($orderinfo['nav'] == 1) {
                $nav = '快递订单';
            } else {
                $nav = '到店自取订单';
            }
            include("Print.php");
            $print = new Yprint();
            foreach ($printlist as $key => $value) {
                $content = '';
                $content .= '下单时间：' . date('Y-m-d H:i:s', time()) . '\r\n';
                $content .= '订单号：' . $order_id . '\r\n';
                $content .= '标题：' . $value['title'] . '\r\n';                      //打印内容
                $content .= '订单类型：秒杀' . $nav . '\r\n';
                $content .= '<table>';
                $content .= '<tr><td>商品</td><td>数量</td><td>价格</td></tr>';
                $content .= '<tr><td>' . $orderinfo['title'] . '</td><td>x' . $orderinfo['num'] . '</td><td>' . $orderinfo['price'] . '</td></tr>';
                $content .= '</table>\r\n\r\n';

                $yhinfo = unserialize($orderinfo['yhinfo']);
                if ($yhinfo['mj']['money'] > 0) {
                    $content .= '满减：' . $yhinfo['mj']['msg'] . ' - ￥' . $yhinfo['mj']['money'] . '\r\n';
                }
                if ($yhinfo['yhq']['money'] > 0) {
                    $content .= '优惠券抵扣：' . $yhinfo['yhq']['msg'] . ' - ￥' . $yhinfo['yhq']['money'] . '\r\n';
                }
                if ($yhinfo['score']['money'] > 0) {
                    $content .= '积分抵扣：' . $yhinfo['score']['msg'] . ' - ￥' . $yhinfo['score']['money'] . '\r\n';
                }
                if ($yhinfo['yunfei'] > 0) {
                    $content .= '运费：' . $yhinfo['yunfei'] . '元\r\n';
                }
                $content .= '总计：' . $orderinfo['price'] . '元\r\n';
                $content .= '<FS>实付: ' . $orderinfo['true_price'] . '元</FS>\r\n\r\n';
                if (!empty($orderinfo['m_address'])) {
                    $m_address = unserialize($orderinfo['m_address']);
                    if (isset($m_address['name']) && $m_address['name'] != '') {
                        $content .= '姓名：' . $m_address['name'] . '\r\n';
                        $content .= '电话：' . $m_address['mobile'] . '\r\n';
                        $content .= '地址：' . $m_address['address'] . '\r\n';
                    }
                }

                if ($orderinfo['beizhu_val'] != "") {
                    $content .= '备注：' . $orderinfo['beizhu_val'];
                }
                $apiKey = $value['apikey'];
                $msign = $value['nkey'];
                //打印
                for ($i = 0; $i < $value['num']; $i++) {
                    $print->action_print($value['uid'], $value['nid'], $content, $apiKey, $msign);
                }
            }
        } elseif ($type == 'duo') {
            $orderinfo = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->find();

            if ($orderinfo['nav'] == 1) {
                $nav = '快递订单';
            } else {
                $nav = '到店自取订单';
            }
            include("Print.php");
            $print = new Yprint();
            foreach ($printlist as $key => $value) {
                $content = '';
                $content .= '下单时间：' . date('Y-m-d H:i:s', time()) . '\r\n';
                $content .= '订单号：' . $order_id . '\r\n';
                $content .= '标题：' . $value['title'] . '\r\n';                      //打印内容
                $content .= '订单类型：商品' . $nav . '\r\n';
                $content .= '<table>';
                $jsondata = unserialize($orderinfo['jsondata']);
                $allprice = 0;
                if ($value['spec'] == 1) {
                    $content .= '<tr><td>商品</td><td>规格</td><td>数量</td><td>价格</td></tr>';
                    foreach ($jsondata as $k => $v) {
                        $content .= '<tr><td>' . $v['proinfo']['title'] . '</td><td>' . $v['proinfo']['ggz'] . '</td><td>x' . $v['num'] . ',</td><td>' . $v['proinfo']['price'] . '</td></tr>';
                        $allprice += floatval($v['num'] * $v['proinfo']['price']);
                    }
                } else {
                    $content .= '<tr><td>商品</td><td>数量</td><td>价格</td></tr>';
                    foreach ($jsondata as $k => $v) {
                        $content .= '<tr><td>' . $v['proinfo']['title'] . '</td><td>x' . $v['num'] . '</td><td>' . $v['proinfo']['price'] . '</td></tr>';
                        $allprice += floatval($v['num'] * $v['proinfo']['price']);
                    }
                }
                $content .= '</table>\r\n\r\n';
                if ($orderinfo['discounts'] > 0) {
                    $content .= '会员折扣：' . $orderinfo['discounts'] . '折\r\n';
                    $content .= '会员折扣优惠：￥' . round($allprice - $allprice * $orderinfo['discounts'] * 0.1, 2) . '\r\n';
                }
                $yhinfo = unserialize($orderinfo['yhinfo']);
                if ($yhinfo['mj']['money'] > 0) {
                    $content .= '满减：' . $yhinfo['mj']['msg'] . ' - ￥' . $yhinfo['mj']['money'] . '\r\n';
                }
                if ($yhinfo['yhq']['money'] > 0) {
                    $content .= '优惠券抵扣：' . $yhinfo['yhq']['msg'] . ' - ￥' . $yhinfo['yhq']['money'] . '\r\n';
                }
                if ($yhinfo['score']['money'] > 0) {
                    $content .= '积分抵扣：' . $yhinfo['score']['msg'] . ' - ￥' . $yhinfo['score']['money'] . '\r\n';
                }
                if ($yhinfo['yunfei'] > 0) {
                    $content .= '运费：' . $yhinfo['yunfei'] . '元\r\n';
                }
                $content .= '总计：' . round(floatval($allprice), 2) . '元\r\n';
                $content .= '<FS>实付: ' . $orderinfo['price'] . '元</FS>\r\n\r\n';
                if (!empty($orderinfo['m_address'])) {
                    $m_address = unserialize($orderinfo['m_address']);
                    if (isset($m_address['name']) && $m_address['name'] != '') {
                        $content .= '姓名：' . $m_address['name'] . '\r\n';
                        $content .= '电话：' . $m_address['mobile'] . '\r\n';
                        $content .= '地址：' . $m_address['address'] . '\r\n';
                    }
                }
                if ($orderinfo['liuyan'] != "") {
                    $content .= '备注：' . $orderinfo['liuyan'];
                }
                $apiKey = $value['apikey'];
                $msign = $value['nkey'];
                //打印
                for ($i = 0; $i < $value['num']; $i++) {
                    $print->action_print($value['uid'], $value['nid'], $content, $apiKey, $msign);
                }
            }
        } elseif ($type == 'mainShop') {
            $orderinfo = Db::name('wd_xcx_main_shop_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->find();
            $order_items = Db::name('wd_xcx_main_shop_order_item')->where('order_id', $order_id)->select();
            if ($orderinfo['delivery_type'] == 1) {
                $nav = '快递订单';
            } else {
                $nav = '到店自取订单';
            }
            include("Print.php");
            $print = new Yprint();
            foreach ($printlist as $key => $value) {
                $content = '';
                $content .= '下单时间：' . date('Y-m-d H:i:s', time()) . '\r\n';
                $content .= '订单号：' . $order_id . '\r\n';
                $content .= '标题：' . $value['title'] . '\r\n';                      //打印内容
                $content .= '订单类型：商品' . $nav . '\r\n';
                $content .= '<table>';
                if ($value['spec'] == 1) {
                    $content .= '<tr><td>商品</td><td>规格</td><td>数量</td><td>价格</td></tr>';
                    foreach ($order_items as $item) {
                        $content .= '<tr><td>' . $item['pro_title'] . '</td><td>' . $item['pro_attr'] . '</td><td>x' . $item['num'] . ',</td><td>' . $item['pro_price'] . '</td></tr>';
                    }
                } else {
                    $content .= '<tr><td>商品</td><td>数量</td><td>价格</td></tr>';

                    foreach ($order_items as $item) {
                        $content .= '<tr><td>' . $item['pro_title'] . '</td><td>x' . $item['num'] . '</td><td>' . $item['pro_price'] . '</td></tr>';
                        if ($item['pro_discounts'] > 0) {
                            $content .= '<tr ><td colspan="3">会员折扣：' . $item['pro_discounts'] . '折\r\n</td></tr>';
                            $content .= '<tr ><td colspan="3">会员折扣后价格：' . $item['pro_discounts_price'] . '元\r\n</td></tr>';
                        }
                    }
                }
                $content .= '</table>\r\n\r\n';

                if ($orderinfo['coupon_id'] > 0) {
                    $content .= '优惠券抵扣：' . $orderinfo['coupon_use'] . '元\r\n';
                }
                if ($orderinfo['score_use'] > 0) {
                    $content .= '积分抵扣：' . $orderinfo['score_money'] . '元\r\n';
                }
                if ($orderinfo['delivery_type'] == 1) {
                    $content .= '运费：' . $orderinfo['freight_money'] . '元\r\n';
                }
//                $content .= '总计：' . round(floatval($allprice), 2).'元\r\n';
                $content .= '<FS>实付: ' . $orderinfo['pay_money'] . '元</FS>\r\n\r\n';
                if ($orderinfo['delivery_type'] == 1) {
                    $m_address = unserialize($orderinfo['address_info']);
                    if(!isset($m_address['more_address'])){
                        $m_address['more_address'] = '';
                    }
                    if (isset($m_address['name']) && $m_address['name'] != '') {
                        $content .= '姓名：' . $m_address['name'] . '\r\n';
                        $content .= '电话：' . $m_address['mobile'] . '\r\n';
                        $content .= '地址：' . $m_address['address'].' '.$m_address['more_address'] . '\r\n';
                    }
                }
                if ($orderinfo['user_remark'] != "") {
                    $content .= '备注：' . $orderinfo['user_remark'];
                }
                $apiKey = $value['apikey'];
                $msign = $value['nkey'];
                //打印
                for ($i = 0; $i < $value['num']; $i++) {
                    $print->action_print($value['uid'], $value['nid'], $content, $apiKey, $msign);
                }
            }
        } else if ($type == 'reserve') {
            $orderinfo = Db::name('wd_xcx_order')->alias('a')->join('wd_xcx_products b', "a.pid = b.id")->where('a.uniacid', $uniacid)->where('a.order_id', $order_id)->field('a.*,b.title')->find();
            include("Print.php");
            $print = new Yprint();
            foreach ($printlist as $key => $value) {
                $content = '';
                $content .= '下单时间：' . date('Y-m-d H:i:s', time()) . '\r\n';
                $content .= '订单号：' . $order_id . '\r\n';
                $content .= '标题：' . $value['title'] . '\r\n';                      //打印内容
                $content .= '订单类型：预约预定订单\r\n';
                $content .= '<table>';
                $order_duo = unserialize($orderinfo['order_duo']);
                if ($value['spec'] == 1) {
                    $content .= '<tr><td>商品</td><td>规格</td><td>数量</td><td>价格</td></tr>';
                    foreach ($order_duo as $k => $v) {
                        if ($order_duo[$k][4] > 0) {
                            $content .= '<tr><td>' . $orderinfo['title'] . '</td><td>' . $order_duo[$k][0] . '</td><td>x' . $order_duo[$k][4] . ',</td><td>' . $order_duo[$k][1] . '</td></tr>';
                        }
                    }
                } else {
                    $content .= '<tr><td>商品</td><td>数量</td><td>价格</td></tr>';
                    foreach ($order_duo as $k => $v) {
                        if ($order_duo[$k][4] > 0) {
                            $content .= '<tr><td>' . $orderinfo['title'] . '</td><td>x' . $order_duo[$k][4] . '</td><td>' . $order_duo[$k][1] . '</td></tr>';
                        }
                    }
                }

                $content .= '</table>\r\n\r\n';
                if ($orderinfo['discounts'] > 0) {
                    $content .= '会员折扣：' . $orderinfo['discounts'] . '折\r\n';
                    $content .= '会员折扣优惠：￥' . round($orderinfo['price'] - $orderinfo['price'] * $orderinfo['discounts'] * 0.1, 2) . '\r\n';
                }
                $yhinfo = unserialize($orderinfo['yhinfo']);
                if ($yhinfo['mj']['money'] > 0) {
                    $content .= '满减：' . $yhinfo['mj']['msg'] . ' - ￥' . $yhinfo['mj']['money'] . '\r\n';
                }
                if ($yhinfo['yhq']['money'] > 0) {
                    $content .= '优惠券抵扣：' . $yhinfo['yhq']['msg'] . ' - ￥' . $yhinfo['yhq']['money'] . '\r\n';
                }
                if ($yhinfo['score']['money'] > 0) {
                    $content .= '积分抵扣：' . $yhinfo['score']['msg'] . ' - ￥' . $yhinfo['score']['money'] . '\r\n';
                }

                $content .= '总计：' . $orderinfo['price'] . '元\r\n';
                $content .= '<FS>实付: ' . $orderinfo['true_price'] . '元</FS>\r\n\r\n';
                if (!empty($orderinfo['pro_user_name'])) {
                    $content .= '姓名：' . $orderinfo['pro_user_name'] . '\r\n';
                }
                if (!empty($orderinfo['pro_user_tel'])) {
                    $content .= '电话：' . $orderinfo['pro_user_tel'] . '\r\n';
                }
                if (!empty($orderinfo['pro_user_add'])) {
                    $content .= '地址：' . $orderinfo['pro_user_add'] . '\r\n';
                }
                if (!empty($orderinfo['pro_user_txt'])) {
                    $content .= '备注：' . $orderinfo['pro_user_txt'] . '\r\n';
                }
                $apiKey = $value['apikey'];
                $msign = $value['nkey'];
                //打印
                for ($i = 0; $i < $value['num']; $i++) {
                    $print->action_print($value['uid'], $value['nid'], $content, $apiKey, $msign);
                }
            }
        }
    }

    public function doPageGetFoodKcPrice()
    {
        $id = input("id");
        $guige_chooseed = input("guige_chooseed");
        $guige = explode(',', $guige_chooseed);
        $where = "";
        if (count($guige) == 3) {
            $where = " and type1 = '" . $guige[0] . "' and type2 = '" . $guige[1] . "' and type3 = '" . $guige[2] . "'";
        } else if (count($guige) == 2) {
            $where = " and type1 = '" . $guige[0] . "' and type2 = '" . $guige[1] . "'";
        } else if (count($guige) == 1) {
            $where = " and type1 = '" . $guige[0] . "'";
        }
        $prefix = config('database.prefix');
        $sql = "SELECT * FROM {$prefix}wd_xcx_food_type_value WHERE pid = " . $id . $where;
        $guige_arr = Db::query($sql);
        $result['data'] = [];
        if (count($guige_arr) > 0) {
            $result['data'] = $guige_arr[0];
            $result['data']['flag'] = 1;
        } else {
            $result['data']['flag'] = 2;
        }
        return json_encode($result);
    }

    public function doPageGetOrderInfo()
    {
        $id = input('id');
        $orderinfo = Db::name('wd_xcx_food_order')->where('id', $id)->find();

        if ($orderinfo) {
            $orderinfo['val'] = unserialize($orderinfo['val']);
        }
        $result['data'] = $orderinfo;
        return json_encode($result);
    }

    public function doPagegetshopsbase()
    {
        $uniacid = input('uniacid');
        $sid = input('sid');
        if ($sid > 0) {
            $data = Db::name('wd_xcx_shops_shop')->where('uniacid', $uniacid)->where('id', $sid)->field('name,bg,intro')->find();
            if (!empty($data['bg'])) {
                $data['bg'] = remote($uniacid, $data['bg'], 1);
            }
            $result['data'] = $data;
            return json_encode($result);
        }
    }
    /* 砍价start */
    //砍价列表
    public function doPageBargainList()
    {
        $db = config('database');
        $uniacid = input('uniacid');
        $openid = input('openid');
        $source = input('source');
        $suid = input('suid');
        $searchKey = input('searchKey');
        $this->over_arr($uniacid);
        $where1 = '';
        if ($searchKey) {
            $where1 = " AND title like '%" . $searchKey . "%'";
        }
        $banners = Db::name('wd_xcx_bargain_set')->alias('a')->join('wd_xcx_products_url b', 'a.onlyid = b.randid')->where('a.uniacid', $uniacid)->field('b.url')->select();
        if (!$banners) {
            $banners = [];
        } else {
            foreach ($banners as $key => &$value) {
                $value = remote($uniacid, $value['url'], 1);
            }
        }

        $page = input('page') - 1;
        $pagesize = 6;
        $where2 = " limit " . $page * $pagesize . "," . $pagesize;
        $prefix = config('database.prefix');
        $list = Db::query("SELECT id,title,thumb,price,miniPrice,virtualSaleVolume FROM {$prefix}wd_xcx_bargain_pro WHERE uniacid = {$uniacid} AND activeBinTime <= " . time() . " AND activeEndTime >= " . time() . " and status = 1 {$where1} ORDER BY num DESC,id DESC {$where2}");

        foreach ($list as $k => &$v) {
            $bargained_arr = Db::query("SELECT b.id FROM {$prefix}wd_xcx_bargain_bargain_order as a LEFT JOIN {$prefix}wd_xcx_superuser as b on a.suid = b.id WHERE a.uniacid = {$uniacid} and b.uniacid = {$uniacid} and a.proId = {$v['id']} order by a.id desc");

            $avatar_arr = [];
            foreach ($bargained_arr as $ko => $vo) {
                $userinfo = $this->getnameandavatar($source, $uniacid, $vo['id']);
                $vo['avatar'] = $userinfo['avatar'];
                array_push($avatar_arr, $vo['avatar']);
            }
            $avatar_arr = array_unique($avatar_arr);
            if (count($avatar_arr) == 0) {
                $v['avatar'] = [];
            } else {
                $v['avatar'] = array_slice($avatar_arr, 0, 3);
            }
            $v['bargained_num'] = $v['virtualSaleVolume'] + count($bargained_arr);
            $is = Db::name("wd_xcx_bargain_bargain_order")->where("uniacid", $uniacid)->where("suid", $suid)->where("proId", $v['id'])->where("flag", "lt", 3)->value("id");
            if ($is) {
                $v['bargained'] = 1;
            } else {
                $v['bargained'] = 0;
            }
            $v['thumb'] = remote($uniacid, $v['thumb'], 1);
        }
        $results = [
            'banners' => $banners,
            'list' => $list
        ];
        $result['data'] = $results;
        return json_encode($result);
    }

    public function doPagemyBargainList()
    {
        $uniacid = input('uniacid');
        $openid = input('openid');
        $suid = input('suid');
        $page = input('page');

        $this->over_arr($uniacid);

        $flag = input('flag');
        if ($flag == 1) {
            $where = " AND b.flag < 3";
        } else {
            $where = " AND b.flag = 4";
        }
        $pindex = max(1, intval($page));
        $psize = 6;
        $prefix = config('database.prefix');
        $list = Db::query("SELECT a.*,b.id as bargain_id,b.flag,b.overtime,b.nowPrice FROM {$prefix}wd_xcx_bargain_pro  as a LEFT JOIN {$prefix}wd_xcx_bargain_bargain_order as b on a.id = b.proId WHERE a.uniacid = {$uniacid} and b.uniacid = {$uniacid} and b.suid = '{$suid}' {$where} order by b.id desc limit " . ($pindex - 1) * $psize . "," . $psize);

        foreach ($list as $key => &$value) {
            $value['djs']['countDown'] = '';
            $value['thumb'] = remote($uniacid, $value['thumb'], 1);
        }
        $result['data'] = $list;
        return json_encode($result);
    }

    public function over_arr($uniacid)
    {
        $prefix = config('database.prefix');
        $over_arr = Db::query("SELECT id FROM {$prefix}wd_xcx_bargain_bargain_order WHERE uniacid = " . $uniacid . " AND overtime < " . time() . " and flag < 3");
        foreach ($over_arr as $key => $value) {
            Db::name("wd_xcx_bargain_bargain_order")->where('id', $value['id'])->update(array('flag' => 4));
        }
    }

    public function doPageBargainProInfo()
    {
        $uniacid = input('uniacid');
        $id = input('id');
        $is = [];
        $openid = input('openid');
        $suid = input('suid');
        $source = input('source');
        $this->over_arr($uniacid);

        $proInfo = Db::name("wd_xcx_bargain_pro")->where("uniacid", $uniacid)->where("id", $id)->find();
        $videourl = $proInfo['video'];
        if ($proInfo['video'] != '') {
            if (strpos($videourl, ".mp4") !== false || strpos($videourl, ".MP4") !== false) {
                $proInfo['video'] = $videourl;
            } else {
                include 'videoInfo.php';
                $videoInfo = new videoInfo();
                if (preg_match("/^(http:\/\/|https:\/\/).*$/", $proInfo['video'])) {
                    $videodata = $videoInfo->getVideoInfo($proInfo['video']);
                    $proInfo['video'] = $videodata['url'];
                } else {
                    $proInfo['video'] = '';
                }
            }
        }
        if ($proInfo) {
            $proInfo['masterThumb'] = Db::name('wd_xcx_products_url')->where('randid', $proInfo['onlyid'])->order("id asc")->select();
            foreach ($proInfo['masterThumb'] as $key => &$value) {
                $value = remote($uniacid, $value['url'], 1);
            }
        }
        if ($proInfo['activeEndTime'] < time()) {
            $proInfo['active_flag'] = 1;
        } else {
            $proInfo['active_flag'] = 0;
        }
        $bargainOrder = Db::name("wd_xcx_bargain_bargain_order")->where("uniacid", $uniacid)->where("proId", $id)->where("suid", $suid)->where("flag", "<", 3)->field("id,overtime,nowPrice")->order('id desc')->find();
        if (!$bargainOrder) {
            $proInfo['overtime'] = 0;
            if ($proInfo['active_flag'] == 1) {
                $result['data'] = $proInfo;
                return json_encode($result);//活动时间过期并且无正在砍价订单
            }
            $proInfo['bargain_id'] = 0;
            $proInfo['nowPrice'] = $proInfo['price'];
            $proInfo['percent'] = 0;
            $proInfo['receive'] = [];
        } else {
            $proInfo['bargain_id'] = $bargainOrder['id'];
            $proInfo['overtime'] = $bargainOrder['overtime'];
            $proInfo['nowPrice'] = $bargainOrder['nowPrice'];
            $price = $proInfo['price'];
            $nowPrice = $proInfo['nowPrice'];
            $miniPrice = $proInfo['miniPrice'];

            $proInfo['receive'] = Db::name("wd_xcx_bargain_receive")->alias("a")->join('wd_xcx_superuser b', "a.suid = b.id")->where("a.uniacid", $uniacid)->where("b.uniacid", $uniacid)->where('a.bargain_id', $bargainOrder['id'])->field('b.id, a.price')->order('a.id asc')->select();
            foreach ($proInfo['receive'] as $ks => &$vs) {
                $userinfo = $this->getnameandavatar($source, $uniacid, $vs['id']);
                $vs['avatar'] = $userinfo['avatar'];
            }

            $proInfo['percent'] = intval(($price - $nowPrice) / ($price - $miniPrice) * 100);
            $is = Db::name("wd_xcx_bargain_bargain_order")->where("uniacid", $uniacid)->where("proId", $id)->where("suid", $suid)->order("id desc")->find();
            $endtime = $is['createtime'] + $proInfo['activeHours'] * 3600;
            $proInfo['sTime'] = $endtime > time() ? $endtime - time() : 0;
        }

        $proInfo['labels'] = $proInfo['labels'] ? array_values(array_filter(explode(",", $proInfo['labels']))) : []; //array_filter 去除数组中的空元素
        $proInfo['bargained_num'] = $proInfo['virtualSaleVolume'] + $proInfo['realSaleVolume'];
        $proInfo['thumb'] = remote($uniacid, $proInfo['thumb'], 1);
        if ($proInfo['shareThumb'] && !stristr($proInfo['shareThumb'], 'http')) {
            $proInfo['shareThumb'] = remote($uniacid, $proInfo['shareThumb'], 1);
            $proInfo['thumbimg'] = "https://" . explode("://", $proInfo['shareThumb'])[1];
        } else {
            $proInfo['thumbimg'] = "https://" . explode("://", $proInfo['thumb'])[1];
        }
        $proInfo['vipConfig'] = unserialize($proInfo['vipConfig']);
        $proInfo['is'] = $is;


        $xsl = $proInfo['virtualSaleVolume'] + $proInfo['realSaleVolume'];
        if($xsl == 0){
            $detail_buyuser = [
                [
                    'nickname' => '用户***',
                    'avatar' => ROOT_HOST . STATIC_ROOT . '/image/static/pay_list_person.png'
                ]
            ];
        }else{
            $detail_buyuser = $this->detail_buyuser($uniacid, $id, $proInfo['virtualSaleVolume'], 'bargain');
        }
        $proInfo['detail_buyuser'] = $detail_buyuser;
        // $source = input('source');
        // $pro['detail_evaluate'] = $this->detail_evaluate($uniacid, $id, $source);





        $result['data'] = $proInfo;
        return json_encode($result);
    }

    //得到砍价随机数
    function randomFloat($min, $max)
    {
        return round($min + mt_rand() / mt_getrandmax() * ($max - $min), 2);
    }

    public function doPagebargainInfo()
    {
        $uniacid = input('uniacid');
        $proId = input('proId');
        $openid = input('openid');
        $suid = input('suid');
        $source = input('source');
        $userid = input('userid');
        $bargain_id = input('bargain_id');

        $my_receive = [];
        if ($userid == '' || $userid == $suid) {
            if ($bargain_id == 0) {
                $bid = Db::name('wd_xcx_bargain_bargain_order')->where("uniacid", $uniacid)->where("suid", $suid)->where("proId", $proId)->where("flag", "<", 3)->order("id desc")->value("id");
                if (intval($bid) > 0) {
                    $bargain_id = intval($bid);
                }
            }
        }

        /*
        错误代码：1 商品不存在或已下架
        错误代码：2 商品砍价管理规则未设置
        错误代码：3 砍价已下单
        错误代码：4 砍价已结束
        */
        if ($bargain_id > 0) { //存在砍价管理订单
            $result = Db::name("wd_xcx_bargain_bargain_order")->alias('a')->join("wd_xcx_bargain_pro b", "a.proId = b.id")->where("a.uniacid", $uniacid)->where("a.id", $bargain_id)->where("a.flag", "lt", 3)->field("a.*,b.title,b.thumb,b.price,b.miniPrice,b.activeRule,b.activeEndTime")->find();
            if (!$result) {
                $result['errcode'] = 3;
                $results['data'] = $result;
                return json_encode($results);//活动时间过期并且无正在砍价订单
            }
            $result['thumb'] = remote($uniacid, $result['thumb'], 1);
            $nowPrice = $result['nowPrice']; //目前价格
            $miniPrice = $result['miniPrice']; //最低价格
            $price = $result['price']; //原价价格
            $activeRule = unserialize($result['activeRule']);
            if ($result['flag'] == 2) { //已结束
                $result['percent'] = intval(($price - $nowPrice) / ($price - $miniPrice) * 100);

                if ($userid != '' && $userid != $suid) {
                    $count_is = $result['joinCount'] < $activeRule['aPersons'] ? 1 : 2;//2为砍价已过期
                    $price_is = $result['nowPrice'] > $result['miniPrice'] ? 1 : 2;//2为砍价已过期
                    $bargain_time_is = $result['overtime'] > time() ? 1 : 2;//2为砍价已过期

                    if ($count_is == 2) {
                        $result['errmsg'] = "未砍价，该砍价人数已达上限";
                        Db::name("wd_xcx_bargain_bargain_order")->where('id', $bargain_id)->update(array('flag' => 2));
                    } else if ($price_is == 2) {
                        $result['errmsg'] = "未砍价，该砍价已砍至最低价";
                        Db::name("wd_xcx_bargain_bargain_order")->where('id', $bargain_id)->update(array('flag' => 2));
                    } else if ($bargain_time_is == 2) {
                        $result['errmsg'] = "未砍价，该砍价已过期";
                        Db::name("wd_xcx_bargain_bargain_order")->where('id', $bargain_id)->update(array('flag' => 4));
                    }
                    $result['errcode'] = 4;
                }
                $result['percent'] = intval(($price - $nowPrice) / ($price - $miniPrice) * 100);
            } else { //未结束
                /*
                砍价结束判断 1、是否达到最大帮砍人数
                砍价结束判断 2、是否达到最低价
                砍价结束判断 4、是否砍价过期

                ps:结束则当前用户无法砍价

                */
                $count_is = $result['joinCount'] < $activeRule['aPersons'] ? 1 : 2;//2为砍价已过期
                $price_is = $result['nowPrice'] > $result['miniPrice'] ? 1 : 2;//2为砍价已过期
                $bargain_time_is = $result['overtime'] > time() ? 1 : 2;//2为砍价已过期
                if ($count_is == 1 && $price_is == 1 && $bargain_time_is == 1) { //无过期则砍价
                    $receive_is = Db::name("wd_xcx_bargain_receive")->where("uniacid", $uniacid)->where("suid", $suid)->where("bargain_id", $bargain_id)->find();
                    if (!$receive_is) { //未砍价
                        if ($result['joinCount'] < $activeRule['aBinPersons']) {
                            $res_price = $this->randomFloat($activeRule['aBargainOne'], $activeRule['aBargainTwo']); //随机砍掉的钱
                        } else {
                            $res_price = $this->randomFloat($activeRule['aBargainThree'], $activeRule['aBargainFour']); //随机砍掉的钱
                        }
                        $nowPrice1 = floatval($nowPrice) - floatval($res_price); //现在的钱减去砍掉的钱
                        $nowPrice2 = $nowPrice1 < floatval($result['miniPrice']) ? $result['miniPrice'] : $nowPrice1; //最后的钱与最小的钱对比，如果小于就取最小的钱
                        $data = [
                            'nowPrice' => $nowPrice2,
                            'joinCount' => $result['joinCount'] + 1,
                        ];
                        if ($nowPrice1 <= floatval($result['miniPrice'])) {
                            $data['flag'] = 2;
                            $res_price = floatval($nowPrice) - floatval($result['miniPrice']);//现在的钱减去最低价得到减去的钱
                        }
                        Db::name("wd_xcx_bargain_bargain_order")->where('id', $bargain_id)->update($data);

                        $data2 = [
                            'uniacid' => $uniacid,
                            'suid' => $suid,
                            'bargain_id' => $bargain_id,
                            'proId' => $proId,
                            'price' => floatval($res_price),
                            'flag' => 2,
                            'createtime' => time()
                        ];
                        $data2['id'] = Db::name("wd_xcx_bargain_receive")->insertGetId($data2);
                        $result['nowPrice'] = floatval($nowPrice2);
                        $result['flag'] = 2;
                        $nowPrice = $nowPrice2;
                        $my_receive = $data2;
                    }
                } else {
                    if ($count_is == 2) {
                        $result['errmsg'] = "未砍价，该砍价人数已达上限";
                        Db::name("wd_xcx_bargain_bargain_order")->where('id', $bargain_id)->update(array('flag' => 2));
                    } else if ($price_is == 2) {
                        $result['errmsg'] = "未砍价，该砍价已砍至最低价";
                        Db::name("wd_xcx_bargain_bargain_order")->where('id', $bargain_id)->update(array('flag' => 2));
                    } else if ($bargain_time_is == 2) {
                        $result['errmsg'] = "未砍价，该砍价已过期";
                        Db::name("wd_xcx_bargain_bargain_order")->where('id', $bargain_id)->update(array('flag' => 4));
                    }
                    $result['errcode'] = 4;
                }
                $result['percent'] = intval(($price - $nowPrice) / ($price - $miniPrice) * 100);
                $my_receive = Db::name("wd_xcx_bargain_receive")->where("uniacid", $uniacid)->where("suid", $suid)->where("bargain_id", $bargain_id)->find();
            }
            $prefix = config('database.prefix');
            $receive = Db::query("SELECT a.price,a.createtime, b.id FROM {$prefix}wd_xcx_bargain_receive as a LEFT JOIN {$prefix}wd_xcx_superuser as b on a.suid = b.id WHERE a.uniacid = {$uniacid} and b.uniacid = {$uniacid} and a.bargain_id = {$bargain_id} order by a.id asc");

            foreach ($receive as $ks => &$vs) {
                $vs['createtime'] = date('Y-m-d H:i:s', $vs['createtime']);
                $userinfo = $this->getnameandavatar($source, $uniacid, $vs['id']);
                $vs['avatar'] = $userinfo['avatar'];
                $vs['nickname'] = $userinfo['nickname'];
            }

            $result['my_receive'] = $my_receive ? $my_receive : array('flag' => 1);
            $result['receive'] = $receive;
            $result['now_count'] = count($receive);
            $result['sy_count'] = $activeRule['aPersons'] - count($receive);
            $result['avatar'] = $result['receive'][0]['avatar'];
            $result['nickname'] = rawurldecode($result['receive'][0]['nickname']);
        } else {//不存在砍价管理订单
            $result = Db::name("wd_xcx_bargain_pro")->where("uniacid", $uniacid)->where("id", $proId)->where("status", 1)->where("kc", "gt", 0)->find();//判断商品存在并已上架
            if ($result) {
                $result['thumb'] = remote($uniacid, $result['thumb'], 1);
                $result['shareThumb'] = remote($uniacid, $result['shareThumb'], 1);
                if ($result['activeRule']) {
                    $activeRule = unserialize($result['activeRule']);
                    $res_price = $this->randomFloat($activeRule['aBargainOne'], $activeRule['aBargainTwo']);
                    $nowPrice = floatval($result['price']) - floatval($res_price) < floatval($result['miniPrice']) ? $result['miniPrice'] : floatval($result['price']) - floatval($res_price);
                    $data = [
                        'uniacid' => $uniacid,
                        'suid' => $suid,
                        'proId' => $proId,
                        'nowPrice' => $nowPrice,
                        'activeHours' => $result['activeHours'],
                        'createtime' => time(),
                        'overtime' => time() + $result['activeHours'] * 3600
                    ];
                    if (floatval($result['price']) - floatval($res_price) < floatval($result['miniPrice'])) {
                        $data['flag'] = 2;
                        $res_price = floatval($result['price']) - floatval($result['miniPrice']);
                    }

                    $result['id'] = Db::name("wd_xcx_bargain_bargain_order")->insertGetId($data); //砍价管理id
                    $data2 = [
                        'uniacid' => $uniacid,
                        'suid' => $suid,
                        'bargain_id' => $result['id'],
                        'proId' => $proId,
                        'flag' => 2,
                        'price' => floatval($res_price),
                        'createtime' => time()
                    ];
                    $receive_id = Db::name("wd_xcx_bargain_receive")->insertGetId($data2);; //砍价管理id
                    $result['kan_price'] = floatval($res_price); //砍掉的钱
                    $result['overtime'] = $data['overtime'];
                    $result['flag'] = 1;
                    $result['percent'] = intval($result['kan_price'] / ($result['price'] - $result['miniPrice']) * 100);
                    if ($result['percent'] == 100) {
                        Db::name("wd_xcx_bargain_bargain_order")->where("id", $result['id'])->update(array('flag' => 2));
                        $result['flag'] = 2;
                    }
                    //$result['receive'] = Db::query("SELECT avatar,nickname FROM {$prefix}wd_xcx_superuser WHERE uniacid = {$uniacid} and suid = '{$suid}'");

                    $userinfo = $this->getnameandavatar($source, $uniacid, $suid);
                    $result['receive'][0]['avatar'] = $userinfo['avatar'];
                    $result['receive'][0]['nickname'] = $userinfo['nickname'];
                    $result['receive'][0]['createtime'] = date('Y-m-d H:i:s', time());


                    $result['receive'][0]['price'] = $result['kan_price'];
                    $result['nowPrice'] = $nowPrice;
                    $result['now_count'] = 1;
                    $result['my_receive'] = $data2;
                    $result['my_receive']['id'] = $receive_id;
                    $result['avatar'] = $result['receive'][0]['avatar'];
                    $result['nickname'] = rawurldecode($result['receive'][0]['nickname']);
                    $result['suid'] = $suid;
                    $result['sy_count'] = $activeRule['aPersons'] - 1;
                } else {
                    $result['errcode'] = 2;
                }
            } else {
                $result['errcode'] = 1;
            }
        }
        $result['shareTitle'] = Db::name("wd_xcx_bargain_set")->where("uniacid", $uniacid)->value('shareTitle');
        $result['rules'] = Db::name("wd_xcx_bargain_set")->where("uniacid", $uniacid)->value("rules");
        $results['data'] = $result;
        return json_encode($results);
    }

    public function doPageBargainOrder()
    {
        $uniacid = input('uniacid');
        $openid = input('openid');
        $suid = input('suid');
        $id = input('id');

        // 先处理未支付并超过30分钟的订单
        $wforders = Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("flag", 0)->where("overtime", "lt", time())->field('order_id, pid')->select();
        foreach($wforders as $rsi){
            $wf_pro = Db::name("wd_xcx_bargain_pro")->where("uniacid", $uniacid)->where("id", $rsi['pid'])->field("kc, realSaleVolume")->find();
            $kc = $wf_pro['kc'] != -1 ? $wf_pro['kc'] + 1 : -1; 
            $realSaleVolume = $wf_pro['realSaleVolume'] - 1 < 0 ? 0 : $wf_pro['realSaleVolume'] - 1; 
            $wf_data = [
                        'kc' => $kc,
                        'realSaleVolume' => $realSaleVolume,
                        ];
            Db::name("wd_xcx_bargain_pro")->where("uniacid", $uniacid)->where("id", $rsi['pid'])->update($wf_data);
            Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("order_id", $rsi['order_id'])->update(['flag' => 3]);
        }

        $is_bargained = Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("pid", $id)->where("suid", $suid)->where("flag", 0)->value("id");
        $proInfo = Db::name("wd_xcx_bargain_pro")->where("uniacid", $uniacid)->where("id", $id)->field("title,thumb,price,miniPrice,kuaidi,form_id,stores")->find();

        if ($proInfo['kuaidi'] > 1 && $proInfo['stores']) {
            $stores = explode(',', $proInfo['stores']);
            $stores_info = [];
            $i = 0;
            foreach ($stores as $vsi) {
                $info = Db::name('wd_xcx_store')->where("uniacid", $uniacid)->where("id", $vsi)->field("id, title, tel, province, city, country, times")->find();
                if ($info) {
                    $stores_info[$i] = $info;
                    $i++;
                }
            }
            $proInfo['stores'] = count($stores_info) > 0 ? $stores_info : '';
        } else {
            $proInfo['stores'] = '';
        }
        $orderInfo = Db::name("wd_xcx_bargain_bargain_order")->where("uniacid", $uniacid)->where("proId", $id)->where("suid", $suid)->where("flag", "lt", 3)->order("id desc")->field("nowPrice")->find();

        if (!$orderInfo) {
            $proInfo['nowPrice'] = $proInfo['price']; //无砍价记录时价格为商品实际价格
        } else {
            $proInfo['nowPrice'] = $orderInfo['nowPrice'];
        }

        // if(intval($is_bargained) > 0){
        //     if(!$orderInfo){
        //         $proInfo['nowPrice'] = $proInfo['price']; //无砍价记录时价格为商品实际价格
        //     }else{
        //         $proInfo['nowPrice'] = $orderInfo['nowPrice'];
        //     }
        // }else{
        //     if(!$orderInfo){
        //         $proInfo['nowPrice'] = $proInfo['price']; //无砍价记录时价格为商品实际价格
        //     }else{
        //         $proInfo['nowPrice'] = $orderInfo['nowPrice'];
        //     }
        // }
        $proInfo['thumb'] = remote($uniacid, $proInfo['thumb'], 1);
        $mymoney = Db::name("wd_xcx_superuser")->where("uniacid", $uniacid)->where("id", $suid)->value("money");
        $proInfo['mymoney'] = $mymoney ? $mymoney : 0;
        $proInfo['is_bargained'] = intval($is_bargained);
        $results['data'] = $proInfo;
        return json_encode($results);
    }

    //获取我的订单的相关信息
    public function doPageMyBargainorder()
    {
        $uniacid = input('uniacid');
        $openid = input('openid');
        $suid = input('suid');
        $type = input('type');
        $where = "";
        if (!in_array($type, [9, 10])) {
            if ($type == 1) {
                $where = " and flag = 1 and nav = " . input('nav');
            } else if ($type == 11) {
                $where = " and flag = 1 and nav = " . input('nav');
            } else if ($type == 6) {
                $where = " and flag in (6,7,8,9)";
            } else {
                $where = " and flag = " . $type;
            }
        }
        // 先处理未支付并超过30分钟的订单
        $wforders = Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("flag", 0)->where("overtime", "lt", time())->field('order_id, pid')->select();
        foreach($wforders as $rsi){
            $wf_pro = Db::name("wd_xcx_bargain_pro")->where("uniacid", $uniacid)->where("id", $rsi['pid'])->field("kc, realSaleVolume")->find();
            $kc = $wf_pro['kc'] != -1 ? $wf_pro['kc'] + 1 : -1; 
            $realSaleVolume = $wf_pro['realSaleVolume'] - 1 < 0 ? 0 : $wf_pro['realSaleVolume'] - 1; 
            $wf_data = [
                        'kc' => $kc,
                        'realSaleVolume' => $realSaleVolume,
                        ];
            Db::name("wd_xcx_bargain_pro")->where("uniacid", $uniacid)->where("id", $rsi['pid'])->update($wf_data);
            Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("order_id", $rsi['order_id'])->update(['flag' => 3]);
        }

        $pindex = max(1, intval(input('page')));
        $psize = 10;
        $prefix = config('database.prefix');
        $ordersList['list'] = Db::query("SELECT * FROM {$prefix}wd_xcx_bargain_order WHERE uniacid = {$uniacid} and suid = '{$suid}' " . $where . " ORDER BY creattime DESC,flag  LIMIT " . ($pindex - 1) * $psize . "," . $psize);

        foreach ($ordersList['list'] as &$row) {
            $row['thumb'] = remote($uniacid, $row['thumb'], 1);
        }
        // $alls = Db::query("SELECT id FROM sudu8_page_bargain_order WHERE {$uniacid} and suid = {$suid} ".$where);
        // $ordersList['allnum'] = count($alls);
        $mymoney = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->value('money');
        $ordersList['mymoney'] = $mymoney;
        $results['data'] = $ordersList;
        return json_encode($results);
    }

    public function doPagegetBargainOrderDetail()
    {
        $uniacid = input('uniacid');
        $order_id = input('order_id');
        $suid = input('suid');

        $orderInfo = Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("order_id", $order_id)->find();
        if ($orderInfo) {
            $orderInfo['kan_price'] = round($orderInfo['price'] + $orderInfo['yunfei'] - $orderInfo['yue_price'] - $orderInfo['wx_price'], 2);
            $orderInfo['store_info'] = $orderInfo['store_info'] ? unserialize($orderInfo['store_info']) : '';
            if($orderInfo['m_address']){
                $orderInfo['addressinfo'] = unserialize($orderInfo['m_address']);
            }else if ($orderInfo['addressId'] > 0) {
                $orderInfo['addressinfo'] = Db::name('wd_xcx_duo_products_address')->where("id", $orderInfo['address'])->find();
            }
            if($orderInfo['self_taking_info']){
                $orderInfo['self_taking_info'] = unserialize($orderInfo['self_taking_info']);
                $orderInfo['self_taking_info']['self_taking_shop_info'] = unserialize($orderInfo['self_taking_info']['self_taking_shop_info']);
            }

        }
        $orderInfo['thumb'] = remote($uniacid, $orderInfo['thumb'], 1);
        $orderInfo['creattime'] = date('Y-m-d H:i:s', $orderInfo['creattime']);
        $mymoney = Db::name('wd_xcx_superuser')->where('id', $suid)->value('money');
        $results['data']['info'] = $orderInfo;
        $results['data']['mymoney'] = $mymoney;
        return json_encode($results);
    }

    //新版取消订单
    public function doPagetk()
    {
        $uniacid = input('uniacid');
        $order_id = input('order_id');
        $formId = input('formId');
        if ($order_id && $order_id != 'undefined') {
            Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("order_id", $order_id)->update(array("flag" => 6, "qx_formid" => $formId));
            $results['data'] = array("flag" => 0, "message" => "申请成功！");
            return json_encode($results);
        } else {
            $mobile = Db::name("wd_xcx_base")->where("uniacid", $uniacid)->value("tel");
            $results['data'] = array("flag" => 1, "message" => "取消订单申请失败", "mobile" => $mobile);
            return json_encode($results);
        }
    }

    //修改砍价记录状态
    public function doPagechangeReceiveFlag()
    {
        $uniacid = input('uniacid');
        $receive_id = input('receive_id');
        $is = Db::name("wd_xcx_bargain_receive")->where("uniacid", $uniacid)->where("id", $receive_id)->where("flag", 2)->find();
        if ($is) {
            $result = Db::name("wd_xcx_bargain_receive")->where("uniacid", $uniacid)->where("id", $receive_id)->where("flag", 2)->update(array('flag' => 1));
        }
        $results['data'] = $result;
        return json_encode($results);
    }

    public function doPageGetFormInfo()
    {
        $uniacid = input('uniacid');
        $form_id = input('form_id');
        $forms = Db::name("wd_xcx_formlist")->where("id", $form_id)->find();
        $forms2 = unserialize($forms['tp_text']);
        $form = [];
        $form['formdescs'] = $forms['descs'];
        $tp_text = [];
        if ($forms2) {
            foreach ($forms2 as $key => &$res) {
                if ($key > 0) {
                    $tp_key = $key - 1;
                    if ($res['required'] == true) {
                        $tp_text[$tp_key]['ismust'] = 1;
                    } else {
                        $tp_text[$tp_key]['ismust'] = 0;
                    }
                    $tp_text[$tp_key]['name'] = $res['label'];
                    if ($res['field_type'] == '单行文本') {
                        $tp_text[$tp_key]['type'] = 0;
                        $tp_text[$tp_key]['tp_text'][0]['yval'] = 0;
                    } else if ($res['field_type'] == '多行文本') {
                        $tp_text[$tp_key]['type'] = 1;
                        $tp_text[$tp_key]['tp_text'] = '';
                    } else if ($res['field_type'] == '多选' || $res['field_type'] == '单选') {
                        if ($res['field_type'] == '多选') {
                            $tp_text[$tp_key]['type'] = 3;
                        } else {
                            $tp_text[$tp_key]['type'] = 4;
                        }
                        foreach ($res['field_options']['options'] as $key1 => &$rec1) {
                            $rec1['yval'] = $rec1['label'];
                            unset($rec1['label']);
                        }
                        $tp_text[$tp_key]['tp_text'] = $res['field_options']['options'];
                    } else if ($res['field_type'] == '下拉选') {
                        $tp_text[$tp_key]['type'] = 2;
                        $tp_text[$tp_key]['tp_text'] = [];
                        foreach ($res['field_options']['options'] as $key2 => &$rec2) {
                            array_push($tp_text[$tp_key]['tp_text'], $rec2['label']);
                        }
                    } else if ($res['field_type'] == '日期') {
                        $tp_text[$tp_key]['type'] = 7;
                    } else if ($res['field_type'] == '时间') {
                        $tp_text[$tp_key]['type'] = 11;
                    } else if ($res['field_type'] == '图片') {
                        $tp_text[$tp_key]['type'] = 5;
                        $tp_text[$tp_key]['tp_text'] = $res['field_options']['maxpic'];
                        $tp_text[$tp_key]['z_val'] = array();
                    } else if ($res['field_type'] == '手机号') {
                        $tp_text[$tp_key]['type'] = 0;
                        $tp_text[$tp_key]['tp_text'][0]['yval'] = 1;
                    } else if ($res['field_type'] == '身份证') {
                        $tp_text[$tp_key]['type'] = 0;
                        $tp_text[$tp_key]['tp_text'][0]['yval'] = 7;
                    }
                    $tp_text[$tp_key]['val'] = '';
                }
            }
        }
        $form['forms'] = $tp_text;
        $results['data'] = $form;
        return json_encode($results);
    }

    public function doPageShouhuo()
    {
        $uniacid = input('uniacid');
        $openid = input('openid');
        $suid = input('suid');
        $orderid = input('orderid');
        $adata = array(
            "hxtime" => time(),
            "flag" => 2
        );

        $res = Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("order_id", $orderid)->update($adata);
        $info = Db::name("wd_xcx_bargain_order")->where("uniacid", $uniacid)->where("order_id", $orderid)->field("true_price")->find();

        $openid = Db::name("wd_xcx_user")->where("suid", $suid)->value('openid');
        $jsons = [
            'fprice' => $info['true_price']
        ];
        $jsons = serialize($jsons);
        sendSubscribe($uniacid, 2, $openid, $jsons);
        //add_all_pay($uniacid, $info['true_price'],$openid);
        //check_vip_grade($uniacid, $openid);
    }
    /* 砍价end */

    /*拼团退款*/
    public function doPagepttk()
    {
        $uniacid = input('uniacid');
        $orderid = input('orderid');
        $orderinfo = Db::name("wd_xcx_pt_order")->where("uniacid", $uniacid)->where("order_id", $orderid)->find();
        if ($orderinfo) {
            $is = Db::name('wd_xcx_pt_tx')->where([
                'uniacid' => $uniacid,
                'suid' => $orderinfo['suid'],
                'ptorder' => $orderinfo['order_id']
            ])->find();
            if ($is) {
                return json_encode(['data' => 2]);
            } else {
                Db::name("wd_xcx_pt_order")->where("uniacid", $uniacid)->where("order_id", $orderid)->update(['flag' => 5, 'qx_formid' => input("formId")]);
                $pdata = array(
                    "uniacid" => $uniacid,
                    "suid" => $orderinfo['suid'],
                    "openid" => $orderinfo['openid'],
                    "ptorder" => $orderinfo['order_id'],
                    "money" => $orderinfo['price'],
                    "creattime" => time(),
                    "flag" => 1,
                    "is_success" => 1
                );
                Db::name("wd_xcx_pt_tx")->insert($pdata);
                return json_encode(['data' => 1]);
            }

        } else {
            return json_encode(['data' => 2]);
        }
    }


    /*京东拼多多商品详情*/
    public function dopageExtProducts()
    {
        include_once ROOT_PATH . 'application/index/controller/pdd.php';
        include_once ROOT_PATH . 'application/index/controller/jd.php';
        $uniacid = input('uniacid');
        $id = input('id');
        $fxsid = input('fxsid');

        $goods = Db::name('wd_xcx_external_goods')->where('uniacid', $uniacid)->where('id', $id)->where('is_sale', 1)->find();
        if ($goods) {
            //获取项目推广位ID
            $p_id = Db::name('wd_xcx_applet')->where('id', $uniacid)->field('p_id, jd_id')->find();

            //总平台返佣比例
            $fanyong = Db::name('wd_xcx_applet')->where('id', $uniacid)->field('fanyong')->find()['fanyong'];
            $fanyong = round($fanyong / 100, 2);
            //分销商返佣比例  -- 显示一级分销商分佣比例
            $one_bili = Db::name('wd_xcx_fx_gz')->where('uniacid', $uniacid)->field('one_bili')->find();
            if ($one_bili) {
                $one_bili = round($one_bili['one_bili'] / 100, 2);
            } else {
                $one_bili = 1;
            }

            if ($goods['type'] == 'pdd') {
                if ($p_id['p_id']) {
                    $pdd = new \pdd($uniacid);

                    $custom_parameters = '|fxsid=' . $fxsid . '|';

                    $arr = $pdd->getUrlById($goods['goods_id'], $p_id['p_id'], $custom_parameters);
                    if ($arr) {
                        $res = $arr[0];
                        $res['error'] = 0;
                        $res['goods_detail']['price'] = ($res['goods_detail']['min_group_price'] - $res['goods_detail']['coupon_discount']) / 100;
                        $res['goods_detail']['min_group_price'] = $res['goods_detail']['min_group_price'] / 100;
                        if ($res['goods_detail']['sales_tip'] > 10000) {
                            $res['goods_detail']['sold_quantity'] = round($res['goods_detail']['sales_tip'] / 10000, 1) . '万';
                        }


                        $res['goods_detail']['fanyong'] = round($res['goods_detail']['price'] * $fanyong * $one_bili * $res['goods_detail']['promotion_rate'] / 1000, 2);
                        $res['type'] = 'pdd';
                        // dump($res);die;
                        $result['data'] = $res;
                    } else {
                        $result['data'] = ['error' => 1, 'msg' => '获取商品信息失败！'];
                    }
                } else {
                    $result['data'] = ['error' => 3, 'msg' => '项目不存在'];
                }
            } else {
                if ($p_id['jd_id']) {
                    $jd = new \jd($uniacid);

                    $ext1 = 'fxsid|' . $fxsid;

                    if ($goods['cou_link']) {
                        $arrs = $jd->getUrlByUrl($goods['good_link'], $ext1, $goods['cou_link']);
                    } else {
                        $arrs = $jd->getUrlByUrl($goods['good_link'], $ext1);
                    }
                    if ($arrs['code'] == 200) {
                        $fanyong_money = round($goods['commission'] * $fanyong * $one_bili, 2);
                        $res['goods_detail'] = [
                            'goods_name' => $goods['name'],
                            'min_group_price' => $goods['min_group_price'],
                            'sold_quantity' => $goods['sold_quantity'],
                            'price' => round($goods['min_group_price'] - $goods['coupon_discount'], 2),
                            'goods_gallery_urls' => unserialize($goods['image_list']),
                            'fanyong' => $fanyong_money

                        ];
                        if ($goods['cou_link']) {
                            $res['mobile_short_url'] = $goods['cou_link'];
                        } else {
                            $res['mobile_short_url'] = '优惠券已经抢光啦！';
                        }

                        $res['we_app_info'] = [
                            'desc' => '京东推荐',
                            'title' => '京东爆品！！',
                            'we_app_icon_url' => '',
                            'page_path' => $arrs['data']['clickURL']
                        ];
                        $res['error'] = 0;
                        $res['type'] = 'jd';

                        $result['data'] = $res;

                    } else {
                        $result['data'] = ['error' => 1, 'msg' => '获取商品信息失败！'];
                    }
                } else {
                    $result['data'] = ['error' => 3, 'msg' => '项目不存在'];
                }

            }


        } else { //商品不存在
            $result['data'] = ['error' => 2, 'msg' => '商品不存或已下架'];
        }
        return json_encode($result);
    }

    //多商户增加店铺浏览次数
    public function doPageAddShopHits()
    {
        $sid = input('sid');
        $prefix = config('database.prefix');
        $sql = "UPDATE `{$prefix}wd_xcx_shops_shop` SET `hits` = `hits` + 1 WHERE `id` = " . $sid;
        Db::query($sql);
        // $hits = Db::name('wd_xcx_shops_shop')->where('id', $sid)->value('hits');
        // Db::name('wd_xcx_shops_shop')->where('id', $sid)->update(['hits' => $hits + 1]);
    }

    //多商户查询店铺栏目，商品数据
    public function doPageGetStoreData()
    {
        $sid = input('sid');
        $cid = input('cid');
        $cates = Db::name('wd_xcx_shops_goods')->alias('a')->join('wd_xcx_goods_cate b', 'a.cid = b.id')->where('a.sid', $sid)->where('b.cid', 0)->group('a.cid')->order('a.cid asc')->field("a.cid,b.name")->select();  //查询商户下所有一级栏目
        if (!$cid && $cates) {
            $cid = $cates[0]['cid'];
        }
        $prefix = config('database.prefix');
        $list_cate = Db::query("SELECT b.id,b.name FROM {$prefix}wd_xcx_shops_goods as a left join {$prefix}wd_xcx_goods_cate as b on a.cid = b.id where a.sid = {$sid} and ( b.id = {$cid} or b.cid = {$cid} ) group by a.cid order by b.id asc, b.num desc");
        $data = [];
        foreach ($list_cate as $key => $value) {
            $data[$key]['cname'] = $value['name'];
            $data[$key]['list'] = Db::name('wd_xcx_shops_goods')->where('sid', $sid)->where('cid', $value['id'])->order('num desc,id asc')->select();  //查询商户下所有一级栏目
        }


        $result['data']['cates'] = $cates;
        $result['data']['goodsL'] = $data;
        $result['data']['cid'] = $cid;
        return json_encode($result);
    }


    //百度支付
    public function doPageBaidupay()
    {
        $uniacid = input('uniacid');
        $order_id = input('order_id');
        $money = input('money');
        $suid = input('suid');
        $types = input('types');

        $bdconf = Db::name('wd_xcx_applet')->where('id', $uniacid)->field('baidu_dealId, baidu_pay_appkey, baidu_private_key, baidu_public_key')->find();
        require_once('bdpay/Autoloader.php');

        if ($types == 'duo') {
            $order = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('payprice, sid')->find();
            if ($money == $order['payprice']) {
                $requestParamsArr = array(
                    'appKey' => $bdconf['baidu_pay_appkey'],
                    'dealId' => $bdconf['baidu_dealId'],
                    'tpOrderId' => $order_id,
                    'totalAmount' => $money * 100,
                );
                $rsaSign = \NuomiRsaSign::genSignWithRsa($requestParamsArr, $bdconf['baidu_private_key']);

                $requestParamsArr['dealTitle'] = $order['sid'] == 0 ? '商品订单' : '商户商品订单';
                $requestParamsArr['signFieldsRange'] = '1';
                $requestParamsArr['rsaSign'] = $rsaSign;

                $body = $types . '|' . $uniacid . '|' . $types . '|' . $suid;
                $biz['tpData']['returnData']['body'] = $body;

                $requestParamsArr['bizInfo'] = json_encode($biz);

                return json_encode($requestParamsArr);
            }
        }

        if ($types == 'mainShop') {
            $order = Db::name('wd_xcx_main_shop_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('pay_money')->find();
            if ($money == $order['pay_money']) {
                $requestParamsArr = array(
                    'appKey' => $bdconf['baidu_pay_appkey'],
                    'dealId' => $bdconf['baidu_dealId'],
                    'tpOrderId' => $order_id,
                    'totalAmount' => $money * 100,
                );
                $rsaSign = \NuomiRsaSign::genSignWithRsa($requestParamsArr, $bdconf['baidu_private_key']);

                $requestParamsArr['dealTitle'] = '商品订单';
                $requestParamsArr['signFieldsRange'] = '1';
                $requestParamsArr['rsaSign'] = $rsaSign;

                $body = $types . '|' . $uniacid . '|' . $types . '|' . $suid;
                $biz['tpData']['returnData']['body'] = $body;

                $requestParamsArr['bizInfo'] = json_encode($biz);

                return json_encode($requestParamsArr);
            }
        }

        if ($types == 'miaosha') {
            $order = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('price')->find();
            if ($money == $order['price']) {
                $requestParamsArr = array(
                    'appKey' => $bdconf['baidu_pay_appkey'],
                    'dealId' => $bdconf['baidu_dealId'],
                    'tpOrderId' => $order_id,
                    'totalAmount' => $money * 100,
                );
                $rsaSign = \NuomiRsaSign::genSignWithRsa($requestParamsArr, $bdconf['baidu_private_key']);

                $requestParamsArr['dealTitle'] = '秒杀商品订单';
                $requestParamsArr['signFieldsRange'] = '1';
                $requestParamsArr['rsaSign'] = $rsaSign;

                $body = $types . '|' . $uniacid . '|' . $types . '|' . $suid;
                $biz['tpData']['returnData']['body'] = $body;

                $requestParamsArr['bizInfo'] = json_encode($biz);

                return json_encode($requestParamsArr);
            }
        }

        if ($types == 'reserve') {
            $order = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('pay_price')->find();
            if ($money == $order['pay_price']) {
                $requestParamsArr = array(
                    'appKey' => $bdconf['baidu_pay_appkey'],
                    'dealId' => $bdconf['baidu_dealId'],
                    'tpOrderId' => $order_id,
                    'totalAmount' => $money * 100,
                );
                $rsaSign = \NuomiRsaSign::genSignWithRsa($requestParamsArr, $bdconf['baidu_private_key']);

                $requestParamsArr['dealTitle'] = '预约预定商品订单';
                $requestParamsArr['signFieldsRange'] = '1';
                $requestParamsArr['rsaSign'] = $rsaSign;

                $body = $types . '|' . $uniacid . '|' . $types . '|' . $suid;
                $biz['tpData']['returnData']['body'] = $body;

                $requestParamsArr['bizInfo'] = json_encode($biz);

                return json_encode($requestParamsArr);
            }
        }

        if ($types == 'pt') {
            $order = Db::name('wd_xcx_pt_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('price')->find();
            if ($money == $order['price']) {
                $requestParamsArr = array(
                    'appKey' => $bdconf['baidu_pay_appkey'],
                    'dealId' => $bdconf['baidu_dealId'],
                    'tpOrderId' => $order_id,
                    'totalAmount' => $money * 100,
                );
                $rsaSign = \NuomiRsaSign::genSignWithRsa($requestParamsArr, $bdconf['baidu_private_key']);

                $requestParamsArr['dealTitle'] = '拼团商品订单';
                $requestParamsArr['signFieldsRange'] = '1';
                $requestParamsArr['rsaSign'] = $rsaSign;

                $body = $types . '|' . $uniacid . '|' . $types . '|' . $suid;
                $biz['tpData']['returnData']['body'] = $body;

                $requestParamsArr['bizInfo'] = json_encode($biz);

                return json_encode($requestParamsArr);
            }
        }

        if ($types == 'bargain') {
            $order = Db::name('wd_xcx_bargain_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('true_price')->find();
            if ($money == $order['true_price']) {
                $requestParamsArr = array(
                    'appKey' => $bdconf['baidu_pay_appkey'],
                    'dealId' => $bdconf['baidu_dealId'],
                    'tpOrderId' => $order_id,
                    'totalAmount' => $money * 100,
                );
                $rsaSign = \NuomiRsaSign::genSignWithRsa($requestParamsArr, $bdconf['baidu_private_key']);

                $requestParamsArr['dealTitle'] = '砍价商品订单';
                $requestParamsArr['signFieldsRange'] = '1';
                $requestParamsArr['rsaSign'] = $rsaSign;

                $body = $types . '|' . $uniacid . '|' . $types . '|' . $suid;
                $biz['tpData']['returnData']['body'] = $body;

                $requestParamsArr['bizInfo'] = json_encode($biz);

                return json_encode($requestParamsArr);
            }
        }
        if ($types == 'supfabu') {
            if ($money) {
                $requestParamsArr = array(
                    'appKey' => $bdconf['baidu_pay_appkey'],
                    'dealId' => $bdconf['baidu_dealId'],
                    'tpOrderId' => $order_id,
                    'totalAmount' => $money * 100,
                );
                $rsaSign = \NuomiRsaSign::genSignWithRsa($requestParamsArr, $bdconf['baidu_private_key']);

                $requestParamsArr['dealTitle'] = '供求关系发布支付';
                $requestParamsArr['signFieldsRange'] = '1';
                $requestParamsArr['rsaSign'] = $rsaSign;

                $body = $types . '|' . $uniacid . '|' . $types . '|' . $suid;
                $biz['tpData']['returnData']['body'] = $body;

                $requestParamsArr['bizInfo'] = json_encode($biz);

                return json_encode($requestParamsArr);
            }
        }

        if ($types == 'supsettop') {
            if ($money) {
                $requestParamsArr = array(
                    'appKey' => $bdconf['baidu_pay_appkey'],
                    'dealId' => $bdconf['baidu_dealId'],
                    'tpOrderId' => $order_id,
                    'totalAmount' => $money * 100,
                );
                $rsaSign = \NuomiRsaSign::genSignWithRsa($requestParamsArr, $bdconf['baidu_private_key']);

                $requestParamsArr['dealTitle'] = '供求关系置顶支付';
                $requestParamsArr['signFieldsRange'] = '1';
                $requestParamsArr['rsaSign'] = $rsaSign;

                $body = $types . '|' . $uniacid . '|' . $types . '|' . $suid;
                $biz['tpData']['returnData']['body'] = $body;

                $requestParamsArr['bizInfo'] = json_encode($biz);

                return json_encode($requestParamsArr);
            }
        }

        if ($types == 'fabu') {
            if ($money) {
                $requestParamsArr = array(
                    'appKey' => $bdconf['baidu_pay_appkey'],
                    'dealId' => $bdconf['baidu_dealId'],
                    'tpOrderId' => $order_id,
                    'totalAmount' => $money * 100,
                );
                $rsaSign = \NuomiRsaSign::genSignWithRsa($requestParamsArr, $bdconf['baidu_private_key']);

                $requestParamsArr['dealTitle'] = '微同城发布支付';
                $requestParamsArr['signFieldsRange'] = '1';
                $requestParamsArr['rsaSign'] = $rsaSign;

                $body = $types . '|' . $uniacid . '|' . $types . '|' . $suid;
                $biz['tpData']['returnData']['body'] = $body;

                $requestParamsArr['bizInfo'] = json_encode($biz);

                return json_encode($requestParamsArr);
            }
        }

        if ($types == 'settop') {
            if ($money) {
                $requestParamsArr = array(
                    'appKey' => $bdconf['baidu_pay_appkey'],
                    'dealId' => $bdconf['baidu_dealId'],
                    'tpOrderId' => $order_id,
                    'totalAmount' => $money * 100,
                );
                $rsaSign = \NuomiRsaSign::genSignWithRsa($requestParamsArr, $bdconf['baidu_private_key']);

                $requestParamsArr['dealTitle'] = '微同城置顶支付';
                $requestParamsArr['signFieldsRange'] = '1';
                $requestParamsArr['rsaSign'] = $rsaSign;

                $body = $types . '|' . $uniacid . '|' . $types . '|' . $suid;
                $biz['tpData']['returnData']['body'] = $body;

                $requestParamsArr['bizInfo'] = json_encode($biz);

                return json_encode($requestParamsArr);
            }
        }

        if ($types == 'food') {
            $order = Db::name('wd_xcx_food_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('wx_price')->find();
            if ($money == $order['wx_price']) {
                $requestParamsArr = array(
                    'appKey' => $bdconf['baidu_pay_appkey'],
                    'dealId' => $bdconf['baidu_dealId'],
                    'tpOrderId' => $order_id,
                    'totalAmount' => $money * 100,
                );
                $rsaSign = \NuomiRsaSign::genSignWithRsa($requestParamsArr, $bdconf['baidu_private_key']);

                $requestParamsArr['dealTitle'] = '餐饮商品订单';
                $requestParamsArr['signFieldsRange'] = '1';
                $requestParamsArr['rsaSign'] = $rsaSign;

                $body = $types . '|' . $uniacid . '|' . $types . '|' . $suid;
                $biz['tpData']['returnData']['body'] = $body;

                $requestParamsArr['bizInfo'] = json_encode($biz);

                return json_encode($requestParamsArr);
            }
        }

        if ($types == 'recharge') {
            if ($money) {
                $requestParamsArr = array(
                    'appKey' => $bdconf['baidu_pay_appkey'],
                    'dealId' => $bdconf['baidu_dealId'],
                    'tpOrderId' => $order_id,
                    'totalAmount' => $money * 100,
                );
                $rsaSign = \NuomiRsaSign::genSignWithRsa($requestParamsArr, $bdconf['baidu_private_key']);

                $requestParamsArr['dealTitle'] = '充值支付';
                $requestParamsArr['signFieldsRange'] = '1';
                $requestParamsArr['rsaSign'] = $rsaSign;

                $body = $types . '|' . $uniacid . '|' . $types . '|' . $suid;
                $biz['tpData']['returnData']['body'] = $body;

                $requestParamsArr['bizInfo'] = json_encode($biz);

                return json_encode($requestParamsArr);
            }
        }

        if ($types == 'vipgrade') {
            $order = Db::name('wd_xcx_vip_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('wxpay')->find();
            if ($money == $order['wxpay']) {
                $requestParamsArr = array(
                    'appKey' => $bdconf['baidu_pay_appkey'],
                    'dealId' => $bdconf['baidu_dealId'],
                    'tpOrderId' => $order_id,
                    'totalAmount' => $money * 100,
                );
                $rsaSign = \NuomiRsaSign::genSignWithRsa($requestParamsArr, $bdconf['baidu_private_key']);

                $requestParamsArr['dealTitle'] = '购买会员';
                $requestParamsArr['signFieldsRange'] = '1';
                $requestParamsArr['rsaSign'] = $rsaSign;

                $body = $types . '|' . $uniacid . '|' . $types . '|' . $suid;
                $biz['tpData']['returnData']['body'] = $body;

                $requestParamsArr['bizInfo'] = json_encode($biz);

                return json_encode($requestParamsArr);
            }
        }

        if ($types == 'shoppay') {
            if ($money) {
                $requestParamsArr = array(
                    'appKey' => $bdconf['baidu_pay_appkey'],
                    'dealId' => $bdconf['baidu_dealId'],
                    'tpOrderId' => $order_id,
                    'totalAmount' => $money * 100,
                );
                $rsaSign = \NuomiRsaSign::genSignWithRsa($requestParamsArr, $bdconf['baidu_private_key']);

                $requestParamsArr['dealTitle'] = '店内支付';
                $requestParamsArr['signFieldsRange'] = '1';
                $requestParamsArr['rsaSign'] = $rsaSign;

                $body = $types . '|' . $uniacid . '|' . $types . '|' . $suid;
                $biz['tpData']['returnData']['body'] = $body;

                $requestParamsArr['bizInfo'] = json_encode($biz);

                return json_encode($requestParamsArr);
            }
        }
    }

    //头条支付
    public function doPageToutiaopay()
    {
        $uniacid = input('uniacid');
        $order_id = input('order_id');
        $money = input('money');
        $suid = input('suid');
        $types = input('types');
        $formId = input('formId');

        $rediscon = $this->GetRediscon();
        $redis = new Redis($rediscon);

        $openid = Db::name('wd_xcx_toutiao_user')->where('uniacid', $uniacid)->where('suid', $suid)->value('openid');

        $bdanceconf = Db::name('wd_xcx_applet')->where('id', $uniacid)->field('bdance_appid, bdance_mchid,bdance_mchid_appid,bdance_mchid_secret')->find();
        $ip = $_SERVER["REMOTE_ADDR"];
        $body = $types . '|' . $formId . '|' . $uniacid . '|' . $suid; //
        $allpays = $money * 100;

        if ($types == 'bargain') {
            $pay_info = $redis->get('bargain_' . $order_id);
            if($pay_info){
                if($pay_info['timestamp'] > time() - 360){
                    return json_encode($pay_info);
                }
            }
            $order = Db::name('wd_xcx_bargain_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('true_price')->find();
            $order_pay = $order['true_price'];
            $order_title = "砍价商品订单";
        }


        if ($types == 'duo') {
            $pay_info = $redis->get('duo_' . $order_id);
            if($pay_info){
                if($pay_info['timestamp'] > time() - 360){
                    return json_encode($pay_info);
                }
            }
            $order = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('payprice, sid')->find();
            $order_pay = $order['payprice'];
            $order_title = "商品订单";
        }

        if ($types == 'mainShop') {  //新版商品订单
            $pay_info = $redis->get('mainshop_' . $order_id);
            if($pay_info){
                if($pay_info['timestamp'] > time() - 360){
                    return json_encode($pay_info);
                }
            }

            $pay_money = Db::name('wd_xcx_main_shop_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->value('pay_money');
            $order_pay = $pay_money;
            $order_title = "商品订单";
        }

        if ($types == 'miaosha') {
            $pay_info = $redis->get('miaosha_' . $order_id);
            if($pay_info){
                if($pay_info['timestamp'] > time() - 360){
                    return json_encode($pay_info);
                }
            }
            $order = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('price')->find();
            $order_pay = $order['price'];
            $order_title = "描述商品订单";

        }

        if ($types == 'reserve') {
            $pay_info = $redis->get('reserve_' . $order_id);
            if($pay_info){
                if($pay_info['timestamp'] > time() - 360){
                    return json_encode($pay_info);
                }
            }
            $order = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('pay_price')->find();
            $order_pay = $order['pay_price'];
            $order_title = "预约预定商品订单";
        }

        if ($types == 'pt') {
            $pay_info = $redis->get('pt_' . $order_id);
            if($pay_info){
                if($pay_info['timestamp'] > time() - 360){
                    return json_encode($pay_info);
                }
            }
            $order = Db::name('wd_xcx_pt_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('price')->find();
            $order_pay = $order['price'];
            $order_title = "拼团商品订单";
        }


        if ($types == 'supfabu') {
            if ($money) {
                $order_pay = $money;
                $order_title = "供求关系发布支付";
            }
        }

        if ($types == 'supsettop') {
            if ($money) {
                $order_pay = $money;
                $order_title = "供求关系置顶支付";
            }
        }

        if ($types == 'fabu') {
            if ($money) {
                $order_pay = $money;
                $order_title = "微同城发布支付";
            }
        }

        if ($types == 'settop') {
            if ($money) {
                $order_pay = $money;
                $order_title = "微同城置顶支付";
            }
        }
        if ($types == 'art') {
            if ($money) {
                $order_pay = $money;
                $order_title = "付费文章";
            }
        }

        if ($types == 'food') {
            $order = Db::name('wd_xcx_food_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('wx_price')->find();
            $order_pay = $order['wx_price'];
            $order_title = "餐饮商品订单";
        }

        if ($types == 'recharge') {
            if ($money) {
                $order_pay = $money;
                $order_title = "充值支付";
            }
        }
        if ($types == 'vipgrade') {
            $order = Db::name('wd_xcx_vip_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('wxpay')->find();
            $order_pay = $order['wxpay'];
            $order_title = "购买会员";
        }


        if ($types == 'shoppay') {
            if ($money) {
                $order_pay = $money;
                $order_title = "店内支付";
            }
        }
        if ($money == $order_pay) {
            $notify_url = ROOT_HOST . "/toutiaopay.php";
            // $biz_content = 'app_id='.$bdanceconf['bdance_mchid_appid'].'&biz_content={"uid":"'.$openid.'","merchant_id":"'.$bdanceconf['bdance_mchid'].'","total_amount":"'.$allpays.'","currency":"CNY","trade_time":"'.time().'","valid_time":1800,"risk_info":"{\"ip\":\"'.$ip.'\"}","notify_url":"http://domain.merchant.com/payment_notify","subject":"'.$order_title.'","body":"'.$body.'","out_order_no":"'.$order_id.'"}&charset=utf-8&format=JSON&method=tp.trade.create&notify_url='.$notify_url.'&sign_type=MD5&timestamp="'.time().'"&version=1.0';//app_id:支付appid、body:订单描述、total_amount:该笔订单允许的最晚付款时间、total_amount:订单总金额单位元、subject:商品标题、out_trade_no:订单号、notify_url:回调链接

            $result = $this->bdance_wx_h5($uniacid, $order_id, $allpays, $suid, $bdanceconf, $body);

            $body = $types . '|' . $uniacid . '|' . $types . '|' . $suid;
            $bdance_mchid_appid = $bdanceconf['bdance_mchid_appid'];
            $bdance_mchid = $bdanceconf['bdance_mchid'];
            $bdance_mchid_secret = $bdanceconf['bdance_mchid_secret'];

            if ($result) {
                if ($result['return_code'] == 'SUCCESS') {
                    $timestamp = time();
                    $sign_content = "app_id=" . $bdance_mchid_appid . "&body=" . $body . "&currency=CNY&merchant_id=" . $bdance_mchid . "&notify_url=" . $notify_url . "&out_order_no=" . $order_id . "&payment_type=direct&product_code=pay&sign_type=MD5&subject=" . $order_title . "&timestamp=" . $timestamp . "&total_amount=" . $allpays . "&trade_time=" . $timestamp . "&trade_type=H5&uid=" . $openid . "&valid_time=1800&version=2.0&wx_type=MWEB&wx_url=" . $result['mweb_url'];

                    $data = array(
                        'app_id' => $bdance_mchid_appid,
                        'out_order_no' => $order_id,
                        'merchant_id' => $bdance_mchid,
                        'timestamp' => $timestamp,
                        'total_amount' => $allpays,
                        'uid' => $openid,
                        'subject' => $order_title,
                        'body' => $body,
                        'trade_time' => $timestamp,
                        'notify_url' => ROOT_HOST . "/toutiaopay.php",
                        'wx_url' => $result['mweb_url'],
                        // 'alipay_url' => $alipay_url,
                        'sign' => md5($sign_content . $bdance_mchid_secret),
                        'risk_info' => "{\"ip\":\"" . $ip . "\",\"device_id\":\"485737374363263\"}",
                        'return_code' => 0
                    );
                    if($types == 'mainshop'){
                        $redis->set('mainshop_' . $order_id, json_encode($data));
                    }else if ($types == 'miaosha') {
                        $redis->set('miaosha_' . $order_id, json_encode($data));
                    }else if ($types == 'bargain') {
                        $redis->set('bargain_' . $order_id, json_encode($data));
                    }else if ($types == 'pt') {
                        $redis->set('pt_' . $order_id, json_encode($data));
                    }else if ($types == 'reserve') {
                        $redis->set('reserve_' . $order_id, json_encode($data));
                    }
                    $data['return_code'] = 0;
                    return json_encode($data);
                }else{
                    $result['return_code'] = 1;
                    return json_encode($result);
                }
            }
        }
    }

    public function bdance_wx_h5($uniacid, $order_id, $allpays, $suid, $bdanceconf, $body)
    {
        include 'WeixinPay.php';
        $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->field('bdance_h5_appid, bdance_h5_mchid, bdance_h5_signkey')->find();

        $appid = $app['bdance_h5_appid'];
        $mch_id = $app['bdance_h5_mchid'];
        $key = $app['bdance_h5_signkey'];

        $out_trade_no = $order_id;
        $attach = $body;
        $body = '订单';
        $total_fee = $allpays;   //支付费用  分
        $bdance_mchid_appid = $bdanceconf['bdance_mchid_appid'];
        $bdance_mchid = $bdanceconf['bdance_mchid'];
        $bdance_mchid_secret = $bdanceconf['bdance_mchid_secret'];

        $weixinpay = new WeixinPay($appid, 'openid', $mch_id, $key, $out_trade_no, $body, $total_fee, 1, 0, $attach);
        $result = $weixinpay->h5pay();
        return $result;
    }

    /*会员等级start*/
    public function doPagegetvipgrade()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        // $openid = input('openid');
        $res = [];
        $res['userinfo'] = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->field('money,grade,vipid,id,allpay')->find();
        if ($res['userinfo']) {
            if (!$res['userinfo']['allpay']) {
                $allpays = Db::name('wd_xcx_money')->where('uniacid', $uniacid)->where('type', 'del')->where('suid', $res['userinfo']['id'])->where('message', 'in', array($uniacid, '论坛信息发布', '微同城信息发布', '文章全文', '视频消费', '音频消费', '店内支付扣余额', '店内支付微信支付'))->field('sum(score) as allpays')->find()['allpays'];
                if ($allpays) {
                    $allpays = round($allpays, 2);
                }
                $dan = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('suid', $res['userinfo']['id'])->where('flag', 2)->field('sum(true_price) as price')->find();
                if (!$dan) {
                    $dan['price'] = 0;
                } else {
                    $dan['price'] = round($dan['price'], 2);
                }
                $duo = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('suid', $res['userinfo']['id'])->where('flag', 2)->field('sum(price) as price')->find();
                if (!$duo) {
                    $duo['price'] = 0;
                } else {
                    $duo['price'] = round($duo['price'], 2);
                }
                $pt = Db::name('wd_xcx_pt_order')->where('uniacid', $uniacid)->where('suid', $res['userinfo']['id'])->where('flag', 2)->field('sum(price) as price')->find();

                if (!$pt) {
                    $pt['price'] = 0;
                } else {
                    $pt['price'] = round($pt['price'], 2);
                }
                $food = Db::name('wd_xcx_food_order')->where('uniacid', $uniacid)->where('suid', $res['userinfo']['id'])->field('sum(price) as price')->find();
                if (!$food) {
                    $food['price'] = 0;
                } else {
                    $food['price'] = round($food['price'], 2);
                }
                $res['userinfo']['allpays'] = $allpays + floatval($dan['price']) + floatval($duo['price']) + floatval($pt['price']) + floatval($food['price']);
                Db::name('wd_xcx_superuser')->where('id', $res['userinfo']['id'])->update(array('allpay' => $res['userinfo']['allpays']));
            } else {
                $res['userinfo']['allpays'] = $res['userinfo']['allpay'];
            }
        } else {
            $res['userinfo']['allpays'] = 0;
        }
        $res['userinfo']['grade'] = floatval($res['userinfo']['grade']);
        $result = Db::name('wd_xcx_vipgrade')->where('uniacid', $uniacid)->order('grade asc')->select();
        if ($result) {
            foreach ($result as $k => &$value) {
                $value['grade'] = floatval($value['grade']);
                $value['card_img'] = remote($uniacid, $value['card_img'], 1);
                $value['coupon_num'] = 0;
                if ($value['coupon_flag'] == 1) {
                    // $value['coupon_give'] = unserialize($value['coupon_give']);
                    // foreach ($value['coupon_give'] as $vsis) {
                    //     $is_give_type = Db::name('wd_xcx_coupon')->where('id', $vsis['coupon_id'])->value('give_type');
                    //     if($is_give_type == 1){
                    //         $value['coupon_num'] += $vsis['coupon_num'];
                    //     }
                    // }
                    $value['coupon_num'] = array_sum(array_column(unserialize($value['coupon_give']), 'coupon_num'));
                }
                if ($res['userinfo']['grade'] < $value['grade']) {
                    $value['vn'] = ROOT_HOST . "/vipgrade/gray/" . $value['grade'] . ".png";
                    if (floatval($res['userinfo']['allpays']) < floatval($value['upgrade'])) {
                        $result[$k]['cha'] = round($value['upgrade'] - $res['userinfo']['allpays'], 2);
                        $result[$k]['yi'] = $res['userinfo']['allpays'];
                    } else {
                        if ($res['userinfo']['grade'] == 0) {
                            $vipid = time() . '' . rand(100000, 999999);
                            $data_arr['vipid'] = $vipid;
                            $data_arr['vipcreatetime'] = time();
                        }
                        $data_arr['grade'] = $value['grade'];
                        Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->update($data_arr);
                        $result[$k]['cha'] = 0;
                        $result[$k]['yi'] = $res['userinfo']['allpays'];
                    }
                } else {
                    $value['vn'] = ROOT_HOST . "/vipgrade/black/" . $value['grade'] . ".png";
                    $result[$k]['cha'] = 0;
                    $result[$k]['yi'] = $res['userinfo']['allpays'];
                }
            }
        }
        $res['vip'] = $result;
        return json_encode(array('data' => $res));
    }

    //检查会员申请状态
    function doPageCheckApply()
    {
        $uniacid = input("uniacid");
        $suid = input('suid');
        $source = input('source');
        if ($suid) {
            $userinfo = $this->getnameandavatar($source, $uniacid, $suid);
        } else {
            $userinfo['avatar'] = "";
            $userinfo['nickname'] = "";
        }
        // $openid = input('openid');
        $vipflag = Db::name('wd_xcx_vip_apply')->where('uniacid', $uniacid)->where('suid', $suid)->order('id desc')->find();
        if (empty($vipflag)) {
            $vipflag['flag'] = 2;
        }
        $result['data'] = $vipflag;
        $result['userinfo'] = $userinfo;
        return json_encode($result);
    }


    //关闭个人中心会员等级权益弹窗并改变查看状态
    public function doPagechangeReceive()
    {
        $uniacid = input("uniacid");
        $id = input('id');
        $is = Db::name('wd_xcx_vip_receive')->where('id', $id)->where('uniacid', $uniacid)->where('flag', 0)->find();
        if ($is) {
            $res = Db::name('wd_xcx_vip_receive')->where('id', $id)->update(array('flag' => 1));
        } else {
            $res = 0;
        }
        $result['data'] = $res;
        return json_encode($result);
    }

    //关闭个人中心充值赠送弹窗并改变查看状态
    public function doPagechangeRechargeReceive()
    {
        $uniacid = input("uniacid");
        $id = input('id');
        $is = Db::name('wd_xcx_recharge_receive')->where('id', $id)->where('uniacid', $uniacid)->where('flag', 0)->find();
        if ($is) {
            $res = Db::name('wd_xcx_recharge_receive')->where('id', $id)->update(array('flag' => 1));
        } else {
            $res = 0;
        }
        $result['data'] = $res;
        return json_encode($result);
    }

    //获取会员设置权益
    public function doPageGetequity()
    {
        $uniacid = input("uniacid");
        $res = Db::name('wd_xcx_vip_config')->where('uniacid', $uniacid)->field('bg_img,equity')->find();
        if ($res) {
            $res['bg_img'] = remote($uniacid, $res['bg_img'], 1);
            if ($res['equity']) {
                $res['equity'] = unserialize($res['equity']);
            }
        }
        $suid = input('suid');
        $source = input('source');
        $userinfo = $this->getnameandavatar($source, $uniacid, $suid);
        $result['data'] = $res;
        $result['userinfo'] = $userinfo;
        return json_encode($result);
    }

    //检测是否会员包邮
    public function doPagecheckFreePackage()
    {
        $uniacid = input("uniacid");
        $suid = input("suid");

        $grade = Db::name('wd_xcx_superuser')->where('uniacid', $uniacid)->where('id', $suid)->field('grade')->find()['grade'];
        if ($grade > 0) {
            $free_package = Db::name('wd_xcx_vipgrade')->where('uniacid', $uniacid)->where('grade', $grade)->field('free_package')->find()['free_package'];
            if (!$free_package) {
                $free_package = 0;
            }
        } else {
            $free_package = 0;
        }
        $result['data'] = $free_package;
        return json_encode($result);
    }

    //获取所有京东商品
    public function doPageGetExternalGoods()
    {
        $uniacid = input('uniacid');
        $type = input('type');
        $page = max(1, input('page'));
        $pagesize = 6;
        $pagebegin = ($page - 1) * $pagesize;
        $flag = input('flag');
        $sort = input('sort');

        $order_by = '';
        if ($flag == 0) {
            $order_by = 'sold_quantity desc';
        } elseif ($flag == 1) {
            $order_by = 'id desc';
        } elseif ($flag == 2) {
            if ($sort == 1) {
                $order_by = 'min_group_price asc';
            } elseif ($sort == 2) {
                $order_by = 'min_group_price desc';
            }
        }


        //获取总平台返佣比例
        $fanyong = Db::name('wd_xcx_applet')->where('id', $uniacid)->field('fanyong')->find();
        if ($fanyong) {
            $fanyong = round($fanyong['fanyong'] / 100, 2);
        } else {
            $fanyong = 1;
        }

        //获取分销规则
        $fx_gz = Db::name('wd_xcx_fx_gz')->where('uniacid', $uniacid)->field('one_bili')->find();
        if ($fx_gz) {
            if ($fx_gz['one_bili']) {
                $one_bili = round($fx_gz['one_bili'] / 100, 2);
            } else {
                $one_bili = 1;
            }

        } else {
            $one_bili = 1;
        }
        $goods = Db::name('wd_xcx_external_goods')->where('uniacid', $uniacid)->where('type', $type)->where('is_sale', 1)->order($order_by)->limit($pagebegin, $pagesize)->select();


        foreach ($goods as $key => $value) {
            if ($value['type'] == 'jd') {
                $goods[$key]['yongj'] = round($value['commission'] * $fanyong * $one_bili, 2);
            } else {
                $price = ($value['min_group_price'] - $value['coupon_discount']) * $value['promotion_rate'] / 1000;
                $goods[$key]['yongj'] = round($price * $fanyong * $one_bili, 2);
            }
        }

        $result['data'] = $goods;
        return json_encode($result);
    }

    //获取我的表单提交信息列表
    public function doPageGetFormList()
    {
        $uniacid = input('uniacid');
        $openid = input('openid');
        $suid = input('suid');
        $pageindex = max(1, intval(input('page')));
        $pagesize = 10;
        $prefix = config('database.prefix');
        $formset = Db::query("SELECT a.id,a.cid,a.creattime,a.flag,a.source,a.fid FROM {$prefix}wd_xcx_formcon as a left join {$prefix}wd_xcx_products as b on a.cid = b.id and a.uniacid = b.uniacid WHERE a.suid = '{$suid}' and a.uniacid = {$uniacid} and (a.source is null or a.source <> 'VIP申请') and (b.type = 'showArt' or b.type is null) ORDER BY a.id DESC LIMIT " . ($pageindex - 1) * $pagesize . "," . $pagesize);
        if ($formset) {
            foreach ($formset as $key => &$res) {
                $pro = Db::query("SELECT title,formset FROM {$prefix}wd_xcx_products WHERE id = {$res['cid']} and uniacid = {$uniacid}");
                if ($pro) {
                    $pro = $pro[0];
                    $res['title'] = $pro['title'];
                    $res['formtitle'] = Db::name('wd_xcx_formlist')->where("uniacid", $uniacid)->where("id", $pro['formset'])->value("formname");
                    $res['formtitle'] = "文章-" . $pro['title'] . "-" . $res['formtitle'];
                } else {
                    $res['title'] = "";
                    $res['formtitle'] = Db::name('wd_xcx_formlist')->where("uniacid", $uniacid)->where("id", $res['fid'])->value("formname");
                    $res['formtitle'] = "DIY-" . $res['formtitle'];
                }
                $res['creattime'] = date("Y-m-d H:i:s", $res['creattime']);
            }
        }
        $result['data'] = $formset;
        return json_encode($result);
    }

    public function doPageGetFormCon()
    {
        $uniacid = input('uniacid');
        $id = intval(input('id'));
        $prefix = config('database.prefix');
        $item = Db::query("SELECT a.*,b.formname as title FROM {$prefix}wd_xcx_formcon as a LEFT JOIN {$prefix}wd_xcx_formlist as b on a.fid = b.id WHERE a.id = {$id} and a.uniacid={$uniacid}");
        if ($item) {
            $item = $item[0];
            $title = Db::query("SELECT * FROM {$prefix}wd_xcx_products WHERE id = {$item['cid']} and uniacid = {$uniacid}");
            if ($title) {
                $title = $title[0];
                $item['title'] = $title['title'];
                $item['formtitle'] = Db::name('wd_xcx_formlist')->where("uniacid", $uniacid)->where("id", $title['formset'])->value("formname");
                $item['formtitle'] = "文章-" . $title['title'] . "-" . $item['formtitle'];
            } else {
                $item['formtitle'] = Db::name('wd_xcx_formlist')->where("uniacid", $uniacid)->where("id", $item['fid'])->value("formname");
                $item['formtitle'] = "DIY-" . $item['formtitle'];
            }
            $itemval = unserialize($item['val']);
            foreach ($itemval as $key => &$res) {
                if (isset($res['z_val']) && $res['z_val']) {
                    foreach ($res['z_val'] as $k => &$rek) {
                        $rek = remote($uniacid, $rek, 1);
                    }
                }
            }
            $item['val'] = $itemval;
            $item['creattime'] = date("Y-m-d H:i:s", $item['creattime']);
            if ($item['vtime']) {
                $item['vtime'] = date("Y-m-d H:i:s", $item['vtime']);
            }
        }
        $result['data'] = $item;
        return json_encode($result);
    }

    /*QQ小程序start*/
    //获取QQ用户user_id
    public function dopageqqlogin()
    {
        $uniacid = input("uniacid");
        $code = input("code");
        $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->find();
        $appid = $app['qq_appid'];
        $appSecret = $app['qq_appsecret'];
        $url = "https://api.q.qq.com/sns/jscode2session?appid=" . $appid . "&secret=" . $appSecret . "&js_code=" . $code . "&grant_type=authorization_code";
        $weixin = $this->_requestGetcurl($url);
        if ($weixin['errcode'] != 0) {
            $data['res'] = 2;
            $result['data'] = $data;
            return json_encode($result);
            exit;
        }
        $openid = $weixin['openid'];//输出openid
        if ($openid) {
            $data = array(
                "uniacid" => $uniacid,
                "openid" => $openid,
                "createtime" => time()
            );
            //1.判断openid是否存在于数据库
            $user = Db::name('wd_xcx_qq_user')->where('openid', $openid)->where('uniacid', $uniacid)->find();
            if (!$user) {
                Db::name('wd_xcx_qq_user')->insert($data);
                $data['res'] = 1;
                $rdata = Db::name('wd_xcx_qq_user')->where('openid', $openid)->where('uniacid', $uniacid)->find();
                $res['data'] = $rdata;
                return json_encode($res);
            } else {
                $adata['data'] = $user;
                return json_encode($adata);
            }
        } else {
            var_dump($weixin);
        }
    }

    public function dopageqqUpdateNickname()
    {
        $uniacid = input("uniacid");
        $nickname = input("nickname");
        $id = input("uid");
        $avatar = input('avatar');
        if ($id) {
            Db::name("wd_xcx_qq_user")->where('uniacid', $uniacid)->where('id', $id)->update(array('nickname' => $nickname, 'avatar' => $avatar));
        } else {
            Db::name("wd_xcx_qq_user")->insert(array('uniacid' => $uniacid, 'nickname' => $nickname, 'avatar' => $avatar));
        }
    }

    protected function createNoncestr($length = 32)
    {

        $chars = "abcdefghijklmnopqrstuvwxyz0123456789";

        $str = "";

        for ($i = 0; $i < $length; $i++) {

            $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1);

        }

        return $str;

    }

    protected function xmlToArray($xml)
    {

        //禁止引用外部xml实体

        libxml_disable_entity_loader(true);

        $xmlstring = simplexml_load_string($xml, 'SimpleXMLElement', LIBXML_NOCDATA);

        $val = json_decode(json_encode($xmlstring), true);

        return $val;

    }

    public function doPageqqpay()
    {
        $uniacid = input('uniacid');
        $order_id = input('order_id');
        $money = input('money');
        $suid = input('suid');
        $types = input('types');
        $formId = input('formId');

        $openid = Db::name('wd_xcx_qq_user')->where('uniacid', $uniacid)->where('suid', $suid)->value('openid');

        $qqconf = Db::name('wd_xcx_applet')->where('id', $uniacid)->field('qq_appid, qq_appsecret, qq_apptoken, qq_mchid, qq_mchid_key')->find();

        $result = '';
        if ($types == 'duo') {
            $order = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('payprice, sid,pay_info')->find();
            if ($money != $order['payprice']) {
                var_dump("价格错误");
                exit;
            }
            $body = "商品订单";
        }
        if ($types == 'mainShop') {  //新版商品订单
            $order = Db::name('wd_xcx_main_shop_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('is_change_price, change_price,pay_money, payment_info')->find();
            if($order['is_change_price'] == 1){
                $order['pay_money'] = $order['change_price'];
            }
            if ($money * 100 != $order['pay_money'] * 100) {
                var_dump("价格错误");
                exit;
            }
            if ($order['payment_info']) {
                $result = unserialize($order['payment_info']);
            }
            $body = "商品订单";
        }
        if ($types == 'bargain') {
            $order = Db::name('wd_xcx_bargain_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('true_price,pay_info')->find();
            if ($money != $order['true_price']) {
                var_dump("价格错误");
                exit;
            }
            $body = "砍价商品订单";
        }
        if ($types == 'miaosha') {
            $order = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('price,pay_price,pay_info')->find();
            if ($money != $order['price']) {
                var_dump("价格错误");
                exit;
            }
            $body = "秒杀商品订单";
        }

        if ($types == 'reserve') {
            $order = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('pay_price,pay_info')->find();
            if ($money != $order['pay_price']) {
                var_dump("价格错误");
                exit;
            }
            $body = "预约预定商品订单";
        }

        if ($types == 'pt') {
            $order = Db::name('wd_xcx_pt_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('price,wx_price,pay_info')->find();
            if ($money != $order['price']) {
                var_dump("价格错误");
                exit;
            }
            $body = "拼团商品订单";
        }


        if ($types == 'supfabu') {
            if ($money) {
                $body = "发布支付";
            }
        }

        if ($types == 'supsettop') {
            if ($money) {
                $body = "置顶支付";
            }
        }

        if ($types == 'fabu') {
            if ($money) {
                $body = "发布支付";
            }
        }

        if ($types == 'settop') {
            if ($money) {
                $body = "置顶支付";
            }
        }

        if ($types == 'food') {
            $order = Db::name('wd_xcx_food_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('wx_price')->find();
            if ($money != $order['wx_price']) {
                var_dump("价格错误");
                exit;
            }
            $body = "餐饮商品订单";
        }

        if ($types == 'recharge') {
            if ($money) {
                $body = "充值";
            }
        }

        if ($types == 'art') {
            if ($money) {
                $body = "付费文章";
            }
        }

        if ($types == 'vipgrade') {
            $order = Db::name('wd_xcx_vip_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->field('wxpay')->find();
            if ($money != $order['wxpay']) {
                var_dump("价格错误");
                exit;
            }
            $body = "会员等级升级支付";

        }

        if ($types == 'shoppay') {
            if ($money) {
                $body = "店内支付";
            }
        }
        if ($types == 'duo' || $types == 'bargain' || $types == 'miaosha' || $types == 'reserve' || $types == 'pt') {
            if ($order['pay_info']) {
                $result = unserialize($result);
            }
        }
        if (!$result) {
            $now = time();
            $status_order_id = date("Y", $now) . date("m", $now) . date("d", $now) . date("H", $now) . date("i", $now) . date("s", $now) . rand(1000, 9999);
            $appid = $qqconf['qq_appid']; //
            $mch_id = $qqconf['qq_mchid'];
            $nonce_str = $this->createNoncestr();
            $attach = $types . '|' . $formId . '|' . $uniacid . '|' . $suid; //
            $out_trade_no = $order_id ? $order_id : $status_order_id;
            $fee_type = 'CNY'; //
            $total_fee = $money * 100;
            $spbill_create_ip = $_SERVER["REMOTE_ADDR"];
            $trade_type = 'MINIAPP';
            $notify_url = $_SERVER['HTTP_HOST'] . STATIC_ROOT . '/qqpay.php';
            $key = $qqconf['qq_mchid_key'];

            $sign_str = "appid=" . $qqconf['qq_appid'] . "&attach=" . $attach . "&body=" . $body . "&fee_type=" . $fee_type . "&mch_id=" . $mch_id . "&nonce_str=" . $nonce_str . "&notify_url=" . $notify_url . "&out_trade_no=" . $out_trade_no . "&spbill_create_ip=" . $spbill_create_ip . "&total_fee=" . $total_fee . "&trade_type=" . $trade_type;
            $sign = $sign_str . "&key=" . $key;
            $sign = strtoupper(MD5($sign));

            $str = "<xml>
            <appid>" . $appid . "</appid>
            <attach>" . $attach . "</attach>
            <body>" . $body . "</body>
            <fee_type>" . $fee_type . "</fee_type>
            <mch_id>" . $mch_id . "</mch_id>
            <nonce_str>" . $nonce_str . "</nonce_str>
            <notify_url>" . $notify_url . "</notify_url>
            <out_trade_no>" . $out_trade_no . "</out_trade_no>
            <spbill_create_ip>" . $spbill_create_ip . "</spbill_create_ip>
            <total_fee>" . $total_fee . "</total_fee>
            <trade_type>" . $trade_type . "</trade_type>
            <sign>" . $sign . "</sign>
            </xml>";
            $url = 'https://qpay.qq.com/cgi-bin/pay/qpay_unified_order.cgi';
            $post_res = $this->_Postrequest($url, $str);
            $result = $this->xmlToArray($post_res);

            if (isset($result['prepay_id'])) {
                $pay_info = [
                    'prepay_id' => $result['prepay_id'],
                    'mch_id' => $result['mch_id'],
                ];
                $pay_info = serialize($pay_info);
                if ($types == 'duo') {
                    Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update(['prepayid' => $result['prepay_id'], 'pay_info' => $pay_info]);
                }
                if ($types == 'mainShop') {
                    Db::name('wd_xcx_main_shop_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update(['payment_info' => $pay_info]);
                }
                if ($types == 'bargain') {
                    Db::name('wd_xcx_bargain_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update(['prepayid' => $result['prepay_id'], 'pay_info' => $pay_info]);
                }
                if ($types == 'miaosha') {
                    Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update(['prepayid' => $result['prepay_id'], 'pay_info' => $pay_info]);
                }

                if ($types == 'reserve') {
                    Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update(['prepayid' => $result['prepay_id'], 'pay_info' => $pay_info]);
                }

                if ($types == 'pt') {
                    Db::name('wd_xcx_pt_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->update(['pay_info' => $pay_info]);
                }
            }
        }

        return json_encode(['data' => $result]);
    }
    /*QQ小程序end*/
    /*活动报名插件start*/
    //活动列表页数据
    public function doPageActiveList()
    {
        $uniacid = input('uniacid');

        $page = max(1, intval(input("page")));
        $pagesize = 5;
        $begin = ($page - 1) * $pagesize;

        $cateid = intval(input('cateid')); //活动栏目id
        $where = [];
        if ($cateid > 0) {
            $where['cateid'] = $cateid;
        }
        $searchtitle = input('searchtitle');
        if ($searchtitle) {
            $where['name'] = ['like', '%' . $searchtitle . '%'];
        }
        $catelist = Db::name('wd_xcx_active_cate')->where('uniacid', $uniacid)->where('flag', 1)->select(); //活动栏目
        $cate_arr = array_column($catelist, 'id');
        $list = Db::name('wd_xcx_active')->where('uniacid', $uniacid)->where('flag', 1)->where('cateid', 'in', $cate_arr)->where($where)->field('id,activetime,starttime,endtime,name,thumb,applynum,allapply')->order("num desc, id desc")->limit($begin, $pagesize)->select(); //活动列表
        foreach ($list as $key => &$value) {
            $apply = Db::name('wd_xcx_active_apply')->where('uniacid', $uniacid)->where('aid', $value['id'])->order('id desc')->limit(0,6)->select();
            $value['avatar_arr'] = [];
            foreach($apply as $k => $v){
                $userinfo = $this->getnameandavatar($v['source'], $uniacid, $v['suid']);
                $value['avatar_arr'][] = $userinfo['avatar'];
            }
            $value['thumb'] = remote($uniacid, $value['thumb'], 1);
            $value['t_flag'] = 0;
            if ($value['applynum'] >= $value['allapply'] && $value['allapply'] != 0) {
                $value['t_flag'] = 4;
            }
        }
        $result = [];
        $result['data'] = [];
        $result['data']['list'] = $list;
        $result['data']['catelist'] = $catelist;
        return json_encode($result);
    }

    //活动详情页数据
    public function doPageActiveInfo()
    {
        $uniacid = input('uniacid');
        $suid = intval(input('suid'));
        $aid = intval(input('aid')); //活动id

        $applylist = Db::name('wd_xcx_active_apply')->where('uniacid', $uniacid)->where('aid', $aid)->order('id desc')->select();
        foreach ($applylist as $k => &$v) {
            $userinfo = $this->getnameandavatar($v['source'], $uniacid, $v['suid']);
            $v['avatar'] = $userinfo['avatar'];
        }
        $applylist_count = count($applylist);

        $info = Db::name('wd_xcx_active')->where('uniacid', $uniacid)->where('id', $aid)->find(); //活动详情页
        if ($info) {
            $info['pics'] = $info['pics'] ? unserialize($info['pics']) : '';
            $info['thumb'] = remote($uniacid, $info['thumb'], 1);
            if ($info['pics']) {
                foreach ($info['pics'] as $key => &$value) {
                    $value = remote($uniacid, $value, 1);
                }
            }
        }

        $collectcount = 0;
        $is_apply = 0;
        if ($suid) {
            $collect = Db::name('wd_xcx_collect')->where('uniacid', $uniacid)->where("suid", $suid)->where("type", "active")->where("cid", $aid)->count();
            if ($collect > 0) {
                $collectcount = 1;
            }
            $is_apply = Db::name('wd_xcx_active_apply')->where('aid', $aid)->where('suid', $suid)->where('flag', 'in', [1, 2, 3])->find();
            if ($is_apply) {
                $is_apply = 1;
            }
        }
        $info['collectcount'] = $collectcount;
        $info['applylist'] = $applylist;
        $info['applylist_count'] = $applylist_count;
        $info['is_apply'] = $is_apply;
        $result['data'] = $info;
        return json_encode($result);
    }

    public function doPageGetForms()
    {
        $uniacid = input('uniacid');
        $aid = input('aid');
        $forminfo = Db::name('wd_xcx_active')->alias('a')->join('wd_xcx_formlist b', 'a.formset = b.id')->where('a.uniacid', $uniacid)->where('a.id', $aid)->field('b.*')->find();
        if ($forminfo) {
            $forminfo['tp_text'] = unserialize($forminfo['tp_text']);
            $tp_text = [];
            if ($forminfo['tp_text']) {
                foreach ($forminfo['tp_text'] as $key => &$res) {
                    if ($key > 0) {
                        $tp_key = $key - 1;
                        if ($res['required'] == true) {
                            $tp_text[$tp_key]['ismust'] = 1;
                        } else {
                            $tp_text[$tp_key]['ismust'] = 0;
                        }
                        $tp_text[$tp_key]['name'] = $res['label'];
                        if ($res['field_type'] == '单行文本') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0]['yval'] = 0;
                        } else if ($res['field_type'] == '多行文本') {
                            $tp_text[$tp_key]['type'] = 1;
                            $tp_text[$tp_key]['tp_text'] = '';
                        } else if ($res['field_type'] == '多选' || $res['field_type'] == '单选') {
                            if ($res['field_type'] == '多选') {
                                $tp_text[$tp_key]['type'] = 3;
                            } else {
                                $tp_text[$tp_key]['type'] = 4;
                            }
                            foreach ($res['field_options']['options'] as $key1 => &$rec1) {
                                $rec1['yval'] = $rec1['label'];
                                unset($rec1['label']);
                            }
                            $tp_text[$tp_key]['tp_text'] = $res['field_options']['options'];
                        } else if ($res['field_type'] == '下拉选') {
                            $tp_text[$tp_key]['type'] = 2;
                            $tp_text[$tp_key]['tp_text'] = [];
                            foreach ($res['field_options']['options'] as $key2 => &$rec2) {
                                array_push($tp_text[$tp_key]['tp_text'], $rec2['label']);
                            }
                        } else if ($res['field_type'] == '日期') {
                            $tp_text[$tp_key]['type'] = 7;
                        } else if ($res['field_type'] == '时间') {
                            $tp_text[$tp_key]['type'] = 11;
                        } else if ($res['field_type'] == '图片') {
                            $tp_text[$tp_key]['type'] = 5;
                            $tp_text[$tp_key]['tp_text'] = $res['field_options']['maxpic'];
                            $tp_text[$tp_key]['z_val'] = array();
                        } else if ($res['field_type'] == '手机号') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0]['yval'] = 1;
                        } else if ($res['field_type'] == '身份证') {
                            $tp_text[$tp_key]['type'] = 0;
                            $tp_text[$tp_key]['tp_text'][0]['yval'] = 7;
                        }
                        $tp_text[$tp_key]['val'] = '';
                    }
                }
            }
            $forminfo['cons'] = $tp_text;
        }
        $result['data'] = $forminfo;
        return json_encode($result);
    }

    public function doPageActiveApplySub()
    {
        $uniacid = input('uniacid');
        $aid = input('aid');
        $username = input('username');
        $tel = input('tel');
        $shenhe = Db::name('wd_xcx_active')->where('uniacid', $uniacid)->where('id', $aid)->value('shenhe');
        $formset = input('formset');
        $source = input('source');
        $suid = input('suid');
        // $uid = Db::name('wd_xcx_user')->where('uniacid', $uniacid)->where('openid', $openid)->value('id');
        $data = [
            'uniacid' => $uniacid,
            'aid' => $aid,
            'suid' => $suid,
            'formset' => $formset,
            'username' => $username,
            'tel' => $tel,
            'createtime' => time(),
            'source' => $source,
        ];


        if ($formset > 0) {
            $forms = '';
            if (input('pagedata') && input('pagedata') !== "NULL") {
                $forms = stripslashes(html_entity_decode(input('pagedata')));
                $forms = json_decode($forms, TRUE);
            }
            if ($forms != '') {
                $data['forminfo'] = serialize($forms);
            }

            $datas = array(
                "uniacid" => $uniacid,
                "cid" => $aid,
                "creattime" => time(),
                "val" => serialize($forms),
                "flag" => 0,
                "fid" => $formset,
                "suid" => $suid,
                'type' => '活动申请',
                'source' => $source,
            );
            Db::name('wd_xcx_formcon')->insert($datas);
        }

        if ($shenhe == 2) {
            $data['flag'] = 2;
        }
        $res = Db::name('wd_xcx_active_apply')->insert($data);
        if ($res) {
            $prefix = config('database.prefix');
            Db::execute("UPDATE {$prefix}wd_xcx_active set applynum = applynum + 1 where id = " . $aid);
            return 1;
        } else {
            return 2;
        }
    }

    public function doPageActiveApplyList()
    {
        $uniacid = input('uniacid');
        $aid = input('aid');
        $page = max(1, intval(input('page')));
        $pagesize = 30;
        $begin = ($page - 1) * $pagesize;
        $applylist = Db::name('wd_xcx_active_apply')->where('uniacid', $uniacid)->where('aid', $aid)->field('createtime,suid,source')->order('id desc')->limit($begin, $pagesize)->select();
        foreach ($applylist as $key => &$value) {
            $userinfo = $this->getnameandavatar($value['source'], $uniacid, $value['suid']);
            $value['avatar'] = $userinfo['avatar'];
            $value['nickname'] = rawurldecode($userinfo['nickname']);
            $value['createtime'] = date("Y-m-d H:i:s", $value['createtime']);
        }
        $result['data'] = $applylist;
        return json_encode($result);
    }

    public function doPageMyApplyCollect()
    {
        $uniacid = input('uniacid');
        $suid = input('suid');
        $type = input('type');
        // $source = input('source');
        // $user = $this->($source, $uniacid, $suid);
        if ($type == 1) {
            $list = Db::name('wd_xcx_active_apply')->where('uniacid', $uniacid)->where("suid", $suid)->order("id desc")->select();
            foreach ($list as $key => &$value) {
                $activeinfo = Db::name('wd_xcx_active')->where('id', $value['aid'])->find();
                $value['thumb'] = remote($uniacid, $activeinfo['thumb'], 1);
                $value['name'] = $activeinfo['name'];
                $value['activetime'] = $activeinfo['activetime'];
                $value['createtime'] = date("Y-m-d H:i:s", $value['createtime']);
                $value['t_flag'] = 0;
                $value['applynum'] = $activeinfo['applynum'];
                if ($activeinfo['applynum'] >= $activeinfo['allapply'] && $activeinfo['allapply'] != 0) {
                    $value['t_flag'] = 4;
                }
                $value['endtime'] = $activeinfo['endtime'];
                $value['starttime'] = $activeinfo['starttime'];
            }
        } else {
            $list = Db::name('wd_xcx_collect')->where('uniacid', $uniacid)->where("suid", $suid)->where("type", 'active')->order("id desc")->select();
            foreach ($list as $ks => &$vs) {
                $activeinfo = Db::name('wd_xcx_active')->where('id', $vs['cid']) ->find();
                $vs['thumb'] = remote($uniacid, $activeinfo['thumb'], 1);
                $vs['name'] = $activeinfo['name'];
                $vs['activetime'] = $activeinfo['activetime'];
                $vs['t_flag'] = 0;
                $vs['applynum'] = $activeinfo['applynum'];
                if ($activeinfo['applynum'] >= $activeinfo['allapply'] && $activeinfo['allapply'] != 0) {
                    $vs['t_flag'] = 4;
                }
                $apply = Db::name('wd_xcx_active_apply')->where('uniacid', $uniacid)->where('aid', $vs['cid'])->order('id desc')->limit(0,6)->select();
                $vs['avatar_arr'] = [];
                foreach($apply as $k => $v){
                    $userinfo = $this->getnameandavatar($v['source'], $uniacid, $v['suid']);
                    $vs['avatar_arr'][] = $userinfo['avatar'];
                }
                $vs['endtime'] = $activeinfo['endtime'];
                $vs['starttime'] = $activeinfo['starttime'];
                $vs['aid'] = $vs['cid'];
            }
        }
        $result['data'] = $list;
        return json_encode($result);
    }
    /*活动报名插件end*/
    //得到自取门店列表信息
    public function doPageGetStoresInfo()
    {
        $uniacid = input('uniacid');
        $stores = input('stores');
        $stores = explode(',', $stores);
        $stores_info = [];
        $i = 0;
        foreach ($stores as $vsi) {
            $info = Db::name('wd_xcx_store')->where("uniacid", $uniacid)->where("id", $vsi)->field("id, title, tel, province, city, country, times")->find();
            if ($info) {
                $stores_info[$i] = $info;
                $i++;
            }
        }
        $result['data'] = count($stores_info) > 0 ? $stores_info : '';
        return json_encode($result);
    }

    //敏感词检测
    public function doPageCheckContents()
    {
        $uniacid = input('uniacid');
        $source = input('source');
        $content = input('content');
        $app = Db::name('wd_xcx_applet')->where('id', $uniacid)->find();
        if ($source == 1) {
            $appid = $app['appID'];
            $appsecret = $app['appSecret'];
            $url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=" . $appid . "&secret=" . $appsecret;
            $weixin = file_get_contents($url);
            $jsondecode = json_decode($weixin); //对JSON格式的字符串进行编码
            $array = get_object_vars($jsondecode);//转换成数组
            if (!isset($array['access_token'])) {
                $result['data'] = 1; //0内容正常 1小程序信息错误 2内容违法违规
            } else {
                $access_token = $array['access_token'];//输出token
                $url = "https://api.weixin.qq.com/wxa/msg_sec_check?access_token=" . $access_token;
                $body = '{
                    "content": "' . $content . '"
                }';
                $res = $this->_Postrequest($url, $body);
                $res = json_decode($res, true);
                if ($res['errcode'] == 87014) {
                    $result['data'] = 2;
                } else {
                    $result['data'] = 0;
                }
            }
        } else if ($source == 5) { //1微信 2支付宝 3H5 4百度 5头条 6QQ
            $appid = $app['bdance_appID'];
            $appsecret = $app['bdance_appSecret'];
            $url = "https://developer.toutiao.com/api/apps/token?grant_type=client_credential&appid=" . $appid . "&secret=" . $appsecret;
            $weixin = file_get_contents($url);
            $jsondecode = json_decode($weixin, true); //对JSON格式的字符串进行编码
            if (!isset($jsondecode['access_token'])) {
                $result['data'] = 1; //0内容正常 1小程序信息错误 2内容违法违规
            } else {
                $access_token = $jsondecode['access_token'];//输出token
                $url = "https://developer.toutiao.com/api/v2/tags/text/antidirt";
                $body = '{
                    "tasks": [
                    {
                        "content": "' . $content . '"
                    }
                    ]
                }';
                $res = $this->_Postrequest($url, $body, '', $access_token);
                $result = [];
                if (isset($res['code']) && $res['code'] == 401) {
                    $result['data'] = 1; //0内容正常 1小程序信息错误 2内容违法违规
                } else {
                    $res = json_decode($res, true);
                    $prob = intval($res['data'][0]['predicts'][0]['prob']);
                    if ($prob == 1) {
                        $result['data'] = 2;
                    } else {
                        $result['data'] = 0;
                    }
                }
            }
        }
        return json_encode($result);
    }

    public function doPageCheckToutiaoPay()
    {//检测头条是否成功
        $uniacid = intval(input("uniacid"));
        $order_id = input("order_id");
        $types = input("types");

        if ($types == "miaosha" || $types == "reserve") {
            $is = Db::name('wd_xcx_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->where('flag', 1)->field("id")->find();
        } else if ($types == "duo") {
            $is = Db::name('wd_xcx_duo_products_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->where('flag', 1)->field("id")->find();
        } else if ($types == "pt") {
            $is = Db::name('wd_xcx_pt_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->where('flag', 1)->field("id")->find();
        } else if ($types == "bargain") {
            $is = Db::name('wd_xcx_bargain_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->where('flag', 1)->field("id")->find();
        } else if ($types == "food") {
            $is = Db::name('wd_xcx_food_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->where('flag', 1)->field("id")->find();
        } else if ($types == "vipgrade") {
            $is = Db::name('wd_xcx_vip_order')->where('uniacid', $uniacid)->where('order_id', $order_id)->where('flag', 1)->field("id")->find();
        } else if ($types == "art") {
            $is = Db::name('wd_xcx_video_pay')->where('uniacid', $uniacid)->where('orderid', $order_id)->field("id")->find();
        } else if ($types == "fabu" || $types == "supfabu" || $types == "supsettop" || $types == "settop" || $types == "recharge" || $types == "shoppay") {
            $is = Db::name('wd_xcx_money')->where('uniacid', $uniacid)->where('orderid', $order_id)->field("id")->find();
        } else if ($types == "mainShop") {
            $is = Db::name('wd_xcx_main_shop_order')->where('uniacid', $uniacid)->where('order_id', $order_id) ->where('status', 1)->field("id")->find();
        }

        if ($is) {
            return json_encode(['data' => 1]);
        } else {
            return json_encode(['data' => 2]);
        }
    }


    //扫码获取防伪信息
    public function getNetInfo()
    {
        $uniacid = intval(input("uniacid"));
        $code = input("scene");
        $openid = input("openid");

        $qr = Db::name('wd_xcx_qr_code')->where('code', $code)->value('id');

        //获取用户ip

        if (!empty($_SERVER['HTTP_CLIENT_IP'])) {
            $ip = preg_match('/^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$/', $_SERVER['HTTP_CLIENT_IP']) ? $_SERVER['HTTP_CLIENT_IP'] : '';
        } elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) {
            $ip = preg_match('/^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$/', $_SERVER['HTTP_X_FORWARDED_FOR']) ? $_SERVER['HTTP_X_FORWARDED_FOR'] : '';
        } else {
            $ip = preg_match('/^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$/', $_SERVER['REMOTE_ADDR']) ? $_SERVER['REMOTE_ADDR'] : '';
        }
        if ($ip) {
            $ipTmp = explode('.', $ip);
            for ($i = 0; $i < count($ipTmp); $i++) {
                if ($ipTmp[$i] > 255) {
                    $ip = '';
                    break;
                }
            }
        }


        $ipData = [];
        if ($ip) {
            $url = "http://ip.taobao.com/service/getIpInfo.php?ip=" . $ip;
            if ($temp = @file_get_contents($url)) {
                $temp = json_decode($temp);
                if ($temp->code === 0) {
                    $ipData = (array)$temp->data;
                }
            }
        }

        $user_id = 0;
        if ($openid) {
            $user_id = Db::name('wd_xcx_user')->where([
                'openid' => $openid,
                'uniacid' => $uniacid,
            ])->value('id');
        }

        if ($qr) {
            $count = Db::name('wd_xcx_qr_recording')->where('qr_id', $qr)->count();
            if ($count > 0) {
                $result = 2; //非第一次扫 真
            } else {
                $result = 1; //第一次扫 真
            }
        } else {
            $result = 0;//假的
        }


        $recordData = [
            'qr_id' => $qr ?: 0,
            'user_id' => $user_id,
            'result' => $result,
            'uniacid' => $uniacid,
            'create_time' => time(),
            'update_time' => time(),
        ];

        if (sizeof($ipData)) {
            $recordData['ip'] = $ip;
            $recordData['area'] = isset($ipData['region']) ? $ipData['region'] : '' . $ipData['city'] ? $ipData['city'] : '';
        }


        //添加扫码记录
        Db::name('wd_xcx_qr_recording')
            ->insert($recordData);

        if (!$qr) {
            return json(['err' => true, 'msg' => '不存在该条记录！']);
        }


        $data = Db::name('wd_xcx_qr_code')
            ->alias('a')
            ->join('wd_xcx_qr_batch b', 'a.batch_id = b.id')
            ->join('wd_xcx_products c', 'b.product_id = c.id')
            ->join('wd_xcx_shops_shop d', 'b.shop_id = d.id', 'LEFT')
            ->field('b.produce_time, b.create_time as batch_time, c.id as product_id, c.title as product_name, c.thumb as product_thumb,c.desc, d.logo as shop_logo, d.name as shop_name,b.more_value')
            ->find($qr);

        if (!$data) {
            return json(['err' => true, 'msg' => '该条记录存在异常！']);
        }


        //第一个人一直扫 那就拿他第一次扫的时候的结果
        $data['result'] = $result;
        if ($count && $user_id) {
            $lastRecord = Db::name('wd_xcx_qr_recording')
                ->where([
                    'qr_id' => $qr,
                    'user_id' => ['<>', 0],
                ])
                ->order("id")
                ->find();

            if ($lastRecord && $user_id === $lastRecord['user_id']) {
                $data['result'] = $lastRecord['result'];
            }
        }

        $data['times'] = $count + 1;
        $data['produce_time'] = date('Y-m-d H:i', $data['produce_time']);
        $data['batch_time'] = date('Y-m-d H:i', $data['batch_time']);
        $data['more_value'] = json_decode($data['more_value']);

        $data['product_thumb'] = remote($uniacid, $data['product_thumb'], 1);
        $data['shop_logo'] = remote($uniacid, $data['shop_logo'], 1);
        return json($data);
    }

    /**
     * [dopagesubscribe 获取订阅消息]
     * @return [type] [description]
     */
    public function dopagesubscribe()
    {
        $uniacid = input('uniacid');
        $list = Db::name('wd_xcx_message_subscribe')->where('uniacid', $uniacid)->select();
        $result = [];
        $result['data'] = $list;
        return json_encode($result);
    }
}
